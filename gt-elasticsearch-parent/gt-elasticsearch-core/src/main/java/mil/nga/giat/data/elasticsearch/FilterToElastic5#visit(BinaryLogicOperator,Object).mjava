    @Override
    protected Object visit(BinaryLogicOperator filter, Object extraData) {
        LOGGER.finest("exporting LogicFilter");

        final List<QueryBuilder> filterList = new ArrayList<>();
        for (final Filter child : filter.getChildren()) {
            child.accept(this, extraData);
            filterList.add(filterBuilder);
        }
        final QueryBuilder[] filters;
        filters = filterList.toArray(new QueryBuilder[filterList.size()]);
        if (extraData.equals("AND")) {
            BoolQueryBuilder andQ = QueryBuilders.boolQuery();
            for (QueryBuilder filterQ: filters){
                andQ.must(filterQ);
            }
            filterBuilder = andQ;
        } else if (extraData.equals("OR")) {
            BoolQueryBuilder orQ = QueryBuilders.boolQuery();
            for (QueryBuilder filterQ: filters){
                orQ.should(filterQ);
            }
            filterBuilder = orQ;
        }
        return extraData;
    }

