    private List<Map<String, Object>> readFeatures(SimpleFeatureCollection features) {
        final ObjectMapper mapper = new ObjectMapper();

        final List<Map<String, Object>> buckets = new ArrayList<>();
        try (SimpleFeatureIterator iterator = features.features()) {
            while (iterator.hasNext()) {
                final SimpleFeature feature = iterator.next();
                if (feature.getAttribute("_aggregation") != null) {
                    final byte[] data = (byte[]) feature.getAttribute("_aggregation");
                    try {
                        final Map<String,Object> aggregation = mapper.readValue(data, new TypeReference<Map<String,Object>>() {});
                        buckets.add(aggregation);
                    } catch (IOException e) {
                        LOGGER.fine("Failed to parse aggregation value: " + e);
                    }
                }
            }
        }
        return buckets;
    }

