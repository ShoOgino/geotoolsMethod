    /**
     * Main method. Takes the name of the file or directory to process from the
     * first command line argument provided (only the first is examined). If a
     * directory, all child directories and java source files will be processed.
     * <p>
     * Note: local backup files are <b>not</b> saved by this program.
     */
    public static void main(String[] args) {
        if (args.length == 0) {
            System.out.println("usage: InsertSourceTag {options} fileOrDirName");
            System.out.println("options:");
            System.out.println("   " + REPLACE_OPTION
                    + ": Replaces existing source tags (default no replacement)");
            System.out.println("   " + SVN_OPTION
                    + ": Add the svn URL keyword (omitted by default)");
            System.out.println("   " + ANY_CLASS_OPTION
                    + ": Process any class (default is only public classes)");
            return;
        }

        File file = new File(args[0]);
        if (!file.exists()) {
            System.out.println("Can't find " + file);
            return;
        }

        InsertSourceTag me = new InsertSourceTag();

        for (int i = 1; i < args.length; i++) {
            String s = args[i].trim();
            if (REPLACE_OPTION.equals(s)) {
                me.replaceExistingTag = true;
            } else if (SVN_OPTION.equals(s)) {
                me.addSVNKeyword = true;
            } else if (ANY_CLASS_OPTION.equals(s)) {
                me.processAnyClass = true;
            } else {
                System.out.println("Unrecognized option: " + s);
                return;
            }
        }

        me.process(file);
    }

