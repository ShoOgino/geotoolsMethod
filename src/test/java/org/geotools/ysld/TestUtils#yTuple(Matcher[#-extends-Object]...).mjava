    /**
     * Matches a YSLD Tuple with values matching the given matchers.
     * @param matchers
     * @return
     */
    @SafeVarargs
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static Matcher<? extends Object> yTuple(final Matcher<? extends Object>... matchers) {
        return new BaseMatcher() {
            
            @Override
            public boolean matches(Object obj) {
                String str;
                if(obj instanceof  String) {
                    str = (String) obj;
                } else if(obj instanceof YamlObject) {
                    try {
                        str = ((YamlObject<String>)obj).raw();
                    } catch (ClassCastException ex) {
                        return false;
                    }
                } else {
                    return false;
                }
                
                java.util.regex.Matcher m = TUPLE_STRIP.matcher(str);
                if(!m.matches()) {
                    return false;
                }
                
                String[] values = TUPLE_SPLIT.split(m.group(1), -1); // -1 to not ignore empty substrings
                
                if(values.length!=matchers.length) {
                    return false;
                }
                
                for(int i=0; i<values.length; i++) {
                    if(!matchers[i].matches(values[i])) {
                        return false;
                    }
                }
                
                return true;
            }
    
            @Override
            public void describeTo(Description desc) {
                desc.appendList("A YSLD Tuple with values [", ", ", "]", Arrays.asList(matchers));
            }
            
        };
    }

