    @Test
    public void testLineWithDashspace() throws Exception {
        //   <UserStyle>
        //     <Title>SLD Cook Book: Dash/Space line</Title>
        //     <FeatureTypeStyle>
        //       <Rule>
        //         <LineSymbolizer>
        //           <Stroke>
        //             <GraphicStroke>
        //               <Graphic>
        //                 <Mark>
        //                   <WellKnownName>circle</WellKnownName>
        //                   <Fill>
        //                     <CssParameter name="fill">#666666</CssParameter>
        //                   </Fill>
        //                   <Stroke>
        //                     <CssParameter name="stroke">#333333</CssParameter>
        //                     <CssParameter name="stroke-width">1</CssParameter>
        //                   </Stroke>
        //                 </Mark>
        //                 <Size>4</Size>
        //               </Graphic>
        //             </GraphicStroke>
        //             <CssParameter name="stroke-dasharray">4 6</CssParameter>
        //           </Stroke>
        //         </LineSymbolizer>
        //       </Rule>
        //     </FeatureTypeStyle>
        //   </UserStyle>

        YamlMap style = encode("line", "dash-space.sld");
        YamlMap line = style.seq("feature-styles").map(0).seq("rules").map(0).seq("symbolizers").map(0).map("line");

        assertEquals("4.0 6.0", line.str("stroke-dasharray"));
        YamlMap g = line.map("stroke-graphic-stroke");

        assertEquals(4, g.integer("size").intValue());
        assertEquals("circle", g.seq("symbols").map(0).map("mark").str("shape"));
        assertThat(g.seq("symbols").map(0).map("mark").get("fill-color"), isColor("666666"));
        assertThat(g.seq("symbols").map(0).map("mark").get("stroke-color"), isColor("333333"));
        assertEquals(1, g.seq("symbols").map(0).map("mark").integer("stroke-width").intValue());
    }

