    @Test
    public void testLineWithDashdot() throws Exception {
        //    <UserStyle>
        //      <Title>SLD Cook Book: Dash/Symbol line</Title>
        //      <FeatureTypeStyle>
        //        <Rule>
        //          <LineSymbolizer>
        //            <Stroke>
        //              <CssParameter name="stroke">#0000FF</CssParameter>
        //              <CssParameter name="stroke-width">1</CssParameter>
        //              <CssParameter name="stroke-dasharray">10 10</CssParameter>
        //            </Stroke>
        //          </LineSymbolizer>
        //          <LineSymbolizer>
        //            <Stroke>
        //              <GraphicStroke>
        //                <Graphic>
        //                  <Mark>
        //                    <WellKnownName>circle</WellKnownName>
        //                    <Stroke>
        //                      <CssParameter name="stroke">#000033</CssParameter>
        //                      <CssParameter name="stroke-width">1</CssParameter>
        //                    </Stroke>
        //                  </Mark>
        //                  <Size>5</Size>
        //                </Graphic>
        //              </GraphicStroke>
        //              <CssParameter name="stroke-dasharray">5 15</CssParameter>
        //              <CssParameter name="stroke-dashoffset">7.5</CssParameter>
        //            </Stroke>
        //          </LineSymbolizer>
        //        </Rule>
        //      </FeatureTypeStyle>
        //    </UserStyle>
        YamlMap style = encode("line", "dash-dot.sld");
        YamlMap rule = style.seq("feature-styles").map(0).seq("rules").map(0);

        YamlMap line = rule.seq("symbolizers").map(0).map("line");
        assertThat(line.get("stroke-color"), isColor("0000FF"));
        assertEquals(1, line.integer("stroke-width").intValue());
        assertEquals("10.0 10.0", line.str("stroke-dasharray"));

        line = rule.seq("symbolizers").map(1).map("line");
        assertEquals("5.0 15.0", line.str("stroke-dasharray"));
        assertEquals(7.5, line.doub("stroke-dashoffset"), 0.1);

        YamlMap g = line.map("stroke-graphic-stroke");
        assertEquals(5, g.integer("size").intValue());
        assertEquals("circle", g.seq("symbols").map(0).map("mark").str("shape"));
        assertThat(g.seq("symbols").map(0).map("mark").get("stroke-color"), isColor("000033"));
        assertEquals(1, g.seq("symbols").map(0).map("mark").integer("stroke-width").intValue());
    }

