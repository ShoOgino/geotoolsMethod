    @Test
    public void testLineWithOptimizedAndStyledLabel() throws Exception {
        //    <UserStyle>
        //      <Title>SLD Cook Book: Optimized and styled label</Title>
        //      <FeatureTypeStyle>
        //        <Rule>
        //          <LineSymbolizer>
        //            <Stroke>
        //              <CssParameter name="stroke">#FF0000</CssParameter>
        //            </Stroke>
        //          </LineSymbolizer>
        //          <TextSymbolizer>
        //            <Label>
        //              <ogc:PropertyName>name</ogc:PropertyName>
        //            </Label>
        //            <LabelPlacement>
        //              <LinePlacement />
        //            </LabelPlacement>
        //            <Fill>
        //              <CssParameter name="fill">#000000</CssParameter>
        //            </Fill>
        //            <Font>
        //              <CssParameter name="font-family">Arial</CssParameter>
        //              <CssParameter name="font-size">10</CssParameter>
        //              <CssParameter name="font-style">normal</CssParameter>
        //              <CssParameter name="font-weight">bold</CssParameter>
        //            </Font>
        //            <VendorOption name="followLine">true</VendorOption>
        //            <VendorOption name="maxAngleDelta">90</VendorOption>
        //            <VendorOption name="maxDisplacement">400</VendorOption>
        //            <VendorOption name="repeat">150</VendorOption>
        //          </TextSymbolizer>
        //        </Rule>
        //      </FeatureTypeStyle>
        //    </UserStyle>

        YamlObj style = transform("line", "optimized-styled-label.sld");

        YamlObj text = style.o("feature-styles", 0).o("rules", 0).o("symbolizers",1).o("text");

        assertEquals("[name]", text.s("label"));
        assertEquals("#000000", text.o("fill").s("color"));

        assertEquals("Arial", text.o("font").s("family"));
        assertEquals(10, text.o("font").i("size").intValue());
        assertEquals("normal", text.o("font").s("style"));
        assertEquals("bold", text.o("font").s("weight"));

        assertEquals(true, text.o("options").b("follow-line"));
        assertEquals(90, text.o("options").i("max-angle-delta").intValue());
        assertEquals(400, text.o("options").i("max-displacement").intValue());
        assertEquals(150, text.o("options").i("repeat").intValue());
    }

