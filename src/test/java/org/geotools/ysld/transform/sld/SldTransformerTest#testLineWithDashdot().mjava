    @Test
    public void testLineWithDashdot() throws Exception {
        //    <UserStyle>
        //      <Title>SLD Cook Book: Dash/Symbol line</Title>
        //      <FeatureTypeStyle>
        //        <Rule>
        //          <LineSymbolizer>
        //            <Stroke>
        //              <CssParameter name="stroke">#0000FF</CssParameter>
        //              <CssParameter name="stroke-width">1</CssParameter>
        //              <CssParameter name="stroke-dasharray">10 10</CssParameter>
        //            </Stroke>
        //          </LineSymbolizer>
        //          <LineSymbolizer>
        //            <Stroke>
        //              <GraphicStroke>
        //                <Graphic>
        //                  <Mark>
        //                    <WellKnownName>circle</WellKnownName>
        //                    <Stroke>
        //                      <CssParameter name="stroke">#000033</CssParameter>
        //                      <CssParameter name="stroke-width">1</CssParameter>
        //                    </Stroke>
        //                  </Mark>
        //                  <Size>5</Size>
        //                </Graphic>
        //              </GraphicStroke>
        //              <CssParameter name="stroke-dasharray">5 15</CssParameter>
        //              <CssParameter name="stroke-dashoffset">7.5</CssParameter>
        //            </Stroke>
        //          </LineSymbolizer>
        //        </Rule>
        //      </FeatureTypeStyle>
        //    </UserStyle>
        YamlObj style = transform("line", "dash-dot.sld");
        YamlObj rule = style.o("feature-styles", 0).o("rules", 0);

        YamlObj line = rule.o("symbolizers", 0).o("line");
        assertEquals("#0000FF", line.o("stroke").s("color"));
        assertEquals(1, line.o("stroke").i("width").intValue());
        assertEquals("10 10", line.o("stroke").s("dasharray"));

        line = rule.o("symbolizers", 1).o("line");
        assertEquals("5 15", line.o("stroke").s("dasharray"));
        assertEquals(7.5, line.o("stroke").d("dashoffset"), 0.1);

        YamlObj g = line.o("stroke").o("graphic-stroke");
        assertEquals(5, g.i("size").intValue());
        assertEquals("circle", g.o("symbols", 0).o("mark").s("shape"));
        assertEquals("#000033", g.o("symbols", 0).o("mark").o("stroke").s("color"));
        assertEquals(1, g.o("symbols", 0).o("mark").o("stroke").i("width").intValue());
    }

