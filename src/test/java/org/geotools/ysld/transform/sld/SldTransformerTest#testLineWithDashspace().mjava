    @Test
    public void testLineWithDashspace() throws Exception {
        //   <UserStyle>
        //     <Title>SLD Cook Book: Dash/Space line</Title>
        //     <FeatureTypeStyle>
        //       <Rule>
        //         <LineSymbolizer>
        //           <Stroke>
        //             <GraphicStroke>
        //               <Graphic>
        //                 <Mark>
        //                   <WellKnownName>circle</WellKnownName>
        //                   <Fill>
        //                     <CssParameter name="fill">#666666</CssParameter>
        //                   </Fill>
        //                   <Stroke>
        //                     <CssParameter name="stroke">#333333</CssParameter>
        //                     <CssParameter name="stroke-width">1</CssParameter>
        //                   </Stroke>
        //                 </Mark>
        //                 <Size>4</Size>
        //               </Graphic>
        //             </GraphicStroke>
        //             <CssParameter name="stroke-dasharray">4 6</CssParameter>
        //           </Stroke>
        //         </LineSymbolizer>
        //       </Rule>
        //     </FeatureTypeStyle>
        //   </UserStyle>

        YamlObj style = transform("line", "dash-space.sld");
        YamlObj stroke = style.o("feature-styles", 0).o("rules", 0).o("symbolizers", 0).o("line").o("stroke");

        assertEquals("4 6", stroke.s("dasharray"));
        YamlObj g = stroke.o("graphic-stroke");

        assertEquals(4, g.i("size").intValue());
        assertEquals("circle", g.o("symbols", 0).o("mark").s("shape"));
        assertEquals("#666666", g.o("symbols", 0).o("mark").o("fill").s("color"));
        assertEquals("#333333", g.o("symbols", 0).o("mark").o("stroke").s("color"));
        assertEquals(1, g.o("symbols", 0).o("mark").o("stroke").i("width").intValue());
    }

