	/**
	 *  dbname=tiger2005fe user=postgres host=localhost
	 * 
	 *  parses the PG connect string into geotools postgis datastore params
	 * 
	 * pg_Connect("host=myHost port=myPort  dbname=myDB user=myUser password=myPassword ");
	 * @param connectstring
	 * @return
	 * @throws Exception
	 */
	public static Map parsePG(String connectstring) throws Exception
	{
		Map param = new HashMap();
		
		Pattern p =   Pattern.compile(".*host=([^ ]+).*");
		Matcher m = p.matcher(connectstring);
		
		if (m.matches())
		{
			param.put("host",m.group(1));
		}
		else
		{
			param.put("host","localhost");
		}
		
		p =   Pattern.compile(".*user=([^ ]+).*");
		m = p.matcher(connectstring);
		
		if (m.matches())
		{
			param.put("user",m.group(1));
		}
		else
		{
			throw new Exception("PG CONNECT string does not contain a user name.  connect string should look like: 'host=myHost port=myPort  dbname=myDB user=myUser password=myPassword'");
		}
		
		p =   Pattern.compile(".*dbname=([^ ]+).*");
		m = p.matcher(connectstring);
		
		if (m.matches())
		{
			param.put("database",m.group(1));
		}
		else
		{
			throw new Exception("PG CONNECT string does not contain a dbname.  connect string should look like: 'host=myHost port=myPort  dbname=myDB user=myUser password=myPassword'");
		}
		
		p =   Pattern.compile(".*port=([^ ]+).*");
		m = p.matcher(connectstring);
		
		if (m.matches())
		{
			param.put("port",m.group(1));
		}
		else
		{
			param.put("port","5432");
		}
		
		p =   Pattern.compile(".*password=([^ ]+).*");
		m = p.matcher(connectstring);
		
		if (m.matches())
		{
			param.put("passwd",m.group(1));
		}
		else
		{
			//do nothing
		}
	
		return param;
	}

