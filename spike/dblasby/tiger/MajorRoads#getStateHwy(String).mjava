	/**
	 *     Indiana State Route 933
    
 State Highway 1 South
 State Highway 1&78
  State Highway 1
     State 371  NW
 State Highway 11/38
 State Highway 258  W

 State Highway E- 470
 State Highway EE
 State Highway F

 State Hwy19
 State Hy 26
 State Route 317
  
 State Road 104

E State Road 241


Illinois Route 89
Indiana 64
 Georgia Highway 138
 Il Route 113
 Indiana 145
 Kansas State Highway 132
 Kentucky Highway 451
Ky-1043
Ky-1043-30
 Ky Hwy 15
 La 1064 Hwy
 La 107
 La Highway 1032
Lr-18010
Montana Highway 135  S
 Montana Highway 16

Montana Hwy 1
 Montana Hwy 1  E
N Il Highway 148
 N Il Route 251
 N Illinois Route 130
 N State Highway 173
 N State Route 115
 Nc Highway 11
 New Jersey Route 1
 New Mexico 114
 South Carolina Highway 219
 South Dakota Highway 21
 South Kentucky Highway 15

 Vt Rte 15
 Vt Rte 15 Hwy
 Al Highway 202
 Kansas State Highway 2
 Montana Highway 200
 Nm Hwy 244
 Al Hwy 35
  Vermont Route 73  E
 Ar 9 Hwy
 Arizona Hwy 77
 Kansas State Highway 9
 Route 10
Highway 1
State State

	 * @param s
	 * @return
	 */
	private Integer getStateHwy(String s) 
	{
		 // main morph is "State Highway xxx"
		
		if (s==null)
			return null;
	    if (s.length() ==0)
	    	return null;
	   
	    
	    s = s.replaceFirst("  "," ");
	    s = s.replaceFirst("  "," ");
	    
	    s = s.replaceFirst("^Highway ","State Highway ");

	    
	    s = s.replaceFirst("^New ","");
	    s = s.replaceFirst("^[ESNW]+ ","");
	    s = s.replaceFirst("^South ","");
	    s = s.replaceFirst("^North ","");
	    s = s.replaceFirst("^East ","");
	    s = s.replaceFirst("^West ","");
	    
	    s = s.replaceFirst(" [NSEW]+\\z","");  //  \\z --> $ (end of line)
	    
	    s = s.replaceFirst(" South\\z","");  //  \\z --> $ (end of line)
	    s = s.replaceFirst(" North\\z","");  //  \\z --> $ (end of line)
	    s = s.replaceFirst(" East\\z","");  //  \\z --> $ (end of line)
	    s = s.replaceFirst(" West\\z","");  //  \\z --> $ (end of line)
	    s = s.replaceFirst("[NSEW]+\\z","");  //  \\z --> $ (end of line)      \\iffy

	    s = s.replaceFirst("/ & [1234567890]+\\z","");  //State Highway  6 & 19
	    s = s.replaceFirst("/ &[1234567890]+\\z","");  // United States Highway 6 & 19
	    s = s.replaceFirst("/&[1234567890]+\\z","");  // United States Highway 6 & 19
	    s = s.replaceFirst("/& [1234567890]+\\z","");  // United States Highway 6 & 19

	    s = s.replaceFirst("/[1234567890]+\\z","");  // United States Highway 25/70

	    s = s.replaceFirst("  "," ");

	    s = s.replaceFirst("^Illinois ","State ");
	    s = s.replaceFirst("^Indiana ","State ");
	    s = s.replaceFirst("^Il ","State ");
	    s = s.replaceFirst("^Georgia ","State ");
	    s = s.replaceFirst("^Kansas ","State ");
	    s = s.replaceFirst("^Kentucky ","State ");
	    s = s.replaceFirst("^La ","State ");
	    s = s.replaceFirst("^Ky ","State ");
	    s = s.replaceFirst("^Montana ","State ");
	    s = s.replaceFirst("^New Jersey ","State ");
	    s = s.replaceFirst("^Jersey ","State ");
	    s = s.replaceFirst("^New Mexico ","State ");
	    s = s.replaceFirst("^Mexico ","State ");
	    s = s.replaceFirst("^South Carolina ","State ");
	    s = s.replaceFirst("^Carolina ","State ");
	    s = s.replaceFirst("^South Dakota ","State ");
	    s = s.replaceFirst("^Dakota ","State ");
	    s = s.replaceFirst("^South Kentucky ","State ");
	    s = s.replaceFirst("^Vt ","State ");
	    s = s.replaceFirst("^Nm ","State ");
	    s = s.replaceFirst("^Ar ","State ");
	    s = s.replaceFirst("^Al ","State ");
	    s = s.replaceFirst("^Arizona ","State ");
	    s = s.replaceFirst("^Vermont ","State ");
	    s = s.replaceFirst("  "," ");	    s = s.replaceFirst("  "," ");



	    s = s.replaceFirst("State State " ,"State ");
	    s = s.replaceFirst("State State " ,"State ");
	    
	    s = s.replaceFirst("State " ,"State Highway ");
	    s = s.replaceFirst("Highway Highway " ,"Highway ");
	    s = s.replaceFirst("Highway Highway " ,"Highway ");
	    
	    s = s.replaceFirst("State State " ,"State ");
	    s = s.replaceFirst("State State " ,"State ");
	    
	    
	    s = s.replaceFirst("^State Hwy","State Highway ");
	    s = s.replaceFirst("  "," ");

	    s = s.replaceFirst(" Rte "," Route ");
	    s = s.replaceFirst("^State Route ","State Highway ");
	    s = s.replaceFirst(" Route "," Highway ");
	    
	    s = s.replaceFirst("Route Highway","Highway ");
	    s = s.replaceFirst("Highway Route ","Highway ");
	   
	    s = s.replaceFirst("Highway Highway " ,"Highway ");	    
	    s = s.replaceFirst("State State " ,"State ");
	    s = s.replaceFirst("Highway Highway " ,"Highway ");	    
	    s = s.replaceFirst("State State " ,"State ");
	    
	    s = s.replaceFirst("  "," ");
	   
	    s = s.replaceFirst(" [NSEW]+\\z","");  //  \\z --> $ (end of line)
	    
	    s = s.replaceFirst(" South\\z","");  //  \\z --> $ (end of line)
	    s = s.replaceFirst(" North\\z","");  //  \\z --> $ (end of line)
	    s = s.replaceFirst(" East\\z","");  //  \\z --> $ (end of line)
	    s = s.replaceFirst(" West\\z","");  //  \\z --> $ (end of line)
	    
	    s = s.replaceFirst("[NSEW]+\\z","");  //  \\z --> $ (end of line)      \\iffy

	    
	    Pattern p = Pattern.compile("^State Highway ([0123456789]+)\\z");  //  \\z --> $ (end of line)
	    Matcher m = p.matcher(s);
	    if ( m.matches())
	    {
	    	return new Integer(m.group(1));
	    }	    
		return null;
	}

