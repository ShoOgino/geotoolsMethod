/**
 *     Morphs "I-95" 
       "Interstate40"  //not handled
       "Interstate 40" 
       "Interstate 40 Hwy"    
       "Interstate-40" 
       "I - 10" 
       "I -10"  
       "I-10  W"
       "I-35E" //not handled
       
       "I-475 S I- 75"
       "I-78 & US Route 22"
      
      
 * @param s
 * @return
 */
	Integer getInterstate(String s)
	{
		if (s==null)
			return null;
	    if (s.length() ==0)
	    	return null;
	    if (!(s.startsWith("I")))
	    	return null;
	    
	    s = s.replaceFirst("^[ESNW]+ ","");
	    
	    s = s.replaceFirst(" - ","-");
	    s = s.replaceFirst("  "," ");
	    s = s.replaceFirst("^Interstate ","I-");
	    s = s.replaceFirst(" Hwy\\z","");
	    s = s.replaceFirst("I- ","I-");
	    s = s.replaceFirst(" [NSEW]\\z","");  //  \\z --> $ (end of line)
	    
	    //should look like:
	    //"I-## (junk)"
	    
	    if (!(s.startsWith("I-")))
	    	return null;
		
	    Pattern p = Pattern.compile("^I-([0123456789]+)\\z");  //  \\z --> $ (end of line)
	    Matcher m = p.matcher(s);
	    if ( m.matches())
	    {
	    	return new Integer(m.group(1));
	    }	    
		return null;
	}

