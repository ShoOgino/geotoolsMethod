    public boolean supportsInPlaceWrite(String typeName) throws IOException {
        Pointer ds = null;
        Pointer l = null;
        Pointer driver = null;
        try {
            driver = null; // FIXME HACK if you provide the driver the open method fail OGRGetDriverByName(pointerToCString(ogrDriver));

            // try opening in update mode
            ds = OGROpen(pointerToCString(ogrSourceName), 1, driver);
            if (ds == null) {
            	 String msg = CPLGetLastErrorMsg().getCString();
            	 if(msg == null || "".equals(msg) ){
            		 LOGGER.severe("OGROpen fail openning :" + ogrSourceName);
            	 } else {
            		 LOGGER.severe(msg);
            	 }
            	 
                return false;
            }
            l = openOGRLayer(ds, typeName);
            // for the moment we support working only with random writers
            boolean canDelete = OGR_L_TestCapability(l, pointerToCString(OLCDeleteFeature)) != 0;
            boolean canWriteRandom = OGR_L_TestCapability(l, pointerToCString(OLCRandomWrite)) != 0;
            boolean canWriteSequential = OGR_L_TestCapability(l,
                    pointerToCString(OLCSequentialWrite)) != 0;
            return canDelete && canWriteRandom && canWriteSequential;
        } finally {
            OGRUtils.releaseLayer(l);
            OGRUtils.releaseDataSource(ds);
            OGRUtils.releaseDefinition( driver ) ;
        }
    }

