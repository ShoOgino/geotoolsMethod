    /**
     * Computes nearest points.
     * @param p
     * @param maxdistance
     * @param number
     * @return
     *
     * @todo consider some indexing mechanism for finding the nearest positions
     */
    private HashMap getNearestPositions(DirectPosition p, double maxdistance) {
        HashMap nearest = new HashMap();

        DirectPosition source = null;
        double dist;

        for (Iterator i = this.getPositions().keySet().iterator(); i.hasNext();) {
            source = (DirectPosition) i.next();

            /**
             *  @todo - calculate elipsoidal distance/             
             */
            /* if ((source != null)
               || source.getCoordinateReferenceSystem().getClass()
                            .isAssignableFrom(DefaultGeographicCRS.class)) {
               dist = ((DefaultGeographicCRS) source.getCoordinateReferenceSystem()).distance(p
                       .getCoordinates(), source.getCoordinates()).doubleValue();
               } else {*/
            dist = ((Point2D) p).distance((Point2D) source);

            //}
            if (((dist != 0) || (dist < maxdistance))) {
                nearest.put(source, new Double(dist));
            }
        }

        return nearest;
    }

