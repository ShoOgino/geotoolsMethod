    /**
     * @return an item from the pool, or a new item created with the factory supplied in the constructor.
     */
    public synchronized T getItem()
    {
        T item = null;

        // Find a free item from the pool, removing any garbage collected items on the way
        while ( !myPool.isEmpty() && item == null )
        {
            final WeakReference<T> weakReference = myPool.removeFirst();
            item = weakReference.get();
        }

        if ( item == null && myFactory != null )
        {
            // No free item found in the pool, create one using the factory.
            item = myFactory.create();
        }

        return item;
    }

