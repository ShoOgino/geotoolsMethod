    private void initTexture( BufferedImage textureImage, final Renderer renderer )
    {
        synchronized ( myTextureStateLock )
        {
            // The texture can be null e.g. if we ran out of memory
            if ( textureImage == null )
            {
                textureImage = PLACEHOLDER_PICTURE;
            }

            // Remove any placeholder render state
            if ( myPlaceholderTextureInUse )
            {
/*
            clearRenderState( RenderState.RS_TEXTURE );
*/
/*
            myPlaceholderTextureState.setEnabled( false );
            myPlaceholderTextureState.setTexture( null );
            myPlaceholderTextureState = null;
*/
                setTextureCoordinates( WHOLE_TEXTURE_AREA );
/*
*/
            }

            if ( myTextureGraphics == null )
            {
                // First time initializations:

                // Create JME Image Renderer
                myTextureGraphics = ImageGraphics.createInstance( textureImage.getWidth( null ),
                                                                  textureImage.getHeight( null ),
                                                                  0 );
                myTextureGraphics.drawImage( textureImage, 0, 0, null );
                myTextureGraphics.update();

                // Create texture
                myTexture = TextureManager.loadTexture( null,
                                                        createTextureKey( textureImage.hashCode() ),
                                                        myTextureGraphics.getImage() );

                // Make sure this texture is not cached, as we will be updating it when the TerrainMesh is re-used
                TextureManager.releaseTexture( myTexture );

                // Clamp texture at edges (no wrapping)
                myTexture.setWrap( Texture.WM_ECLAMP_S_ECLAMP_T );
                myTexture.setMipmapState( Texture.MM_LINEAR_LINEAR );

                createTextureRenderState( renderer, myTexture );

                if ( myPlaceholderTextureInUse )
                {
                    myTextureState.setTexture( myTexture, 0 );
                }
            }
            else
            {
                // Release the previously reserved textures, so that they don't take up space on the 3D card
                // NOTE: Maybe this also forces JME to re-upload the changed texture?
                if ( !myPlaceholderTextureInUse )
                {
                    myTextureState.deleteAll( true );
                }
                else
                {
                    myTextureState.setTexture( myTexture, 0 );
                    myTextureState.deleteAll( true );
                }

                // Update the JME Image used by the texture
                myTextureGraphics.drawImage( textureImage, 0, 0, null );
                myTextureGraphics.update();
                myTextureGraphics.update( myTexture );

                // Make sure this texture is not cached, as we will be updating it when the TerrainMesh is re-used
                TextureManager.releaseTexture( myTexture );

                // Smoother look at low viewing angles
                myTexture.setMipmapState( Texture.MM_LINEAR_LINEAR );
            }

            myPlaceholderTextureInUse = false;
        }
    }

