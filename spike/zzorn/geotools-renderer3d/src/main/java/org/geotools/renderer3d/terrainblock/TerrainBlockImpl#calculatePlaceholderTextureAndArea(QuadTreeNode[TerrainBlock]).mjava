    /**
     * Recursive function to calculate the area and texture to use.
     *
     * @return the area to use of the myTempParentTextureToUse, or null if no parent texture is available to use.
     */
    private BoundingRectangle calculatePlaceholderTextureAndArea( final QuadTreeNode<TerrainBlock> node )
    {
        if ( node == null )
        {
            // No texture even in root
            myTempParentTextureToUse = null;
            return null;
        }
        else
        {
            final TerrainBlock block = node.getNodeData();
            final Texture texture = block.getTexture();
            if ( block.hasCalculatedTextureImage() && texture != null )
            {
                // Found texture in current node, use it.
                myTempParentTextureToUse = texture;
                return WHOLE_TEXTURE;
            }
            else
            {
                // Get area and texture from parent
                final QuadTreeNode<TerrainBlock> parentNode = node.getParent();
                final BoundingRectangle area = calculatePlaceholderTextureAndArea( parentNode );

                if ( area == null )
                {
                    return null;
                }
                else
                {
                    // Calculate location of this node in the parent area
                    int quadrant = parentNode.getIndexOfChild( node );

                    // Compensate for some texture flipping complications
                    quadrant = area.flipSubquadrantAcrossY( quadrant );

                    return area.createSubquadrantBoundingRectangle( quadrant );
                }
            }
        }
    }

