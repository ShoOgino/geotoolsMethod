    private void checkNode( QuadTreeNode<TerrainBlock> node, final Vector3f currentCameraPosition )
    {
        final TerrainBlock terrainBlock = node.getNodeData();

        if ( terrainBlock != null )
        {
            // Calculate size/distance
            final double size = node.getBounds().getSizeAveraged();
            final double squaredSize = size * size;
            final double squaredDistance = terrainBlock.getCenter().distanceSquared( currentCameraPosition );
            final double comparsionFactor = squaredSize / squaredDistance;

            // Expand if needed, and if the node is larger than the minimum node size
            if ( comparsionFactor > EXPANSION_THRESHOLD && size > MINIMUM_NODE_SIZE_M )
            {
                node.setExpanded( true );
            }

            // Collapse if needed
            if ( comparsionFactor < COLLAPSING_THRESHOLD )
            {
                node.setExpanded( false );
            }

            // Recursively call children, if it has them
            final int num = node.getNumberOfChildren();
            for ( int i = 0; i < num; i++ )
            {
                final QuadTreeNode<TerrainBlock> child = node.getChild( i );
                if ( child != null )
                {
                    checkNode( child, currentCameraPosition );
                }
            }
        }
    }

