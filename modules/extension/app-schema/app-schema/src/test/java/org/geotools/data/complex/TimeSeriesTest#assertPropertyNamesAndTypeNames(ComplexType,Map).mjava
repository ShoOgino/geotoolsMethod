    private void assertPropertyNamesAndTypeNames(
            ComplexType parentType, Map expectedPropertiesAndTypes) throws Exception {

        for (Object o : expectedPropertiesAndTypes.entrySet()) {
            Entry entry = (Entry) o;
            Name dName = (Name) entry.getKey();
            Name expectedDescriptorTypeName = (Name) entry.getValue();

            AttributeDescriptor d = (AttributeDescriptor) Types.descriptor(parentType, dName);
            assertNotNull("Descriptor " + dName + " not found for type " + parentType.getName(), d);
            AttributeType type;
            try {
                type = d.getType();
            } catch (Exception e) {
                LOGGER.log(Level.SEVERE, "type not parsed for " + d.getName(), e);
                throw e;
            }
            assertNotNull(type);
            Name actualTypeName = type.getName();
            assertNotNull(actualTypeName);
            assertNotNull(type.getBinding());
            if (expectedDescriptorTypeName != null) {
                assertEquals(
                        "type mismatch for property " + dName,
                        expectedDescriptorTypeName,
                        actualTypeName);
            }
        }
    }

