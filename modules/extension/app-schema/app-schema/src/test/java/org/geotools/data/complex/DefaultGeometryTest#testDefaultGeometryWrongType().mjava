    /**
     * Tests that an exception is thrown at runtime if the evaluation of the default geometry
     * expression against a target feature type does not yield a {@link GeometryDescriptor}
     * instance.
     */
    @Test
    public void testDefaultGeometryWrongType() {
        try {
            // try to load data access with faulty configuration --> exception should be thrown
            loadDataAccess("stationsDefaultGeometryWrongType.xml");
            fail("Expected exception to be thrown");
        } catch (IOException ex) {
            assertTrue(ex.getCause() instanceof IllegalArgumentException);
            IllegalArgumentException iae = (IllegalArgumentException) ex.getCause();
            // check error message
            assertEquals(
                    "Default geometry descriptor could not be found for type "
                            + "\"http://www.stations.org/1.0:Station\" at x-path \"st:location/st:name\"",
                    iae.getMessage());
        } catch (Exception e) {
            fail(
                    "Expected IllegalArgumentException to be thrown, but "
                            + e.getClass().getName()
                            + " was thrown instead");
        }
    }

