    @Test
    /** Test toPoint function */
    public void testToPoint() throws NoSuchAuthorityCodeException, FactoryException {
        // 2 points with SRS name and gml:id
        Function function =
                ff.function(
                        "toPoint",
                        ToDirectPositionFunction.SRS_NAME,
                        ff.literal("EPSG:4283"),
                        pointOne,
                        pointTwo,
                        ff.literal("1"));
        Object value = function.evaluate(feature);
        assertTrue(value instanceof Point);
        Point pt = (Point) value;
        assertEquals(pt.getDimension(), 0);
        assertEquals(pt.getCoordinate().x, 5.0, 0);
        assertEquals(pt.getCoordinate().y, 2.5, 0);
        @SuppressWarnings("unchecked")
        Map<Object, Object> userData = (Map<Object, Object>) pt.getUserData();
        assertEquals(userData.get("gml:id"), "1");
        assertEquals(userData.get(CoordinateReferenceSystem.class), CRS.decode("EPSG:4283"));

        // 2 points with no SRS name
        function = ff.function("toPoint", pointOne, pointTwo);
        value = function.evaluate(feature);
        assertTrue(value instanceof Point);
        pt = (Point) value;
        assertEquals(pt.getDimension(), 0);
        assertEquals(pt.getCoordinate().x, 5.0, 0);
        assertEquals(pt.getCoordinate().y, 2.5, 0);
        assertNull(pt.getUserData());
        // 1 point
        function = ff.function("toPoint", pointOne);
        try {
            value = function.evaluate(feature);
            fail("Shouldn't get this far with not enough parameters :" + pointOne.toString());
        } catch (Throwable e) {
            LOGGER.info("Testing exception: " + e.toString());
        }
        // 3 points
        function =
                ff.function(
                        "toPoint",
                        ToDirectPositionFunction.SRS_NAME,
                        ff.literal("1"),
                        pointOne,
                        pointTwo,
                        pointOne);
        try {
            function.evaluate(feature);
            fail(
                    "Shouldn't get this far with too many parameters: "
                            + pointOne.toString()
                            + ", "
                            + pointTwo.toString()
                            + ", "
                            + pointOne.toString());
        } catch (Throwable e) {
            LOGGER.info("Testing exception: " + e.toString());
        }
    }

