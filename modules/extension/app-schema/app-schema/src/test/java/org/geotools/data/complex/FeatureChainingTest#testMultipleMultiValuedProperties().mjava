    /**
     * Test nesting multiple multi valued properties. Both exposure color and outcrop character are
     * multi valued. By making sure that both are nested inside geological unit feature, it's
     * verified that nesting multiple multi valued properties is possible.
     */
    @Test
    public void testMultipleMultiValuedProperties() throws Exception {
        FeatureIterator<Feature> guIterator = guFeatures.features();

        Feature guFeature;
        final String EXPOSURE_COLOR = "exposureColor";
        final String OUTCROP_CHARACTER = "outcropCharacter";
        while (guIterator.hasNext()) {
            guFeature = guIterator.next();
            String guId = guFeature.getIdentifier().toString();
            List<Object> realValues = new ArrayList<>();

            /** Test exposure color */
            Collection<Property> nestedTermValues = guFeature.getProperties(EXPOSURE_COLOR);
            // get exposure color property values from geological unit feature
            for (Property property : nestedTermValues) {
                Object value = property.getValue();
                assertNotNull(value);
                assertTrue(value instanceof Collection);
                assertEquals(1, ((Collection) value).size());

                Feature feature = (Feature) ((Collection) value).iterator().next();
                for (Property nestedProperty : feature.getProperties("value")) {
                    realValues.add(
                            ((Property) ((Collection) nestedProperty.getValue()).iterator().next())
                                    .getValue());
                }
            }

            // compares the values from the property file
            String[] values = this.guToExposureColorMap.get(guId).split(";");
            assertEquals(realValues.size(), values.length);
            assertTrue(realValues.containsAll(Arrays.asList(values)));

            /** Test outcrop character */
            nestedTermValues = guFeature.getProperties(OUTCROP_CHARACTER);
            realValues.clear();
            // get nested outcrop character values from geological unit feature
            for (Property property : nestedTermValues) {
                Object value = property.getValue();
                assertNotNull(value);
                assertTrue(value instanceof Collection);
                assertEquals(1, ((Collection) value).size());

                Feature feature = (Feature) ((Collection) value).iterator().next();
                for (Property nestedProperty : feature.getProperties("value")) {
                    realValues.add(
                            ((Property) ((Collection) nestedProperty.getValue()).iterator().next())
                                    .getValue());
                }
            }
            // compare with values from property file
            values = this.guToOutcropCharacterMap.get(guId).split(";");
            assertEquals(realValues.size(), values.length);
            assertTrue(realValues.containsAll(Arrays.asList(values)));
        }
        guIterator.close();
    }

