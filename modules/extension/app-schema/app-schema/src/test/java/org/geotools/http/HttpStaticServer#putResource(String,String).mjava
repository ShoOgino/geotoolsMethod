    /**
     * Adds a static resource that should be published by the static HTTP server. The resource will
     * be read from the classpath and it will be available at: http://{host}:{port}/{resourceName}
     * Placeholders {host} and {port} will be replace with this server values.
     */
    void putResource(String resourceName, String resourcePath) {
        try (InputStream input = this.getClass().getResourceAsStream(resourcePath)) {
            if (input == null) {
                // we could not find the resource int he classpath
                throw new RuntimeException(
                        String.format(
                                "Resource '%s' with path '%s' not found.",
                                resourceName, resourcePath));
            }
            // read the resource from the classpath
            String resource = IOUtils.toString(input);
            // substitute host and port place holders
            String relativePath =
                    URLs.getParentUrl(this.getClass().getResource(resourcePath)).getPath();
            resource = resource.replaceAll("\\{relative\\}", relativePath);
            resource = resource.replaceAll("\\{host\\}", getHost());
            resource = resource.replaceAll("\\{port\\}", String.valueOf(getPort()));
            // register the resource
            resources.put(resourceName, resource);
            LOGGER.info(String.format("Resource %s added.", buildUrl(resourceName)));
        } catch (Exception exception) {
            throw new RuntimeException(
                    String.format(
                            "Error registering resource '%s' with path '%s'.",
                            resourceName, resourcePath),
                    exception);
        }
    }

