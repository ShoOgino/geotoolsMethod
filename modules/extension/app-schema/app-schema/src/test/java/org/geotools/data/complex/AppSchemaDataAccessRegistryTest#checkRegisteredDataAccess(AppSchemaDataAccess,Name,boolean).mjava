    /**
     * Tests that registry works.
     *
     * @param dataAccess The app schema data access to check
     * @param typeName Feature type
     * @param isNonFeature true if the type is non feature
     */
    private void checkRegisteredDataAccess(
            AppSchemaDataAccess dataAccess, Name typeName, boolean isNonFeature)
            throws IOException {
        FeatureTypeMapping mapping = AppSchemaDataAccessRegistry.getMappingByName(typeName);
        assertNotNull(mapping);
        // compare with the supplied data access
        assertEquals(dataAccess.getMappingByName(typeName).equals(mapping), true);
        if (isNonFeature) {
            assertTrue(mapping.getTargetFeature().getType() instanceof NonFeatureTypeProxy);
        }

        // should return a simple feature source
        FeatureSource source = AppSchemaDataAccessRegistry.getMappingByName(typeName).getSource();
        assertNotNull(source);
        assertEquals(mapping.getSource(), source);

        // should return a mapping feature source
        FeatureSource<FeatureType, Feature> mappedSource =
                DataAccessRegistry.getFeatureSource(typeName);
        assertNotNull(mappedSource);
        // compare with the supplied data access
        assertTrue(mappedSource.getDataStore().equals(dataAccess));
    }

