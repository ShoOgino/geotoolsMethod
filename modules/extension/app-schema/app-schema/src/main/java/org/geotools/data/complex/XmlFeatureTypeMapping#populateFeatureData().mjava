    public void populateFeatureData() throws IOException {

        List<AttributeMapping> attMap = getAttributeMappings();
        if (attOrderedTypeList == null) {
            initialiseAttributeLists(attMap);
        }
        // create required elements
        String xpath = rootAttribute.getInstanceXpath() == null ? itemXpath : itemXpath
                + XPATH_SEPARATOR + rootAttribute.getInstanceXpath();
        
        elements.put(rootAttribute.getLabel(), xpath, null);
        Expression idExpression = rootAttribute.getIdentifierExpression();
        if (!idExpression.equals(Expression.NIL)) {
            Expression id;            
            if (!(idExpression instanceof Function) && rootAttribute.getInstanceXpath() != null) {
                id = ff.property(rootAttribute.getInstanceXpath() + XPATH_SEPARATOR + idExpression);
            } else {
                id = idExpression;
            }                    
            mapping.put("@gml:id", id);    
        }        

        // iterator returns the attribute mappings starting from the root of the tree.
        // parents are always returned before children elements.
        Iterator<AttributeMapping> it = attOrderedTypeList.iterator();
        addComplexAttributes(elements, it);
        addSetterAttributes(elements);
        
        index++;
        removeAllRelativePaths();
    }

