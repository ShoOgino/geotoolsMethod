    private Set<FeatureTypeMapping> createFeatureTypeMappings(
            Map<String, DataAccess<FeatureType, Feature>> sourceDataStores) throws IOException {
        Set mappingsConfigs = config.getTypeMappings();

        Set<FeatureTypeMapping> featureTypeMappings = new HashSet<>();

        for (Iterator it = mappingsConfigs.iterator(); it.hasNext(); ) {
            TypeMapping dto = (TypeMapping) it.next();
            try {
                FeatureSource<? extends FeatureType, ? extends Feature> featureSource =
                        getFeatureSource(dto, sourceDataStores);
                // get CRS from underlying feature source and pass it on
                CoordinateReferenceSystem crs;
                try {
                    crs = featureSource.getSchema().getCoordinateReferenceSystem();
                } catch (UnsupportedOperationException e) {
                    // web service back end doesn't support getSchema
                    crs = null;
                }
                AttributeDescriptor target = getTargetDescriptor(dto, crs);

                // set original schema locations for encoding
                target.getType().getUserData().put("schemaURI", schemaURIs);

                // set mappings namespaces
                target.getType()
                        .getUserData()
                        .put(Types.DECLARED_NAMESPACES_MAP, getNamespacesMap());

                boolean isDatabaseBackend =
                        featureSource instanceof JDBCFeatureSource
                                || featureSource instanceof JDBCFeatureStore;

                List<AttributeMapping> attMappings =
                        getAttributeMappings(
                                target,
                                dto.getAttributeMappings(),
                                dto.getItemXpath(),
                                crs,
                                isDatabaseBackend);

                // if an external index (e.g. Solr) is used in the mappings, get its data store
                FeatureSource<SimpleFeatureType, SimpleFeature> indexFeatureSource =
                        getIndexFeatureSource(dto, sourceDataStores);

                FeatureTypeMapping mapping;

                mapping =
                        FeatureTypeMappingFactory.getInstance(
                                featureSource,
                                indexFeatureSource,
                                target,
                                dto.getDefaultGeometryXPath(),
                                attMappings,
                                namespaces,
                                dto.getItemXpath(),
                                dto.isXmlDataStore(),
                                dto.isDenormalised(),
                                dto.getSourceDataStore());

                String mappingName = dto.getMappingName();
                if (mappingName != null) {
                    mapping.setName(Types.degloseName(mappingName, namespaces));
                }
                featureTypeMappings.add(mapping);
            } catch (Exception e) {
                LOGGER.warning(
                        "Error creating app-schema data store for '"
                                + (dto.getMappingName() != null
                                        ? dto.getMappingName()
                                        : dto.getTargetElementName())
                                + "', caused by: "
                                + e.getMessage());
                throw new IOException(e);
            }
        }
        return featureTypeMappings;
    }

