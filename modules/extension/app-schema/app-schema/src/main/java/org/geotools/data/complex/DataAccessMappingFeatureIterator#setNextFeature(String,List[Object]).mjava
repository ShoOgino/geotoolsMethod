    protected List<Feature> setNextFeature(String fId, List<Object> foreignIdValues)
            throws IOException {
        List<Feature> features = new ArrayList<Feature>();
        features.add(curSrcFeature);
        curSrcFeature = null;

        while (getSourceFeatureIterator().hasNext()) {
            Feature next = getSourceFeatureIterator().next();
            if (extractIdForFeature(next).equals(fId)
                    && checkForeignIdValues(foreignIdValues, next)) {
                // HACK HACK HACK
                // evaluate filter that applies to this list as we want a subset
                // instead of full result
                // this is a temporary solution for Bureau of Meteorology
                // requirement for timePositionList
                if (listFilter != null) {
                    if (listFilter.evaluate(next)) {
                        features.add(next);
                    }
                    // END OF HACK
                } else {
                    features.add(next);
                }
                // HACK HACK HACK
                // evaluate filter that applies to this list as we want a subset
                // instead of full result
                // this is a temporary solution for Bureau of Meteorology
                // requirement for timePositionList
            } else if (listFilter == null || listFilter.evaluate(next)) {
                // END OF HACK
                curSrcFeature = next;
                break;
            }
        }
        return features;
    }

