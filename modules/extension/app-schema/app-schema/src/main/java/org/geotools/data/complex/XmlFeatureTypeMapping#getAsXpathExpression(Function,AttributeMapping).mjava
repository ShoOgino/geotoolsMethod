    /**
     * Find asXpath in a function, which might be the function itself or a parameter of the
     * function, and extract the xpath value including itemXpath and instancePath prefixes.
     *
     * @param func The function
     * @param mapping The attribute mapping
     * @return xpath expression or null
     */
    private Expression getAsXpathExpression(Function func, AttributeMapping mapping) {
        if (func.getName().equals(AS_XPATH_FUNCTION)) {
            // get original filter xpath
            Expression queryXpath = func.getParameters().get(0);
            // get the attribute mapping full xpath and append to the function param
            String prefix;
            String parentLabel = mapping.getParentLabel();
            if (parentLabel == null) {
                // must be root
                prefix = elements.getPath(rootAttribute.getLabel());
            } else {
                prefix = elements.getPath(parentLabel);
                String instancePath = mapping.getInstanceXpath();
                if (instancePath != null) {
                    prefix += XPATH_SEPARATOR + instancePath;
                }
            }
            Expression fullXpath = ff.property(prefix + XPATH_SEPARATOR + queryXpath);
            return fullXpath;
        } else {
            List<Expression> params = func.getParameters();
            for (int i = 0; i < params.size(); i++) {
                Expression param = params.get(i);
                if (param instanceof Function) {
                    Expression expr = getAsXpathExpression((Function) param, mapping);
                    if (expr != null) {
                        // found asXpath and returned an expression
                        // set as the new parameter
                        func.getParameters().remove(i);
                        func.getParameters().add(expr);
                    }
                }
            }
            return null;
        }
    }

