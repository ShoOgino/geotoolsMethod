    /**
     * @return Map&lt;Name, Expression&gt; with the values per qualified name (attribute name in the
     *     mapping)
     */
    private Map<Name, Expression> getClientProperties(
            org.geotools.data.complex.config.AttributeMapping dto) throws DataSourceException {
        final Map<Name, Expression> clientProperties = new HashMap<>();

        if (dto.getClientProperties().size() > 0) {
            for (Entry<String, String> stringStringEntry : dto.getClientProperties().entrySet()) {
                Entry entry = (Entry) stringStringEntry;
                String name = (String) entry.getKey();
                Name qName = Types.degloseName(name, namespaces);
                String cqlExpression = (String) entry.getValue();
                Expression expression = parseOgcCqlExpression(cqlExpression);
                Expression fixedExpr =
                        fixClientPropertyIfJDBCMultipleValueIsPresent(dto, expression);
                clientProperties.put(qName, fixedExpr);
            }
        }
        // add anonymous attributes
        addAnonymousAttributes(dto, clientProperties);

        return clientProperties;
    }

