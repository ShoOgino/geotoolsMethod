    /**
     * Utility method that parses an CQL expression from its text representation. If the provided
     * expression test representation is NULL, {@link Expression.NIL} is returned.
     *
     * @param sourceExpr the expression in its text representation
     * @param ff filter factory used to build the final expression
     * @return the parsed expression
     * @throws DataSourceException if the expression text representation could not be parsed
     */
    public static Expression parseOgcCqlExpression(String sourceExpr, FilterFactory ff)
            throws DataSourceException {
        Expression expression = Expression.NIL;
        if (sourceExpr != null && sourceExpr.trim().length() > 0) {
            try {
                expression = CQL.toExpression(sourceExpr, ff);
            } catch (CQLException e) {
                String formattedErrorMessage = e.getMessage();
                AppSchemaDataAccessConfigurator.LOGGER.log(Level.SEVERE, formattedErrorMessage, e);
                throw new DataSourceException(
                        "Error parsing CQL expression "
                                + sourceExpr
                                + ":\n"
                                + formattedErrorMessage);
            } catch (Exception e) {
                e.printStackTrace();
                String msg = "parsing expression " + sourceExpr;
                AppSchemaDataAccessConfigurator.LOGGER.log(Level.SEVERE, msg, e);
                throw new DataSourceException(msg + ": " + e.getMessage(), e);
            }
        }
        return expression;
    }

