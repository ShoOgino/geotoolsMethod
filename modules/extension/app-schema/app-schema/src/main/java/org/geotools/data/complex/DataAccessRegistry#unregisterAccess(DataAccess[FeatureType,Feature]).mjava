    /**
     * Unregister a data access. This is important especially at the end of test cases, so that the
     * mappings contained in the data access do not conflict with mappings of the same type used in
     * other tests.
     *
     * @param dataAccess Data access to be unregistered
     */
    public synchronized void unregisterAccess(DataAccess<FeatureType, Feature> dataAccess) {
        registry.remove(dataAccess);

        if (dataAccess instanceof AppSchemaDataAccess) {
            AppSchemaDataAccess asda = (AppSchemaDataAccess) dataAccess;
            // NOTE: this code assumes hidden data accesses are never removed directly by the user,
            // only by the automatic disposal algorithm, so no need to run it again
            if (!asda.hidden && asda.url != null) {
                try {
                    disposeHiddenDataAccessInstances(asda.url);
                } catch (IOException e) {
                    LOGGER.log(
                            Level.SEVERE,
                            "Exception occurred disposing unused data access instances",
                            e);
                }
            }
        }
    }

