    private List<Expression> getClientPropertyExpressions(final List attributeMappings,
            final Name clientPropertyName, StepList parentPath) {
        List<Expression> clientPropertyExpressions = new ArrayList<Expression>(attributeMappings
                .size());

        AttributeMapping attMapping;
        Map clientProperties;
        Expression propertyExpression;
        for (Iterator it = attributeMappings.iterator(); it.hasNext();) {
            attMapping = (AttributeMapping) it.next();
            if (attMapping instanceof JoiningNestedAttributeMapping) {
                // if it's joining for simple content feature chaining it has to be empty
                // so it will be added to the post filter
                clientPropertyExpressions.add(null);
            } else {
                clientProperties = attMapping.getClientProperties();
                // NC -added
                if (Types.equals(clientPropertyName, GML.id)) {
                    clientPropertyExpressions.add(attMapping.getIdentifierExpression());
                } else if (clientProperties.containsKey(clientPropertyName)) {
                    // end NC - added
                    propertyExpression = (Expression) clientProperties.get(clientPropertyName);
                    clientPropertyExpressions.add(propertyExpression);
                }
            }
        }

        return clientPropertyExpressions;
    }

