    private String createJoiningCountQuery(
            SQLDialect dialect,
            SimpleFeatureType querySchema,
            JoiningQuery query,
            String idColumnName,
            AtomicReference<PreparedFilterToSQL> toSQLRef)
            throws IOException, SQLException, FilterToSQLException {
        StringBuffer countSQL = new StringBuffer("SELECT COUNT(").append("DISTINCT ");
        dialect.encodeColumnName(COUNT_TABLE_ALIAS, idColumnName, countSQL);
        countSQL.append(")").append(" FROM (");
        String sql = selectSQL(querySchema, query, toSQLRef, true);
        countSQL.append(sql).append(") ");
        dialect.encodeTableName(COUNT_TABLE_ALIAS, countSQL);
        String countQuery = countSQL.toString();
        if (LOGGER.isLoggable(Level.FINE)) LOGGER.fine(countQuery);
        return countQuery;
    }

