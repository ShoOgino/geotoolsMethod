    private FeatureChainedAttributeVisitor existsExtractorVisitor() {
        return new FeatureChainedAttributeVisitor(mappings) {
            @Override
            protected boolean startsWith(StepList one, StepList other) {
                if (other.size() > one.size()) {
                    return false;
                }
                boolean result = true;
                for (int i = 0; i < other.size(); i++) {
                    Step thisStep = one.get(i);
                    Step otherStep = other.get(i);
                    if (thisStep.isIndexed() && otherStep.isIndexed()) {
                        result = result && thisStep.equals(otherStep);
                    } else {
                        result = result && thisStep.equalsIgnoreIndex(otherStep);
                    }
                }
                return result;
            }
        };
    }

