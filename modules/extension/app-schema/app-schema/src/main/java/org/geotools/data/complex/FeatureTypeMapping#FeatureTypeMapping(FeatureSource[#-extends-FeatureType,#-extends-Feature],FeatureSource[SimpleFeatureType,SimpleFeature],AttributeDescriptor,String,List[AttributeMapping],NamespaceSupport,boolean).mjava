    public FeatureTypeMapping(
            FeatureSource<? extends FeatureType, ? extends Feature> source,
            FeatureSource<SimpleFeatureType, SimpleFeature> indexSource,
            AttributeDescriptor target,
            String defaultGeometryXPath,
            List<AttributeMapping> mappings,
            NamespaceSupport namespaces,
            boolean isDenormalised) {
        this.source = source;
        this.indexSource = indexSource;
        this.target = target;
        this.defaultGeometryXPath = defaultGeometryXPath;
        this.attributeMappings = new LinkedList<>(mappings);
        this.namespaces = namespaces;
        this.isDenormalised = isDenormalised;

        // find id expression
        for (AttributeMapping attMapping : attributeMappings) {
            StepList targetXPath = attMapping.getTargetXPath();
            if (targetXPath.size() > 1) {
                continue;
            }
            Step step = (Step) targetXPath.get(0);
            QName stepName = step.getName();
            if (Types.equals(target.getName(), stepName)) {
                featureFidMapping = attMapping.getIdentifierExpression();
                break;
            }
        }
        if (featureFidMapping == null) {
            featureFidMapping = Expression.NIL;
        }
    }

