    /**
     * Extract the simple content attribute from a list of features.
     * This is used when feature chaining is used for simple contents, such
     * as gml:name.. therefore the iterator would create a list of features containing the
     * simple content attributes. 
     * @param value    List of features
     * @return   The attribute with simple content
     */
    @SuppressWarnings("unchecked")
    private Collection<Property> extractSimpleContent(Object value) {
       if (value == null || !(value instanceof Collection)) {
           return null;
       }
       Collection list = (Collection) value;
       if (list.size() != 1) {
           // there should only 1 feature in a list even if it's multi-valued
           // since each value should be wrapped in its own parent node
           // eg. the format is
           // gsml:specification[1]/gsml:CompositionPart/...
           // gsml:specification[2]/gsml:CompositionPart/...
           throw new IllegalArgumentException("Expecting only 1 feature in the list!");
       }
       Object f = list.iterator().next();
       if (!(f instanceof Feature)) {
           throw new IllegalArgumentException("Expecting a feature!");
       }
       Feature feature = (Feature) f;
       return feature.getProperties(ComplexFeatureConstants.SIMPLE_CONTENT);
    }

