        /**
         * Gets a link in the feature types chain by its index.
         * 
         * @param linkIdx the link index (0-based)
         * @return the feature chain link corresponding to the provided index
         * @throws IllegalArgumentException if <code>linkIdx</code> is negative
         * @throws IndexOutOfBoundsException if <code>linkIdx</code> is >= than the chain size
         */
        public FeatureChainLink getLink(int linkIdx) {
            if (linkIdx < 0) {
                throw new IllegalArgumentException("linkIdx must be > 0");
            }
            if (linkIdx >= featureChain.size()) {
                throw new IndexOutOfBoundsException("linkIdx " + linkIdx + " is not present");
            }
            return featureChain.get(linkIdx);
        }

