    public Object visit(PropertyIsLike filter, Object arg1) {
        Expression value = filter.getExpression();
        @SuppressWarnings("unchecked")
        List<Expression> unrolledValues = (List) value.accept(this, null);

        String literal = filter.getLiteral();
        String wildcard = filter.getWildCard();
        String single = filter.getSingleChar();
        String escape = filter.getEscape();
        boolean matchCase = filter.isMatchingCase();
        MatchAction matchAction = filter.getMatchAction();

        List<Filter> combined = new ArrayList<>(unrolledValues.size());
        for (Expression sourceValue : unrolledValues) {
            Filter newFilter =
                    ff.like(sourceValue, literal, wildcard, single, escape, matchCase, matchAction);
            combined.add(newFilter);
        }
        Filter unrolled = combineOred(combined);
        return unrolled;
    }

