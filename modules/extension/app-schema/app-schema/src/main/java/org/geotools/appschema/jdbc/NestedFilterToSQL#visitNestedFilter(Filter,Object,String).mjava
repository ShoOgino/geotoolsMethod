    protected Object visitNestedFilter(Filter filter, Object extraData, String xpath) {
        try {
            FeatureChainedAttributeVisitor nestedMappingsExtractor =
                    new FeatureChainedAttributeVisitor(rootMapping);
            nestedMappingsExtractor.visit(ff.property(xpath), null);
            List<FeatureChainedAttributeDescriptor> attributes =
                    nestedMappingsExtractor.getFeatureChainedAttributes();
            if (!attributes.isEmpty()) {
                if (attributes.size() > 1) out.write("(");
                boolean first = true;
                for (FeatureChainedAttributeDescriptor nestedAttrDescr : attributes) {
                    if (first) first = false;
                    else out.write(" OR ");
                    encodeChainedAttribute(filter, xpath, nestedAttrDescr);
                }
                if (attributes.size() > 1) out.write(")");
            }
            return extraData;

        } catch (IOException | FilterToSQLException | SQLException ioe) {
            throw new RuntimeException("Problem writing filter: ", ioe);
        }
    }

