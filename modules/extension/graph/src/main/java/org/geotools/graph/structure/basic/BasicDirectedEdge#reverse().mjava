    /**
     * Removes the edge from the out list of the in node and from the in list of the out node. Nodes
     * are switched and then the edge is added to the in list of the new out node, and to the out
     * list of the new in node.
     *
     * @see Edge#reverse()
     */
    @Override
    public void reverse() {
        // remove edge from adjacent nodes
        m_in.removeOut(this);
        m_out.removeIn(this);

        // swap nodes
        DirectedNode tmp = m_in;
        m_in = m_out;
        m_out = tmp;

        // re add nodes
        m_in.addOut(this);
        m_out.addIn(this);
    }

