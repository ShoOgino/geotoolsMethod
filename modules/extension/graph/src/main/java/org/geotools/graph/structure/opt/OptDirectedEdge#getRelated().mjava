    /** @see Graphable#getRelated() */
    @Override
    public Iterator<? extends Graphable> getRelated() {
        ArrayList<Edge> related = new ArrayList<>(m_in.getDegree() + m_out.getDegree() - 2);

        Edge[] edges = m_in.getInEdgeArray();
        for (Edge edge : edges) {
            related.add(edge);
        }

        edges = m_in.getOutEdgeArray();
        for (Edge e : edges) {
            if (!e.equals(this) && !(e.getNodeA().equals(e.getNodeB()))) related.add(e);
        }

        edges = m_out.getInEdgeArray();
        for (Edge e : edges) {
            switch (compareNodes(e)) {
                case Edge.EQUAL_NODE_ORIENTATION:
                case Edge.OPPOSITE_NODE_ORIENTATION:
                    continue; // already added

                case Edge.UNEQUAL_NODE_ORIENTATION:
                    related.add(e);
            }
        }

        edges = m_out.getOutEdgeArray();
        for (Edge e : edges) {
            switch (compareNodes(e)) {
                case Edge.EQUAL_NODE_ORIENTATION:
                case Edge.OPPOSITE_NODE_ORIENTATION:
                    continue; // already added

                case Edge.UNEQUAL_NODE_ORIENTATION:
                    if (!e.getNodeA().equals(e.getNodeB())) related.add(e);
            }
        }

        return (related.iterator());
    }

