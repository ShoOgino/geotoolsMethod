    /**
     * Returns the next node in the priority queue. If the next node coming out of the queue has
     * infinite cost, then the node is not adjacent to any nodes in the set of nodes with known
     * costs. This situation will end the traversal every other node will also have infinite cost.
     * This usually is the result of a disconnected graph.
     *
     * @see org.geotools.graph.traverse.GraphIterator#next()
     */
    @Override
    public Graphable next(GraphTraversal traversal) {
        if (queue.isEmpty()) return (null);

        DijkstraNode next = queue.remove();

        // check cost of node, if cost == infinity then return null
        // because no node in the visited set ever updated the node
        // since it is at the top of the heap it means no more nodes
        // in the visited set will be visited
        if (next.cost == Double.MAX_VALUE) return (null);

        return (next.node);
    }

