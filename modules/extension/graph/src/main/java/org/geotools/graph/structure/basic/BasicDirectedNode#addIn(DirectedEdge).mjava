  /**
   * Adds an edge to the <B>in</B> adjacency list of the node which is an 
   * underlying List implementation. No checking is done on the edge 
   * (duplication, looping...), it is simply added to the list. It is also
   * assumed that the edge being added has the node as its out node.
   *
   * @see DirectedNode#addIn(DirectedEdge)  
   * @see DirectedEdge#getOutNode()
   *
   */
  public void addIn(DirectedEdge e) {
    m_in.add(e);
  }

