    /**
     * Create a circular graph and do a full traversal. <br>
     * <br>
     * Expected: 1. No nodes should be visited.
     */
    @Test
    public void test_2() {
        int nnodes = 100;
        GraphTestUtil.buildCircular(builder(), nnodes);

        CountingWalker walker = new CountingWalker();
        BreadthFirstTopologicalIterator iterator = createIterator();

        BasicGraphTraversal traversal =
                new BasicGraphTraversal(builder().getGraph(), walker, iterator);
        traversal.init();
        traversal.traverse();

        GraphVisitor visitor =
                new GraphVisitor() {
                    public int visit(Graphable component) {
                        Assert.assertFalse(component.isVisited());
                        return 0;
                    }
                };
        builder().getGraph().visitNodes(visitor);

        Assert.assertEquals(0, walker.getCount());
    }

