    /**
     * Build a linear graph by adding a number of line segments that join at endpoints. <br>
     * Expected: 1. Number of edges = number of lines added. 2. Number of nodes = number of lines +
     * 1
     */
    @Test
    public void test_0() {
        final Coordinate base = new Coordinate(0d, 0d);
        final int n = 100;
        for (int i = 1; i <= n; i++) {
            generator()
                    .add(
                            new LineSegment(
                                    new Coordinate(base.x + (i - 1), base.y + (i - 1)),
                                    new Coordinate(base.x + i, base.y + i)));
        }
        generator().generate();
        Graph built = generator().getGraph();

        // ensure correct graph structure
        Assert.assertEquals(built.getEdges().size(), n);
        Assert.assertEquals(built.getNodes().size(), n + 1);

        Assert.assertEquals(2, built.getNodesOfDegree(1).size());
        Assert.assertEquals(built.getNodesOfDegree(2).size(), n - 1);

        // ensure coordinates
        GraphVisitor visitor =
                component -> {
                    Edge e = (Edge) component;
                    XYNode a = (XYNode) e.getNodeA();
                    XYNode b = (XYNode) e.getNodeB();

                    // coordinats should be a distance of sqrt(2)
                    Assert.assertTrue(
                            Math.abs(a.getCoordinate().x - b.getCoordinate().x) == 1
                                    && Math.abs(a.getCoordinate().y - b.getCoordinate().y) == 1);

                    //        assertTrue(
                    //            Math.abs(a.getX() - b.getX()) == 1
                    //         && Math.abs(a.getY() - b.getY()) == 1
                    //        );
                    return (0);
                };
        built.visitEdges(visitor);
    }

