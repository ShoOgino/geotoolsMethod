    @Test
    public void test_getInRelated() {
        m_node.addIn(m_inEdge1);
        m_node.addIn(m_inEdge2);

        m_node.addOut(m_outEdge1);
        m_node.addOut(m_outEdge2);

        Iterator related = m_node.getInRelated();
        BasicDirectedNode dn = (BasicDirectedNode) related.next();
        Assert.assertTrue(dn == m_inNode1 || dn == m_inNode2);

        dn = (BasicDirectedNode) related.next();
        Assert.assertTrue(dn == m_inNode1 || dn == m_inNode2);
        Assert.assertFalse(related.hasNext());

        // add a loop
        m_node.addIn(m_loop);
        m_node.addOut(m_loop);

        related = m_node.getInRelated();

        dn = (BasicDirectedNode) related.next();
        Assert.assertTrue(dn == m_inNode1 || dn == m_inNode2 || dn == m_node);

        dn = (BasicDirectedNode) related.next();
        Assert.assertTrue(dn == m_inNode1 || dn == m_inNode2 || dn == m_node);

        dn = (BasicDirectedNode) related.next();
        Assert.assertTrue(dn == m_inNode1 || dn == m_inNode2 || dn == m_node);

        Assert.assertFalse(related.hasNext());
    }

