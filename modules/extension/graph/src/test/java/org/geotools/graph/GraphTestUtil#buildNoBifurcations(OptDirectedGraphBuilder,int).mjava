    public static Object[] buildNoBifurcations(OptDirectedGraphBuilder builder, int nnodes) {
        // use maps for id since optimized graphable doesn't use id's
        HashMap node2id = new HashMap();
        HashMap edge2id = new HashMap();

        OptDirectedNode n1 = (OptDirectedNode) builder.buildNode();
        n1.setInDegree(0);
        n1.setOutDegree(1);

        builder.addNode(n1);
        node2id.put(n1, Integer.valueOf(0));

        OptDirectedNode n2 = null;
        Edge e = null;
        OptDirectedNode first = n1;

        for (int i = 1; i < nnodes; i++) {
            n2 = (OptDirectedNode) builder.buildNode();
            if (i < nnodes - 1) {
                n2.setInDegree(1);
                n2.setOutDegree(1);
            } else {
                n2.setInDegree(1);
                n2.setOutDegree(0);
            }

            builder.addNode(n2);
            node2id.put(n2, Integer.valueOf(i));

            e = builder.buildEdge(n1, n2);
            builder.addEdge(e);
            edge2id.put(e, Integer.valueOf(i - 1));

            n1 = n2;
        }

        return (new Object[] {first, n1, node2id, edge2id});
    }

