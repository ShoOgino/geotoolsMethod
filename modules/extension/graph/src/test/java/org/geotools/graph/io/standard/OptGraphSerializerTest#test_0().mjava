    /**
     * Create a simple graph with no bifurcations and serialize, then deserialize <br>
     * <br>
     * Expected: 1. before and after graph should have same structure.
     */
    public void test_0() {
        final int nnodes = 100;
        Object[] obj = GraphTestUtil.buildNoBifurcations(builder(), nnodes);

        final Map node2id = (Map) obj[2];
        final Map edge2id = (Map) obj[3];

        try {
            File victim = File.createTempFile("graph", null);
            victim.deleteOnExit();

            serializer().setProperty(SerializedReaderWriter.FILENAME, victim.getAbsolutePath());

            serializer().write(builder().getGraph());

            Graph before = builder().getGraph();
            Graph after = serializer().read();

            // ensure same number of nodes and edges
            assertTrue(before.getNodes().size() == after.getNodes().size());
            assertTrue(before.getEdges().size() == after.getEdges().size());

            // ensure two nodes of degree 1, and nnodes-2 nodes of degree 2
            assertTrue(after.getNodesOfDegree(1).size() == 2);
            assertTrue(after.getNodesOfDegree(2).size() == nnodes - 2);

        } catch (Exception e) {
            java.util.logging.Logger.getGlobal().log(java.util.logging.Level.INFO, "", e);
            assertTrue(false);
        }
    }

