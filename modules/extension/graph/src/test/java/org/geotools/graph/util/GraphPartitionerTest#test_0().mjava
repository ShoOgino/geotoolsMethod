    /**
     * Create a graph in which every node is connected and partition.
     *
     * <p>Expected: 1. There should only be one partition.
     */
    public void test_0() {
        int nnodes = 100;
        GraphTestUtil.buildNoBifurcations(builder(), nnodes);

        GraphPartitioner partitioner = new GraphPartitioner(builder().getGraph());
        partitioner.partition();

        List partitions = partitioner.getPartitions();

        assertEquals(1, partitions.size());

        // ensure every node in the original graph is in the new graph
        final Graph g = (Graph) partitions.get(0);
        assertEquals(g.getNodes().size(), builder().getGraph().getNodes().size());
        assertEquals(g.getEdges().size(), builder().getGraph().getEdges().size());

        GraphVisitor visitor =
                new GraphVisitor() {
                    public int visit(Graphable component) {
                        assertTrue(g.getNodes().contains(component));
                        return 0;
                    }
                };
        builder().getGraph().visitNodes(visitor);
    }

