    @Test
    public void testReadTestSuite() {
        try {
            // set-up
            FileReader fr = features();
            if (fr == null) return;

            Map<String, PlugInDTO> m = new HashMap<>();
            PlugInDTO dto = XMLReader.readPlugIn(fr);
            m.put(dto.getName(), dto);
            fr = new FileReader("C:/Java/workspace/geoserver/conf/plugins/NameInList.xml");
            dto = XMLReader.readPlugIn(fr);
            m.put(dto.getName(), dto);

            fr = new FileReader("C:/Java/workspace/geoserver/conf/validation/RoadTestSuite.xml");

            TestSuiteDTO testsuite = XMLReader.readTestSuite("test", fr, m);
            Assert.assertEquals("TestSuite Name read", "RoadTestSuite", testsuite.getName());

            // multi line so cannot effectively test

            /*assertTrue("TestSuite Description read",("This test suite checks each road name to see \n"+
            "that they are of appropriate length and checks to \n"+
            "see if they are on the list of possible road names.\n"+
            "It also checks to see if any roads are contained in\n"+
            "a specified box.").equals(testsuite.getDescription()));*/
            TestDTO test = testsuite.getTests().get("NameLookup");

            Assert.assertNotNull("NameLookup does not exist as a test", test);

            // multi line so cannot effectively test
            // assertTrue("Test Description read","Checks to see if the road name is in the list of
            // possible names.".equals(test.getDescription()));
            Assert.assertNotNull("Should not be null", test.getPlugIn());
            Assert.assertEquals("Test plugInName read", "NameInList", test.getPlugIn().getName());

            Assert.assertNotNull("Should be one arg.", test.getArgs());
            Assert.assertEquals("Should be one arg.", 2, test.getArgs().size());
            Assert.assertTrue("Arg. name", test.getArgs().containsKey("LUTName"));

            // multi line so cannot effectively test
            // assertTrue("Arg. value :
            // "+test.getArgs().get("LUTName"),test.getArgs().containsValue("RoadNameLUT.xls"));
        } catch (Exception e) {
            java.util.logging.Logger.getGlobal().log(java.util.logging.Level.INFO, "", e);
            Assert.fail(e.toString());
        }
    }

