    /**
     * Override validate.
     *
     * <p>Description ... This is supposed to go off and grab the necesary features from the
     * database using the envelope with the typeNames. But it doesn't yet. It just uses the ones
     * passed in through parameter layers.
     *
     * @param layers a HashMap of key="TypeName" value="FeatureSource"
     * @param envelope The bounding box of modified features
     * @param results Storage for the error and warning messages
     * @return True if there were no errors. False if there were errors.
     * @see org.geotools.validation.IntegrityValidation#validate(java.util.Map,
     *     org.locationtech.jts.geom.Envelope, org.geotools.validation.ValidationResults)
     */
    public boolean validate(
            Map<String, SimpleFeatureSource> layers,
            ReferencedEnvelope envelope,
            ValidationResults results)
            throws Exception {
        Set<String> FIDs = new HashSet<>(); // FIDs used for lookup to see if any match
        boolean result = true;
        Iterator it = layers.values().iterator();

        // TODO: get the needed layers from the database and use them instead
        while (it.hasNext()) // for each layer
        {
            SimpleFeatureSource featureSource = (SimpleFeatureSource) it.next();
            SimpleFeatureIterator features = featureSource.getFeatures().features();

            try {
                while (features.hasNext()) // for each feature
                {
                    SimpleFeature feature = features.next();
                    String fid = feature.getID();

                    if (FIDs.contains(fid)) // if a FID like this one already exists
                    {
                        results.error(feature, "FID already exists.");
                        result = false;
                    } else {
                        FIDs.add(fid);
                    }
                }
            } finally {
                features.close(); // this is an important line
            }
        }

        return result;
    }

