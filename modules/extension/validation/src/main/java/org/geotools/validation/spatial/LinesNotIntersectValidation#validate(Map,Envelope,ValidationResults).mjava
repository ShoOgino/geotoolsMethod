    /**
     * Ensure Lines do not intersect.
     * 
     * <p>
     * This is supposed to go off and grab the necesary features from the
     * database using the envelope with the typeNames. But it doesn't yet.  It
     * just uses the ones passed in through parameter layers.
     * </p>
     *
     * @param layers a HashMap of key="TypeName" value="FeatureSource"
     * @param envelope The bounding box of modified features
     * @param results Storage for the error and warning messages
     *
     * @return True if no features intersect. If they do then the validation
     *         failed.
     *
     * @throws Exception DOCUMENT ME!
     *
     * @see org.geotools.validation.IntegrityValidation#validate(java.util.Map,
     *      com.vividsolutions.jts.geom.Envelope,
     *      org.geotools.validation.ValidationResults)
     */
    public boolean validate(Map layers, Envelope envelope,
        ValidationResults results) throws Exception {
        ArrayList geoms = new ArrayList(); // FIDs used for lookup to see if any match
        boolean result = true;
        Iterator it = layers.values().iterator();

        while (it.hasNext()) // for each layer
         {
            SimpleFeatureSource featureSource = (SimpleFeatureSource) it.next();
            SimpleFeatureIterator features = featureSource.getFeatures().features();

            try {
                while (features.hasNext()) // for each feature
                 {
                    // check if it intersects any of the previous features
                    SimpleFeature feature = features.next();
                    Geometry geom = (Geometry) feature.getDefaultGeometry();

                    for (int i = 0; i < geoms.size(); i++) // for each existing geometry
                     {
                        // I don't trust this thing to work correctly
                        if (geom.crosses((Geometry) geoms.get(i))) {
                            results.error(feature,
                                "Lines cross when they shouldn't.");
                            result = false;
                        }
                    }

                    geoms.add(geom);
                }
            } finally {
                features.close(); // this is an important line    
            }
        }

        return result;
    }

