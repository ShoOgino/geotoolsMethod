    /**
     * getKeyWords purpose.
     *
     * <p>Used to help with XML manipulations. Returns a list of keywords that were found.
     *
     * @param keywordsElem The root element to look for children in.
     * @return The list of keywords that were found.
     */
    public static String[] getKeyWords(Element keywordsElem) {
        NodeList klist = keywordsElem.getElementsByTagName("keyword");
        int kCount = klist.getLength();
        List keywords = new ArrayList(kCount);
        String kword;
        Element kelem;

        for (int i = 0; i < kCount; i++) {
            kelem = (Element) klist.item(i);
            kword = getElementText(kelem);

            if (kword != null) {
                keywords.add(kword);
            }
        }

        Object[] s = (Object[]) keywords.toArray();

        if (s == null) {
            return new String[0];
        }

        String[] ss = new String[s.length];

        for (int i = 0; i < ss.length; i++) ss[i] = s[i].toString();

        return ss;
    }

