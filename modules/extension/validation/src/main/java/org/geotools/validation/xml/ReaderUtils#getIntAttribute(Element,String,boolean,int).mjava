    /**
     * getIntAttribute purpose.
     *
     * <p>Used to help with XML manipulations. Returns the first child integer attribute of the
     * specified name. An exception occurs when the node is required and not found.
     *
     * @param elem The root element to look for children in.
     * @param attName The name of the attribute to look for.
     * @param mandatory true when an exception should be thrown if the attribute element does not
     *     exist.
     * @param defaultValue a default value to return incase the attribute was not found. mutually
     *     exclusive with the ConfigurationException thrown.
     * @return The int value if the attribute was found, the default otherwise.
     * @throws SAXException When a attribute element is required and not found.
     */
    public static int getIntAttribute(
            Element elem, String attName, boolean mandatory, int defaultValue) throws SAXException {
        String attValue = getAttribute(elem, attName, mandatory);

        if (!mandatory && (attValue == null)) {
            return defaultValue;
        }

        try {
            return Integer.parseInt(attValue);
        } catch (Exception ex) {
            if (mandatory) {
                throw new SAXException(
                        attName
                                + " attribute of element "
                                + elem.getNodeName()
                                + " must be an integer, but it's '"
                                + attValue
                                + "'");
            } else {
                return defaultValue;
            }
        }
    }

