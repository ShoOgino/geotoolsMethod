    /**
     * Check that the polygon is not overlapping the line.
     *
     * @param layers Map of SimpleFeatureSource by "dataStoreID:typeName"
     * @param envelope The bounding box that encloses the unvalidated data
     * @param results Used to coallate results information
     * @return <code>true</code> if all the features pass this test.
     */
    public boolean validate(
            Map<String, SimpleFeatureSource> layers, Envelope envelope, ValidationResults results)
            throws Exception {
        SimpleFeatureSource polySource1 = layers.get(getPolygonTypeRef());
        SimpleFeatureSource polySource2 = layers.get(getRestrictedLineTypeRef());

        Object[] poly1 = polySource1.getFeatures().toArray();
        Object[] poly2 = polySource2.getFeatures().toArray();

        if (!envelope.contains(polySource1.getBounds())) {
            results.error(
                    (SimpleFeature) poly1[0],
                    "Polygon Feature Source is not contained within the Envelope provided.");

            return false;
        }

        if (!envelope.contains(polySource2.getBounds())) {
            results.error(
                    (SimpleFeature) poly1[0],
                    "Restricted Polygon Feature Source is not contained within the Envelope provided.");

            return false;
        }

        for (Object value : poly1) {
            SimpleFeature tmp = (SimpleFeature) value;
            Geometry gt = (Geometry) tmp.getDefaultGeometry();

            for (Object o : poly2) {
                SimpleFeature tmp2 = (SimpleFeature) o;
                Geometry gt2 = (Geometry) tmp2.getDefaultGeometry();

                if (gt2.touches(gt)) {
                    return false;
                }
            }
        }

        return true;
    }

