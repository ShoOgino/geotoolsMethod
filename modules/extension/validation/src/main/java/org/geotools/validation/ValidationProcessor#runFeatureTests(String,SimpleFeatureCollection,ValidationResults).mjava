    /**
     * runFeatureTests Change: Uses a SimpleFeatureIterator now instead of a FeatureCollection.
     *
     * <p>Performs a lookup on the FeatureTypeInfo name to determine what FeatureTests need to be
     * performed. Once these tests are gathered, they are run on each feature in the
     * FeatureCollection. The first validation test lookup checks to see if there are any
     * validations that are to be performed on every FeatureTypeInfo. An example of this could be an
     * isValid() test on all geometries in all FeatureTypes. Once those tests have been gathered, a
     * lookup is performed on the TypeName of the FeatureTypeInfo to check for specific
     * FeatureTypeInfo validation tests. A list of validation tests is returned from each lookup, if
     * any exist. When all the validation tests have been gathered, each test is iterated through
     * then run on each Feature, with the ValidationResults coming along for the ride, collecting
     * error information. Parameter "SimpleFeatureCollection collection" should be changed later to
     * take in a SimpleFeatureSource so not everything is loaded into memory.
     *
     * @param dsID data Store id.
     * @param collection The collection of features, of a particulare FeatureTypeInfo "type", that
     *     are to be validated.
     * @param results Storage for the results of the validation tests.
     * @throws Exception FeatureValidations throw Exceptions
     */
    public void runFeatureTests(
            String dsID, SimpleFeatureCollection collection, ValidationResults results)
            throws Exception {
        SimpleFeatureType type = collection.getSchema();

        // check for any tests that are to be performed on ALL features
        List<FeatureValidation> tests = featureLookup.get(ANYTYPENAME);

        // check for any FeatureTypeInfo specific tests
        String typeRef = dsID + ":" + type.getTypeName();
        List<FeatureValidation> FT_tests = featureLookup.get(typeRef);

        // append featureType specific tests to the list of tests
        if (FT_tests != null) {
            if (tests != null) {
                Iterator<FeatureValidation> it = FT_tests.iterator();
                while (it.hasNext()) tests.add(it.next());
            } else {
                tests = FT_tests;
            }
        }

        if (tests != null) // if we found some tests to be performed on this FeatureTypeInfo
        {
            SimpleFeatureIterator features = collection.features();
            try {
                while (features.hasNext()) // iterate through each feature and run the test on it
                {
                    SimpleFeature feature = (SimpleFeature) features.next();

                    // for each test that is to be performed on this feature
                    for (int i = 0; i < tests.size(); i++) {
                        FeatureValidation validator = (FeatureValidation) tests.get(i);
                        results.setValidation(validator);
                        try {
                            validator.validate(feature, type, results);
                        } catch (Throwable e) {
                            results.error(feature, e.getMessage());
                        }
                    }
                }
            } finally {
                features.close();
            }
        }
    }

