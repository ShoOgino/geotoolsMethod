    /**
     * getDoubleAttribute purpose.
     * 
     * <p>
     * Used to help with XML manipulations. Returns the first child integer
     * attribute of the specified name.  An exception occurs when the node is
     * required and not found.
     * </p>
     *
     * @param elem The root element to look for children in.
     * @param attName The name of the attribute to look for.
     * @param mandatory true when an exception should be thrown if the
     *        attribute element does not exist.
     *
     * @return The double value if the attribute was found, the NaN otherwise.
     *
     * @throws SAXException When a attribute element is required and not found.
     */
    public static double getDoubleAttribute(Element elem, String attName,
        boolean mandatory) throws SAXException {
        String value = getAttribute(elem, attName, mandatory);

        double d = Double.NaN;

        if (value != null) {
            try {
                d = Double.parseDouble(value);
            } catch (NumberFormatException ex) {
                throw new SAXException("Illegal attribute value for " + attName
                    + " in element " + elem.getNodeName()
                    + ". Expected double, but was " + value);
            }
        }

        return d;
    }

