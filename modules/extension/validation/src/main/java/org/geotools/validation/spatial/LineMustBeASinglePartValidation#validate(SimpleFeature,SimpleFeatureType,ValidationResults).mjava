    /**
     * Override validate.
     *
     * <p>Tests to see if a LineString is made of only one segment, meaning it only has two points.
     * If the LineString has more than two points, the test fails.
     *
     * @param feature The Feature to be validated
     * @param type The FeatureTypeInfo of the feature
     * @param results The storage for error messages.
     * @return True if the feature is simple (one segment).
     * @see org.geotools.validation.FeatureValidation#validate(org.geotools.feature.Feature,
     *     org.geotools.feature.FeatureTypeInfo, org.geotools.validation.ValidationResults)
     */
    public boolean validate(
            SimpleFeature feature, SimpleFeatureType type, ValidationResults results) {
        LOGGER.setLevel(Level.ALL);

        LineString line = null;
        try {
            line = getDefaultLineString(feature);
        } catch (ClassCastException wrongType) {
            results.warning(feature, wrongType.getMessage());
            return true;
        }
        if (line == null) {
            // Geometry was null - user can check with nullZero
            return true;
        }
        final int NUMBER_OF_POINTS = line.getNumPoints();
        if (NUMBER_OF_POINTS < 2) {
            results.error(feature, "LineString contains too few points");
            return false;
        } else if (NUMBER_OF_POINTS > 2) {
            // log the error and return
            String message =
                    "LineString is not single part (contains "
                            + (NUMBER_OF_POINTS - 1)
                            + " segments)";
            results.error(feature, message);
            LOGGER.log(Level.FINEST, getName() + "(" + feature.getID() + "):" + message);

            return false;
        }
        LOGGER.log(Level.FINEST, getName() + "(" + feature.getID() + ") passed");
        return true;
    }

