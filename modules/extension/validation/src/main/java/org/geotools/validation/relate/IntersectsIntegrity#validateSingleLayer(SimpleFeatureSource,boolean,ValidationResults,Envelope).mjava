    /**
     * <b>validateSingleLayer Purpose:</b> <br>
     *
     * <p>This validation tests for a geometry that intersects with itself. Uses JTS'
     * Geometry.intersects(Geometry) method. <b>Description:</b><br>
     *
     * <p>The function filters the SimpleFeatureSource using the given bounding box. It creates
     * iterators over the filtered FeatureSource. It calls intersects() using the geometries in the
     * SimpleFeatureSource layer. Tests the results of the method call against the given expected
     * results. Returns true if the returned results and the expected results are true, false
     * otherwise. * Author: bowens<br>
     * Created on: Apr 27, 2004<br>
     *
     * @param featureSourceA - the SimpleFeatureSource to pull the original geometries from.
     * @param expected - boolean value representing the user's expected outcome of the test
     * @param results - ValidationResults
     * @param bBox - Envelope - the bounding box within which to perform the intersects()
     * @return boolean result of the test
     * @throws Exception - IOException if iterators improperly closed
     */
    private boolean validateSingleLayer(
            SimpleFeatureSource featureSourceA,
            boolean expected,
            ValidationResults results,
            Envelope bBox)
            throws Exception {
        boolean success = true;

        Filter filter = null;

        // JD: fix this!!
        // filter = (Filter) ff.createBBoxExpression(bBox);

        SimpleFeatureCollection featureCollection = featureSourceA.getFeatures(filter);

        SimpleFeatureIterator fr1 = null;
        SimpleFeatureIterator fr2 = null;
        try {
            fr1 = featureCollection.features();

            if (fr1 == null) return false;

            while (fr1.hasNext()) {
                SimpleFeature f1 = fr1.next();
                Geometry g1 = (Geometry) f1.getDefaultGeometry();
                fr2 = featureCollection.features();

                while (fr2 != null && fr2.hasNext()) {
                    SimpleFeature f2 = fr2.next();
                    Geometry g2 = (Geometry) f2.getDefaultGeometry();
                    if (!f1.getID().equals(f2.getID())) // if they are the same feature, move onto
                    // the next one
                    {
                        if (g1.intersects(g2) != expected) {
                            results.error(
                                    f1,
                                    ((Geometry) f1.getDefaultGeometry()).getGeometryType()
                                            + " "
                                            + getGeomTypeRefA()
                                            + " intersects "
                                            + getGeomTypeRefA()
                                            + "("
                                            + f2.getID()
                                            + "), Result was not "
                                            + expected);
                            success = false;
                        }
                    }
                }
            }
        } finally {
            fr1.close();
            if (fr2 != null) fr2.close();
        }

        return success;
    }

