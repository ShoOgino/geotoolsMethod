    /**
     * Ensure Line does not have a psuedo-node.
     * 
     * <p></p>
     *
     * @param layers a HashMap of key="TypeName" value="FeatureSource"
     * @param envelope The bounding box of modified features
     * @param results Storage for the error and warning messages
     *
     * @return True if no features intersect. If they do then the validation
     *         failed.
     *
     * @throws Exception DOCUMENT ME!
     *
     * @see org.geotools.validation.IntegrityValidation#validate(java.util.Map,
     *      com.vividsolutions.jts.geom.Envelope,
     *      org.geotools.validation.ValidationResults)
     */
    public boolean validate(Map layers, Envelope envelope,
        ValidationResults results) throws Exception {

    	boolean r = true;
    	
        SimpleFeatureSource fsLine = (SimpleFeatureSource) layers.get(getLineTypeRef());
        SimpleFeatureCollection fcLine = fsLine.getFeatures();
        SimpleFeatureIterator fLine = fcLine.features();
                
        while(fLine.hasNext()){
        	SimpleFeature line = fLine.next();
        	Geometry lineGeom = (Geometry) line.getDefaultGeometry();
        	if(envelope.contains(lineGeom.getEnvelopeInternal())){
        		// 	check for valid comparison
        		if(LineString.class.isAssignableFrom(lineGeom.getClass())){
        			Coordinate[] c = lineGeom.getCoordinates();
        			int i=0;
        			while(i+2<c.length){
        				LineSegment ls1 = new LineSegment(c[i],c[i+1]);
        				LineSegment ls2 = new LineSegment(c[i+1],c[i+2]);
        				double a1 = ls1.angle();
        				double a2 = ls2.angle();
        				if(!((a1-degreesAllowable)<a1 && (a1+degreesAllowable)>a2)){
        					results.error(line,"Atleast one node was too close to the other the perpendicular line between the node's two neighbours.");
							i = c.length;
        				}
        			}
        		}else{
        			results.warning(line,"Invalid type: this feature is not a derivative of a LineString");
        		}
        	}
        }
        return r;
    }

