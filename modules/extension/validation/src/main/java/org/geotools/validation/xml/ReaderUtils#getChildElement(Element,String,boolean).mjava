    /**
     * getChildElement purpose.
     *
     * <p>Used to help with XML manipulations. Returns the first child element of the specified
     * name. An exception occurs when the node is required and not found.
     *
     * @param root The root element to look for children in.
     * @param name The name of the child element to look for.
     * @param mandatory true when an exception should be thrown if the child element does not exist.
     * @return The child element found, null if not found.
     * @throws SAXException When a child element is required and not found.
     */
    public static Element getChildElement(Element root, String name, boolean mandatory)
            throws SAXException {
        Node child = root.getFirstChild();

        while (child != null) {
            if (child.getNodeType() == Node.ELEMENT_NODE) {
                if (name.equals(child.getNodeName())) {
                    return (Element) child;
                }
            }

            child = child.getNextSibling();
        }

        if (mandatory && (child == null)) {
            throw new SAXException(
                    root.getNodeName() + " does not contains a child element named " + name);
        }

        return null;
    }

