    @Override
    public Expression getExpression() throws MBFormatException {
        switch (name) {
            case "-":
                return mathSubtract();
            case "*":
                return mathMultiply();
            case "/":
                return mathDivide();
            case "%":
                return mathRemainder();
            case "^":
                return mathExponent();
            case "+":
                return mathAdd();
            case "acos":
                return mathAcos();
            case "asin":
                return mathAsin();
            case "atan":
                return mathAtan();
            case "cos":
                return mathCos();
            case "e":
                return mathE();
            case "ln":
                return mathLn();
            case "ln2":
                return mathLn2();
            case "log10":
                return mathLog10();
            case "log2":
                return mathLog2();
            case "max":
                return mathMax();
            case "min":
                return mathMin();
            case "pi":
                return mathPi();
            case "sin":
                return mathSin();
            case "sqrt":
                return mathSqrt();
            case "tan":
                return mathTan();
            default:
                throw new MBFormatException(name + " is an unsupported math expression");
        }
    }

