    @Override
    public Function function(Name name, List<Expression> args, Literal fallback) {
        Function f = null;
        if (ZoomLevelFunction.NAME.getFunctionName().equals(name)) {
            f = new ZoomLevelFunction();
        } else if (ExponentialFunction.NAME.getFunctionName().equals(name)) {
            f = new ExponentialFunction();
        } else if (CSSFunction.NAME.getFunctionName().equals(name)) {
            f = new CSSFunction();
        } else if (DefaultIfNullFunction.NAME.getFunctionName().equals(name)) {
            f = new DefaultIfNullFunction();
        } else if (StringTransformFunction.NAME.getFunctionName().equals(name)) {
            f = new StringTransformFunction();
        } else if (ToRgb.NAME.getFunctionName().equals(name)) {
            f = new ToRgb();
        } else if (MapBoxEqualToFunction.NAME.getFunctionName().equals(name)) {
            f = new MapBoxEqualToFunction();
        } else if (MapBoxNotEqualToFunction.NAME.getFunctionName().equals(name)) {
            f = new MapBoxNotEqualToFunction();
        } else if (AllFunction.NAME.getFunctionName().equals(name)) {
            f = new AllFunction();
        } else if (AnyFunction.NAME.getFunctionName().equals(name)) {
            f = new AnyFunction();
        } else if (CaseFunction.NAME.getFunctionName().equals(name)) {
            f = new CaseFunction();
        } else if (CoalesceFunction.NAME.getFunctionName().equals(name)) {
            f = new CoalesceFunction();
        } else if (MatchFunction.NAME.getFunctionName().equals(name)) {
            f = new MatchFunction();
        } else if (ListSizeFunction.NAME.getFunctionName().equals(name)) {
            f = new ListSizeFunction();
        } else if (MapBoxLengthFunction.NAME.getFunctionName().equals(name)) {
            f = new MapBoxLengthFunction();
        } else if (AtFunction.NAME.getFunctionName().equals(name)) {
            f = new AtFunction();
        } else if (GetFunction.NAME.getFunctionName().equals(name)) {
            f = new GetFunction();
        } else if (HasFunction.NAME.getFunctionName().equals(name)) {
            f = new HasFunction();
        } else if (RemainderFunction.NAME.getFunctionName().equals(name)) {
            f = new RemainderFunction();
        } else if (MapBoxTypeOfFunction.NAME.getFunctionName().equals(name)) {
            f = new MapBoxTypeOfFunction();
        } else if (MapBoxTypeFunction.NAME.getFunctionName().equals(name)) {
            f = new MapBoxTypeFunction();
        } else if (ToBoolFunction.NAME.getFunctionName().equals(name)) {
            f = new ToBoolFunction();
        } else if (ToStringFunction.NAME.getFunctionName().equals(name)) {
            f = new ToStringFunction();
        } else if (ToNumberFunction.NAME.getFunctionName().equals(name)) {
            f = new ToNumberFunction();
        } else if (ToColorFunction.NAME.getFunctionName().equals(name)) {
            f = new ToColorFunction();
        } else if (MapBoxAnchorFunction.NAME.getFunctionName().equals(name)) {
            f = new MapBoxAnchorFunction();
        } else if (FontAlternativesFunction.NAME.getFunctionName().equals(name)) {
            f = new FontAlternativesFunction();
        } else if (MapBoxFontBaseNameFunction.NAME.getFunctionName().equals(name)) {
            f = new MapBoxFontBaseNameFunction();
        } else if (MapBoxFontStyleFunction.NAME.getFunctionName().equals(name)) {
            f = new MapBoxFontStyleFunction();
        } else if (MapBoxFontWeightFunction.NAME.getFunctionName().equals(name)) {
            f = new MapBoxFontWeightFunction();
        }

        if (f instanceof FunctionImpl) {
            FunctionImpl fi = (FunctionImpl) f;
            fi.setParameters(args);
            fi.setFallbackValue(fallback);
            return f;
        } else if (f instanceof FunctionExpressionImpl) {
            FunctionExpressionImpl fei = (FunctionExpressionImpl) f;
            fei.setParameters(args);
            fei.setFallbackValue(fallback);
            return f;
        }

        return null;
    }

