    /**
     * Retrieves a property value from the current feature's properties, or from another object if a
     * second argument is provided. Returns null if the requested property is missing. Example:
     * ["get", string]: value ["get", string, object]: value
     *
     * <p>As a note, the mbstyle requires json objects for lookup, and evaluates the object as such.
     *
     * @return lookup map property by bame expression
     */
    public Expression lookupGet() {
        if (json.size() == 2) {
            if (parse.isString(json, 1)) {
                // example: ["get", "propertyName"]
                String propertyName = parse.get(json, 1);
                return ff.property(propertyName);
            } else {
                // example: ["get", key]
                Expression property = parse.string(json, 1);
                return ff.function("property", property);
            }
        }
        if (json.size() == 3) {
            // example: ["get", key, object]
            Expression value = parse.string(json, 1);
            Expression object = parse.string(json, 2);
            return ff.function("get", value, object);
        }
        throw new MBFormatException("Data expression \"get\" requires a maximum of 3 arguments.");
    }

