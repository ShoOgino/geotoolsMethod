    /**
     * Look up a Boolean in the provided {@link JSONObject} at the provided 'tag', or thrown an
     * {@link MBFormatException}, with a fallback if the json is null or contains no such 'tag'.
     *
     * @param json The object in which to look up the Boolean
     * @param name The tag at which to look up the Boolean
     * @param fallback The value to return if the json is null or contains no such 'tag'.
     * @return The Boolean from the object at 'tag', or the fallback value
     */
    public Boolean getBoolean(JSONObject json, String name, Boolean fallback) {
        if (json == null) {
            throw new IllegalArgumentException("json required");
        } else if (name == null) {
            throw new IllegalArgumentException("name required for json object access");
        } else if (!json.containsKey(name) || json.get(name) == null) {
            return fallback;
        } else if (json.get(name) instanceof Boolean) {
            return (Boolean) json.get(name);
        } else {
            throw new MBFormatException(
                    context.getSimpleName() + " requires \"" + name + "\" boolean field");
        }
    }

