    /**
     * Use Recode function to implement {@link FunctionType#CATEGORICAL}.
     *
     * <p>
     *
     * @param input input expression
     * @return recode function
     */
    private Expression colorGenerateRecode(Expression input) {
        List<Expression> parameters = new ArrayList<>();
        parameters.add(input);
        for (Object obj : getStops()) {
            JSONArray entry = parse.jsonArray(obj);
            Object stop = entry.get(0);
            Object value = entry.get(1);
            Expression color = parse.color((String) value); // handles web colors
            if (color == null) {
                throw new MBFormatException(
                        "Could not convert stop " + stop + " color " + value + " into a color");
            }
            parameters.add(ff.literal(stop));
            parameters.add(color);
        }
        return withFallback(
                ff.function("Recode", parameters.toArray(new Expression[parameters.size()])));
    }

