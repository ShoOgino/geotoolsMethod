    @Test
    public void testSymbolFont() throws IOException, ParseException {
        JSONObject jsonObject = parseTestStyle("symbolTextTest.json");
        MBStyle mbStyle = new MBStyle(jsonObject);
        List<MBLayer> layers = mbStyle.layers("test-source");
        assertEquals(1, layers.size());
        assertTrue(layers.get(0) instanceof SymbolMBLayer);
        List<FeatureTypeStyle> fts = layers.get(0).transform(mbStyle);

        assertEquals(1, fts.get(0).rules().size());
        Rule r = fts.get(0).rules().get(0);

        assertEquals(1, r.symbolizers().size());
        Symbolizer symbolizer = r.symbolizers().get(0);
        assertTrue(symbolizer instanceof TextSymbolizer);
        TextSymbolizer tsym = (TextSymbolizer) symbolizer;

        assertEquals(2, tsym.fonts().size());
        List<Expression> family0 = tsym.fonts().get(0).getFamily();
        assertEquals(1, family0.size());
        List<Expression> family1 = tsym.fonts().get(1).getFamily();
        assertEquals(1, family1.size());

        assertEquals(
                ff.function("fontAlternatives", ff.literal("Bitstream Vera Sans")), family0.get(0));
        assertEquals(
                ff.function("fontAlternatives", ff.literal("Other Test Font")), family1.get(0));
    }

