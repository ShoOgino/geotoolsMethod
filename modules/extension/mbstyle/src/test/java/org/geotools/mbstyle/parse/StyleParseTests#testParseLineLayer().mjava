    /** Verify that line layer properties are parsed correctly. */
    @Test
    public void testParseLineLayer() throws IOException, ParseException {
        JSONObject jsonObject = MapboxTestUtils.parseTestStyle("lineStyleTest.json");
        MBStyle s = new MBStyle(jsonObject);
        LineMBLayer l = getSingleLayerOfType(s, LineMBLayer.class);
        assertEquals(LineMBLayer.LineCap.SQUARE, l.getLineCap());
        assertEquals(LineMBLayer.LineJoin.ROUND, l.getLineJoin());
        assertEquals(new Color(0x0099ff), l.getLineColor());
        assertEquals(0.5, l.getLineOpacity());
        assertEquals(LineMBLayer.LineTranslateAnchor.VIEWPORT, l.getLineTranslateAnchor());
        assertThat(l.getLineDasharray(), IsIterableContainingInOrder.contains(5.0, 5.0));
        // line-offset can be either an integer or double.
        assertEquals(4, l.getLineOffset().intValue());
        assertEquals(4.0, l.getLineOffset().doubleValue(), .00001);
        // line-gap-width can be either an integer or double.
        assertNotNull(l.lineTranslateDisplacement());
        Number dispX =
                l.lineTranslateDisplacement().getDisplacementX().evaluate(null, Number.class);
        Number dispY =
                l.lineTranslateDisplacement().getDisplacementY().evaluate(null, Number.class);
        assertEquals(3, dispX.intValue());
        assertEquals(3, dispY.intValue());
        // line-width can be either an integer or double.
        assertEquals(10, l.getLineWidth().intValue());
        assertEquals(10.0, l.getLineWidth().doubleValue(), .00001);
        // line-blur can be either an integer or double.
        assertEquals(2, l.getLineBlur().intValue());
        assertEquals(2.0, l.getLineBlur().doubleValue(), .00001);
    }

