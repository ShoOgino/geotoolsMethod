    /**
     * Tests that a MapBox exponential property function (outputting a numeric value) correctly
     * interpolates values for zoom levels between stops. Tests exponential base == 1 and != 1.
     */
    @Test
    public void propertyStopsNumericInterpolationTest() throws Exception {
        SimpleFeatureType SAMPLE =
                DataUtilities.createType("SAMPLE", "id:\"\",temperature:0.0,location=4326");
        SimpleFeature feature = DataUtilities.createFeature(SAMPLE, "measure1=A|50.0|POINT(0,0)");

        // -------- Test interpolation for base > 1
        String jsonStr =
                "{'type':'exponential', 'base': 1.9, 'property':'temperature', 'stops':[[0,12],[30,24],[70,48]]}";
        MBFunction function = new MBFunction(MapboxTestUtils.object(jsonStr));

        // Assert it is an exponential function with the correct base
        assertTrue(
                "Is a property function",
                EnumSet.of(MBFunction.FunctionCategory.PROPERTY).equals(function.category()));
        assertEquals(MBFunction.FunctionType.EXPONENTIAL, function.getType());
        assertEquals(1.9, function.getBase().doubleValue(), .00001);

        Function fn = (Function) function.numeric();
        Number result = fn.evaluate(feature, Number.class);

        assertTrue("Interpolated value should be above lower stop", result.doubleValue() > 24);
        assertTrue(
                "Interpolated value should be below midpoint (for base > 1)",
                result.doubleValue() < 36);

        // -------- Test interpolation for base < 1
        jsonStr =
                "{'type':'exponential', 'base': 0.1, 'property':'temperature', 'stops':[[0,12],[30,24],[70,48]]}";
        function = new MBFunction(MapboxTestUtils.object(jsonStr));

        // Assert it is an exponential function with the correct base
        assertTrue(
                "Is a property function",
                EnumSet.of(MBFunction.FunctionCategory.PROPERTY).equals(function.category()));
        assertEquals(MBFunction.FunctionType.EXPONENTIAL, function.getType());
        assertEquals(0.1, function.getBase().doubleValue(), .00001);

        fn = (Function) function.numeric();
        result = fn.evaluate(feature, Number.class);

        assertTrue("Interpolated value should be above lower stop", result.doubleValue() > 24);
        assertTrue(
                "Interpolated value should be above midpoint (for base < 1)",
                result.doubleValue() > 36);

        // -------- Test interpolation for base = 1
        jsonStr =
                "{'type':'exponential', 'base': 1.0, 'property':'temperature', 'stops':[[0,12],[30,24],[70,48]]}";
        function = new MBFunction(MapboxTestUtils.object(jsonStr));

        // Assert it is an exponential function with the correct base
        assertTrue(
                "Is a property function",
                EnumSet.of(MBFunction.FunctionCategory.PROPERTY).equals(function.category()));
        assertEquals(MBFunction.FunctionType.EXPONENTIAL, function.getType());
        assertEquals(1.0, function.getBase().doubleValue(), .00001);

        fn = (Function) function.numeric();
        result = fn.evaluate(feature, Number.class);

        assertTrue("Interpolated value should be above lower stop", result.doubleValue() > 24);
        assertEquals(
                "Interpolated value should = midpoint (for base = 1)",
                result.doubleValue(),
                36.0,
                .0001);
    }

