    /**
     * Look up an envelope for the provided CoordianteReferenceSystem.
     * <p>
     * Please note that the lookup is preformed based on the SRS Name of the provided
     * CRS which is assumed to be one of its identifiers.
     * </p>
     * This method returns the first envelope found; this may not be valid for
     * sparse data sets that indicate data location using multiple envelopes for
     * a provided CRS.
     * 
     * @param crs
     * @return GeneralEnvelope matching the provided crs; or null if unavaialble.
     */
    public GeneralEnvelope getEnvelope(CoordinateReferenceSystem crs) {
        if( crs == null ){
            return null;
        }
        // Check the cache!
        GeneralEnvelope found = (GeneralEnvelope) envelopeCache.get(crs);
        if (found != null){
            return found;
        }      
        Collection<Object> identifiers = new ArrayList<Object>();
        identifiers.addAll( crs.getIdentifiers() );
        if (crs == DefaultGeographicCRS.WGS84 || crs == DefaultGeographicCRS.WGS84_3D) {
            identifiers.add( "EPSG:4326" );
        }
        for (Object identifier : identifiers ) {
            String srsName = identifier.toString();
            
            CRSEnvelope tempBBox = null;
            Layer layer = this;

            // Locate an exact bounding box if we can
            Map<String, CRSEnvelope> boxes = layer.getBoundingBoxes(); // extents for layer and parents
            tempBBox = (CRSEnvelope) boxes.get(srsName);

            // Otherwise, locate a LatLon bounding box ... if applicable
            if (tempBBox == null && ("EPSG:4326".equals(srsName.toUpperCase()))) {
                CRSEnvelope latLonBBox = null;

                layer = this;
                while (latLonBBox == null && layer != null) {
                    latLonBBox = layer.getLatLonBoundingBox();
                    if (latLonBBox != null) {
                        try {
                            new GeneralEnvelope(new double[] { latLonBBox.getMinX(),
                                    latLonBBox.getMinY() }, new double[] { latLonBBox.getMaxX(),
                                    latLonBBox.getMaxY() });
                            break;
                        } catch (IllegalArgumentException e) {
                            // TODO LOG here
                            // log("Layer "+layer.getName()+" has invalid bbox declared: "+tempBbox.toString());
                            latLonBBox = null;
                        }
                    }
                    layer = layer.getParent();
                }

                if (latLonBBox == null) {
                    // TODO could convert another bbox to latlon?
                    tempBBox = new CRSEnvelope("EPSG:4326", -180, -90, 180, 90);
                } else {
                    tempBBox = new CRSEnvelope("EPSG:4326", latLonBBox.getMinX(), latLonBBox
                            .getMinY(), latLonBBox.getMaxX(), latLonBBox.getMaxY());
                }
            }

            if (tempBBox == null) {
                // Haven't found a bbox in the requested CRS. Attempt to transform another bbox

                String epsg = null;
                if (getLatLonBoundingBox() != null) {
                    CRSEnvelope latLonBBox = getLatLonBoundingBox();
                    tempBBox = new CRSEnvelope("EPSG:4326", latLonBBox.getMinX(), latLonBBox
                            .getMinY(), latLonBBox.getMaxX(), latLonBBox.getMaxY());
                    epsg = "EPSG:4326";
                }

                if (tempBBox == null && getBoundingBoxes() != null && getBoundingBoxes().size() > 0) {
                    tempBBox = (CRSEnvelope) getBoundingBoxes().values().iterator().next();
                    epsg = tempBBox.getEPSGCode();
                }

                if (tempBBox == null) {
                    continue;
                }

                GeneralEnvelope env = new GeneralEnvelope(new double[] { tempBBox.getMinX(),
                        tempBBox.getMinY() },
                        new double[] { tempBBox.getMaxX(), tempBBox.getMaxY() });

                CoordinateReferenceSystem fromCRS = null;
                try {
                    fromCRS = CRS.decode(epsg);

                    ReferencedEnvelope oldEnv = new ReferencedEnvelope(env.getMinimum(0), env
                            .getMaximum(0), env.getMinimum(1), env.getMaximum(1), fromCRS);
                    ReferencedEnvelope newEnv = oldEnv.transform(crs, true);

                    env = new GeneralEnvelope(new double[] { newEnv.getMinimum(0),
                            newEnv.getMinimum(1) }, new double[] { newEnv.getMaximum(0),
                            newEnv.getMaximum(1) });
                    env.setCoordinateReferenceSystem(crs);

                    // success!!
                    envelopeCache.put(crs, env);
                    return env;

                } catch (NoSuchAuthorityCodeException e) {
                    // TODO Catch e
                } catch (FactoryException e) {
                    // TODO Catch e
                } catch (MismatchedDimensionException e) {
                    // TODO Catch e
                } catch (TransformException e) {
                    // TODO Catch e
                }
            }

            // TODO Attempt to figure out the valid area of the CRS and use that.

            if (tempBBox != null) {
                GeneralEnvelope env = new GeneralEnvelope(new double[] { tempBBox.getMinX(),
                        tempBBox.getMinY() },
                        new double[] { tempBBox.getMaxX(), tempBBox.getMaxY() });
                env.setCoordinateReferenceSystem(crs);
                return env;
            }

        }
        return null;
    }

