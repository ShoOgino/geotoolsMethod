    /**
     * Look up an envelope for the provided CoordianteReferenceSystem.
     * <p>
     * Please note that the lookup is performed based on the SRS Name of the provided
     * CRS which is assumed to be one of its identifiers.
     * </p>
     * This method returns the first envelope found; this may not be valid for
     * sparse data sets that indicate data location using multiple envelopes for
     * a provided CRS.
     * 
     * @param crs
     * @return GeneralEnvelope matching the provided crs; or null if unavailable.
     */
    public GeneralEnvelope getEnvelope(CoordinateReferenceSystem crs) {
        if( crs == null ){
            return null;
        }
        // Check the cache!
        GeneralEnvelope found = (GeneralEnvelope) envelopeCache.get(crs);
        if (found != null){
            return found;
        }
        Collection<String> identifiers = new ArrayList<String>();
        for( ReferenceIdentifier identifier : crs.getIdentifiers() ){
            String srsName = identifier.toString();
            identifiers.add( srsName );
            if( srsName.startsWith("EPSG:")){
                String urn = srsName.replace("EPSG:", "urn:ogc:def:crs:EPSG::");
                identifiers.add( urn );
            }
        }
        if (crs == DefaultGeographicCRS.WGS84 || crs == DefaultGeographicCRS.WGS84_3D) {
            identifiers.add( "CRS:84" );
        }
        // first pass look for an exact match
        CRSEnvelope tempBBox = null;
        for (String srsName : identifiers ) {
            // Locate an exact bounding box if we can (searches all bounding boxes associated with layer)
            Map<String, CRSEnvelope> boxes = Layer.this.getBoundingBoxes(); // extents for layer and parents
            tempBBox = (CRSEnvelope) boxes.get(srsName);
            if( tempBBox != null ){
                break;
            }
            // Otherwise, locate a LatLon bounding box ... if applicable
            if ("CRS:84".equals(srsName.toUpperCase()) || "EPSG:4326".equals(srsName.toUpperCase())){
                tempBBox = Layer.this.getLatLonBoundingBox(); // checks parents
                break;
            }
        }
        // second pass just get a latLonBoundingox (and we will transform it)
        if( tempBBox == null ){
            tempBBox = Layer.this.getLatLonBoundingBox(); // checks parents
        }
        // TODO Attempt to figure out the valid area of the CRS and use that.
        
        // last attempt grab the first thing (and we will transform it)
        if (tempBBox == null && getBoundingBoxes() != null && getBoundingBoxes().size() > 0) {
            tempBBox = (CRSEnvelope) getBoundingBoxes().values().iterator().next();
        }
        
        if (tempBBox != null) {
            GeneralEnvelope env;
            try {
                Envelope fixed = CRS.transform( tempBBox, crs );
                env = new GeneralEnvelope( fixed );
            } catch (TransformException e) {
                env = new GeneralEnvelope(new double[] { tempBBox.getMinX(),tempBBox.getMinY() },
                        new double[] { tempBBox.getMaxX(), tempBBox.getMaxY() });
                env.setCoordinateReferenceSystem(crs);
            }
            // success!!
            envelopeCache.put(crs, env);
            return env;
        }
        return null;
    }

