        /*
         * (non-Javadoc)
         *
         * @see org.geotools.xml.schema.Type#getValue(org.geotools.xml.schema.Element,
         *      org.geotools.xml.schema.ElementValue[], org.xml.sax.Attributes,
         *      java.util.Map)
         */
        @Override
        public Object getValue(Element element, ElementValue[] value, Attributes attrs, Map hints)
                throws SAXException, OperationNotSupportedException {

            List<Layer> childLayers = new ArrayList<>();

            Layer layer = new Layer();

            Set<String> crs = new TreeSet<>();
            Map<String, CRSEnvelope> boundingBoxes = new HashMap<>();
            Map<String, Dimension> dimensions = new HashMap<>();
            Map<String, Extent> extents = new HashMap<>();
            List<StyleImpl> styles = new ArrayList<>();
            List<MetadataURL> metadataURLS = new ArrayList<>();

            for (ElementValue elementValue : value) {
                if (sameName(elems[0], elementValue)) {
                    layer.setName((String) elementValue.getValue());
                }

                if (sameName(elems[1], elementValue)) {
                    layer.setTitle((String) elementValue.getValue());
                }

                if (sameName(elems[2], elementValue)) {
                    layer.set_abstract((String) elementValue.getValue());
                }
                if (sameName(elems[3], elementValue)) {
                    layer.setKeywords((String[]) elementValue.getValue());
                }

                if (sameName(elems[4], elementValue) || sameName(elems[19], elementValue)) {
                    String[] crss = ((String) elementValue.getValue()).split(" ");
                    for (String s : crss) {
                        crs.add(s.toUpperCase());
                    }
                }

                if (sameName(elems[5], elementValue) || sameName(elems[20], elementValue)) {
                    layer.setLatLonBoundingBox((CRSEnvelope) elementValue.getValue());
                }

                if (sameName(elems[6], elementValue)) {
                    CRSEnvelope bbox = (CRSEnvelope) elementValue.getValue();

                    boundingBoxes.put(bbox.getEPSGCode(), bbox);
                }

                if (sameName(elems[7], elementValue)) {
                    Dimension dim = (Dimension) elementValue.getValue();
                    dimensions.put(dim.getName(), dim);
                }
                if (sameName(elems[8], elementValue)) {
                    Extent ext = (Extent) elementValue.getValue();
                    extents.put(ext.getName(), ext);
                    // NOTE: dim might be null here, because at this point a sublayer without
                    // dimension tags may not yet have inherited parent dimensions.
                    // but if we have a dimension, we use it
                    Dimension dim = dimensions.get(ext.getName());
                    if (dim != null) {
                        dim.setExtent(ext);
                    }
                }
                if (sameName(elems[9], elementValue)) {
                    layer.setAttribution((Attribution) elementValue.getValue());
                }
                // if (sameName(elems[10], value[i])) {
                // //TODO authorityURL ignored
                // }
                // if (sameName(elems[11], value[i])) {
                // //TODO identifier ignored
                // }
                if (sameName(elems[12], elementValue)) {
                    MetadataURL metadataUrl = (MetadataURL) elementValue.getValue();
                    metadataURLS.add(metadataUrl);
                }
                // if (sameName(elems[13], value[i])) {
                // //TODO dataURL ignored
                // }
                // if (sameName(elems[14], value[i])) {
                // //TODO featureLIstURL ignored
                // }

                if (sameName(elems[15], elementValue)) {
                    styles.add((StyleImpl) elementValue.getValue());
                }
                if (sameName(elems[16], elementValue)) {
                    Double min = (Double) elementValue.getValue();
                    layer.setScaleDenominatorMin(min.doubleValue());
                }
                if (sameName(elems[17], elementValue)) {
                    Double max = (Double) elementValue.getValue();
                    layer.setScaleDenominatorMax(max.doubleValue());
                }
                if (sameName(elems[18], elementValue)) {
                    Layer childLayer = (Layer) elementValue.getValue();
                    childLayer.setParent(layer);
                    childLayers.add(childLayer);
                }
                if (sameName(elems[21], elementValue)) {
                    double[] scaleHint = (double[]) elementValue.getValue();

                    layer.setScaleDenominatorMin(scaleHint[0]);
                    layer.setScaleDenominatorMax(scaleHint[1]);
                }
            }

            layer.setSrs(crs);
            layer.setBoundingBoxes(boundingBoxes);
            layer.setDimensions(dimensions);
            layer.setExtents(extents);
            layer.setStyles(styles);
            layer.setMetadataURL(metadataURLS);

            layer.setChildren(childLayers.toArray(new Layer[childLayers.size()]));

            // Attributes -- only do queryable for now

            // Do not set queryable unless it is explicitly specified
            String queryable = attrs.getValue("queryable");
            if (queryable != null) {
                if ("1".equals(queryable) || "true".equalsIgnoreCase(queryable)) {
                    layer.setQueryable(true);
                } else if ("0".equals(queryable) || "false".equalsIgnoreCase(queryable)) {
                    layer.setQueryable(false);
                }
            }
            String cascaded = attrs.getValue("cascaded");
            int cascadedValue = 0;
            if (cascaded != null) {
                try {
                    cascadedValue = Integer.parseInt(cascaded);
                } catch (NumberFormatException e) {
                    // ignore
                }
            }
            layer.setCascaded(cascadedValue);
            return layer;
        }

