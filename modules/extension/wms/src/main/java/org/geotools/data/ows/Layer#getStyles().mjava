    /**
     * Accumulates all of the styles specified for this layer and all styles inherited from its
     * ancestors. No duplicates are returned.
     * 
     * The List that is returned is of type List<org.opengis.layer.Style>. Before 2.2-RC0 it was of
     * type List<java.lang.String>.
     * 
     * @return List of all styles for this layer and its ancestors
     */
    public List<StyleImpl> getStyles() {
        ArrayList<StyleImpl> allStyles = new ArrayList<StyleImpl>();
        // Get my ancestor's styles
        Layer parent = this.getParent();
        if (parent != null) {
            List<StyleImpl> parentStyles = parent.getStyles();
            if (parentStyles != null) // got something, add to accumulation
                allStyles.addAll(parentStyles);
        }
        // Now add my styles, if any
        // Brute force check for duplicates. The spec says duplicates are not allowed:
        // (para 7.1.4.5.4) "A child shall not redefine a Style with the same Name as one
        // inherited from a parent. A child may define a new Style with a new Name that is
        // not available for the parent Layer."
        if ((styles != null) && !styles.isEmpty()) {
            for (Iterator<StyleImpl> iter = styles.iterator(); iter.hasNext();) {
                StyleImpl style = iter.next();
                if (!allStyles.contains(style))
                    allStyles.add(style);
            }
        }

        // May return an empty list, but that is OK since spec says 0 or more styles may be
        // specified
        return allStyles;
    }

