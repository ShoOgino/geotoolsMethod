    public void testGetCapabilities() throws Exception {
        // pointing to a file that has an invalid schema location reference
        File getCaps = TestData.file(this, "mapserverSchemaExtension.xml");
        URL getCapsURL = getCaps.toURI().toURL();

        // disable schema validation to match the WebMapServer behavior (the caps documented
        // tested is indeed not schema valid)
        Map hints = new HashMap();
        hints.put(DocumentHandler.DEFAULT_NAMESPACE_HINT_KEY, WMSSchema.getInstance());
        hints.put(DocumentFactory.VALIDATION_HINT, Boolean.FALSE);
        // used to blow up here due to the invalid schema reference (port -1 was chosen as a suitably
        // invalid local url for tests, the real world case was an actual server that would never respond
        // to the GetSchemaExtension request, forcing it to time out
        Object object = DocumentFactory.getInstance(getCapsURL.openStream(), hints, Level.WARNING);

        assertTrue("Capabilities failed to parse", object instanceof WMSCapabilities);

        WMSCapabilities capabilities = (WMSCapabilities) object;

        Layer Layer_with_Abstract_in_Style = (Layer) capabilities.getLayerList().get(1);
        assertEquals(Layer_with_Abstract_in_Style.getName(), "states");
        assertEquals(Layer_with_Abstract_in_Style.getTitle(), "states");
    }

