    private static Rule createRuleExplicit(
            ExplicitClassifier explicit,
            Expression expression,
            Set value,
            GeometryDescriptor geometryAttrType,
            int i,
            int elseMode,
            Color[] colors,
            double opacity,
            Stroke defaultStroke) {
        // create a sub filter for each unique value, and merge them
        // into the logic filter
        Object[] items = value.toArray();
        Arrays.sort(items);

        String title = "";
        List<Filter> filters = new ArrayList<Filter>();
        for (int item = 0; item < items.length; item++) {

            Filter filter;
            if (items[item] == null) {
                filter = ff.isNull(expression);
            } else {
                filter = ff.equals(expression, ff.literal(items[item]));
            }

            // add to the title
            if (items[item] == null) {
                title += "NULL";
            } else {
                title += items[item].toString();
            }

            if ((item + 1) != items.length) {
                title += ", ";
            }

            filters.add(filter);
        }

        // create the symbolizer
        Symbolizer symb =
                createSymbolizer(
                        geometryAttrType, getColor(elseMode, colors, i), opacity, defaultStroke);

        // create the rule
        Rule rule = sb.createRule(symb);

        if (filters.size() == 1) {
            rule.setFilter(filters.get(0));
        } else if (filters.size() > 1) {
            rule.setFilter(ff.or(filters));
        }

        rule.getDescription().setTitle(title);
        rule.setName(getRuleName(i + 1));

        return rule;
    }

