    /**
     * Generates an array of palette names for palettes which have at least x classes and at most y
     * classes.
     *
     * @param minClasses x
     * @param maxClasses y
     * @return A string array of palette names filtered by number of classes.
     */
    public String[] getPaletteNames(int minClasses, int maxClasses) {
        Object[] keys = palettes.keySet().toArray();
        Set<String> paletteSet = new HashSet<>();

        // generate the set of palette names
        for (Object key : keys) {
            BrewerPalette thisPalette = palettes.get(key);
            int numColors = thisPalette.getMaxColors();

            if ((numColors >= minClasses) && (numColors <= maxClasses)) {
                paletteSet.add(thisPalette.getName());
            }
        }

        // convert set to string array
        String[] paletteList = new String[paletteSet.size()];
        Object[] paletteObjList = paletteSet.toArray();

        for (int i = 0; i < paletteSet.size(); i++) {
            paletteList[i] = (String) paletteObjList[i];
        }

        return paletteList;
    }

