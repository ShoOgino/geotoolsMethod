    /**
     * Creates a symbolizer for the given geometry
     *
     * @param sb
     * @param geometryAttrType
     * @param color
     * @param opacity
     * @param defaultStroke stroke used for borders
     */
    private static Symbolizer createSymbolizer(
            GeometryDescriptor geometryAttrType,
            Color color,
            double opacity,
            Stroke defaultStroke) {
        Symbolizer symb;

        if (defaultStroke == null) {
            defaultStroke = sb.createStroke(color, 1, opacity);
        }

        if ((geometryAttrType.getType().getBinding() == MultiPolygon.class)
                || (geometryAttrType.getType().getBinding() == Polygon.class)) {
            Fill fill = sb.createFill(color, opacity);
            symb = sb.createPolygonSymbolizer(defaultStroke, fill);
        } else if (geometryAttrType.getType().getBinding() == LineString.class) {
            symb = sb.createLineSymbolizer(color);
        } else if ((geometryAttrType.getType().getBinding() == MultiPoint.class)
                || (geometryAttrType.getType().getBinding() == Point.class)) {
            Fill fill = sb.createFill(color, opacity);
            Mark square = sb.createMark(StyleBuilder.MARK_SQUARE, fill, defaultStroke);
            Graphic graphic = sb.createGraphic(null, square, null); // , 1, 4, 0);
            symb = sb.createPointSymbolizer(graphic);

            // TODO: handle Text and Raster
        } else {
            // we don't know what the heck you are, *snip snip* you're a line.
            symb = sb.createLineSymbolizer(color);
        }

        return symb;
    }

