    @Test
    public void testLineOptimizedLabels() {
        RuleBuilder rb = new RuleBuilder();
        rb.line().stroke().color(Color.RED);
        TextSymbolizerBuilder tsb = rb.text().label("name").option("followLine", true)
                .option("maxAngleDelta", 90).option("maxDisplacement", 400).option("repeat", 150);
        tsb.linePlacement();
        tsb.fill().color(Color.BLACK);
        Style style = rb.buildStyle();
        // print(style);

        // round up the elements and check the basics
        StyleCollector collector = new StyleCollector();
        style.accept(collector);
        assertEquals(1, collector.featureTypeStyles.size());
        assertEquals(1, collector.rules.size());
        assertEquals(2, collector.symbolizers.size());

        TextSymbolizer ts = (TextSymbolizer) collector.symbolizers.get(1);
        assertEquals(ff.property("name"), ts.getLabel());
        assertEquals(Color.BLACK, ts.getFill().getColor().evaluate(null, Color.class));
        assertEquals(4, ts.getOptions().size());

        // placement
        assertTrue(ts.getLabelPlacement() instanceof LinePlacement);
    }

