    /** Execute the GetMap request */
    GridCoverage2D getMap(ReferencedEnvelope requestedEnvelope, int width, int height, String time)
            throws IOException {

        // build the request
        ReferencedEnvelope gridEnvelope = initTileRequest(requestedEnvelope, width, height, time);

        // issue the request and wrap response in a grid coverage
        try {
            if (LOGGER.isLoggable(Level.FINE)) {
                LOGGER.log(
                        Level.FINE,
                        "Issuing request: " + getTileRequest().getFinalURL(),
                        new RuntimeException("TRACE!"));
            }

            getTileRequest().setCRS(gridEnvelope.getCoordinateReferenceSystem());
            Set<Tile> responses = wmts.issueRequest(getTileRequest());
            if (responses.isEmpty()) {
                if (LOGGER.isLoggable(Level.FINE))
                    LOGGER.fine("Found 0 tiles in " + requestedEnvelope);
                throw new RuntimeException("No tiles were found in requested extent");
            }
            AffineTransform at = null;
            ReferencedEnvelope global = null;
            for (Tile tile : responses) {
                ReferencedEnvelope extent = tile.getExtent();
                // ensure the extent has EAST_NORTH axis order because otherwise
                // RendererUtilities.worldToScreenTransform will produce
                // incorrect results:
                extent = toEastNorthAxisOrder(extent);

                if (global == null) {
                    global = new ReferencedEnvelope(extent);
                } else {
                    global.expandToInclude(extent);
                }
                BufferedImage bi = tile.getBufferedImage();
                if (at == null) {
                    at =
                            RendererUtilities.worldToScreenTransform(
                                    extent, new Rectangle(bi.getWidth(), bi.getHeight()));
                }
            }
            int imageWidth = (int) Math.round(global.getWidth() * at.getScaleX());
            int imageHeight = (int) Math.abs(Math.round(global.getHeight() * at.getScaleY()));
            BufferedImage image =
                    new BufferedImage(imageWidth, imageHeight, BufferedImage.TYPE_INT_ARGB);

            AffineTransform targetTransform =
                    RendererUtilities.worldToScreenTransform(
                            global, new Rectangle(0, 0, imageWidth, imageHeight));
            renderTiles(responses, image.createGraphics(), requestedEnvelope, targetTransform);

            return gcf.create(layer.getTitle(), image, global);
        } catch (ServiceException | FactoryException | TransformException e) {
            throw new IOException("GetMap failed", e);
        }
    }

