    private org.w3c.dom.Document getKVPCapabilitiesDoc() throws IOException {

        if (cachedGetCapabilities != null) {
            return parseCachedCapabilities();
        }

        HttpClient client = new HttpClient();
        HttpMethod method = new GetMethod(getBaseUrl());
        method.setQueryString("REQUEST=GetCapabilities");
        method.getParams().setParameter(HttpMethodParams.RETRY_HANDLER,
                new DefaultHttpMethodRetryHandler(3, false));
        try {
            // Execute the method.

            int statusCode = client.executeMethod(method);

            if (statusCode != HttpStatus.SC_OK) {
                LOGGER.severe("Method failed: " + method.getStatusLine());
            }

            // Read the response body.
            byte[] responseBody = method.getResponseBody();

            // Deal with the response.
            // Use caution: ensure correct character encoding and is not binary
            // data
            // System.out.println(new String(responseBody,"UTF-8"));

            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
            dbf.setNamespaceAware(true);
            DocumentBuilder db = dbf.newDocumentBuilder();

            org.w3c.dom.Document doc = db.parse(new ByteArrayInputStream(responseBody));
            return doc;
        } catch (HttpException e) {
            throw new IOException("Error handling getCapabilities document", e);
        } catch (IOException | ParserConfigurationException | SAXException e) {
            throw new IOException("Error handling getCapabilities document", e);
        } finally {
            // Release the connection.
            method.releaseConnection();
        }
    }

