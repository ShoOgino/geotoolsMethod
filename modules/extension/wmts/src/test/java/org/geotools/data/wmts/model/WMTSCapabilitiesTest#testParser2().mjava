    public void testParser2() throws Exception {
        WMTSCapabilities capabilities = createCapabilities("admin_ch.getcapa.xml");
        try {
            assertEquals("1.0.0", capabilities.getVersion());

            WMTSService service = (WMTSService) capabilities.getService();
            assertEquals("OGC WMTS", service.getName());
            assertEquals("WMTS BGDI", service.getTitle());

            String[] keywordList = service.getKeywordList();
            assertNotNull(keywordList);
            assertEquals("Switzerland", keywordList[0]);
            assertEquals("Web Map Service", keywordList[1]);

            WMTSRequest request = capabilities.getRequest();

            OperationType getTile = request.getGetTile();
            assertNotNull(getTile);

            assertEquals(306, capabilities.getLayerList().size());

            List<WMTSLayer> layers = capabilities.getLayerList();
            WMTSLayer l0 = layers.get(0);

            assertEquals("ch.are.agglomerationen_isolierte_staedte", l0.getName());
            assertNull(l0.getParent());
            assertTrue(l0.getSrs().contains("urn:ogc:def:crs:EPSG::2056")); // case
            // should
            // not
            // matter
            assertTrue(l0.getSrs().contains("EPSG:2056")); // case should not
            // matter

            assertNotNull("Missing dimensions", l0.getDimensions());
            assertEquals("Bad dimensions size", 1, l0.getDimensions().size());
            String dimName = l0.getDimensions().keySet().iterator().next();
            assertTrue(
                    "Bad dimension name (Time!=" + dimName + ")", "Time".equalsIgnoreCase(dimName));

            assertNotNull(l0.getTileMatrixLinks());
            assertEquals(1, l0.getTileMatrixLinks().keySet().size());
            assertEquals("2056_26", l0.getTileMatrixLinks().keySet().iterator().next());
            assertEquals(
                    "2056_26", l0.getTileMatrixLinks().values().iterator().next().getIdentifier());
            assertEquals(0, l0.getTileMatrixLinks().values().iterator().next().getLimits().size());

            assertEquals(12, capabilities.getMatrixSets().size());
            assertEquals("2056_17", capabilities.getMatrixSets().get(0).getIdentifier());
            assertEquals(18, capabilities.getMatrixSets().get(0).getMatrices().size());
            assertEquals(
                    14285750.5715,
                    capabilities.getMatrixSets().get(0).getMatrices().get(0).getDenominator());

            CRSEnvelope bbox = (CRSEnvelope) layers.get(1).getBoundingBoxes().get("EPSG:4326");
            assertNotNull(bbox);

        } catch (Exception e) {
            e.printStackTrace();
            if ((e.getMessage() != null) && e.getMessage().indexOf("timed out") > 0) {
                // System.err.println("Unable to test - timed out: " + e);
            } else {
                throw (e);
            }
        }
    }

