    /**
     * Given a circle defined by the 3 points, creates a linearized
     * interpolation of the circle starting and ending on the first coordinate.
     * This method uses a tolerence value of 1/100 of the length of the radius.
     *
     * @param x1 x coordinate of point 1
     * @param y1 y coordinate of point 1
     * @param x2 x coordinate of point 2
     * @param y2 y coordinate of point 2
     * @param x3 x coordinate of point 3
     * @param y3 y coordinate of point 3
     * @return an ordered list of Coordinates representing a series of chords
     *         approximating the arc.
     */
    public static Coordinate[] linearizeCircle(double x1, double y1, double x2,
            double y2, double x3, double y3) {
        Coordinate p1 = new Coordinate(x1, y1);
        Coordinate p2 = new Coordinate(x2, y2);
        Coordinate p3 = new Coordinate(x3, y3);
        Circle c = new Circle(p1, p2, p3);
        double tolerence = 0.01 * c.getRadius();
        return c.linearizeArc(p1, p2, p1, tolerence);
    }

