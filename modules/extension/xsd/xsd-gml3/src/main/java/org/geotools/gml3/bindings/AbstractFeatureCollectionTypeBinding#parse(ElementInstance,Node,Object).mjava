    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated modifiable
     */
    public Object parse(ElementInstance instance, Node node, Object value)
        throws Exception {
        SimpleFeatureCollection featureCollection = 
            (SimpleFeatureCollection) node.getChildValue(FeatureCollection.class);
        if (featureCollection == null) {
            featureCollection = new DefaultFeatureCollection();
        }

        //&lt;element maxOccurs="unbounded" minOccurs="0" ref="gml:featureMember"/&gt;
        List childValues = node.getChildValues(SimpleFeature.class);
        
        if( featureCollection instanceof Collection){
            // example DefaultFeatureCollections or ListFeatureCollection
            ((Collection)featureCollection).addAll(childValues);
        }
        else {
            throw new IllegalStateException("DefaultFeatureCollection or ListFeatureCollection required");
        }

        //&lt;element minOccurs="0" ref="gml:featureMembers"/&gt;
        SimpleFeature[] featureMembers = (SimpleFeature[]) node.getChildValue(SimpleFeature[].class);

        if( featureCollection instanceof Collection){
            // example DefaultFeatureCollections or ListFeatureCollection
            if (featureMembers != null) {
                for (int i = 0; i < featureMembers.length; i++) {
                    ((Collection)featureCollection).add(featureMembers[i]);
                }
            }

        }
        else {
            throw new IllegalStateException("DefaultFeatureCollection or ListFeatureCollection required");
        }

        return featureCollection;
    }

