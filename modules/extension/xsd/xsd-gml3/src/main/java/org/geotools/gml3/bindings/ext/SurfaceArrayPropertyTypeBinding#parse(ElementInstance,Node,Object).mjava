    /**
     *
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated modifiable
     */
    public Object parse(ElementInstance instance, Node node, Object value) throws Exception {

        List<Polygon> polygons = new ArrayList<>();

        // This property element contains a list of surfaces.
        // The order of the elements is significant and shall be preserved when processing the
        // array.
        for (Node child : (List<Node>) node.getChildren()) {
            Object nodeValue = child.getValue();
            if (nodeValue instanceof MultiPolygon) { // Surface
                MultiPolygon surface = (MultiPolygon) nodeValue;
                for (int i = 0; i < surface.getNumGeometries(); i++) {
                    Polygon polygon = (Polygon) surface.getGeometryN(i);
                    polygons.add(polygon);
                }
            } else if (nodeValue instanceof Polygon) { // Polygon
                Polygon polygon = (Polygon) nodeValue;
                polygons.add(polygon);
            }
        }

        return gf.createMultiPolygon((Polygon[]) polygons.toArray(new Polygon[polygons.size()]));
    }

