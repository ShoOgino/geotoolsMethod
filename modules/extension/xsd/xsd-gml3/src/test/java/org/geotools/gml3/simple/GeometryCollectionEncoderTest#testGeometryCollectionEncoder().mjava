    public void testGeometryCollectionEncoder() throws ParseException, Exception {
        GeometryCollectionEncoder gce =
                new GeometryCollectionEncoder(gtEncoder, "gml", GML.NAMESPACE);
        Geometry geometry =
                new WKTReader2()
                        .read(
                                "GEOMETRYCOLLECTION (LINESTRING"
                                        + " (180 200, 160 180), POINT (19 19), POINT (20 10))");
        Document doc = encode(gce, geometry, "feature.1");
        // XMLTestSupport.print(doc);
        assertEquals(1, xpath.getMatchingNodes("//gml:LineString", doc).getLength());
        assertEquals(2, xpath.getMatchingNodes("//gml:Point", doc).getLength());
        assertEquals(1, xpath.getMatchingNodes("//gml:MultiGeometry", doc).getLength());
        assertEquals(
                "180 200 160 180",
                xpath.evaluate(
                        "//gml:MultiGeometry/gml:geometryMember/gml:LineString/gml:posList", doc));
        assertEquals(
                "19 19",
                xpath.evaluate("//gml:MultiGeometry/gml:geometryMember/gml:Point/gml:pos", doc));
        assertEquals("feature.1", xpath.evaluate("//gml:MultiGeometry/@gml:id", doc));
        assertEquals(
                "feature.1.1",
                xpath.evaluate(
                        "//gml:MultiGeometry/gml:geometryMember[1]/gml:LineString/@gml:id", doc));
        assertEquals(
                "feature.1.2",
                xpath.evaluate("//gml:MultiGeometry/gml:geometryMember[2]/gml:Point/@gml:id", doc));
        assertEquals(
                "feature.1.3",
                xpath.evaluate("//gml:MultiGeometry/gml:geometryMember[3]/gml:Point/@gml:id", doc));
    }

