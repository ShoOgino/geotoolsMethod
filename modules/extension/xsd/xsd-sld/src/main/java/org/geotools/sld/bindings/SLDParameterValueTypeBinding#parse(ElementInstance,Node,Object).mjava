    /**
     *
     * <!-- begin-user-doc -->
     * Even though the spec allows an instance of ParamterValueType to have multiple expressions as
     * children, it is more often that there is only one. Therefore this binding returns the first
     * expression it finds or null. If a subtype needs multiple expressions they should ovveride.
     * <!-- end-user-doc -->
     *
     * @generated modifiable
     */
    @Override
    public Object parse(ElementInstance instance, Node node, Object value) throws Exception {

        List<Expression> expressions = new ArrayList<>();
        for (Node child : node.getChildren()) {
            if (child.getValue() instanceof Expression) {
                expressions.add((Expression) child.getValue());
            } else if (child.getValue() instanceof Text) {
                expressions.add(filterFactory.literal(((Text) child.getValue()).getValue()));
            }
        }

        if (expressions.isEmpty()) {
            return null;
        }
        if (expressions.size() == 1) return expressions.get(0);

        Expression e = expressions.get(0);
        for (int i = 1; i < expressions.size(); i++) {
            e = filterFactory.function("strConcat", new Expression[] {e, expressions.get(i)});
        }

        return e;
    }

