    /**
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated modifiable
     */
    public Object parse(ElementInstance instance, Node node, Object value) throws Exception {

        Symbolizer sym = (Symbolizer) value;
        //      &lt;xsd:sequence&gt;
        //          &lt;xsd:element minOccurs="0" ref="se:Name"/&gt;
        //          &lt;xsd:element minOccurs="0" ref="se:Description"/&gt;
        //          &lt;xsd:element minOccurs="0" ref="se:BaseSymbolizer"/&gt;
        //      &lt;/xsd:sequence&gt;
        //      &lt;xsd:attribute name="version" type="se:VersionType"/&gt;
        //      &lt;xsd:attribute name="uom" type="xsd:anyURI"/&gt;
        if (node.hasChild("Name")) {
            sym.setName((String)node.getChildValue("Name"));
        }
        if (node.hasChild("Description")) {
            sym.setDescription((Description) node.getChildValue("Description"));
        }
        if (node.hasChild("BaseSymbolizer")) {
            //throw new IllegalArgumentException("BaseSymbolizer not supported");
        }
        if (node.hasAttribute("version")) {
            //throw new IllegalArgumentException("version not supported");
        }
        if (node.hasAttribute("uom")) {
            String uom = ((URI) node.getAttributeValue("uom")).toString();
            if (UomOgcMapping.get(uom) == null) {
                throw new IllegalArgumentException("uom " + uom + " not supported");
            }
            
            sym.setUnitOfMeasure(UomOgcMapping.get(uom).getUnit());
        }
        
        return sym;
    }

