    /**
     *
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated modifiable
     */
    @Override
    public Object parse(ElementInstance instance, Node node, Object value) throws Exception {
        Expression[] expressions = new Expression[5];

        // &lt;xsd:element ref="se:NumericValue"/&gt;
        expressions[1] = (Expression) node.getChildValue("NumericValue");

        // &lt;xsd:element ref="se:Pattern"/&gt;
        expressions[0] = filterFactory.literal(node.getChildValue("Pattern"));

        // &lt;xsd:element minOccurs="0" ref="se:NegativePattern"/&gt;
        if (node.hasChild("NegativePattern")) {
            expressions[2] = filterFactory.literal(node.getChildValue("NegativePattern"));
        } else {
            expressions[2] = filterFactory.literal("-");
        }

        // &lt;xsd:attribute default="." name="decimalPoint" type="xsd:string" use="optional"/&gt;
        if (node.hasAttribute("decimalPoint")) {
            expressions[3] = filterFactory.literal(node.getAttributeValue("decimalPoint"));
        } else {
            expressions[3] = filterFactory.literal(".");
        }

        // &lt;xsd:attribute default="," name="groupingSeparator" type="xsd:string"
        // use="optional"/&gt;
        if (node.hasAttribute("groupingSeparator")) {
            expressions[4] = filterFactory.literal(node.getAttributeValue("groupingSeparator"));
        } else {
            expressions[4] = filterFactory.literal(",");
        }

        return filterFactory.function("numberFormat2", expressions);
    }

