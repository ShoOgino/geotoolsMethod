    /** Test the Expression parser for SelectChannel */
    @Test
    public void testParseRasterChannelExpression() throws Exception {
        RasterSymbolizer sym = (RasterSymbolizer) parse("example-raster-channel-expression.xml");
        assertEquals(1.0, sym.getOpacity().evaluate(null, Double.class));
        assertEquals(OverlapBehavior.LATEST_ON_TOP, sym.getOverlapBehavior());

        SelectedChannelType[] ch = sym.getChannelSelection().getRGBChannels();

        // assert default value : 1
        EnvFunction.removeLocalValue("B1");
        assertEquals(1, ch[0].getChannelName().evaluate(null, Integer.class).intValue());
        // assert ENV variable value: B1:20
        EnvFunction.setLocalValue("B1", "20");
        assertEquals(20, ch[0].getChannelName().evaluate(null, Integer.class).intValue());
        EnvFunction.removeLocalValue("B1");

        assertEquals(ContrastMethod.HISTOGRAM, ch[0].getContrastEnhancement().getMethod());
        assertEquals("2", ch[1].getChannelName().evaluate(null, String.class));
        assertEquals(
                2.5, ch[1].getContrastEnhancement().getGammaValue().evaluate(null, Double.class));
        assertEquals("3", ch[2].getChannelName().evaluate(null, String.class));
        assertEquals(ContrastMethod.NORMALIZE, ch[2].getContrastEnhancement().getMethod());

        ColorMap map = sym.getColorMap();
        assertNotNull(map);
        assertEquals(2, map.getColorMapEntries().length);

        Color c = map.getColorMapEntry(0).getColor().evaluate(null, Color.class);
        assertEquals(Color.BLACK, c);

        c = map.getColorMapEntry(1).getColor().evaluate(null, Color.class);
        assertEquals(Color.WHITE, c);

        assertEquals(
                1.0, sym.getContrastEnhancement().getGammaValue().evaluate(null, Double.class));
    }

