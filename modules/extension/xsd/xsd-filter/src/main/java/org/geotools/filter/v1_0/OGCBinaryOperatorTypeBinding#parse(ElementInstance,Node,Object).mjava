    /**
     *
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated modifiable
     */
    @Override
    public Object parse(ElementInstance instance, Node node, Object value) throws Exception {
        // implemented by element bindings
        return null;

        //        //TODO: replace this binding with element bindings
        //        Expression e1 = (Expression) node.getChildValue(0);
        //        Expression e2 = (Expression) node.getChildValue(1);
        //
        //        String name = instance.getName();
        //
        //        // <xsd:element name="Add" substitutionGroup="ogc:expression"
        // type="ogc:BinaryOperatorType"/>
        //        if ("Add".equals(name)) {
        //            return factory.add(e1, e2);
        //        }
        //
        //        // <xsd:element name="Sub" substitutionGroup="ogc:expression"
        // type="ogc:BinaryOperatorType"/>
        //        if ("Sub".equals(name)) {
        //            return factory.subtract(e1, e2);
        //        }
        //
        //        // <xsd:element name="Mul" substitutionGroup="ogc:expression"
        // type="ogc:BinaryOperatorType"/>
        //        if ("Mul".equals(name)) {
        //            return factory.multiply(e1, e2);
        //        }
        //
        //        // <xsd:element name="Div" substitutionGroup="ogc:expression"
        // type="ogc:BinaryOperatorType"/>
        //        if ("Div".equals(name)) {
        //            return factory.divide(e1, e2);
        //        }
        //
        //        throw new IllegalStateException("BinaryOpperatorType supports Add, Sub, Mul,
        // Div");
    }

