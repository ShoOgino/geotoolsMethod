    /**
     *
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated modifiable
     */
    @Override
    public Object parse(ElementInstance instance, Node node, Object value) throws Exception {
        // &lt;xsd:element ref="ogc:spatialOps"/&gt;
        // &lt;xsd:element ref="ogc:comparisonOps"/&gt;
        // &lt;xsd:element ref="ogc:logicOps"/&gt;
        if (node.hasChild(Filter.class)) {
            return node.getChildValue(Filter.class);
        }

        // no direct child filter, check for ids
        // &lt;xsd:element maxOccurs="unbounded" ref="ogc:_Id"/&gt;
        List<Identifier> ids = node.getChildValues(Identifier.class);
        if (!ids.isEmpty()) {
            return filterFactory.id(new HashSet<>(ids));
        }

        // try an extended operator (part of filter/fes 2.0)
        List<Filter> extOps = FilterParsingUtils.parseExtendedOperators(node, filterFactory);
        if (!extOps.isEmpty()) {
            return extOps.get(0);
        }
        return null;
    }

