    /**
     * Parses a schema at the specified location.
     *
     * @param location A uri pointing to the location of the schema.
     * @param locators A list of schema locator objects to be used when parsing imports/includes of
     *     the main schema.
     * @param resolvers A list of schema location resolvers used to override schema locations
     *     encountered in an instance document or an imported schema.
     * @param uriHandlers A list of uri handlers to inject into the parsing chain, to handle
     *     externally referenced resources, like external schemas, etc...
     * @return The parsed schema, or null if the schema could not be parsed.
     * @throws IOException In the event of a schema parsing error.
     */
    public static final XSDSchema parse(
            String location, List locators, List resolvers, List<URIHandler> uriHandlers)
            throws IOException {
        ResourceSet resourceSet = new ResourceSetImpl();

        // add the specialized schema location resolvers
        if ((resolvers != null) && !resolvers.isEmpty()) {
            AdapterFactory adapterFactory = new SchemaLocationResolverAdapterFactory(resolvers);
            resourceSet.getAdapterFactories().add(adapterFactory);
        }

        // add the specialized schema locators as adapters
        if ((locators != null) && !locators.isEmpty()) {
            AdapterFactory adapterFactory = new SchemaLocatorAdapterFactory(locators);
            resourceSet.getAdapterFactories().add(adapterFactory);
        }

        // add the specifialized uri handlers
        if (uriHandlers != null && !uriHandlers.isEmpty()) {
            resourceSet.getURIConverter().getURIHandlers().addAll(0, uriHandlers);
        }
        return parse(location, resourceSet);
    }

