    /**
     * Check whether properties can be sorted to the order as in the "children" list. This is only
     * possible when all properties have references (XSDParticle) in the "children" list.
     *
     * @param properties feature properties obtained
     * @param children list of XSDParticle in the order as they appear in the schema
     */
    private boolean propertiesSortable(List properties, List children) {
        /*
         *feature properties contains more elements than it's containing feature (_Feature),
         *for example:
         * 	<gsml:specification>
         *		<gsml:GeologicUnit>
         *		...
         *		</gsml:GeologicUnit>
         *	</gsml:specification>
         *in this case, "properties" for GeologicUnit has more elements than "children" for specification
         */

        if (properties.size() > children.size()) {
            return false;
        }

        for (Iterator itr = properties.iterator(); itr.hasNext(); ) {
            Object[] prop = (Object[]) itr.next();
            XSDParticle part = (XSDParticle) prop[0];
            XSDElementDeclaration partContent = (XSDElementDeclaration) part.getContent();
            if (partContent.getResolvedElementDeclaration() != null) {
                partContent = partContent.getResolvedElementDeclaration();
            }
            boolean notFound = true;
            for (int i = 0; i < children.size(); i++) {
                XSDParticle particle = (XSDParticle) children.get(i);
                XSDElementDeclaration child = (XSDElementDeclaration) particle.getContent();
                if (child.getResolvedElementDeclaration() != null) {
                    child = child.getResolvedElementDeclaration();
                }
                if (child.getName().equals(partContent.getName())
                        && (child.getTargetNamespace() == null
                                ? partContent.getTargetNamespace() == null
                                : child.getTargetNamespace()
                                        .equals(partContent.getTargetNamespace()))) {
                    notFound = false;
                    break;
                }
            }
            if (notFound) {
                return false;
            }
        }

        return true;
    }

