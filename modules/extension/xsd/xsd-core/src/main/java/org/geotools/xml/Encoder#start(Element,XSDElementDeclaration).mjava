    protected void start(Element element, XSDElementDeclaration declaration) throws SAXException {
        String uri = element.getNamespaceURI();
        String local = element.getLocalName();

        String qName = element.getLocalName();

        NamespaceSupport namespaces = this.namespaces;

        // declaration == null -> gml3 envelope encoding test failing
        // declaration.getSchema() == null -> wfs 2.0 feature collection encoding test failing
        if (namespaceAware && (declaration == null || declaration.isGlobal() || 
        		declaration.getSchema() == null || 
        		declaration.getSchema().getElementFormDefault() == XSDForm.QUALIFIED_LITERAL)) {
            uri = (uri != null) ? uri : namespaces.getURI("");
            qName = namespaces.getPrefix(uri) + ":" + qName;
        } else {
            uri = "";
        }

        DOMAttributes atts = new DOMAttributes(element.getAttributes(), namespaces);
        serializer.startElement(uri, local, qName, atts);

        //write out any text
        for (int i = 0; i < element.getChildNodes().getLength(); i++) {
            Node node = (Node) element.getChildNodes().item(i);

            if (node instanceof Text) {
                char[] ch = ((Text) node).getData().toCharArray();
                serializer.characters(ch, 0, ch.length);
            }
        }

        //write out any child elements
        for (int i = 0; i < element.getChildNodes().getLength(); i++) {
            Node node = (Node) element.getChildNodes().item(i);

            if (node instanceof Element) {
                Element child = (Element) node;
                start(child, declaration != null ? Schemas.getChildElementDeclaration(declaration, 
                        new QName(child.getNamespaceURI(), child.getNodeName())) : null);
                end(child);
            }
        }

        //push a new context for children, declaring the default prefix to be the one of this 
        // element
        this.namespaces.pushContext();

        if (uri != null) {
            this.namespaces.declarePrefix("", uri);
        }
    }

