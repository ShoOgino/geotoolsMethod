    /**
     * Helper method that checks if the complex feature we want to encode maps to a complex type
     * that respects the GML object-property model.
     */
    private boolean isNonStripedNestedElement(Object next, XSDElementDeclaration element) {
        if (!(next instanceof ComplexAttribute)) {
            return false;
        }
        ComplexAttribute complex = (ComplexAttribute) next;
        // let's see if we need to encode this
        Collection<Property> nestedProperties = complex.getProperties();
        if (nestedProperties == null || nestedProperties.isEmpty()) {
            return false;
        }
        // let's see if all the properties have the same type, and that the type is equal to the
        // current element type
        if (!nestedProperties
                .stream()
                .allMatch(
                        property ->
                                property == null
                                        || property.getType()
                                                .getName()
                                                .equals(complex.getType().getName()))) {
            // different types which means we are not in the case of nested complex features
            return false;
        }
        // so let's see if the nested type is a reference
        for (XSDParticle childParticle :
                Schemas.getChildElementParticles(element.getTypeDefinition(), true)) {
            XSDElementDeclaration childElement = (XSDElementDeclaration) childParticle.getContent();
            if (childElement.isElementDeclarationReference()) {
                childElement = childElement.getResolvedElementDeclaration();
                if (childElement
                        .getType()
                        .getName()
                        .equals(complex.getType().getName().getLocalPart())) {
                    // we are good this type respect the object-property model
                    return false;
                }
            }
        }
        // the mapped complex type doesn't respect the object-property model
        return true;
    }

