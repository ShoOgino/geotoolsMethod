    /**
     *         /**
     * <!-- begin-user-doc -->
     * This is AFTER so value contains element.text after processing by AnySimpleType.
     * This binding returns objects of type {@link Calendar}.
     * <!-- end-user-doc -->
     *
     * @generated modifiable
     */
    public Object parse(InstanceComponent instance, Object value)
        throws Exception {
        //DatatypeConverter.setDatatypeConverter(DatatypeConverterImpl.theInstance);
        //BigDecimal decimal = DatatypeConverter.parseDecimal((String) value);
        String text = (String) value;

        if (text.startsWith("+")) {
            text = text.substring(1);
        }

        BigDecimal decimal = new BigDecimal(text);

        //		// TODO: facet checks to be done by framework 
        //		XSDSimpleTypeDefinition simple = (XSDSimpleTypeDefinition) instance.getTypeDefinition();
        //		
        //		BigDecimal maxInc = (BigDecimal) simple.getMaxInclusiveFacet().getValue();
        //		if (decimal.compareTo(maxInc) > 0) {
        //			throw new ValidationException("Decimal value is outside the inclusive max bounds of " + maxInc);
        //		}
        //		
        //		BigDecimal maxExc = (BigDecimal) simple.getMaxExclusiveFacet().getValue();
        //		if (decimal.compareTo(maxExc) >= 0) {
        //			throw new ValidationException("Decimal value is outside the exclusive max bounds of " + maxExc);
        //		}
        //		
        //		BigDecimal minInc = (BigDecimal) simple.getMinInclusiveFacet().getValue();
        //		if (decimal.compareTo(minInc) < 0) {
        //			throw new ValidationException("Decimal value is outside the inclusive min bounds of " + minInc);
        //		}
        //		
        //		BigDecimal minExc = (BigDecimal) simple.getMinExclusiveFacet().getValue();
        //		if (decimal.compareTo(minExc) <= 0) {
        //			throw new ValidationException("Decimal value is outside the exclusive min bounds of " + minExc);
        //		}

        //		int precision = decimal.precision();
        //		int totalDigits = simple.getTotalDigitsFacet().getValue();
        //		if (precision > totalDigits) {
        //			throw new ValidationException("Decimal value's precision ("+precision+
        //					") is higher than allowed ("+totalDigits+")");
        //		}
        return decimal;
    }

