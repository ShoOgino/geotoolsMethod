    private boolean isUnboundedSequence(Object object, XSDElementDeclaration element) {
        // checks for unbounded sequence
        final Element sequenceElement = getSequenceElement(element);
        if (sequenceElement == null) return false;
        final String maxOccursString = sequenceElement.getAttribute("maxOccurs");
        if (!"unbounded".equals(maxOccursString)) return false;
        // checks complex attribute and children
        if (!(object instanceof ComplexAttribute)) return false;
        // check descriptor.name
        final ComplexAttribute complexAttr = (ComplexAttribute) object;
        // check userData map for Multi value unbounded sequence flag
        return Optional.ofNullable(complexAttr.getUserData().get("multi_value_type"))
                .filter(x -> x instanceof String)
                .map(x -> (String) x)
                .filter(x -> x.equalsIgnoreCase("unbounded-multi-value"))
                .isPresent();
    }

