    protected SAXParser parser(boolean validate) throws ParserConfigurationException, SAXException {
        // JD: we use xerces directly here because jaxp does seem to allow use to
        // override all the namespaces to validate against
        SAXParserFactory pFactory = SAXParserFactory.newInstance();

        // set the appropriate features
        pFactory.setFeature("http://xml.org/sax/features/namespaces", true);

        if (validate) {
            pFactory.setFeature("http://xml.org/sax/features/validation", true);
            pFactory.setFeature("http://apache.org/xml/features/validation/schema", true);
            pFactory.setFeature(
                    "http://apache.org/xml/features/validation/schema-full-checking", true);
        }

        SAXParser parser = pFactory.newSAXParser();

        // set the schema sources of this configuration, and all dependent ones
        StringBuffer schemaLocation = new StringBuffer();

        for (Configuration dependency : handler.getConfiguration().allDependencies()) {
            // ignore xs namespace
            if (XS.NAMESPACE.equals(dependency.getNamespaceURI())) {
                continue;
            }

            // Separate entries by space
            if (schemaLocation.length() > 0) {
                schemaLocation.append(" ");
            }

            // add the entry
            schemaLocation.append(dependency.getNamespaceURI());
            schemaLocation.append(" ");
            schemaLocation.append(dependency.getXSD().getSchemaLocation());
        }

        // set the property to map namespaces to schema locations
        parser.setProperty(
                "http://apache.org/xml/properties/schema/external-schemaLocation",
                schemaLocation.toString());
        // add the handler as a LexicalHandler too.
        parser.setProperty(SAX_PROPERTY_PREFIX + LEXICAL_HANDLER_PROPERTY, handler);
        // set Entity expansion limit
        setupEntityExpansionLimit(parser);

        //
        // return builded parser
        return parser;
    }

