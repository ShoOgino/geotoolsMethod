    /**
     *
     * <!-- begin-user-doc -->
     * This binding returns objects of type {@link QName}.
     * <!-- end-user-doc -->
     *
     * @generated modifiable
     */
    public Object parse(InstanceComponent instance, Object value) throws Exception {

        // if value passed in was null just return "null" qname
        if (value == null) {
            return new QName(null);
        }

        QName qName = null;
        try {
            qName =
                    DatatypeConverterImpl.getInstance()
                            .parseQName((String) value, namespaceContext);
        } catch (Exception e) {
            // could occur if a prefix that was not registered was found
        }

        // try to set the prefix
        if (qName != null && (qName.getPrefix() == null || qName.getPrefix().equals(""))) {
            if (qName.getNamespaceURI() != null && !"".equals(qName.getNamespaceURI())) {
                String prefix = namespaceContext.getPrefix(qName.getNamespaceURI());
                if (prefix != null && !"".equals(prefix)) {
                    qName = new QName(qName.getNamespaceURI(), qName.getLocalPart(), prefix);
                }
            }
            return qName;
        }

        // could not parse with convert, parse manually
        String s = (String) value;
        int i = s.indexOf(':');

        if (i != -1) {
            String prefix = s.substring(0, i);
            String local = s.substring(i + 1);

            return new QName(null, local, prefix);
        }

        return new QName(null, s);
    }

