    /**
     * Clones an eobject, with the option of performing a deep clone in which referenced eobjects
     * are also cloned.
     *
     * @param prototype The object to be cloned from.
     * @param factory The factory used to create the clone.
     * @param deepFlag indicating wether to perform a deep clone.
     *
     * @return THe cloned object, with all properties the same to the original.
     */
    public static EObject clone(EObject prototype, EFactory factory, boolean deep) {
        EObject clone = factory.create(prototype.eClass());

        for (Iterator i = clone.eClass().getEStructuralFeatures().iterator(); i.hasNext();) {
            EStructuralFeature feature = (EStructuralFeature) i.next();
            Object value = prototype.eGet(feature);
            if ( deep && value instanceof EObject ) {
                EObject evalue = (EObject) value;
                //recursively call
                //TODO:handle cycles in reference graph
                value = clone(  evalue, evalue.eClass().getEPackage().getEFactoryInstance(), deep );
            }
            
            clone.eSet(feature, value );    
        }

        return clone; 
    }

