    /**
     * Uses EMF reflection dynamically return the property with the specified name.
     *
     * <p>In the case that the name of a child element or attributes does not match the name of a
     * property on the object, subclasses may wish to extend this method and set the property
     * explicitly.
     */
    @Override
    public Object getProperty(Object object, QName name) throws Exception {
        if (object instanceof EObject) {
            EObject eObject = (EObject) object;

            if (EMFUtils.has(eObject, name.getLocalPart())) {
                return EMFUtils.get(eObject, name.getLocalPart());
            } else {
                // special case check for "_" since emf removes these from bean
                // property names
                if (name.getLocalPart().contains("_")) {
                    String stripped = name.getLocalPart().replaceAll("_", "");
                    if (EMFUtils.has(eObject, stripped)) {
                        return EMFUtils.get(eObject, stripped);
                    }
                }
            }
        }

        return null;
    }

