    /**
     * <!-- begin-user-doc -->
     * @param instance
     * @param value    a BigInteger (after processing by parent)
     * @return a Number that is not positive
     * <!-- end-user-doc -->
     *
     * @generated modifiable
     */
    public Object parse(InstanceComponent instance, Object value)
        throws Exception {
        BigInteger number = (BigInteger) value;

        if (BigInteger.ZERO.compareTo(number) < 0) {
            throw new IllegalArgumentException("Value '" + number
                + "' must be non-positive (0 or below).");
        }

        if (MIN_INTEGER.compareTo(number) <= 0) {
            return new Integer(number.intValue());
        }

        if (MIN_LONG.compareTo(number) <= 0) {
            return new Long(number.longValue());
        }

        return number;
    }

