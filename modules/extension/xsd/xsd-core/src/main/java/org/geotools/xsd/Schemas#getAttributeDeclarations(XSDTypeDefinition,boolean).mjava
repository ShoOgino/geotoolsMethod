    /**
     * Returns a list of all attribute declarations declared in the type (and optionally any base
     * type) of the specified element.
     *
     * @param type The element type
     * @param includeParents Wether to include parent types.
     * @return A list of @link XSDAttributeDeclaration objects, one for each attribute of the
     *     element.
     */
    public static final List<XSDAttributeDeclaration> getAttributeDeclarations(
            XSDTypeDefinition type, boolean includeParents) {
        final List<XSDAttributeDeclaration> attributes = new ArrayList<>();

        // walk up the type hierarchy of the element to generate a list of atts
        TypeWalker.Visitor visitor =
                new TypeWalker.Visitor() {
                    public boolean visit(XSDTypeDefinition type) {
                        // simple types dont have attributes
                        if (type instanceof XSDSimpleTypeDefinition) {
                            return true;
                        }

                        XSDComplexTypeDefinition cType = (XSDComplexTypeDefinition) type;

                        // get all the attribute content (groups,or uses) and add to q
                        List attContent = cType.getAttributeContents();

                        for (Iterator itr = attContent.iterator(); itr.hasNext(); ) {
                            XSDAttributeGroupContent content =
                                    (XSDAttributeGroupContent) itr.next();

                            if (content instanceof XSDAttributeUse) {
                                // an attribute, add it to the list
                                XSDAttributeUse use = (XSDAttributeUse) content;
                                attributes.add(use.getAttributeDeclaration());
                            } else if (content instanceof XSDAttributeGroupDefinition) {
                                // attribute group, add all atts in group to list
                                XSDAttributeGroupDefinition attGrp =
                                        (XSDAttributeGroupDefinition) content;

                                if (attGrp.isAttributeGroupDefinitionReference()) {
                                    attGrp = attGrp.getResolvedAttributeGroupDefinition();
                                }

                                List uses = attGrp.getAttributeUses();

                                for (Iterator aitr = uses.iterator(); aitr.hasNext(); ) {
                                    XSDAttributeUse use = (XSDAttributeUse) aitr.next();
                                    attributes.add(use.getAttributeDeclaration());
                                }
                            }
                        }

                        return true;
                    }
                };

        if (includeParents) {
            // walk up the type hierarchy of the element to generate a list of
            // possible elements
            new TypeWalker().walk(type, visitor);
        } else {
            // just visit this type
            visitor.visit(type);
        }

        return attributes;
    }

