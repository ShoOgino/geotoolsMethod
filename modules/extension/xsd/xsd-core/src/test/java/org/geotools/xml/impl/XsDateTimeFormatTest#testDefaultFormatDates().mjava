    @Test
    public void testDefaultFormatDates() throws ParseException {
        XsDateTimeFormat format = new XsDateTimeFormat();
        TimeZone originalTimeZone = TimeZone.getDefault();
        TimeZone tz = TimeZone.getTimeZone("GMT");
        TimeZone.setDefault(tz);
        Locale originalLocale = Locale.getDefault();
        Locale.setDefault(Locale.ENGLISH);
        String t = "Tue Apr 25 13:13:14 UTC 2017";
        Object parseObject = format.parseObject(t, true);
        assertTrue(parseObject instanceof Calendar);

        // Get the date
        Calendar cal = (Calendar) parseObject;
        int year = cal.get(Calendar.YEAR);
        int month = cal.get(Calendar.MONTH);
        int day = cal.get(Calendar.DAY_OF_MONTH);
        int hours = cal.get(Calendar.HOUR_OF_DAY);
        int mins = cal.get(Calendar.MINUTE);
        int sec = cal.get(Calendar.SECOND);

        // check
        assertEquals(year, 2017);
        assertEquals(month, 3);
        assertEquals(day, 25);
        assertEquals(hours, 13);
        assertEquals(mins, 13);
        assertEquals(sec, 14);

        t = "Fri Oct 13 14:22:10 BST 2017";
        parseObject = format.parseObject(t, true);
        assertTrue(parseObject instanceof Calendar);

        // Get the date
        cal = (Calendar) parseObject;
        year = cal.get(Calendar.YEAR);
        month = cal.get(Calendar.MONTH);
        day = cal.get(Calendar.DAY_OF_MONTH);
        hours = cal.get(Calendar.HOUR_OF_DAY);
        mins = cal.get(Calendar.MINUTE);
        sec = cal.get(Calendar.SECOND);

        // check
        assertEquals(year, 2017);
        assertEquals(month, 9);
        assertEquals(day, 13);
        assertEquals(hours, 13);
        assertEquals(mins, 22);
        assertEquals(sec, 10);

        t = "Sun Oct 1 4:22:10 BST 2017";
        parseObject = format.parseObject(t, true);
        assertTrue(parseObject instanceof Calendar);

        // Get the date
        cal = (Calendar) parseObject;
        year = cal.get(Calendar.YEAR);
        month = cal.get(Calendar.MONTH);
        day = cal.get(Calendar.DAY_OF_MONTH);
        hours = cal.get(Calendar.HOUR_OF_DAY);
        mins = cal.get(Calendar.MINUTE);
        sec = cal.get(Calendar.SECOND);

        // check
        assertEquals(year, 2017);
        assertEquals(month, 9);
        assertEquals(day, 1);
        assertEquals(hours, 3);
        assertEquals(mins, 22);
        assertEquals(sec, 10);
        TimeZone.setDefault(originalTimeZone);
        Locale.setDefault(originalLocale);
    }

