        @Override
        public InputStream createInputStream(URI uri, Map<?, ?> options) throws IOException {
            try {
                return executorService.invokeAny(
                        Collections.singletonList(
                                new Callable<InputStream>() {
                                    @Override
                                    public InputStream call() throws Exception {
                                        synchronized (Schemas.class) {
                                            return Schemas.class.getResourceAsStream(
                                                    "remoteSchemaLocation.xsd");
                                        }
                                    }
                                }),
                        3,
                        TimeUnit.SECONDS);
            } catch (InterruptedException e) {
                return null;
            } catch (ExecutionException e) {
                return null;
            } catch (TimeoutException e) {
                throw new RuntimeException("Timed out.", e);
            }
        }

