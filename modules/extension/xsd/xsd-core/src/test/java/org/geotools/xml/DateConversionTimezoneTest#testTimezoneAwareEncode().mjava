    /**
     * Tests date encoding having {@link Hints#LOCAL_DATE_TIME_HANDLING} activated
     * 
     * @throws Exception
     */
    @Test
    public void testTimezoneAwareEncode() throws Exception {
        // UTC: zone offset == 0 -> no shifting
        assertDateEquals("2015-09-02Z", 2015, 9, 2, 0, "UTC");
        assertDateEquals("2015-09-02Z", 2015, 9, 2, 1, "UTC");
        assertDateEquals("2015-09-02Z", 2015, 9, 2, 23, "UTC");
        // GMT: zone offset == 0 -> no shifting
        assertDateEquals("2015-09-02Z", 2015, 9, 2, 0, "GMT");
        assertDateEquals("2015-09-02Z", 2015, 9, 2, 1, "GMT");
        assertDateEquals("2015-09-02Z", 2015, 9, 2, 23, "GMT");
        // CET: zone offset > 0 -> shifting backwards
        assertDateEquals("2015-09-01Z", 2015, 9, 2, 0, "CET");
        assertDateEquals("2015-09-01Z", 2015, 9, 2, 1, "CET");
        assertDateEquals("2015-09-02Z", 2015, 9, 2, 2, "CET");
        assertDateEquals("2015-09-02Z", 2015, 9, 2, 23, "CET");
        // EST: zone offset < 0 -> shifting forward
        assertDateEquals("2015-09-02Z", 2015, 9, 2, 0, "EST");
        assertDateEquals("2015-09-02Z", 2015, 9, 2, 1, "EST");
        assertDateEquals("2015-09-03Z", 2015, 9, 2, 23, "EST");
    }

