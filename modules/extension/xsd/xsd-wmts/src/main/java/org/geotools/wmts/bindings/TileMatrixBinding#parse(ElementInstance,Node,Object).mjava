    /**
     *
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated modifiable
     */
    public Object parse(ElementInstance instance, Node node, Object value) throws Exception {
        if (node.getChildren().isEmpty()) {
            // we are in a
            // Contents/Layer/TileMatrixSetLink/TileMatrixSetLimits/TileMatrixLimits/TileMatrix
            // (simple) element
            return (String) value;
        }

        if (!(value instanceof TileMatrixType)) {
            value = factory.createTileMatrixType();
        }

        // Call DescriptionType parser to load the object with the DescriptionType values
        value = super.parse(instance, node, value);

        // we are in a Contents/TileMatrixSet/TileMatrix (complex) element

        ((TileMatrixType) value).setIdentifier((CodeType) node.getChildValue("Identifier"));
        ((TileMatrixType) value).setMatrixHeight((BigInteger) node.getChildValue("MatrixHeight"));
        ((TileMatrixType) value).setMatrixWidth((BigInteger) node.getChildValue("MatrixWidth"));
        ((TileMatrixType) value)
                .setScaleDenominator((double) node.getChildValue("ScaleDenominator"));
        ((TileMatrixType) value).setTileHeight((BigInteger) node.getChildValue("TileHeight"));
        ((TileMatrixType) value).setTileWidth((BigInteger) node.getChildValue("TileWidth"));
        @SuppressWarnings("unchecked")
        List<Double> topLeftCorner = (List<Double>) node.getChildValue("TopLeftCorner");
        ((TileMatrixType) value).setTopLeftCorner(topLeftCorner);
        return value;
    }

