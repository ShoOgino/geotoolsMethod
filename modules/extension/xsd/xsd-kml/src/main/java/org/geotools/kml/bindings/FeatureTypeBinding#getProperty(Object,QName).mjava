    public Object getProperty(Object object, QName name) throws Exception {
    	if( object instanceof FeatureCollection){
    		FeatureCollection features = (FeatureCollection) object;
    		if ( "id".equals( name.getLocalPart() ) ) {
                return features.getID(); 
            }    		
    	}
    	if( object instanceof SimpleFeature){
	        SimpleFeature feature = (SimpleFeature) object;
	        
	        if ( "id".equals( name.getLocalPart() ) ) {
	            return feature.getID(); 
	        }
	        
	        //&lt;element minOccurs="0" name="name" type="string"/&gt;
	        if ( "name".equals( name.getLocalPart() ) ) {
	            return feature.getAttribute( "name" );
	        }
	        
	        //&lt;element minOccurs="0" name="description" type="string"/&gt;
	        if ( "description".equals( name.getLocalPart() ) ) {
	            return feature.getAttribute( "description" );
	        }
	      
                if (KML.styleUrl.getLocalPart().equals(name.getLocalPart())) {
                    URI uri = (URI) feature.getAttribute("Style");
                    if (uri != null) {
                        return styleMap.get(uri);
                    }
                }
	        
	        //&lt;element default="1" minOccurs="0" name="visibility" type="boolean"/&gt;
	        //&lt;element default="1" minOccurs="0" name="open" type="boolean"/&gt;
	        //&lt;element minOccurs="0" name="address" type="string"/&gt;
	        //&lt;element minOccurs="0" name="phoneNumber" type="string"/&gt;
	        //&lt;element minOccurs="0" name="Snippet" type="kml:SnippetType"/&gt;
	        //&lt;element minOccurs="0" name="description" type="string"/&gt;
	        //&lt;element minOccurs="0" ref="kml:LookAt"/&gt;
	        //&lt;element minOccurs="0" ref="kml:TimePrimitive"/&gt;
	        //&lt;element minOccurs="0" ref="kml:styleUrl"/&gt;
	        //&lt;element maxOccurs="unbounded" minOccurs="0" ref="kml:StyleSelector"/&gt;
	        //&lt;element minOccurs="0" ref="kml:Region"/&gt;
	        //&lt;element minOccurs="0" name="Metadata" type="kml:MetadataType"/&gt;

                // this is KML 2.2-specific
                if ("ExtendedData".equals(name.getLocalPart())) {
                    SimpleFeatureType t = feature.getFeatureType();
                    List<Map.Entry<Name, Object>> attributes = new LinkedList<Map.Entry<Name, Object>>();

                    for (AttributeDescriptor ad : t.getAttributeDescriptors()) {
                        Object obj = feature.getAttribute(ad.getName());
                        // do not include geographic attributes
                        if (!(obj instanceof Geometry))
                            attributes
                                    .add(new AbstractMap.SimpleEntry<Name, Object>(ad.getName(), obj));
                    }
                    return attributes;
                }
        }
        return super.getProperty(object, name);
    }

