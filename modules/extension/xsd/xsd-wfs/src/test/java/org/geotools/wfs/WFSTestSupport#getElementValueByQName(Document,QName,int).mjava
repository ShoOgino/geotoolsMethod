    /**
     * Returns the value of the element named <code>propertyName</code> at
     * index <code>index</code>, where the index starts at 0 (zero).
     * 
     * @param dom
     * @param propertyName
     * @param index
     * @return
     */
    protected final String getElementValueByQName(final Document dom, final QName propertyName,
            final int index) {
        final NodeList elementsByQName = getElementsByQName(dom, propertyName);

        if (elementsByQName.getLength() == 0) {
            throw new NoSuchElementException("No element named " + propertyName + " in "
                    + dom.getDocumentElement().getLocalName());
        }

        if (index > elementsByQName.getLength()) {
            throw new NoSuchElementException("Expected element named " + propertyName
                    + " at index " + index + " but there are only " + elementsByQName.getLength()
                    + " elements in the node list");
        }

        final Node item = elementsByQName.item(index);
        final Node firstChild = item.getFirstChild();

        if (null == firstChild) {
            throw new NullPointerException(propertyName + "[" + index + "] has no content");
        }

        String nodeValue = firstChild.getNodeValue();

        return nodeValue;
    }

