    @Test
    public void testEncode() throws Exception {
        QName typeName = new QName("http://www.test.com/query", "theType");
        QueryType query = Wfs20Factory.eINSTANCE.createQueryType();
        query.getTypeNames().add(typeName);

        FilterFactory2 ff = CommonFactoryFinder.getFilterFactory2();
        query.getSortBy().add(ff.sort("myProperty", SortOrder.ASCENDING));

        Document doc = encode(query, WFS.Query);

        Element root = doc.getDocumentElement();
        String attr = root.getAttribute("typeNames");
        assertNotNull(attr);

        String tmp = typeName.getLocalPart();

        assertFalse(attr.startsWith("[{"));
        assertNotEquals(attr.indexOf(tmp), -1);
        assertEquals(attr.length(), attr.indexOf(tmp) + tmp.length()); // 8 == ":theType".length

        HashMap<String, String> m = new HashMap<>();
        m.put("wfs", WFS.NAMESPACE);
        m.put("fes", FES.NAMESPACE);
        XMLUnit.setXpathNamespaceContext(new SimpleNamespaceContext(m));
        XMLAssert.assertXpathExists("//wfs:Query", doc);
        XMLAssert.assertXpathExists("//wfs:Query/fes:SortBy", doc);
        XMLAssert.assertXpathExists("//wfs:Query/fes:SortBy/fes:SortProperty", doc);
        XMLAssert.assertXpathExists(
                "//wfs:Query/fes:SortBy/fes:SortProperty/fes:ValueReference", doc);
        XMLAssert.assertXpathEvaluatesTo(
                "myProperty", "//wfs:Query/fes:SortBy/fes:SortProperty/fes:ValueReference", doc);
        XMLAssert.assertXpathEvaluatesTo(
                "ASC", "//wfs:Query/fes:SortBy/fes:SortProperty/fes:SortOrder", doc);
    }

