    /**
     * Set up out of the box configuration for GML encoding.
     *
     * <ul>
     *   <li>GML2
     *   <li>GML3
     * </ul>
     *
     * The following are not avialable yet:
     *
     * <ul>
     *   <li>gml3.2 - not yet available
     *   <li>wfs1.0 - not yet available
     *   <li>wfs1.1 - not yet available
     * </ul>
     */
    protected void init() {
        List<Schema> schemas = new ArrayList<Schema>();
        schemas.add(new XSSchema().profile()); // encoding of common java types
        Schema hack = new SchemaImpl(XS.NAMESPACE);

        AttributeTypeBuilder builder = new AttributeTypeBuilder();
        builder.setName("date");
        builder.setBinding(Date.class);
        hack.put(new NameImpl(XS.DATETIME), builder.buildType());

        schemas.add(hack);

        // GML 2
        //
        if (Version.GML2 == version) {
            gmlNamespace = org.geotools.gml2.GML.NAMESPACE;
            gmlLocation = "gml/2.1.2/feature.xsd";
            gmlConfiguration = new org.geotools.gml2.GMLConfiguration();
            schemas.add(new org.geotools.gml2.GMLSchema().profile());
        }
        if (Version.WFS1_0 == version) {
            gmlNamespace = org.geotools.gml2.GML.NAMESPACE;
            gmlLocation = "gml/2.1.2/feature.xsd";
            gmlConfiguration = new org.geotools.wfs.v1_0.WFSConfiguration_1_0();

            schemas.add(new org.geotools.gml2.GMLSchema().profile());
        }
        // GML 3
        //
        if (Version.GML3 == version) {
            gmlNamespace = org.geotools.gml3.GML.NAMESPACE;
            gmlLocation = "gml/3.1.1/base/gml.xsd";
            gmlConfiguration = new org.geotools.gml3.GMLConfiguration();
            schemas.add(new org.geotools.gml3.GMLSchema().profile());
        }
        if (Version.WFS1_1 == version) {
            gmlNamespace = org.geotools.gml3.GML.NAMESPACE;
            gmlLocation = "gml/3.1.1/base/gml.xsd";
            gmlConfiguration = new org.geotools.wfs.v1_1.WFSConfiguration();

            schemas.add(new org.geotools.gml3.GMLSchema().profile());
        }
        schemaList = schemas;
    }

