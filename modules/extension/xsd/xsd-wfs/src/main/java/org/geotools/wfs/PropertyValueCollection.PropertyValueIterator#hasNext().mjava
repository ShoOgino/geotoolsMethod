        @Override
        public boolean hasNext() {
            if (it == null) {
                return false;
            }
            if (values.isEmpty()) {
                Object value = null;
                while (it.hasNext()) {
                    Feature f = (Feature) it.next();
                    value = propertyName.evaluate(f);
                    if (value != null
                            && !(value instanceof Collection && ((Collection) value).isEmpty())) {
                        next = f;
                        break;
                    }
                }
                if (value != null) {
                    if (value instanceof Collection) {
                        @SuppressWarnings("unchecked")
                        Collection<Object> values = (Collection) value;
                        this.values.addAll(values);
                    } else {
                        values.add(value);
                    }
                }
            }

            if (!values.isEmpty()) {
                return true;
            }

            // close the iterator
            it.close();
            it = null;
            return false;
        }

