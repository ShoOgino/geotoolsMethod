    @Override
    public Object parse(ElementInstance instance, Node node, Object value) throws Exception {
        EnvelopePropertyType envelopPropertyType =
                Wfs20Factory.eINSTANCE.createEnvelopePropertyType();

        Object childValue = node.getChildValue(referencedEnvelopeClass);
        if (childValue != null) {
            // FeatureMap below requires FeatureMap.Entry as members each having FeatureMap.Entry as
            // value.
            // Considering the respective schema fragment this is somewhat surprising.
            // Maybe a generator or EMF or issue?
            // Assuming "boundedBy" is rarely used it seems acceptable to nest it twice.
            //
            //   <xsd:element name="boundedBy" type="wfs:EnvelopePropertyType"/>
            //   <xsd:complexType name="EnvelopePropertyType">
            //      <xsd:sequence>
            //         <xsd:any namespace="##other"/>
            //      </xsd:sequence>
            //   </xsd:complexType>
            FeatureMap anyMap = envelopPropertyType.getAny();
            Entry innerEntry = FeatureMapUtil.createEntry(newAttribute, childValue);
            Entry anyMapEntry = FeatureMapUtil.createEntry(anyAttribute, innerEntry);
            anyMap.add(0, anyMapEntry);
        }
        return envelopPropertyType;
    }

