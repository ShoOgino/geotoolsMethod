        @Override
        public Attribute next() {
            Object value = values.remove();

            // create a new descriptor based on teh xml type
            AttributeType xmlType = findType(descriptor.getType().getBinding());
            if (xmlType == null) {
                throw new RuntimeException(
                        "Unable to map attribute " + descriptor.getName() + " to xml type");
            }

            // because simple features don't carry around their namespace, create a descriptor name
            // that actually used the feature type schema namespace
            Name name;
            if (descriptor == ID_DESCRIPTOR) {
                name = GML_IDENTIFIER;
            } else {
                name =
                        new NameImpl(
                                next.getType().getName().getNamespaceURI(),
                                descriptor.getLocalName());
            }
            AttributeDescriptor newDescriptor =
                    typeFactory.createAttributeDescriptor(
                            xmlType,
                            name,
                            descriptor.getMinOccurs(),
                            descriptor.getMaxOccurs(),
                            descriptor.isNillable(),
                            descriptor.getDefaultValue());

            Attribute result;
            if (value instanceof ComplexAttribute) {
                result =
                        factory.createComplexAttribute(
                                Collections.singletonList((Property) value), newDescriptor, null);
            } else {
                value = value instanceof Attribute ? ((Attribute) value).getValue() : value;
                result = factory.createAttribute(value, newDescriptor, null);
            }
            return result;
        }

