    /**
     * Allow the parsing of features as a stream; the returned iterator can be used to step through
     * the inputstream of content one feature at a time without loading everything into memory.
     *
     * <p>The use of an elementName is optional; and can be used as a workaround in cases where the
     * schema is not available or correctly defined. The returned elements are wrapped up as a
     * Feature if needed. This mehtod can be used to retrive only the Geometry elements from a GML
     * docuemnt.
     *
     * @param in InputStream used as a source of SimpleFeature content
     * @param elementName The simple feature element; the schema will be checked for an entry that
     *     extends AbstratFeatureType
     */
    public SimpleFeatureIterator decodeFeatureIterator(InputStream in, QName elementName)
            throws IOException, ParserConfigurationException, SAXException {
        if (Version.GML2 == version
                || Version.GML3 == version
                || Version.WFS1_0 == version
                || Version.WFS1_1 == version) {
            // ParserDelegate parserDelegate = new XSDParserDelegate( gmlConfiguration );
            StreamingParser parser;
            if (elementName != null) {
                parser = new StreamingParser(gmlConfiguration, in, elementName);
            } else {
                parser = new StreamingParser(gmlConfiguration, in, SimpleFeature.class);
            }
            return iterator(parser);
        }
        return null;
    }

