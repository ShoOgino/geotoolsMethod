    /**
     * Decode a typeName from the provided schemaLocation.
     *
     * <p>The XMLSchema does not include CoordinateReferenceSystem we need to ask you to supply this
     * information.
     *
     * @param schemaLocation
     * @param typeName
     * @return SimpleFeatureType
     * @throws IOException
     */
    public SimpleFeatureType decodeSimpleFeatureType(URL schemaLocation, Name typeName)
            throws IOException {
        if (Version.WFS1_1 == version) {
            final QName featureName =
                    new QName(typeName.getNamespaceURI(), typeName.getLocalPart());

            String namespaceURI = featureName.getNamespaceURI();
            String uri = schemaLocation.toExternalForm();
            Configuration wfsConfiguration =
                    new org.geotools.gml3.ApplicationSchemaConfiguration(namespaceURI, uri);

            FeatureType parsed = GTXML.parseFeatureType(wfsConfiguration, featureName, crs);
            return DataUtilities.simple(parsed);
        }

        if (Version.WFS1_0 == version) {
            final QName featureName =
                    new QName(typeName.getNamespaceURI(), typeName.getLocalPart());

            String namespaceURI = featureName.getNamespaceURI();
            String uri = schemaLocation.toExternalForm();

            XSD xsd = new org.geotools.gml2.ApplicationSchemaXSD(namespaceURI, uri);
            Configuration configuration =
                    new Configuration(xsd) {
                        {
                            addDependency(new XSConfiguration());
                            addDependency(gmlConfiguration); // use our GML configuration
                        }

                        protected void registerBindings(java.util.Map bindings) {
                            // we have no special bindings
                        }
                    };

            FeatureType parsed = GTXML.parseFeatureType(configuration, featureName, crs);
            return DataUtilities.simple(parsed);
        }
        return null;
    }

