    private MapContent createMap(String shapeFilename) {

        final MapContent map = new MapContent();

        map.setTitle("TileLab");
        ReferencedEnvelope env =
                new ReferencedEnvelope(-180, 180, -80, 80, DefaultGeographicCRS.WGS84);

        env = new ReferencedEnvelope(5, 15, 45, 55, DefaultGeographicCRS.WGS84);

        // Will create the CRS
        ServiceTest.beforeClass();
        try {

            env = env.transform(ServiceTest.MERCATOR_CRS, true);
        } catch (TransformException | FactoryException e1) {
            e1.printStackTrace();
        }

        map.getViewport().setBounds(env);

        String baseURL =
                "http://ak.dynamic.t2.tiles.virtualearth.net/comp/ch/${code}?mkt=de-de&it=G,VE,BX,L,LA&shading=hill&og=78&n=z";
        map.addLayer(new TileLayer(new BingService("Road", baseURL)));
        map.addLayer(
                new AsyncTileLayer(new OSMService("Mapnik", "http://tile.openstreetmap.org/")));

        /*
         * String baseURL =
         * "http://raspberrypi:9000/wmts/1.0.0/WMTSCapabilities.xml";
         * TileService service = new WMTSService("states", baseURL, "states",
         * "webmercator",WMTSServiceType.REST);
         */

        /*
         * String baseURL =
         * "http://raspberrypi:9000/service?REQUEST=GetCapabilities&SERVICE=WMTS";
         * TileService service = new WMTSService("states", baseURL, "states",
         * "webmercator",WMTSServiceType.KVP);
         */

        // String baseURL =
        // "http://raspberrypi:8080/geoserver/gwc/service/wmts?REQUEST=GetCapabilities";
        // TileService service = new WMTSService("states", baseURL,
        // "topp:states", "EPSG:900913",WMTSServiceType.KVP, null);
        // map.addLayer(new AsyncTileLayer(service));
        createTestCoverageLayer(map);

        if (shapeFilename != null && shapeFilename.endsWith(".shp")) {
            // addTestShape(map, shapeFilename);
        }

        return map;
    }

