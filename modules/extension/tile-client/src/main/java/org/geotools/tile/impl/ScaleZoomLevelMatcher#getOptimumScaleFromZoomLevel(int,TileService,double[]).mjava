    /**
     * Calculates the "best" scale for a given zoom-level by calculating the scale for a tile in the
     * center of the map-extent and by taking the mapCrs in account. "Best" scale is the scale where
     * a 256x256 tile has also this size when displayed in uDig.
     */
    public double getOptimumScaleFromZoomLevel(
            int zoomLevel, TileService service, double[] tempScaleList) {
        // check if we have calculated this already
        if (!Double.isNaN(tempScaleList[zoomLevel])) {
            return tempScaleList[zoomLevel];
        }

        try {
            ReferencedEnvelope centerTileBounds = getBoundsOfCenterTileInMapCrs(zoomLevel, service);

            double _scale =
                    RendererUtilities.calculateScale(
                            centerTileBounds, service.getTileWidth(), service.getTileHeight(), DPI);

            // cache the scale
            tempScaleList[zoomLevel] = _scale;

            return _scale;
        } catch (Exception exc) {
            java.util.logging.Logger.getGlobal().log(java.util.logging.Level.INFO, "", exc);
        }

        // in case of error, return fallback zoom-level
        return service.getScaleList()[zoomLevel];
    }

