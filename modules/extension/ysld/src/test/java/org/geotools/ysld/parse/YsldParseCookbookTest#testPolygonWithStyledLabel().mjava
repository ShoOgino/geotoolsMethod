    @Test
    public void testPolygonWithStyledLabel() throws Exception {
        //    <UserStyle>
        //      <Title>SLD Cook Book: Polygon with styled label</Title>
        //      <FeatureTypeStyle>
        //        <Rule>
        //          <PolygonSymbolizer>
        //            <Fill>
        //              <CssParameter name="fill">#40FF40</CssParameter>
        //            </Fill>
        //            <Stroke>
        //              <CssParameter name="stroke">#FFFFFF</CssParameter>
        //              <CssParameter name="stroke-width">2</CssParameter>
        //            </Stroke>
        //          </PolygonSymbolizer>
        //          <TextSymbolizer>
        //            <Label>
        //              <ogc:PropertyName>name</ogc:PropertyName>
        //            </Label>
        //            <Font>
        //              <CssParameter name="font-family">Arial</CssParameter>
        //              <CssParameter name="font-size">11</CssParameter>
        //              <CssParameter name="font-style">normal</CssParameter>
        //              <CssParameter name="font-weight">bold</CssParameter>
        //            </Font>
        //            <LabelPlacement>
        //              <PointPlacement>
        //                <AnchorPoint>
        //                  <AnchorPointX>0.5</AnchorPointX>
        //                  <AnchorPointY>0.5</AnchorPointY>
        //                </AnchorPoint>
        //              </PointPlacement>
        //            </LabelPlacement>
        //            <Fill>
        //              <CssParameter name="fill">#000000</CssParameter>
        //            </Fill>
        //            <VendorOption name="autoWrap">60</VendorOption>
        //            <VendorOption name="maxDisplacement">150</VendorOption>
        //          </TextSymbolizer>
        //        </Rule>
        //      </FeatureTypeStyle>
        //    </UserStyle>

        Style style = parse("poly", "styled-label.sld");

        PolygonSymbolizer poly = SLD.polySymbolizer(style);
        assertEquals(color("40FF40"), SLD.color(poly.getFill()));
        assertEquals(color("FFFFFF"), SLD.color(poly.getStroke()));
        assertEquals(2, SLD.width(poly.getStroke()));

        TextSymbolizer text = SLD.textSymbolizer(style);
        assertThat(SLD.textLabel(text), TestUtils.attribute("name"));
        assertEquals(Color.black, SLD.color(text.getFill()));

        PointPlacement place = (PointPlacement) text.getLabelPlacement();
        assertEquals(0.5, Filters.asDouble(place.getAnchorPoint().getAnchorPointX()), 0.1);
        assertEquals(0.5, Filters.asDouble(place.getAnchorPoint().getAnchorPointY()), 0.1);

        Font font = SLD.font(text);
        assertEquals("Arial", Filters.asString(font.getFamily().get(0)));
        assertEquals(11, Filters.asInt(font.getSize()));
        assertEquals("normal", Filters.asString(font.getStyle()));
        assertEquals("bold", Filters.asString(font.getWeight()));

        Map<String, String> options = text.getOptions();
        assertEquals("60", options.get("autoWrap"));
        assertEquals("150", options.get("maxDisplacement"));
    }

