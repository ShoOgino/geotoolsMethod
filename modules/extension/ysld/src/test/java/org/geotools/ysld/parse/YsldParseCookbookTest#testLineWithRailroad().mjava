    @Test
    public void testLineWithRailroad() throws Exception {
        //    <UserStyle>
        //      <Title>SLD Cook Book: Railroad (hatching)</Title>
        //      <FeatureTypeStyle>
        //        <Rule>
        //          <LineSymbolizer>
        //            <Stroke>
        //              <CssParameter name="stroke">#333333</CssParameter>
        //              <CssParameter name="stroke-width">3</CssParameter>
        //            </Stroke>
        //          </LineSymbolizer>
        //         <LineSymbolizer>
        //            <Stroke>
        //              <GraphicStroke>
        //                <Graphic>
        //                  <Mark>
        //                    <WellKnownName>shape://vertline</WellKnownName>
        //                    <Stroke>
        //                      <CssParameter name="stroke">#333333</CssParameter>
        //                      <CssParameter name="stroke-width">1</CssParameter>
        //                    </Stroke>
        //                  </Mark>
        //                  <Size>12</Size>
        //                </Graphic>
        //              </GraphicStroke>
        //            </Stroke>
        //          </LineSymbolizer>
        //        </Rule>
        //      </FeatureTypeStyle>
        //    </UserStyle>

        Style style = parse("line", "railroad.sld");

        LineSymbolizer line = (LineSymbolizer) SLD.rules(style)[0].symbolizers().get(0);
        assertEquals(color("333333"), SLD.color(line));
        assertEquals(3, SLD.width(line));

        line = (LineSymbolizer) SLD.rules(style)[0].symbolizers().get(1);

        Graphic g = line.getStroke().getGraphicStroke();

        Mark mark = SLD.mark(g);
        assertEquals("shape://vertline", SLD.wellKnownName(mark));
        assertEquals(color("333333"), SLD.color(mark.getStroke()));
        assertEquals(1, SLD.width(mark.getStroke()));

        assertEquals(12, Filters.asInt(g.getSize()));
    }

