    @Test
    public void testLineWithOptimizedAndStyledLabel() throws Exception {
        //    <UserStyle>
        //      <Title>SLD Cook Book: Optimized and styled label</Title>
        //      <FeatureTypeStyle>
        //        <Rule>
        //          <LineSymbolizer>
        //            <Stroke>
        //              <CssParameter name="stroke">#FF0000</CssParameter>
        //            </Stroke>
        //          </LineSymbolizer>
        //          <TextSymbolizer>
        //            <Label>
        //              <ogc:PropertyName>name</ogc:PropertyName>
        //            </Label>
        //            <LabelPlacement>
        //              <LinePlacement />
        //            </LabelPlacement>
        //            <Fill>
        //              <CssParameter name="fill">#000000</CssParameter>
        //            </Fill>
        //            <Font>
        //              <CssParameter name="font-family">Arial</CssParameter>
        //              <CssParameter name="font-size">10</CssParameter>
        //              <CssParameter name="font-style">normal</CssParameter>
        //              <CssParameter name="font-weight">bold</CssParameter>
        //            </Font>
        //            <VendorOption name="followLine">true</VendorOption>
        //            <VendorOption name="maxAngleDelta">90</VendorOption>
        //            <VendorOption name="maxDisplacement">400</VendorOption>
        //            <VendorOption name="repeat">150</VendorOption>
        //          </TextSymbolizer>
        //        </Rule>
        //      </FeatureTypeStyle>
        //    </UserStyle>

        Style style = parse("line", "optimized-styled-label.sld");

        LineSymbolizer line = SLD.lineSymbolizer(style);
        assertEquals(Color.red, SLD.color(line));

        TextSymbolizer text = SLD.textSymbolizer(style);
        assertEquals("name", SLD.textLabelString(text));
        assertEquals(Color.black, SLD.color(text.getFill()));

        Font font = SLD.font(text);
        assertEquals("Arial", Filters.asString(font.getFamily().get(0)));
        assertEquals(10, Filters.asInt(font.getSize()));
        assertEquals("normal", Filters.asString(font.getStyle()));
        assertEquals("bold", Filters.asString(font.getWeight()));

        Map<String, String> options = text.getOptions();
        assertEquals("true", options.get("followLine"));
        assertEquals("90", options.get("maxAngleDelta"));
        assertEquals("400", options.get("maxDisplacement"));
        assertEquals("150", options.get("repeat"));
    }

