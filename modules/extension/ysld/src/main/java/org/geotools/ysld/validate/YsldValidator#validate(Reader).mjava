    /**
     * Validate the passed style
     *
     * @param input Reader for the style
     * @return List of {@link MarkedYAMLException} representing any errors, or an empty list if the
     *     style is valid
     */
    public List<MarkedYAMLException> validate(Reader input) throws IOException {
        YsldValidateContext context = new YsldValidateContext();
        context.zCtxtFinders = this.zCtxtFinders;
        context.push(new RootValidator());

        try {
            for (Event evt : YamlUtil.getSafeYaml().parse(input)) {
                YsldValidateHandler h = context.peek();

                if (evt instanceof MappingStartEvent) {
                    h.mapping((MappingStartEvent) evt, context);
                } else if (evt instanceof MappingEndEvent) {
                    h.endMapping((MappingEndEvent) evt, context);
                } else if (evt instanceof SequenceStartEvent) {
                    h.sequence((SequenceStartEvent) evt, context);
                } else if (evt instanceof SequenceEndEvent) {
                    h.endSequence((SequenceEndEvent) evt, context);
                } else if (evt instanceof ScalarEvent) {
                    h.scalar((ScalarEvent) evt, context);
                } else if (evt instanceof AliasEvent) {
                    h.alias((AliasEvent) evt, context);
                }
            }
        } catch (MarkedYAMLException e) {
            context.error(e);
        } catch (EmptyStackException e) {
            // The ECQLParser uses java.util.Stack for parsing. If we get an exception from here,
            // we can narrow the cause down to CQL.
            throw new RuntimeException("Error parsing CQL expression", e);
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
        return context.errors();
    }

