    @Override
    protected void encode(Rule rule) {
        put("name", rule.getName());
        put("title", rule.getTitle());
        put("abstract", rule.getAbstract());
        if (rule.getLegend() != null) {
            Graphic graphic = null;
            if (rule.getLegend() instanceof Graphic) {
                graphic = (Graphic) rule.getLegend();
            } else {
                // convert org.opengis.style.GraphicLegend to org.geotools.styling.Graphic
                PointSymbolizer point = sf.createPointSymbolizer();
                point.setGraphic(rule.getLegend());
                graphic = point.getGraphic();
            }
            push("legend").inline(new GraphicEncoder(graphic)).pop();
        }
        if (rule.getFilter() != null && rule.getFilter() != Filter.INCLUDE) {
            put(
                    "filter",
                    String.format("${%s}", escapeForEmbededCQL(ECQL.toCQL(rule.getFilter()))));
        }
        if (rule.isElseFilter()) {
            put("else", true);
        }

        Tuple t =
                Tuple.of(
                        toStringOrNull(rule.getMinScaleDenominator(), "min"),
                        toStringOrNull(rule.getMaxScaleDenominator(), "max"));
        if (!t.isNull()) {
            put("scale", t);
        }

        put("symbolizers", new SymbolizersEncoder(rule));
    }

