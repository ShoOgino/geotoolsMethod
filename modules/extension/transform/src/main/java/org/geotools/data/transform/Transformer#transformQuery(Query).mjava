    /**
     * Transforms a query so that it can be run against the original feature source and provides all
     * the necessary attributes to evaluate the requested expressions
     * 
     * @param query
     * @return
     */
    Query transformQuery(Query query) {
        Filter txFilter = transformFilter(query.getFilter());
        Query txQuery = new Query(query);
        txQuery.setTypeName(source.getSchema().getTypeName());
        txQuery.setPropertyNames(getRequiredAttributes(query));
        txQuery.setSortBy(getTransformedSortBy(query));
        txQuery.setFilter(txFilter);

        // can we support the required sorting?
        QueryCapabilities caps = source.getQueryCapabilities();
        if (query.getStartIndex() != null && !caps.isJoiningSupported()) {
            txQuery.setStartIndex(null);
        }
        if (query.getSortBy() != null && !caps.supportsSorting(query.getSortBy())) {
            txQuery.setSortBy(null);
        }

        // if the original query had sorting but we cannot pass it down we
        // have to remove offset and limit too
        if (query.getSortBy() != null && txQuery.getSortBy() == null) {
            txQuery.setStartIndex(null);
            txQuery.setMaxFeatures(Query.DEFAULT_MAX);
        }

        // if the wrapped store cannot apply offsets we have to remove them too
        if (!caps.isOffsetSupported()) {
            txQuery.setStartIndex(null);
        }

        return txQuery;
    }

