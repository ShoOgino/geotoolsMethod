    /**
     * Creates line features according to the provided {@code OrthoLineDef} objects and places them
     * into the provided {@link ListFeatureCollection}. Densified lines (lines strings with
     * additional vertices along their length) can be created by setting the value of {@code
     * vertexSpacing} greater than zero; if so, any lines more than twice as long as this value will
     * be densified.
     *
     * @param lineDefs line definitions specifying the orientation, spacing and level of lines
     * @param lineFeatureBuilder the feature build to create {@code SimpleFeatures} from line
     *     elements
     * @param vertexSpacing maximum distance between adjacent vertices along a line
     * @param fc the feature collection into which generated line features are placed
     */
    public void buildGrid(
            Collection<OrthoLineDef> lineDefs,
            GridFeatureBuilder lineFeatureBuilder,
            double vertexSpacing,
            ListFeatureCollection fc) {

        init(lineDefs, lineFeatureBuilder, vertexSpacing);

        List<OrthoLineDef> horizontal = new ArrayList<OrthoLineDef>();
        List<OrthoLineDef> vertical = new ArrayList<OrthoLineDef>();

        for (OrthoLineDef lineDef : lineDefs) {
            switch (lineDef.getOrientation()) {
                case HORIZONTAL:
                    horizontal.add(lineDef);
                    break;

                case VERTICAL:
                    vertical.add(lineDef);
                    break;
            }
        }

        doBuildLineFeatures(
                horizontal,
                LineOrientation.HORIZONTAL,
                lineFeatureBuilder,
                densify,
                vertexSpacing,
                fc);
        doBuildLineFeatures(
                vertical, LineOrientation.VERTICAL, lineFeatureBuilder, densify, vertexSpacing, fc);
    }

