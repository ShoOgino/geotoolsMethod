    /**
     * Include the provided envelope, expanding as necessary and rounding the bounding coordinates
     * such that they are multiples of the specified resolution. For example, if {@code resolution}
     * is 100 then the min and max bounding coordinates of this envelope will set to mutliples of
     * 100 by rounding down the min values and rounding up the max values if required.
     *
     * <pre><code>
     * // Example, create a new envelope that cntains an input envlope and
     * // whose boundind coordinates are multiples of 100
     * //
     * ReferencedEnvelope inputEnv = ...
     * ReferencedEnvelope roundedEnv = new ReferencedEnvelope();
     * roundedEnv.expandToInclude(inputEnv, 100);
     * </code></pre>
     *
     * @param srcEnv the envelope to include
     * @param resolution resolution (in world distance units) of the resulting boundary coordinates
     * @return a new envelope with 'rounded' bounding coordinates
     */
    public static ReferencedEnvelope expandToInclude(ReferencedEnvelope srcEnv, double resolution) {
        double minX = roundOrdinate(srcEnv.getMinX(), resolution, false);
        double maxX = roundOrdinate(srcEnv.getMaxX(), resolution, true);
        double minY = roundOrdinate(srcEnv.getMinY(), resolution, false);
        double maxY = roundOrdinate(srcEnv.getMaxY(), resolution, true);

        ReferencedEnvelope expanded = new ReferencedEnvelope(srcEnv);
        expanded.expandToInclude(minX, minY);
        expanded.expandToInclude(maxX, maxY);
        return expanded;
    }

