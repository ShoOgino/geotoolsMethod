    @Test
    public void testSimpleFeatureBasics() {

        GeneralizationInfosProvider provider = new GeneralizationInfosProviderImpl();
        GeneralizationInfos ginfos = null;
        PreGeneralizedDataStore ds = null;
        SimpleFeatureCollection fCollection = null;
        String typeName = "GenStreams";
        try {
            ginfos = provider.getGeneralizationInfos("src/test/resources/geninfo_vertical.xml");
            ds = new PreGeneralizedDataStore(ginfos, TestSetup.REPOSITORY);
            fCollection = ds.getFeatureSource(typeName).getFeatures();
        } catch (IOException ex) {
            java.util.logging.Logger.getGlobal().log(java.util.logging.Level.INFO, "", ex);
            Assert.fail();
        }

        try (SimpleFeatureIterator it = fCollection.features()) {
            SimpleFeature feature1 = it.next();

            SimpleFeature feature2 = it.next();
            // SimpleFeature feature3 = it.next();

            Assert.assertTrue(feature1 instanceof PreGeneralizedSimpleFeature);

            for (int i = 0; i < feature1.getType().getAttributeDescriptors().size(); i++) {
                Object value1 = feature1.getAttribute(i);
                Object value2 =
                        feature1.getAttribute(
                                feature1.getType().getAttributeDescriptors().get(i).getLocalName());
                Assert.assertSame(value1, value2);
            }

            Assert.assertNotNull(feature1.getAttribute("CAT_ID"));
            Assert.assertNotNull(feature1.getAttribute(new NameImpl("CAT_ID")));
            Assert.assertEquals(4, feature1.getAttributeCount());

            assertNotEquals(feature1, feature2);
            Assert.assertEquals(feature1, feature1);
            Assert.assertFalse(feature1.hashCode() == feature2.hashCode());
            Assert.assertEquals(feature1.hashCode(), feature1.hashCode());

            assertNotEquals(feature1.getID(), feature2.getID());

            Assert.assertEquals(feature1.getBounds(), feature1.getBounds());
            assertNotEquals(feature1.getBounds(), feature2.getBounds());

            Assert.assertEquals(feature1.getDefaultGeometry(), feature1.getDefaultGeometry());
            assertNotEquals(feature1.getDefaultGeometry(), feature2.getDefaultGeometry());

            Assert.assertEquals(
                    "the_geom", feature1.getDefaultGeometryProperty().getName().getLocalPart());
            Assert.assertEquals(
                    feature1.getDefaultGeometryProperty().getName(),
                    feature2.getDefaultGeometryProperty().getName());
            assertNotEquals(
                    feature1.getDefaultGeometryProperty(), feature2.getDefaultGeometryProperty());

            Assert.assertEquals(feature1.getFeatureType(), feature2.getFeatureType());
            Assert.assertEquals("GenStreams", feature2.getFeatureType().getName().getLocalPart());

            Assert.assertEquals(feature1.getIdentifier(), feature1.getIdentifier());
            assertNotEquals(feature1.getIdentifier(), feature2.getIdentifier());

            Assert.assertEquals(4, feature1.getProperties().size());
            Assert.assertEquals(
                    feature1.getProperty("CAT_ID").getValue(), feature1.getAttribute("CAT_ID"));
            Assert.assertEquals(
                    feature1.getProperty("the_geom").getValue(), feature1.getAttribute("the_geom"));
            // assertFalse(feature1.getProperty("CAT_ID").getValue().equals(feature2.getAttribute
            // ("CAT_ID"
            // )));
            assertNotEquals(
                    feature1.getProperty("the_geom").getValue(), feature2.getAttribute("the_geom"));

            Assert.assertTrue(
                    feature1.getProperties("CAT_ID").contains(feature1.getProperty("CAT_ID")));
            Assert.assertFalse(
                    feature2.getProperties("the_geom").contains(feature1.getProperty("the_geom")));

            Assert.assertTrue(
                    feature1.getProperties(new NameImpl("CAT_ID"))
                            .contains(feature1.getProperty("CAT_ID")));
            Assert.assertFalse(
                    feature2.getProperties(new NameImpl("the_geom"))
                            .contains(feature1.getProperty("the_geom")));

            Assert.assertEquals(feature1.getType(), fCollection.getSchema());
            Assert.assertEquals(feature1.getValue(), feature1.getProperties());

            Assert.assertNotNull(feature1.getUserData());
        } finally {
            ds.dispose();
        }
    }

