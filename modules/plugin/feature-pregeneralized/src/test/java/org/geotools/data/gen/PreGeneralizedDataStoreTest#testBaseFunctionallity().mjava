    public void testBaseFunctionallity() {

        GeneralizationInfosProvider provider = new GeneralizationInfosProviderImpl();
        GeneralizationInfos ginfos = null;
        try {
            ginfos = provider.getGeneralizationInfos("src/test/resources/geninfo_only_base.xml");
            PreGeneralizedDataStore ds = new PreGeneralizedDataStore(ginfos, TestSetup.REPOSITORY);

            String typeName = ds.getTypeNames()[0];
            assertEquals("GenStreams", typeName);
            Query query = new Query(typeName);

            FeatureReader<SimpleFeatureType, SimpleFeature> reader =
                    ds.getFeatureReader(query, Transaction.AUTO_COMMIT);
            assertNotNull(reader);
            reader.close();

            SimpleFeatureSource fsource = ds.getFeatureSource(typeName);
            assertNotNull(fsource);

            fsource = ds.getFeatureSource(new NameImpl(typeName));
            assertNotNull(fsource);

            ServiceInfo si = ds.getInfo();
            assertNotNull(si);
            // System.out.println(si);

            List<Name> names = ds.getNames();
            assertTrue(names.contains(new NameImpl(typeName)));
            assertEquals("GenStreams", ds.getNames().get(0).getLocalPart());

            fsource = DataUtilities.createView(ds, query);
            assertNotNull(fsource);

            assertNotNull(ds.getSchema(typeName));
            assertNotNull(ds.getSchema(new NameImpl(typeName)));

            ds.dispose();
        } catch (Exception e) {
            java.util.logging.Logger.getGlobal().log(java.util.logging.Level.INFO, "", e);
            Assert.fail();
        }
    }

