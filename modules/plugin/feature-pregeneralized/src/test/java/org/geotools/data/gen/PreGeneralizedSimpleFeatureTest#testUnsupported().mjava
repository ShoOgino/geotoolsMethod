    @Test
    public void testUnsupported() {

        GeneralizationInfosProvider provider = new GeneralizationInfosProviderImpl();
        GeneralizationInfos ginfos = null;
        PreGeneralizedDataStore ds = null;
        SimpleFeatureCollection fCollection = null;
        String typeName = "GenStreams";
        try {
            ginfos = provider.getGeneralizationInfos("src/test/resources/geninfo_vertical.xml");
            ds = new PreGeneralizedDataStore(ginfos, TestSetup.REPOSITORY);
            fCollection = ds.getFeatureSource(typeName).getFeatures();
        } catch (IOException ex) {
            java.util.logging.Logger.getGlobal().log(java.util.logging.Level.INFO, "", ex);
            Assert.fail();
        }

        try (SimpleFeatureIterator it = fCollection.features()) {
            SimpleFeature feature1 = it.next();

            Assert.assertTrue(feature1 instanceof PreGeneralizedSimpleFeature);

            boolean error;

            error = true;
            try {
                feature1.setAttribute(0, null);
            } catch (UnsupportedOperationException ex) {
                error = false;
            }
            if (error) {
                Assert.fail();
            }

            try {
                feature1.setAttribute("CAT_ID", null);
            } catch (UnsupportedOperationException ex) {
                error = false;
            }
            if (error) {
                Assert.fail();
            }

            try {
                feature1.setAttribute(new NameImpl("CAT_ID"), null);
            } catch (UnsupportedOperationException ex) {
                error = false;
            }
            if (error) {
                Assert.fail();
            }

            try {
                feature1.setAttributes((List<Object>) null);
            } catch (UnsupportedOperationException ex) {
                error = false;
            }
            if (error) {
                Assert.fail();
            }

            try {
                feature1.setAttributes(new Object[0]);
            } catch (UnsupportedOperationException ex) {
                error = false;
            }
            if (error) {
                Assert.fail();
            }

            try {
                feature1.setDefaultGeometry(null);
            } catch (UnsupportedOperationException ex) {
                error = false;
            }
            if (error) {
                Assert.fail();
            }

            try {
                feature1.setDefaultGeometryProperty(null);
            } catch (UnsupportedOperationException ex) {
                error = false;
            }
            if (error) {
                Assert.fail();
            }

            try {
                feature1.setValue(null);
            } catch (UnsupportedOperationException ex) {
                error = false;
            }
            if (error) {
                Assert.fail();
            }

            try {
                feature1.setValue((Object) null);
            } catch (UnsupportedOperationException ex) {
                error = false;
            }
            if (error) {
                Assert.fail();
            }
        } finally {
            ds.dispose();
        }
    }

