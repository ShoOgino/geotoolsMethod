    private static void createShapeFilePyramd() throws IOException {

        File baseDir = new File("target" + File.separator + "0");
        if (baseDir.exists() == false) baseDir.mkdir();
        else return; // already done

        // ///////// create property file for streams
        String propFileName =
                "target" + File.separator + "0" + File.separator + "streams.properties";
        File propFile = new File(propFileName);
        try (FileOutputStream out = new FileOutputStream(propFile)) {
            String line = ShapefileDataStoreFactory.URLP.key + "=" + "file:target/0/streams.shp\n";
            out.write(line.getBytes());
        }
        // ////////

        URL url = TestData.url("shapes/streams.shp");

        ShapefileDataStore shapeDS =
                (ShapefileDataStore) new ShapefileDataStoreFactory().createDataStore(url);

        Map<String, Serializable> params = new HashMap<>();
        FileDataStoreFactorySpi factory = new ShapefileDataStoreFactory();
        params.put(
                ShapefileDataStoreFactory.URLP.key,
                new File("target/0/streams.shp").toURI().toURL());
        ShapefileDataStore ds = (ShapefileDataStore) factory.createNewDataStore(params);

        SimpleFeatureSource fs = shapeDS.getFeatureSource(shapeDS.getTypeNames()[0]);

        ds.createSchema(fs.getSchema());
        ds.forceSchemaCRS(fs.getSchema().getCoordinateReferenceSystem());
        try (FeatureWriter<SimpleFeatureType, SimpleFeature> writer =
                        ds.getFeatureWriter(ds.getTypeNames()[0], Transaction.AUTO_COMMIT);
                SimpleFeatureIterator it = fs.getFeatures().features()) {
            while (it.hasNext()) {
                SimpleFeature f = it.next();
                SimpleFeature fNew = writer.next();
                fNew.setAttributes(f.getAttributes());
                writer.write();
            }
        }
        ds.dispose();
        shapeDS.dispose();

        Toolbox tb = new Toolbox();
        tb.parse(
                new String[] {
                    "generalize",
                    "target" + File.separator + "0" + File.separator + "streams.shp",
                    "target",
                    "5.0,10.0,20.0,50.0"
                });
    }

