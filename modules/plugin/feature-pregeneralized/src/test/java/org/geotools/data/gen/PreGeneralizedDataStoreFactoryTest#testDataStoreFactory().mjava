    @Test
    public void testDataStoreFactory() {

        Map<String, Serializable> paramMap = new HashMap<>();
        try {
            paramMap.put(
                    PreGeneralizedDataStoreFactory.REPOSITORY_CLASS.key,
                    DefaultRepository.class.getName());
            Assert.assertNull(DataStoreFinder.getDataStore(paramMap));

            paramMap.clear();
            paramMap.put(
                    PreGeneralizedDataStoreFactory.GENERALIZATION_INFOS_PROVIDER_CLASS.key,
                    "org.geotools.data.gen.info.GeneralizationInfosProviderImpl");
            Assert.assertNull(DataStoreFinder.getDataStore(paramMap));

            paramMap.clear();
            paramMap.put(
                    PreGeneralizedDataStoreFactory.REPOSITORY_CLASS.key,
                    DefaultRepository.class.getName());
            paramMap.put(
                    PreGeneralizedDataStoreFactory.GENERALIZATION_INFOS_PROVIDER_CLASS.key,
                    "org.geotools.data.gen.info.GeneralizationInfosProviderImpl");
            paramMap.put(
                    PreGeneralizedDataStoreFactory.GENERALIZATION_INFOS_PROVIDER_PARAM.key,
                    "src/test/resources/geninfo1.xml");
            Assert.assertNotNull(DataStoreFinder.getDataStore(paramMap));
        } catch (IOException ex) {
            Assert.fail();
        }

        paramMap.clear();
        boolean error = false;
        try {
            paramMap.put(
                    PreGeneralizedDataStoreFactory.REPOSITORY_CLASS.key,
                    DefaultRepository.class.getName());
            paramMap.put(
                    PreGeneralizedDataStoreFactory.GENERALIZATION_INFOS_PROVIDER_CLASS.key,
                    "org.geotools.data.gen.info.GeneralizationInfosProviderImpl");
            paramMap.put(
                    PreGeneralizedDataStoreFactory.GENERALIZATION_INFOS_PROVIDER_PARAM.key, "yyyy");
            DataStoreFinder.getDataStore(paramMap);
        } catch (IOException ex) {
            error = true;
        }
        Assert.assertTrue(error);

        paramMap.clear();
        error = false;
        try {
            paramMap.put(PreGeneralizedDataStoreFactory.REPOSITORY_CLASS.key, "XXX");
            paramMap.put(
                    PreGeneralizedDataStoreFactory.GENERALIZATION_INFOS_PROVIDER_CLASS.key,
                    "org.geotools.data.gen.info.GeneralizationInfosProviderImpl");
            paramMap.put(
                    PreGeneralizedDataStoreFactory.GENERALIZATION_INFOS_PROVIDER_PARAM.key,
                    "src/test/resources/geninfo1.xml");
            DataStoreFinder.getDataStore(paramMap);
        } catch (IOException ex) {
            error = true;
        }
        Assert.assertTrue(error);
    }

