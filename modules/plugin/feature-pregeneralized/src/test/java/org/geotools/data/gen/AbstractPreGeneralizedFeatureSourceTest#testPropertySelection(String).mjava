    protected void testPropertySelection(String configName) {

        try {

            PreGeneralizedDataStore ds = getDataStore(configName);

            SimpleFeatureSource fs = ds.getFeatureSource("GenStreams");
            Assert.assertTrue(fs.getSupportedHints().contains(Hints.GEOMETRY_DISTANCE));

            double[] distances = new double[] {1, 5, 10, 20, 25};

            for (double distance : distances) {
                System.out.println(distance);
                // subset of the properties, and out of order
                Query query =
                        new Query(
                                "GenStreams", Filter.INCLUDE, new String[] {"CAT_ID", "the_geom"});
                query.getHints().put(Hints.GEOMETRY_DISTANCE, distance);

                // check the collection schema
                SimpleFeatureCollection fc = fs.getFeatures(query);
                SimpleFeatureType schema = fc.getSchema();
                Assert.assertEquals(2, schema.getAttributeCount());
                Assert.assertEquals("CAT_ID", schema.getDescriptor(0).getLocalName());
                Assert.assertEquals("the_geom", schema.getDescriptor(1).getLocalName());

                // grab a feature and check the schema and direct attribute access
                try (SimpleFeatureIterator features = fc.features()) {
                    while (features.hasNext()) {
                        SimpleFeature sf = features.next();
                        SimpleFeatureType sfSchema = sf.getType();
                        Assert.assertEquals(2, sfSchema.getAttributeCount());
                        Assert.assertEquals("CAT_ID", sfSchema.getDescriptor(0).getLocalName());
                        Assert.assertEquals("the_geom", sfSchema.getDescriptor(1).getLocalName());

                        // attributes are correctly mapped to indexes
                        Assert.assertTrue(sf.getAttribute(0) instanceof Number);
                        Assert.assertTrue(sf.getAttribute(1) instanceof Geometry);
                    }
                }
            }
        } catch (Exception ex) {
            Assert.fail(ex.getMessage());
        }
    }

