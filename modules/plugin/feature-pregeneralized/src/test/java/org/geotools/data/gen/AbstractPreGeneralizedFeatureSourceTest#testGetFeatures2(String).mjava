    protected void testGetFeatures2(String configName) {
        try {
            PreGeneralizedDataStore ds = getDataStore(configName);

            SimpleFeatureSource fs = ds.getFeatureSource("GenStreams");
            Assert.assertTrue(fs.getSupportedHints().contains(Hints.GEOMETRY_DISTANCE));

            SimpleFeatureCollection fCollection = fs.getFeatures();
            String typeName = fCollection.getSchema().getTypeName();
            Assert.assertEquals("GenStreams", typeName);
            Assert.assertTrue(fCollection.size() > 0);
            Assert.assertFalse(fCollection.isEmpty());
            try (SimpleFeatureIterator iterator = fCollection.features()) {
                while (iterator.hasNext()) {
                    SimpleFeature f = iterator.next();
                    checkPoints(f, 0.0);
                }
            }
            fCollection = fs.getFeatures(Filter.INCLUDE);
            typeName = fCollection.getSchema().getTypeName();
            Assert.assertEquals("GenStreams", typeName);
            Assert.assertTrue(fCollection.size() > 0);
            Assert.assertFalse(fCollection.isEmpty());
            try (SimpleFeatureIterator iterator = fCollection.features()) {
                while (iterator.hasNext()) {

                    SimpleFeature f = iterator.next();
                    checkPoints(f, 0.0);
                }
                // iterator.remove() no longer provided
            }
            ds.dispose();

        } catch (Exception ex) {
            Assert.fail(ex.getMessage());
        }
    }

