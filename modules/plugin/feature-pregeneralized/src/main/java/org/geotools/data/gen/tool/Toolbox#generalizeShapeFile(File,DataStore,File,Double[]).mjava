    @SuppressWarnings("PMD.CloseResource") // writers are actually closed
    protected void generalizeShapeFile(
            File shapeFile, DataStore shapeDS, File targetDir, Double[] distanceArray)
            throws IOException {
        String typeName = shapeDS.getTypeNames()[0];
        SimpleFeatureSource fs = shapeDS.getFeatureSource(typeName);
        SimpleFeatureType ftype = fs.getSchema();
        DataStore[] dataStores = createDataStores(shapeFile, targetDir, ftype, distanceArray);

        SimpleFeatureCollection fcoll = fs.getFeatures();
        List<FeatureWriter<SimpleFeatureType, SimpleFeature>> writers = new ArrayList<>();
        try (SimpleFeatureIterator it = fcoll.features()) {
            int countTotal = fcoll.size();

            for (DataStore dataStore : dataStores) {
                writers.add(dataStore.getFeatureWriter(typeName, Transaction.AUTO_COMMIT));
            }

            int counter = 0;
            while (it.hasNext()) {
                SimpleFeature feature = it.next();
                for (int i = 0; i < distanceArray.length; i++) {
                    FeatureWriter<SimpleFeatureType, SimpleFeature> w = writers.get(i);
                    SimpleFeature genFeature = w.next();
                    genFeature.setAttributes(feature.getAttributes());
                    Geometry newGeom =
                            TopologyPreservingSimplifier.simplify(
                                    (Geometry) feature.getDefaultGeometry(), distanceArray[i]);
                    genFeature.setDefaultGeometry(newGeom);
                    w.write();
                }
                counter++;
                showProgress(countTotal, counter);
            }
        } finally {
            for (FeatureWriter<SimpleFeatureType, SimpleFeature> w : writers) {
                try {
                    w.close();
                } catch (Exception e) {
                    // ignore on purpose and move on
                }
            }
        }

        for (DataStore ds : dataStores) {
            ds.dispose();
        }
    }

