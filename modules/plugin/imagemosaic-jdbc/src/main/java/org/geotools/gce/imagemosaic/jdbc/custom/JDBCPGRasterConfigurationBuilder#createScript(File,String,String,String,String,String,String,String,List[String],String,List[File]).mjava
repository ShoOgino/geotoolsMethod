    /**
     * Create a shell script that does raster2pgsql invokations which do the raster tiles import into the PGRaster database
     * @param dataDir the main datadir (containing tiles)
     * @param database the database
     * @param schema the schema where tiles need to be added
     * @param host the postgres DB server
     * @param port the postgres DB server port
     * @param pguser the postgres user
     * @param tablePrefix the prefix to be put at the head of each table name containing tiles at different levels
     * @param fileExtension the file extension of the raster files to be imported (as an instance, *.png or *.tif)
     * @param tileTables a List where table names will be added. 
     * @param importOptions 
     * @param filesToBeDeleted a List of files which need to be deleted at the end of the import
     * @return the script content as a String
     */
    private static String createScript(final File dataDir, final String database, final String schema, final String host, final String port,
            final String pguser, final String tablePrefix, final String fileExtension, final List<String> tileTables,
            final String importOptions, List<File> filesToBeDeleted) {
        // Prepare the raster2pgsql command by replacing values
        final String mainCommand = prepareMainCommand(importOptions, fileExtension, database, pguser,
                schema, host, port);

        final StringBuilder commands = new StringBuilder();
        final File[] files = dataDir.listFiles();
        for (File file : files) {
            if (file.isDirectory()) {
                // scan folders for tiles to be imported
                final String importCommand = updateCommand(file, mainCommand, tablePrefix,
                        fileExtension, tileTables, filesToBeDeleted);
                commands.append(importCommand).append(LINE_SEPARATOR);
            }
        }
        String importCommand = updateCommand(dataDir, mainCommand, tablePrefix, fileExtension,
                tileTables, filesToBeDeleted);
        commands.append(importCommand).append(LINE_SEPARATOR);
        return commands.toString();
    }

