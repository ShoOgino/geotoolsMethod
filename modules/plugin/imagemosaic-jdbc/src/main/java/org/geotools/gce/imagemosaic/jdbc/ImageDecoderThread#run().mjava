    @Override
    public void run() {
        if ((imageBytes == null) || (imageBytes.length == 0)) { // nothing to do
            return;
        }

        try {

            BufferedImage dbTileImage = null;

            boolean triedFromStream = false;
            if (levelInfo.getCanImageIOReadFromInputStream()) {
                dbTileImage = ImageIO.read(new ByteArrayInputStream(imageBytes));
                triedFromStream = true;
            }
            if (dbTileImage == null) {
                if (triedFromStream) {
                    LOGGER.warning("Could not read " + location + " from stream, switch to JAI");
                }
                dbTileImage = readImage2(imageBytes);
            }

            if (requestEnvelope.contains(dbTileEnvelope, true)) {
                tileQueue.add(new TileQueueElement(location, dbTileImage, dbTileEnvelope));
            } else {
                GeneralEnvelope intersectionEnvelope = new GeneralEnvelope(dbTileEnvelope);
                intersectionEnvelope.intersect(requestEnvelope);

                // x and y refers here to Image coordinates (so y is inverted wrt Envelope)
                int xmin =
                        (int)
                                (Math.round(
                                        (intersectionEnvelope.getMinimum(0)
                                                        - dbTileEnvelope.getMinimum(0))
                                                / levelInfo.getResX()));
                int ymin =
                        (int)
                                (Math.round(
                                        (dbTileEnvelope.getMaximum(1)
                                                        - intersectionEnvelope.getMaximum(1))
                                                / levelInfo.getResY()));
                int xmax =
                        (int)
                                (Math.round(
                                        (intersectionEnvelope.getMaximum(0)
                                                        - dbTileEnvelope.getMinimum(0))
                                                / levelInfo.getResX()));
                int ymax =
                        (int)
                                (Math.round(
                                        (dbTileEnvelope.getMaximum(1)
                                                        - intersectionEnvelope.getMinimum(1))
                                                / levelInfo.getResY()));
                int width = xmax - xmin;
                int height = ymax - ymin;

                if ((width > 0) && (height > 0)) {

                    BufferedImage clippedImage = dbTileImage.getSubimage(xmin, ymin, width, height);

                    tileQueue.add(
                            new TileQueueElement(location, clippedImage, intersectionEnvelope));
                }
            }
        } catch (IOException ex) {
            LOGGER.severe("Decorde error for tile " + location);
            LOGGER.log(Level.SEVERE, ex.getLocalizedMessage(), ex);
            throw new RuntimeException(ex);
        }
    }

