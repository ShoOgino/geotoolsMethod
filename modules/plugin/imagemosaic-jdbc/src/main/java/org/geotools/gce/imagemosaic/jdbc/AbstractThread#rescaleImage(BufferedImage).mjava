	/**
	 * @param image
	 *            to scale
	 * @return rescaled image fitting into the requested pixel dimension
	 */
	protected BufferedImage rescaleImage(BufferedImage image) {
	    	    
		
		Map<String,Object> properties = null;
	                
	        if (image.getPropertyNames()!=null) {
	            properties = new HashMap<String, Object>();
	            for (String name : image.getPropertyNames()) {
	                 properties.put(name, image.getProperty(name));
	            }
	        }
	                            
	        int newWidth = (int) Math.floor(image.getWidth()* rescaleX);
	        int newHeight= (int) Math.floor(image.getHeight() * rescaleY);
	        SampleModel sm = image.getSampleModel().createCompatibleSampleModel(newWidth,newHeight);
	        WritableRaster raster = Raster.createWritableRaster(sm, null);

	        BufferedImage scaledImage = new BufferedImage(image.getColorModel(), 
	                raster, image.isAlphaPremultiplied(), (Hashtable<?, ?>) properties); 


                Object interpolation=RenderingHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR;
                
                if (config.getInterpolation().intValue() == 2) 
                           interpolation = RenderingHints.VALUE_INTERPOLATION_BILINEAR;

                if (config.getInterpolation().intValue() == 3) 
                           interpolation = RenderingHints.VALUE_INTERPOLATION_BICUBIC;

                
                Graphics2D g = scaledImage.createGraphics();
                g.setRenderingHint(RenderingHints.KEY_INTERPOLATION, interpolation);
                g.drawImage(image, 0, 0, newWidth, newHeight, 0, 0, image.getWidth(), image.getHeight(), null);
                g.dispose();
                return scaledImage;
	        
	       /* 
	       int interpolation=AffineTransformOp.TYPE_NEAREST_NEIGHBOR;
               
	       if (config.getInterpolation().intValue() == 2) 
	                   interpolation = AffineTransformOp.TYPE_BILINEAR;

                if (config.getInterpolation().intValue() == 3) 
	                     interpolation = AffineTransformOp.TYPE_BICUBIC;
                
		AffineTransformOp op= new AffineTransformOp(AffineTransform.getScaleInstance(rescaleX,
		        rescaleY), interpolation);
		op.filter(image.getRaster(),raster);

		return scaledImage;
		*/
		
	}

