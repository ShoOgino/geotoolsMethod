    @Override
    public void run() {
        BufferedImage image = null;

        TileQueueElement queueObject = null;
        LinkedBlockingQueue<TileQueueElement> tileQueue = state.getTileQueue();
        GeneralEnvelope rete = state.getRequestedEnvelopeTransformedExpanded();

        try {
            while ((queueObject = tileQueue.take()).isEndElement() == false) {

                if (image == null) {
                    image = getStartImage(queueObject.getTileImage());
                }

                int posx =
                        (int)
                                (Math.round(
                                        (queueObject.getEnvelope().getMinimum(0)
                                                        - rete.getMinimum(0))
                                                / state.getImageLevelInfo().getResX()));
                int posy =
                        (int)
                                (Math.round(
                                        (rete.getMaximum(1)
                                                        - queueObject.getEnvelope().getMaximum(1))
                                                / state.getImageLevelInfo().getResY()));

                image.getRaster().setRect(posx, posy, queueObject.getTileImage().getRaster());
            }
        } catch (OutOfMemoryError e) {
            LOGGER.warning(
                    "Out of memory when trying to render coverage '"
                            + state.getImageLevelInfo().getCoverageName()
                            + "'.");
            LOGGER.warning(
                    "Tips: increase memory, add coarser dataset overviews, or do not zoom that out.");
            // return no image
            gridCoverage2D = null;
            return;
        } catch (InterruptedException e) {
            throw new RuntimeException(e);
        }

        if (image == null) {
            // no tiles ??
            image = getStartImage(ImageMosaicJDBCReader.DEFAULT_IMAGE_TYPE);
        }

        GeneralEnvelope resultEnvelope = null;

        if (state.isXAxisSwitch()) {
            Rectangle2D tmp =
                    new Rectangle2D.Double(
                            rete.getMinimum(1),
                            rete.getMinimum(0),
                            rete.getSpan(1),
                            rete.getSpan(0));
            resultEnvelope = new GeneralEnvelope(tmp);
            resultEnvelope.setCoordinateReferenceSystem(rete.getCoordinateReferenceSystem());
        } else {
            resultEnvelope = state.getRequestedEnvelopeTransformed();
        }

        image = rescaleImageViaPlanarImage(image);
        if (state.getOutputTransparentColor() == null) {
            gridCoverage2D =
                    coverageFactory.create(config.getCoverageName(), image, resultEnvelope);
        } else {
            if (LOGGER.isLoggable(Level.FINE)) {
                LOGGER.fine("Support for alpha on final mosaic");
            }
            RenderedImage result =
                    ImageUtilities.maskColor(state.getOutputTransparentColor(), image);
            gridCoverage2D =
                    coverageFactory.create(config.getCoverageName(), result, resultEnvelope);
        }
    }

