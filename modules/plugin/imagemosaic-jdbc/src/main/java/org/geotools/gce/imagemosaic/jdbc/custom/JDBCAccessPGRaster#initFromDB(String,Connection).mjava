    /**
     * Step 1 of the bootstrapping process. Read meta table.
     *
     * @param coverageName the coverage name stored in the sql meta table
     * @param con jdbc connection
     * @throws SQLException
     * @throws IOException
     */
    protected void initFromDB(String coverageName, Connection con)
            throws SQLException, IOException {
        PreparedStatement s = null;
        ResultSet res = null;

        try {
            String stmt = getConfig().getSqlSelectCoverageStatement();
            s = con.prepareStatement(stmt);
            s.setString(1, coverageName);
            res = s.executeQuery();

            while (res.next()) {
                ImageLevelInfo imageLevelInfo = new ImageLevelInfo();
                imageLevelInfo.setCoverageName(coverageName);
                imageLevelInfo.setTileTableName(
                        (res.getString(getConfig().getTileTableNameAtribute())));

                imageLevelInfo.setExtentMaxX(
                        Double.valueOf(res.getDouble(getConfig().getMaxXAttribute())));

                if (res.wasNull()) {
                    imageLevelInfo.setExtentMaxX(null);
                }

                imageLevelInfo.setExtentMaxY(
                        Double.valueOf(res.getDouble(getConfig().getMaxYAttribute())));

                if (res.wasNull()) {
                    imageLevelInfo.setExtentMaxY(null);
                }

                imageLevelInfo.setExtentMinX(
                        Double.valueOf(res.getDouble(getConfig().getMinXAttribute())));

                if (res.wasNull()) {
                    imageLevelInfo.setExtentMinX(null);
                }

                imageLevelInfo.setExtentMinY(
                        Double.valueOf(res.getDouble(getConfig().getMinYAttribute())));

                if (res.wasNull()) {
                    imageLevelInfo.setExtentMinY(null);
                }

                imageLevelInfo.setResX(
                        Double.valueOf(res.getDouble(getConfig().getResXAttribute())));

                if (res.wasNull()) {
                    imageLevelInfo.setResX(null);
                }

                imageLevelInfo.setResY(
                        Double.valueOf(res.getDouble(getConfig().getResYAttribute())));

                if (res.wasNull()) {
                    imageLevelInfo.setResY(null);
                }

                /*
                Set noDataValue on imageLevelInfo based on what
                is stored in raster band metadata.
                Please note: alternatively this value could be loaded from mosaic config file,
                we could add an optional element/attribute to specify this value.
                */
                Number noDataValue =
                        getNoDataValue(
                                imageLevelInfo.getTileTableName(),
                                getConfig().getBlobAttributeNameInTileTable(),
                                con);
                imageLevelInfo.setNoDataValue(noDataValue);

                getLevelInfos().add(imageLevelInfo);

                imageLevelInfo.setCrs(getCRS());
                /*
                Set SrsId based on what has been specified in mosaic
                xml configuration file. It can get overwritten by value retrieved from database in
                method calculateResolutionsFromDB(). The reason I added this is: if user has specified
                resolutions in the mosaic table, then calculateResolutionsFromDB() will skip setting srsID
                which will eventually result in an exception further down the track.
                 */
                imageLevelInfo.setSrsId(getSrsId());
            }
        } catch (SQLException e) {
            throw (e);
        } finally {
            if (res != null) {
                res.close();
            }

            if (s != null) {
                s.close();
            }
        }
    }

