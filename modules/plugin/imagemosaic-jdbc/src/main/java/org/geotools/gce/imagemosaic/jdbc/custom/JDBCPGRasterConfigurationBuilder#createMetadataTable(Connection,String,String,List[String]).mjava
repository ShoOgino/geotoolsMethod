    /**
     * Create the metadata table which will contain the tile tables references.
     *
     * @param tileTables the tile Table names
     * @param tableName the name of the master table where tile tables will be added
     * @param coverageName the name of the coverage to which tile tables are related
     */
    private void createMetadataTable(
            final Connection connection,
            final String tableName,
            final String coverageName,
            final List<String> tileTables) {

        // Prepare main insertion/update queries
        final String createMetadataTableQuery = TABLE_CREATION_SQL.replace((MOSAIC_KEY), tableName);
        final String insertTileQuery = TILETABLE_INSERTION_SQL.replace((MOSAIC_KEY), tableName);
        boolean created = false;
        try {
            if (LOGGER.isLoggable(Level.FINE)) {
                LOGGER.fine("Creating mosaic table");
            }
            // Create the metadata table
            connection.prepareStatement(createMetadataTableQuery).execute();
            created = true;

            if (LOGGER.isLoggable(Level.FINE)) {
                LOGGER.fine("updating mosaic table");
            }
            try (PreparedStatement ps = connection.prepareStatement(insertTileQuery)) {

                // Inserting tile tables
                for (String tileTable : tileTables) {
                    ps.setString(1, coverageName);
                    ps.setString(2, tileTable);
                    ps.execute();
                }
            }

            // commit
            connection.commit();
        } catch (SQLException e) {
            if (LOGGER.isLoggable(Level.SEVERE)) {
                LOGGER.severe(
                        "Exception occurred while "
                                + (created ? "updating" : "creating")
                                + " metadata tables. Proceeding with rollback\n"
                                + e.getLocalizedMessage());
            }
            try {
                connection.rollback();
            } catch (SQLException ex) {
                if (LOGGER.isLoggable(Level.FINE)) {
                    LOGGER.fine(
                            "Exception occurred while doing rollback:\n" + e.getLocalizedMessage());
                }
            }
        }
    }

