    /**
     * Creates a new OGR layer with provided schema and options
     * 
     * @param schema the geotools schema
     * @param approximateFields if true, OGR will try to create fields that are approximations of
     *        the required ones when an exact match cannt be provided
     * @param options OGR data source/layer creation options
     * @throws IOException
     */
    public void createSchema(SimpleFeatureType schema, boolean approximateFields, String[] options)
            throws IOException {
        Object dataSource = null;
        Object layer = null;

        try {
            // either open datasource, or try creating one
            dataSource = openOrCreateDataSource(options, dataSource);

            FeatureTypeMapper mapper = new FeatureTypeMapper(ogr);

            layer = createNewLayer(schema, dataSource, options, mapper);

            // check the ability to create fields
            Object driver = ogr.DataSourceGetDriver(dataSource);
            String driverName = ogr.DriverGetName(driver);
            ogr.DriverRelease(driver);
            if (!driverName.equalsIgnoreCase("georss") &&
                !driverName.equalsIgnoreCase("gpx") &&
                !driverName.equalsIgnoreCase("sosi") &&
                !ogr.LayerCanCreateField(layer)) {
                throw new DataSourceException(
                        "OGR reports it's not possible to create fields on this layer");
            }

            // create fields
            for (int i = 0; i < schema.getAttributeCount(); i++) {
                AttributeDescriptor ad = schema.getDescriptor(i);
                if (ad == schema.getGeometryDescriptor())
                    continue;

                Object fieldDefinition = mapper.getOGRFieldDefinition(ad);
                ogr.LayerCreateField(layer, fieldDefinition, approximateFields ? 1 : 0);
            }

            ogr.LayerSyncToDisk(layer);
        } finally {
            if (layer != null) {
                ogr.LayerRelease(layer);
            }
            if (dataSource != null) {
                ogr.DataSourceRelease(dataSource);
            }
        }
    }

