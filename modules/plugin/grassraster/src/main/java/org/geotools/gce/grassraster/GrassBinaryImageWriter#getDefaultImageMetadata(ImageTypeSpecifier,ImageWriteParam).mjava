    /**
     * Initialize all required fields which will be written to the header.
     * 
     * @param root The root node containing metadata
     * @throws IOException
     */
    // private void retrieveMetadata( Node root ) throws IOException {
    // // Grid description
    // final Node gridDescriptorNode = root.getFirstChild();
    // NamedNodeMap gridNodeAttributes = gridDescriptorNode.getAttributes();
    // nColumns = Integer.parseInt(gridNodeAttributes.getNamedItem(GrassBinaryImageMetadata.NCOLS)
    // .getNodeValue());
    // nRows = Integer.parseInt(gridNodeAttributes.getNamedItem(GrassBinaryImageMetadata.NROWS)
    // .getNodeValue());
    // Node dummyNode = gridNodeAttributes.getNamedItem(GrassBinaryImageMetadata.NO_DATA);
    // if (dummyNode != null)
    // noDataValue = Double.parseDouble(dummyNode.getNodeValue());
    //
    // // Spatial dimensions
    // final Node envelopDescriptorNode = gridDescriptorNode.getNextSibling();
    // NamedNodeMap envelopeNodeAttributes = envelopDescriptorNode.getAttributes();
    // cellsizeX = Double.parseDouble(envelopeNodeAttributes.getNamedItem(
    // GrassBinaryImageMetadata.XRES).getNodeValue());
    // cellsizeY = Double.parseDouble(envelopeNodeAttributes.getNamedItem(
    // GrassBinaryImageMetadata.YRES).getNodeValue());
    // west = Double.parseDouble(envelopeNodeAttributes
    // .getNamedItem(GrassBinaryImageMetadata.WEST).getNodeValue());
    // south = Double.parseDouble(envelopeNodeAttributes.getNamedItem(
    // GrassBinaryImageMetadata.SOUTH).getNodeValue());
    //
    // // As an alternative for ImageReadOp images with source subsampling we
    // // could look for the image read params.
    // final int actualWidth = this.inputRenderedImage.getWidth();
    // final int actualHeight = this.inputRenderedImage.getHeight();
    // cellsizeX *= nColumns / actualWidth;
    // cellsizeY *= nRows / actualHeight;
    //
    // }
    /**
     * @see javax.imageio.ImageWriter#getDefaultImageMetadata(javax.imageio.ImageTypeSpecifier,
     *      javax.imageio.ImageWriteParam)
     */
    public IIOMetadata getDefaultImageMetadata( ImageTypeSpecifier its, ImageWriteParam param ) {
        return null;
    }

