    /**
     * Changes the cellhd file inserting the new values passed.
     * 
     * @param chproj the proj value.
     * @param chzone the zone value.
     * @param chn northern boundary.
     * @param chs southern boundary.
     * @param che eastern boundary.
     * @param chw western boundary.
     * @param chcols number of columns.
     * @param chrows number of rows.
     * @param chnsres the north-south resolution.
     * @param chewres the east-west resolution.
     * @param chformat the map type.
     * @param chcompressed the compression type.
     * @throws IOException
     */
    @SuppressWarnings("nls")
    private void createCellhd( int chproj, int chzone, double chn, double chs, double che,
            double chw, int chcols, int chrows, double chnsres, double chewres, int chformat,
            int chcompressed ) throws IOException {
        StringBuffer data = new StringBuffer(512);
        data.append("proj:   " + chproj + "\n").append("zone:   " + chzone + "\n").append(
                "north:   " + chn + "\n").append("south:   " + chs + "\n").append(
                "east:   " + che + "\n").append("west:   " + chw + "\n").append(
                "cols:   " + chcols + "\n").append("rows:   " + chrows + "\n").append(
                "n-s resol:   " + chnsres + "\n").append("e-w resol:   " + chewres + "\n").append(
                "format:   " + chformat + "\n").append("compressed:   " + chcompressed);
        OutputStreamWriter windFile = new OutputStreamWriter(new FileOutputStream(writerGrassEnv
                .getCELLHD()));
        windFile.write(data.toString());
        windFile.close();
    }

