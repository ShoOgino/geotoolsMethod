    /**
     * Reads the categories for the map wrapped by this {@link JGrassMapEnvironment}.
     *
     * <p>The categories are returned in a {@link List} of strings that may be of two types:<br>
     *
     * <ul>
     *   <li>value:categorytext
     *   <li>value1-value2:categorytext
     * </ul>
     *
     * @return the list of categories in text format.
     */
    public List<String> getCategories() throws IOException {
        List<String> categoriesList = new ArrayList<>();
        /*
         * File is a standard file where the categories values are stored in
         * the cats directory.
         */
        BufferedReader rdr = new BufferedReader(new FileReader(getCATS()));
        try {
            /* Instantiate attribute table */
            AttributeTable attTable = new AttributeTable();
            /* Ignore first 4 lines. */
            rdr.readLine();
            rdr.readLine();
            rdr.readLine();
            rdr.readLine();
            /* Read next n lines */
            String line;
            while ((line = rdr.readLine()) != null) {
                /* All lines other than '0:no data' are processed */
                //            if (line.indexOf("0:no data") == -1) { //$NON-NLS-1$
                JlsTokenizer tk = new JlsTokenizer(line, ":"); // $NON-NLS-1$
                if (tk.countTokens() == 2) {
                    float f = Float.parseFloat(tk.nextToken());
                    String att = tk.nextToken().trim();
                    attTable.addAttribute(f, att);
                } else if (tk.countTokens() == 3) {
                    float f0 = Float.parseFloat(tk.nextToken());
                    float f1 = Float.parseFloat(tk.nextToken());
                    String att = tk.nextToken().trim();
                    attTable.addAttribute(f0, f1, att);
                }
                // }
            }

            Enumeration<CellAttribute> categories = attTable.getCategories();
            while (categories.hasMoreElements()) {
                AttributeTable.CellAttribute object = categories.nextElement();
                categoriesList.add(object.toString());
            }
        } finally {
            rdr.close();
        }

        return categoriesList;
    }

