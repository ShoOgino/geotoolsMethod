    /**
     * Performs the read method adding the possibility to override subsampling.
     *
     * @param imageIndex same as {@link GrassBinaryImageReader#read(int, ImageReadParam)}
     * @param param same as {@link GrassBinaryImageReader#read(int, ImageReadParam)}
     * @param useSubSamplingAsRequestedRowcols a flag that gives the possibility to bypass the
     *     imageio subsampling mechanism. With GRASS maps this is often more performant in some
     *     boundary situations. In the case this flag is set to true, the subsampling values will be
     *     handled as the requested columns and rows.
     * @param castDoubleToFloating a flag that gives the possibility to force the reading of a map
     *     as a floating point map. This is necessary right now because of a imageio bug:
     *     https://jai-imageio-core.dev.java.net/issues/show_bug.cgi?id=180
     * @return same as {@link GrassBinaryImageReader#read(int, ImageReadParam)}
     * @throws IOException same as {@link GrassBinaryImageReader#read(int, ImageReadParam)}
     */
    public BufferedImage read(
            final int imageIndex,
            ImageReadParam param,
            boolean useSubSamplingAsRequestedRowcols,
            boolean castDoubleToFloating,
            ProgressListener monitor)
            throws IOException {
        this.useSubSamplingAsRequestedRowcols = useSubSamplingAsRequestedRowcols;
        this.castDoubleToFloating = castDoubleToFloating;
        this.monitor = monitor;

        return read(imageIndex, param);
    }

