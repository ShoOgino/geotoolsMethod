    /**
     * Creates a {@linkplain Node} tree from the available metadata informations of the native
     * raster.
     *
     * @return the root of the tree containing the metadata of the native raster.
     */
    private Node getNativeTree() {
        final IIOMetadataNode root = new IIOMetadataNode(nativeMetadataFormatName);

        // Setting region Properties
        IIOMetadataNode node = new IIOMetadataNode(REGION_DESCRIPTOR);
        node.setAttribute(NO_DATA, Double.toString(noData));
        node.setAttribute(NROWS, Integer.toString(nRows));
        node.setAttribute(NCOLS, Integer.toString(nCols));
        node.setAttribute(XRES, Double.toString(xRes));
        node.setAttribute(YRES, Double.toString(yRes));
        node.setAttribute(NORTH, Double.toString(north));
        node.setAttribute(SOUTH, Double.toString(south));
        node.setAttribute(EAST, Double.toString(east));
        node.setAttribute(WEST, Double.toString(west));
        node.setAttribute(CRS, crs.toWKT());
        root.appendChild(node);

        // Setting Colortable Properties
        if (colorRulesString != null) {
            node = new IIOMetadataNode(COLOR_RULES_DESCRIPTOR);
            StringBuffer sB = new StringBuffer();
            for (int i = 0; i < colorRulesString.size(); i++) {
                if (i != 0) {
                    sB.append(RULESSPLIT); // $NON-NLS-1$
                }
                sB.append(colorRulesString.get(i));
            }
            node.setAttribute(GrassBinaryImageMetadata.COLOR_RULES_DESCRIPTOR, sB.toString());
            root.appendChild(node);
        }

        // Setting Categories Properties
        if (categoriesString != null) {
            node = new IIOMetadataNode(CATEGORIES_DESCRIPTOR);
            StringBuffer sB = new StringBuffer();
            for (int i = 0; i < categoriesString.size(); i++) {
                if (i != 0) {
                    sB.append(RULESSPLIT); // $NON-NLS-1$
                }
                sB.append(categoriesString.get(i));
            }
            node.setAttribute(GrassBinaryImageMetadata.CATEGORIES_DESCRIPTOR, sB.toString());
            root.appendChild(node);
        }

        return root;
    }

