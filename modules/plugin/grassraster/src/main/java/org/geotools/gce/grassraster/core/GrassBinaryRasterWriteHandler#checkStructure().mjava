    /**
     * checks if the needed GRASS structure folders are available.
     * <p>
     * <b>NOTE:</b> they could be missing if the mapset has just been created and this is the first
     * file that gets into it.
     * </p>
     * <p>
     * <b>INFO:</b> this is a writer method.
     * </p>
     * 
     * @return true is the structure is ok.
     */
    private boolean checkStructure() {
        File ds;

        File mapset = writerGrassEnv.getMAPSET();
        String name = writerGrassEnv.getCELL().getName();
        String mapsetPath = mapset.getAbsolutePath();
        ds = new File(mapsetPath + File.separator + JGrassConstants.CATS + File.separator);
        if (!ds.exists())
            if (!ds.mkdir())
                return false;
        ds = new File(mapsetPath + File.separator + JGrassConstants.CELL + File.separator);
        if (!ds.exists())
            if (!ds.mkdir())
                return false;
        ds = new File(mapsetPath + File.separator + JGrassConstants.CELL_MISC + File.separator);
        if (!ds.exists())
            if (!ds.mkdir())
                return false;
        ds = new File(mapsetPath + File.separator + JGrassConstants.CELL_MISC + File.separator
                + name);
        if (!ds.exists())
            if (!ds.mkdir())
                return false;
        ds = new File(mapsetPath + File.separator + JGrassConstants.FCELL + File.separator);
        if (!ds.exists())
            if (!ds.mkdir())
                return false;
        ds = new File(mapsetPath + File.separator + JGrassConstants.CELLHD + File.separator);
        if (!ds.exists())
            if (!ds.mkdir())
                return false;
        ds = new File(mapsetPath + File.separator + JGrassConstants.COLR + File.separator);
        if (!ds.exists())
            if (!ds.mkdir())
                return false;
        ds = new File(mapsetPath + File.separator + JGrassConstants.HIST + File.separator);
        if (!ds.exists())
            if (!ds.mkdir())
                return false;
        return true;
    }

