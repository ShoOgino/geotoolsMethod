    /**
     * read a row of data from a compressed floating point map.
     *
     * <p><b>INFO:</b> this is a reader method.
     *
     * @param rowdata the buffer to hold the read row.
     * @param currentrow the index of the row to read.
     * @throws DataFormatException
     * @throws IOException
     */
    private void readCompressedFPRowByNumber(ByteBuffer rowdata, int currentrow)
            throws DataFormatException, IOException {
        // System.out.println("row: " + (currentrow+1) + " position: " + addressesOfRows[currentrow
        // + 1]);

        int offset = (int) (addressesOfRows[currentrow + 1] - addressesOfRows[currentrow]);
        /*
         * The fact that the file is compressed does not mean that the row is
         * compressed. If the first byte is 0 (49), then the row is compressed,
         * otherwise (first byte = 48) the row has to be read in simple XDR
         * uncompressed format.
         */
        byte[] tmp = new byte[offset - 1];
        imageIS.seek(addressesOfRows[currentrow]);
        int firstbyte = (imageIS.read() & 0xff);
        if (firstbyte == 49) {
            /* The row is compressed. */
            // thefile.seek((long) adrows[rn] + 1);
            imageIS.read(tmp, 0, offset - 1);
            Inflater decompresser = new Inflater();
            decompresser.setInput(tmp, 0, tmp.length);
            decompresser.inflate(rowdata.array());
            decompresser.end();
        } else if (firstbyte == 48) {
            imageIS.read(rowdata.array(), 0, offset - 1);
        }
    }

