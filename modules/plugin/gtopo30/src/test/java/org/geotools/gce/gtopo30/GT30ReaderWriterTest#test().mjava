	/**
	 * Testing reader and writer for gtopo. This test first of all read an
	 * existing gtopo tessel into a coverage object, therefore it writes it back
	 * onto the disk. Once the coverage is written back\ it loads it again
	 * building a new coverage which is finally visualized.
	 * 
	 * @throws Exception
	 */
	public void test() throws Exception {

		URL statURL = TestData.url(this, (new StringBuffer(this.fileName)
				.append(".DEM").toString()));
		AbstractGridFormat format = (AbstractGridFormat) new GTopo30FormatFactory()
				.createFormat();

		// using a big tile cache
		final JAI jaiDef = JAI.getDefaultInstance();
		final TileCache cache = jaiDef.getTileCache();
		cache.setMemoryCapacity(64 * 1024 * 1024);
		cache.setMemoryThreshold(1.0f);
		// final TCTool tool= new TCTool();

		// setting JAI wide hints
		jaiDef.setRenderingHint(JAI.KEY_CACHED_TILE_RECYCLING_ENABLED,
				Boolean.TRUE);

		// tile factory and recycler
		final RecyclingTileFactory recyclingFactory = new RecyclingTileFactory();
		jaiDef.setRenderingHint(JAI.KEY_TILE_FACTORY, recyclingFactory);
		jaiDef.setRenderingHint(JAI.KEY_TILE_RECYCLER, recyclingFactory);

		if (format.accepts(statURL)) {

			/**
			 * 
			 * STEP 1 Reading the coverage into memory in order to write it down
			 * again
			 * 
			 */
			// get a reader
			GridCoverageReader reader = format.getReader(statURL);

			// get a grid coverage
			gc = ((GridCoverage2D) reader.read(null));
			assertTrue(CoverageUtilities.hasRenderingCategories(gc));
			if(TestData.isInteractiveTest())
				gc.show();

			// preparing to write it down
			File testDir = TestData.file(this, "");
			newDir = new File(testDir.getAbsolutePath() + "/newDir");
			newDir.mkdir();

			// writing it down
			GridCoverageWriter writer = format.getWriter(newDir);
			writer.write(gc, null);

			/**
			 * 
			 * STEP 2 Reading back into memory the previos coverage.
			 * 
			 */
			// preparing the URL
			statURL = TestData.getResource(this, "newDir/" + this.fileName
					+ ".DEM");

			// read it again
			reader = format.getReader(statURL);
			gc = ((GridCoverage2D) reader.read(null));

			/**
			 * 
			 * STEP 3 Visualizing the lcoverage we just read in order to see if
			 * everything is fine.
			 * 
			 */
			// packed view for this coverage
			GridCoverage2D gc1 = gc.geophysics(false);
			if (TestData.isInteractiveTest()) {
				gc1.show();
				// logging some info
				logger.info(gc.getCoordinateReferenceSystem2D().toWKT() + "\n"
						+ gc.toString());
				logger.info(gc1.getCoordinateReferenceSystem2D().toWKT() + "\n"
						+ gc1.toString());
			} else {
				gc1.getRenderedImage().getData();

			}

		}
	}

