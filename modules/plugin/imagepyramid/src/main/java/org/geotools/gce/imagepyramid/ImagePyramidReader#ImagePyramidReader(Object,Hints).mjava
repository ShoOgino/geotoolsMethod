    /**
     * Constructor for an {@link ImagePyramidReader}.
     *
     * @param source The source object.
     * @param uHints {@link Hints} to control the behaviour of this reader.
     */
    public ImagePyramidReader(Object source, Hints uHints) throws IOException {
        // //
        //
        // managing hints
        //
        // //
        if (uHints == null) {
            this.hints = new Hints(Hints.FORCE_LONGITUDE_FIRST_AXIS_ORDER, Boolean.TRUE);
        } else {
            this.hints = uHints;
        }
        this.coverageFactory = CoverageFactoryFinder.getGridCoverageFactory(this.hints);

        // Check source
        if (source == null) {
            throw new DataSourceException(
                    "ImagePyramidReader:null source set to read this coverage.");
        }
        this.source = source;
        this.sourceURL = Utils.checkSource(source, uHints);
        if (sourceURL == null) {
            throw new DataSourceException(
                    "This plugin accepts only a URL, a File or a String pointing to a directory with a structure similar to the one of gdal_retile!");
        }

        // get the crs if able to
        final URL prjURL = URLs.changeUrlExt(sourceURL, "prj");
        PrjFileReader crsReader = null;
        try {
            crsReader = new PrjFileReader(Channels.newChannel(prjURL.openStream()));
        } catch (FactoryException e) {
            throw new DataSourceException(e);
        } finally {
            try {
                crsReader.close();
            } catch (Throwable e) {
                if (LOGGER.isLoggable(Level.FINE))
                    LOGGER.log(Level.FINE, e.getLocalizedMessage(), e);
            }
        }
        final Object tempCRS = hints.get(Hints.DEFAULT_COORDINATE_REFERENCE_SYSTEM);
        if (tempCRS != null) {
            this.crs = (CoordinateReferenceSystem) tempCRS;
            LOGGER.log(Level.WARNING, "Using forced coordinate reference system " + crs.toWKT());
        } else {
            final CoordinateReferenceSystem tempcrs = crsReader.getCoordinateReferenceSystem();
            if (tempcrs == null) {
                // use the default crs
                crs = AbstractGridFormat.getDefaultCRS();
                LOGGER.log(
                        Level.WARNING,
                        "Unable to find a CRS for this coverage, using a default one: "
                                + crs.toWKT());
            } else crs = tempcrs;
        }

        // Load properties file with information about levels and envelope
        parseMainFile(sourceURL);
    }

