    public ImageLevelsMapper(Properties properties) {
        levelsDirs = properties.getProperty("LevelsDirs").split(" ");

        // resolutions levels
        final String levels = properties.getProperty("Levels");
        String[] resolutionLevels = levels.split(" ");

        // Grouping the resolution levels
        int resolutionGroupsNumber = resolutionLevels.length;

        // array is organized in 3 layers of resolutions (see the main javadoc at the beginning of the class):
        // layer 0 elements: the mosaics
        //  \-> layer 1 elements: the different levels in the selected mosaic
        //       \-> layer 2 elements: x,y resolutions of that level
        double [][][] resolutionsSet = new double[resolutionGroupsNumber][][];

        int numResolutions = 0;
        for (int i=0; i < resolutionGroupsNumber; i++) {
            // loops along the groups
            String[] subLevels = resolutionLevels[i].split(";");
            int subLevelsLenght = subLevels.length;
            if (subLevelsLenght > 1) {
                // report we have inner overviews if a ";" has been found
                innerOverviews = true;
            }
            resolutionsSet[i] = new double[subLevelsLenght][];
            for (int k=0; k < subLevelsLenght ; k++) {
                String[] pair = subLevels[k].split(",");
                resolutionsSet[i][k] = new double[2];
                resolutionsSet[i][k][0] = Double.parseDouble(pair[0].trim());
                resolutionsSet[i][k][1] = Double.parseDouble(pair[1].trim());
                numResolutions++;
            }
        }
        // decrease by 1 to exclude native resolution from number of overviews
        numOverviews = numResolutions - 1;
        imageChoiceToReaderLookup = new int[numResolutions];

        //native resolution setting (first group, first level)
        highestResolution = new double[2];
        highestResolution[0] = resolutionsSet[0][0][0];
        highestResolution[1] = resolutionsSet[0][0][1];

        // Map native resolution to first reader
        imageChoiceToReaderLookup[0] = 0;
        overViewResolutions = numOverviews > 0 ? new double[numOverviews][2] : null;
        numResolutions = 0;

        // Mapping overviews
        for (int i=0; i < resolutionGroupsNumber; i++) {
            for (int k = (i!= 0 ? 0 : 1); k < resolutionsSet[i].length; k++) {
                overViewResolutions[numResolutions][0] = resolutionsSet[i][k][0];
                overViewResolutions[numResolutions][1] = resolutionsSet[i][k][1];
                numResolutions++;
                imageChoiceToReaderLookup[numResolutions] = i;
            }
        }
    }

