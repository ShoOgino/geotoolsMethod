    /**
     * Takes either a URL or a String that points to an ArcGridCoverage file and converts it to a
     * URL that can then be written to.
     *
     * @param destination the URL or String pointing to the file to load the ArcGrid
     * @throws DataSourceException
     */
    public ArcGridWriter(Object destination, Hints hints) throws DataSourceException {
        this.destination = destination;
        if (destination instanceof File)
            try {
                super.outStream = ImageIOExt.createImageOutputStream(null, destination);
            } catch (IOException e) {
                if (LOGGER.isLoggable(Level.SEVERE))
                    LOGGER.log(Level.SEVERE, e.getLocalizedMessage(), e);
                throw new DataSourceException(e);
            }
        else if (destination instanceof URL) {
            final URL dest = (URL) destination;
            if (dest.getProtocol().equalsIgnoreCase("file")) {
                File destFile;
                destFile = URLs.urlToFile(dest);
                try {
                    super.outStream = ImageIOExt.createImageOutputStream(null, destFile);
                } catch (IOException e) {
                    if (LOGGER.isLoggable(Level.SEVERE))
                        LOGGER.log(Level.SEVERE, e.getLocalizedMessage(), e);
                    throw new DataSourceException(e);
                }
            }

        } else if (destination instanceof OutputStream) {

            try {
                super.outStream =
                        ImageIOExt.createImageOutputStream(null, (OutputStream) destination);
            } catch (IOException e) {
                if (LOGGER.isLoggable(Level.SEVERE))
                    LOGGER.log(Level.SEVERE, e.getLocalizedMessage(), e);
                throw new DataSourceException(e);
            }

        } else if (destination instanceof ImageOutputStream)
            this.destination = outStream = (ImageOutputStream) destination;
        else throw new DataSourceException("The provided destination cannot be used!");
        // //
        //
        // managing hints
        //
        // //
        if (hints != null) {
            if (this.hints == null) {
                this.hints = new Hints(Hints.LENIENT_DATUM_SHIFT, Boolean.TRUE);
            }
            this.hints.add(hints);
        }
    }

