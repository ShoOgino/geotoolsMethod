    /**
     * A Simple Test Method which read an arcGrid and write it as an ArcGrid
     *
     * @param rf
     * @param wf
     */
    public void writeEsriUnCompressed(File rf, File wf) throws Exception {

        final Hints hints =
                new Hints(Hints.DEFAULT_COORDINATE_REFERENCE_SYSTEM, DefaultGeographicCRS.WGS84);
        /** Step 1: Reading the coverage */
        GridCoverageReader reader = new ArcGridReader(rf, hints);
        final GridCoverage2D gc1 = (GridCoverage2D) reader.read(null);

        /** Step 2: Write grid coverage out to temp file */
        final GridCoverageWriter writer = new ArcGridWriter(wf);

        // setting write parameters
        ParameterValueGroup params;
        params = writer.getFormat().getWriteParameters();
        params.parameter("GRASS").setValue(false);
        final ArcGridWriteParams wp = new ArcGridWriteParams();
        wp.setSourceBands(new int[] {0});
        params.parameter(AbstractGridFormat.GEOTOOLS_WRITE_PARAMS.getName().toString())
                .setValue(wp);
        // params.parameter("compressed").setValue(false);
        GeneralParameterValue[] gpv = {
            params.parameter("GRASS"),
            params.parameter(AbstractGridFormat.GEOTOOLS_WRITE_PARAMS.getName().toString())
        };
        writer.write(gc1, gpv);
        writer.dispose();

        /** Step 3: Read the just written coverage */
        GridCoverageReader reader2 = new ArcGridReader(wf, hints);
        final GridCoverage2D gc2 = (GridCoverage2D) reader2.read(null);

        /** Step 4: Check if the 2 coverage are equals */
        compare(gc1, gc2);

        /** Step 5: Show the new coverage */
        if (TestData.isInteractiveTest()) {
            gc1.show();
            gc2.show();
        } else {
            gc1.getRenderedImage().getData();
            gc2.getRenderedImage().getData();
        }
    }

