    /** Returns a data source for the PostgreSQL database. */
    @Override
    protected DataSource createDataSource() throws SQLException {
        DataSource candidate = super.createDataSource();
        if (candidate instanceof BaseDataSource) {
            // Any kind of DataSource from the PostgreSQL driver.
            return candidate;
        }
        final PGSimpleDataSource source = new PGSimpleDataSource();
        final Properties p = load();
        int portNumber;
        try {
            portNumber = Integer.parseInt(p.getProperty("portNumber", "5432"));
        } catch (NumberFormatException exception) {
            portNumber = 5432;
            Logging.unexpectedException(LOGGER, DataSource.class, "<init>", exception);
        }
        source.setPortNumbers(new int[] {portNumber});
        source.setServerNames(new String[] {p.getProperty("serverName", "localhost")});
        source.setDatabaseName(p.getProperty("databaseName", "EPSG"));
        source.setUser(p.getProperty("user", "Geotools"));
        source.setPassword(p.getProperty("password", "Geotools"));
        source.setProperty("stringtype", "unspecified");
        schema = p.getProperty("schema", null);
        return source;
    }

