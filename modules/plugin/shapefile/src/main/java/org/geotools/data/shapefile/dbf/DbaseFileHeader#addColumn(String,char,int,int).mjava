    /**
     * Add a column to this DbaseFileHeader. The type is one of (C N L or D) character, number,
     * logical(true/false), or date. The Field length is the total length in bytes reserved for this
     * column. The decimal count only applies to numbers(N), and floating point values (F), and
     * refers to the number of characters to reserve after the decimal point. <B>Don't expect
     * miracles from this...</B>
     *
     * <PRE>
     * Field Type MaxLength
     * ---------- ---------
     * C          254
     * D          8
     * @          8
     * F          20
     * N          18
     * </PRE>
     *
     * @param inFieldName The name of the new field, must be less than 10 characters or it gets
     *     truncated.
     * @param inFieldType A character representing the dBase field, ( see above ). Case insensitive.
     * @param inFieldLength The length of the field, in bytes ( see above )
     * @param inDecimalCount For numeric fields, the number of decimal places to track.
     * @throws DbaseFileException If the type is not recognized.
     */
    public void addColumn(
            String inFieldName, char inFieldType, int inFieldLength, int inDecimalCount)
            throws DbaseFileException {
        if (inFieldLength <= 0) {
            throw new DbaseFileException("field length <= 0");
        }
        if (fields == null) {
            fields = new DbaseField[0];
        }
        int tempLength = 1; // the length is used for the offset, and there is a
        // * for deleted as the first byte
        DbaseField[] tempFieldDescriptors = new DbaseField[fields.length + 1];
        for (int i = 0; i < fields.length; i++) {
            fields[i].fieldDataAddress = tempLength;
            tempLength = tempLength + fields[i].fieldLength;
            tempFieldDescriptors[i] = fields[i];
        }
        tempFieldDescriptors[fields.length] = new DbaseField();
        tempFieldDescriptors[fields.length].fieldLength = inFieldLength;
        tempFieldDescriptors[fields.length].decimalCount = inDecimalCount;
        tempFieldDescriptors[fields.length].fieldDataAddress = tempLength;

        // set the field name
        String tempFieldName = inFieldName;
        if (tempFieldName == null) {
            tempFieldName = "NoName";
        }
        // Fix for GEOT-42, ArcExplorer will not handle field names > 10 chars
        // Sorry folks.
        String fitFieldName = fitStringRegardingCharset(tempFieldName, 10);
        if (!tempFieldName.equals(fitFieldName)) {
            tempFieldName = fitFieldName;
            if (LOGGER.isLoggable(Level.WARNING)) {
                LOGGER.warning(
                        "FieldName "
                                + inFieldName
                                + " is longer than 10 bytes in given charset, truncating to "
                                + tempFieldName);
            }
        }
        tempFieldDescriptors[fields.length].fieldName = tempFieldName;

        // the field type
        if ((inFieldType == 'C') || (inFieldType == 'c')) {
            tempFieldDescriptors[fields.length].fieldType = 'C';
            if (inFieldLength > 254) {
                if (LOGGER.isLoggable(Level.FINE)) {
                    LOGGER.fine(
                            "Field Length for "
                                    + inFieldName
                                    + " set to "
                                    + inFieldLength
                                    + " Which is longer than 254, not consistent with dbase III");
                }
            }
        } else if ((inFieldType == 'S') || (inFieldType == 's')) {
            tempFieldDescriptors[fields.length].fieldType = 'C';
            if (LOGGER.isLoggable(Level.WARNING)) {
                LOGGER.warning(
                        "Field type for "
                                + inFieldName
                                + " set to S which is flat out wrong people!, I am setting this to C, in the hopes you meant character.");
            }
            if (inFieldLength > 254) {
                if (LOGGER.isLoggable(Level.FINE)) {
                    LOGGER.fine(
                            "Field Length for "
                                    + inFieldName
                                    + " set to "
                                    + inFieldLength
                                    + " Which is longer than 254, not consistent with dbase III");
                }
            }
            tempFieldDescriptors[fields.length].fieldLength = 8;
        } else if ((inFieldType == 'D') || (inFieldType == 'd')) {
            tempFieldDescriptors[fields.length].fieldType = 'D';
            if (inFieldLength != 8) {
                if (LOGGER.isLoggable(Level.FINE)) {
                    LOGGER.fine(
                            "Field Length for "
                                    + inFieldName
                                    + " set to "
                                    + inFieldLength
                                    + " Setting to 8 digits YYYYMMDD");
                }
            }
            tempFieldDescriptors[fields.length].fieldLength = 8;
        } else if (inFieldType == '@') {
            tempFieldDescriptors[fields.length].fieldType = '@';
            if (inFieldLength != 8) {
                if (LOGGER.isLoggable(Level.FINE)) {
                    LOGGER.fine(
                            "Field Length for "
                                    + inFieldName
                                    + " set to "
                                    + inFieldLength
                                    + " Setting to 8 digits - two longs,"
                                    + "one long for date and one long for time");
                }
            }
            tempFieldDescriptors[fields.length].fieldLength = 8;
        } else if ((inFieldType == 'F') || (inFieldType == 'f')) {
            tempFieldDescriptors[fields.length].fieldType = 'F';
            if (inFieldLength > 20) {
                if (LOGGER.isLoggable(Level.FINE)) {
                    LOGGER.fine(
                            "Field Length for "
                                    + inFieldName
                                    + " set to "
                                    + inFieldLength
                                    + " Preserving length, but should be set to Max of 20 not valid for dbase IV, and UP specification, not present in dbaseIII.");
                }
            }
        } else if ((inFieldType == 'N') || (inFieldType == 'n')) {
            tempFieldDescriptors[fields.length].fieldType = 'N';
            if (inFieldLength > 18) {
                if (LOGGER.isLoggable(Level.FINE)) {
                    LOGGER.fine(
                            "Field Length for "
                                    + inFieldName
                                    + " set to "
                                    + inFieldLength
                                    + " Preserving length, but should be set to Max of 18 for dbase III specification.");
                }
            }
            if (inDecimalCount < 0) {
                if (LOGGER.isLoggable(Level.FINE)) {
                    LOGGER.fine(
                            "Field Decimal Position for "
                                    + inFieldName
                                    + " set to "
                                    + inDecimalCount
                                    + " Setting to 0 no decimal data will be saved.");
                }
                tempFieldDescriptors[fields.length].decimalCount = 0;
            }
            if (inDecimalCount > inFieldLength - 1) {
                if (LOGGER.isLoggable(Level.WARNING)) {
                    LOGGER.warning(
                            "Field Decimal Position for "
                                    + inFieldName
                                    + " set to "
                                    + inDecimalCount
                                    + " Setting to "
                                    + (inFieldLength - 1)
                                    + " no non decimal data will be saved.");
                }
                tempFieldDescriptors[fields.length].decimalCount = inFieldLength - 1;
            }
        } else if ((inFieldType == 'L') || (inFieldType == 'l')) {
            tempFieldDescriptors[fields.length].fieldType = 'L';
            if (inFieldLength != 1) {
                if (LOGGER.isLoggable(Level.FINE)) {
                    LOGGER.fine(
                            "Field Length for "
                                    + inFieldName
                                    + " set to "
                                    + inFieldLength
                                    + " Setting to length of 1 for logical fields.");
                }
            }
            tempFieldDescriptors[fields.length].fieldLength = 1;
        } else {
            throw new DbaseFileException(
                    "Undefined field type " + inFieldType + " For column " + inFieldName);
        }
        // the length of a record
        tempLength = tempLength + tempFieldDescriptors[fields.length].fieldLength;

        // set the new fields.
        fields = tempFieldDescriptors;
        fieldCnt = fields.length;
        headerLength = MINIMUM_HEADER + 32 * fields.length;
        recordLength = tempLength;
    }

