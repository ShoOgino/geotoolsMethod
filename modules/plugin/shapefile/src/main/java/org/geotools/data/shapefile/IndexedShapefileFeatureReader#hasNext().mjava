    public boolean hasNext() throws IOException {
        while (nextFeature == null && this.goodRecs.hasNext()) {
            next = (Data) goodRecs.next();

            Long l = (Long) next.getValue(1);
            shp.goTo((int) l.longValue());

            Record record = shp.nextRecord();

            // read the geometry, so that we can decide if this row is to be skipped or not
            Envelope envelope = record.envelope();
            Geometry geometry = null;

            if(schema.getGeometryDescriptor() != null) {
                // ... if geometry is out of the target bbox, skip both geom and row
                if (targetBBox != null && !targetBBox.isNull() && !targetBBox.intersects(envelope)) {
                    continue;
                    // ... if the geometry is awfully small avoid reading it (unless it's a point)
                } else if (simplificationDistance > 0 && envelope.getWidth() < simplificationDistance
                        && envelope.getHeight() < simplificationDistance) {
                    try {
                        if (screenMap != null && screenMap.checkAndSet(envelope)) {
                            continue;
                        } else {
                            // if we are using the screenmap better provide a slightly modified
                            // version of the geometry bounds or we'll end up with many holes
                            // in the rendering
                            geometry = (Geometry) record.getSimplifiedShape(screenMap);
                        }
                    } catch (Exception e) {
                        geometry = (Geometry) record.getSimplifiedShape();
                    }
                    // ... otherwise business as usual
                } else {
                    geometry = (Geometry) record.shape();
                }
            }

            // read the dbf only if the geometry was not skipped
            Row row;
            if (dbf != null) {
                ((IndexedDbaseFileReader) dbf).goTo(record.number);
                row = dbf.readRow();
            } else {
                row = null;
            }

            nextFeature = buildFeature(record.number, geometry, row);
        }

        return nextFeature != null;
    }

