    /**
     * Takes a map of parameters which describes how to access a DataStore and
     * determines if it can be read by the ShapefileDataStore or
     * IndexedShapefileDataStore implementations.
     * 
     * @param params
     *                A map of parameters describing the location of a
     *                datastore. Files should be pointed to by a 'url' param.
     * 
     * @return true iff params contains a url param which points to a file
     *         ending in shp
     */
    public boolean canProcess(Map params) {
        if (!super.canProcess(params)) {
            return false; // fail basic param check
        }
        if (params.containsKey(URLP.key)) {
            try {
                URL url = (URL) URLP.lookUp(params);
                if( !canProcess(url) ){
                    // maybe it's a directory?
                    Object fileType = FILE_TYPE.lookUp(params);
                    File dir = DataUtilities.urlToFile(url);
                    boolean testFileTest = dir.isDirectory() && (fileType == null || "shapefile".equals(fileType));  
                    if (!testFileTest){
                        return false; // check for null fileType for backwards compatibility
                    }
                }
            } catch (IOException ioe) {
                // yes, I am eating this - since it is my job to return a
                // true/false
            }
        }
        return true;
    }

