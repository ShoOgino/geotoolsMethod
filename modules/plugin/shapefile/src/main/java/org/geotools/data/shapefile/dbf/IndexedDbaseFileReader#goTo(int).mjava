    @SuppressWarnings("PMD.CloseResource") // this.channel is managed as a field
    public void goTo(int recno) throws IOException, UnsupportedOperationException {

        if (this.randomAccessEnabled) {
            long newPosition =
                    this.header.getHeaderLength()
                            + this.header.getRecordLength() * (long) (recno - 1);

            if (this.useMemoryMappedBuffer) {
                if (newPosition < this.currentOffset
                        || (this.currentOffset + buffer.limit())
                                < (newPosition + header.getRecordLength())) {
                    NIOUtilities.clean(buffer);
                    FileChannel fc = (FileChannel) channel;
                    if (fc.size() > newPosition + Integer.MAX_VALUE) {
                        currentOffset = newPosition;
                    } else {
                        currentOffset = fc.size() - Integer.MAX_VALUE;
                    }
                    buffer = fc.map(MapMode.READ_ONLY, currentOffset, Integer.MAX_VALUE);
                    ((Buffer) buffer).position((int) (newPosition - currentOffset));
                } else {
                    ((Buffer) buffer).position((int) (newPosition - currentOffset));
                }
            } else {
                if (this.currentOffset <= newPosition
                        && this.currentOffset + buffer.limit() >= newPosition) {
                    ((Buffer) buffer).position((int) (newPosition - this.currentOffset));
                    // System.out.println("Hit");
                } else {
                    // System.out.println("Jump");
                    FileChannel fc = (FileChannel) this.channel;
                    fc.position(newPosition);
                    this.currentOffset = newPosition;
                    ((Buffer) buffer).limit(buffer.capacity());
                    ((Buffer) buffer).position(0);
                    fill(buffer, fc);
                    ((Buffer) buffer).position(0);
                }
            }
        } else {
            throw new UnsupportedOperationException("Random access not enabled!");
        }
    }

