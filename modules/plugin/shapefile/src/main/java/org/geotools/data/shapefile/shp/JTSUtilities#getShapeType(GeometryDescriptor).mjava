    /**
     * Determine the default ShapeType using the descriptor and eventually the geometry to guess the
     * coordinate dimensions if not reported in the descriptor hints
     */
    public static final ShapeType getShapeType(GeometryDescriptor gd) throws ShapefileException {
        @SuppressWarnings("unchecked")
        Class<? extends Geometry> featureClass =
                (Class<? extends Geometry>) gd.getType().getBinding();

        Integer dimension = (Integer) gd.getUserData().get(Hints.COORDINATE_DIMENSION);
        final int dim = dimension == null ? 2 : dimension.intValue();
        if (Point.class.equals(featureClass)) {
            return dim == 3 ? ShapeType.POINTZ : ShapeType.POINT;
        } else if (MultiPoint.class.equals(featureClass)) {
            return dim == 3 ? ShapeType.MULTIPOINTZ : ShapeType.MULTIPOINT;
        } else if (Polygon.class.equals(featureClass) || MultiPolygon.class.equals(featureClass)) {
            return dim == 3 ? ShapeType.POLYGON : ShapeType.POLYGONZ;
        } else if (LineString.class.equals(featureClass)
                || MultiLineString.class.equals(featureClass)) {
            return dim == 3 ? ShapeType.ARC : ShapeType.ARCZ;
        }
        throw new ShapefileException(
                "Cannot handle geometry class : "
                        + (featureClass == null ? "null" : featureClass.getName()));
    }

