    public void write() throws IOException {
        if (currentFeature == null) {
            throw new IOException("Current feature is null");
        }

        if (featureReader == null) {
            throw new IOException("Writer closed");
        }

        // writing of Geometry
        Geometry g = (Geometry) currentFeature.getDefaultGeometry();

        // if this is the first Geometry, find the shapeType and handler
        if (guessShapeType) {
            try {
                if (g != null) {
                    int dims = JTSUtilities.guessCoorinateDims(g.getCoordinates());
                    shapeType = JTSUtilities.getShapeType(g, dims);
                } else {
                    shapeType =
                            JTSUtilities.getShapeType(
                                    currentFeature.getType().getGeometryDescriptor());
                }

                // we must go back and annotate this after writing
                shpWriter.writeHeaders(new Envelope(), shapeType, 0, 0);
                handler = shapeType.getShapeHandler(gf);
                guessShapeType = false;
            } catch (ShapefileException se) {
                throw new RuntimeException("Unexpected Error", se);
            }
        }

        // convert geometry
        if (g != null) {
            if (g.isEmpty()) {
                g = null;
            } else {
                g = JTSUtilities.convertToCollection(g, shapeType);
            }
        }

        // bounds calculations
        if (g != null) {
            Envelope b = g.getEnvelopeInternal();

            if (!b.isNull()) {
                bounds.expandToInclude(b);
            }
        }

        // file length update
        if (g != null) {
            shapefileLength += (handler.getLength(g) + 8);
        } else {
            shapefileLength += (4 + 8);
        }

        if (shapefileLength > maxShpSize) {
            currentFeature = null;
            throw new ShapefileSizeException(
                    "Writing this feature will make the shapefile exceed the maximum size of "
                            + maxShpSize
                            + " bytes");
        } else if (dbfWriter.getHeader().getLengthForRecords(records + 1) > maxDbfSize) {
            currentFeature = null;
            throw new ShapefileSizeException(
                    "Writing this feature will make the DBF exceed the maximum size of "
                            + maxDbfSize
                            + " bytes");
        }

        // write it
        shpWriter.writeGeometry(g);

        // writing of attributes
        int idx = 0;

        for (int i = 0, ii = featureType.getAttributeCount(); i < ii; i++) {
            // skip geometries
            if (writeFlags[i] > 0) {
                transferCache[idx++] = currentFeature.getAttribute(i);
            }
        }

        dbfWriter.write(transferCache);

        // one more down...
        records++;

        // clear the currentFeature
        currentFeature = null;
    }

