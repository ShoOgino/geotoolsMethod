    private void writeAndRead(
            GridCoverage2D coverage,
            Boolean writeNoDataParam,
            double noDataValue,
            File output,
            GeoTiffWriter provided)
            throws IOException {
        GeoTiffWriter writer = provided != null ? provided : new GeoTiffWriter(output);
        GeneralParameterValue[] writeParams = null;
        if (writeNoDataParam != null) {
            ParameterValue<Boolean> writeNodata = GeoTiffFormat.WRITE_NODATA.createValue();
            writeNodata.setValue(writeNoDataParam);
            writeParams = new GeneralParameterValue[] {writeNodata};
        }
        writer.write(coverage, writeParams);
        writer.dispose();
        coverage.dispose(true);

        // Reading it back
        GeoTiffReader reader = new GeoTiffReader(output);
        coverage = reader.read(null);
        Map<?, ?> props = coverage.getProperties();
        if (writeNoDataParam == null) {
            writeNoDataParam = GeoTiffFormat.WRITE_NODATA.getDefaultValue();
            Boolean expected = Boolean.valueOf(System.getProperty("geotiff.writenodata", "true"));
            assertEquals(expected, writeNoDataParam);
        }
        if (writeNoDataParam) {
            // checking that nodata exists/not exists if the writing params is true/false
            assertTrue(props.containsKey(NoDataContainer.GC_NODATA));
            NoDataContainer nodata = (NoDataContainer) props.get(NoDataContainer.GC_NODATA);
            assertEquals(noDataValue, nodata.getAsSingleValue(), 1e-6);
        } else {
            // checking that nodata exists/not exists if the writing params is true/false
            assertFalse(props.containsKey(NoDataContainer.GC_NODATA));
        }
        reader.dispose();
    }

