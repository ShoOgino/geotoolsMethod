    @Test
    public void testThreadedTransformations() throws Exception {
        Callable<Void> callable =
                () -> {
                    final File baseDirectory = TestData.file(GeoTiffReaderTest.class, ".");
                    final File files[] =
                            baseDirectory.listFiles(
                                    (dir, name) -> {
                                        String lcName = name.toLowerCase();
                                        return lcName.endsWith("tif") || lcName.endsWith("tiff");
                                    });
                    final AbstractGridFormat format = new GeoTiffFormat();
                    for (File file : files) {
                        AbstractGridCoverage2DReader reader = null;
                        try {
                            reader = format.getReader(file);
                            if (reader != null) {
                                GridCoverage2D coverage = reader.read(null);
                                ImageIOUtilities.disposeImage(coverage.getRenderedImage());
                                coverage.dispose(true);
                            }
                        } finally {
                            if (reader != null) {
                                reader.dispose();
                            }
                        }
                    }
                    return null;
                };

        // used to deadlock under load, check it does not now
        ExecutorService executor = Executors.newCachedThreadPool();
        try {
            List<Future<Void>> futures = new ArrayList<>();
            for (int i = 0; i < 8; i++) {
                Future<Void> f = executor.submit(callable);
                futures.add(f);
            }

            for (Future<Void> f : futures) {
                f.get();
            }

        } finally {
            executor.shutdown();
        }
    }

