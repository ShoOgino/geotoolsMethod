    @Test
    public void testProgress() throws Exception {

        //
        // no crs geotiff
        //
        final File input = TestData.file(GeoTiffReaderTest.class, "geo.tiff");
        final AbstractGridFormat format = new GeoTiffFormat();
        assertTrue(format.accepts(input));

        // getting a reader
        GeoTiffReader reader = new GeoTiffReader(input);

        // reading the coverage
        GridCoverage2D coverage = (GridCoverage2D) reader.read(null);

        // check coverage and crs
        assertNotNull(coverage);
        assertNotNull(coverage.getCoordinateReferenceSystem());
        reader.dispose();

        // get a writer
        final File output =
                new File(TestData.file(GeoTiffReaderTest.class, "."), "outMetadata.tif");
        GeoTiffWriter writer = new GeoTiffWriter(output);

        // Setting a COPYRIGHT metadata
        ParameterValue<ProgressListener> listener = GeoTiffFormat.PROGRESS_LISTENER.createValue();

        listener.setValue(
                new ProgressListener() {
                    private boolean canceled;

                    @Override
                    public InternationalString getTask() {
                        // TODO Auto-generated method stub
                        return null;
                    }

                    @Override
                    public String getDescription() {
                        // TODO Auto-generated method stub
                        return null;
                    }

                    @Override
                    public void setTask(InternationalString task) {
                        // TODO Auto-generated method stub

                    }

                    @Override
                    public void setDescription(String description) {
                        // TODO Auto-generated method stub

                    }

                    @Override
                    public void started() {
                        LOGGER.info("started");
                    }

                    @Override
                    public void progress(float percent) {
                        LOGGER.info("progress:" + percent);
                        assertTrue(percent >= 0);
                        assertTrue(percent <= 100);
                        if (percent > 50) setCanceled(true);
                    }

                    @Override
                    public float getProgress() {
                        // TODO Auto-generated method stub
                        return 0;
                    }

                    @Override
                    public void complete() {
                        LOGGER.info("complete");
                    }

                    @Override
                    public void dispose() {
                        // TODO Auto-generated method stub

                    }

                    @Override
                    public boolean isCanceled() {
                        return canceled;
                    }

                    @Override
                    public void setCanceled(boolean cancel) {
                        canceled = cancel;
                    }

                    @Override
                    public void warningOccurred(String source, String location, String warning) {
                        // TODO Auto-generated method stub

                    }

                    @Override
                    public void exceptionOccurred(Throwable exception) {
                        // TODO Auto-generated method stub

                    }
                });
        writer.write(coverage, new GeneralParameterValue[] {listener});
        writer.dispose();
        coverage.dispose(true);
    }

