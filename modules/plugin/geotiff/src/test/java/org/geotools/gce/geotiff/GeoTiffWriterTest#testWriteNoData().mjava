    @Test
    public void testWriteNoData() throws Exception {

        // Input geotiff including noData information
        final File input = TestData.file(GeoTiffReaderTest.class, "nodata.tiff");

        // reading the coverage, checking it has nodata
        GeoTiffReader reader = new GeoTiffReader(input);
        GridCoverage2D coverage = (GridCoverage2D) reader.read(null);
        Map props = coverage.getProperties();

        assertTrue(props.containsKey(NoDataContainer.GC_NODATA));
        NoDataContainer nodata = (NoDataContainer) props.get(NoDataContainer.GC_NODATA);
        assertEquals(-9999, nodata.getAsSingleValue(), 1e-6);
        reader.dispose();

        // Writing it, including noData
        final File output = new File(TestData.file(GeoTiffReaderTest.class, "."), "outNoData.tif");
        GeoTiffWriter writer = new GeoTiffWriter(output);
        writer.write(coverage, null);
        writer.dispose();
        coverage.dispose(true);

        // Reding it back, checking noData has been preserved
        reader = new GeoTiffReader(output);
        coverage = (GridCoverage2D) reader.read(null);
        props = coverage.getProperties();
        assertTrue(props.containsKey(NoDataContainer.GC_NODATA));
        nodata = (NoDataContainer) props.get(NoDataContainer.GC_NODATA);
        assertEquals(-9999, nodata.getAsSingleValue(), 1e-6);
        reader.dispose();

        // Writing it again, excluding noData this time
        final File output2 =
                new File(TestData.file(GeoTiffReaderTest.class, "."), "outNoData2.tif");
        writer = new GeoTiffWriter(output2);

        ParameterValue<Boolean> writeNodata = GeoTiffFormat.WRITE_NODATA.createValue();
        writeNodata.setValue(false);

        writer.write(coverage, new GeneralParameterValue[] {writeNodata});
        writer.dispose();
        coverage.dispose(true);

        // Reading the latest file, checking noData is now missing
        reader = new GeoTiffReader(output2);
        coverage = (GridCoverage2D) reader.read(null);
        props = coverage.getProperties();
        assertFalse(props.containsKey(NoDataContainer.GC_NODATA));
    }

