    /**
     * Creates image metadata which complies to the GeoTIFFWritingUtilities specification for the
     * given image writer, image type and GeoTIFFWritingUtilities metadata.
     *
     * @param writer the image writer, must not be null
     * @param type the image type, must not be null
     * @param geoTIFFMetadata the GeoTIFFWritingUtilities metadata, must not be null
     * @param params
     * @return the image metadata, never null
     * @throws IIOException if the metadata cannot be created
     */
    public static final IIOMetadata createGeoTiffIIOMetadata(
            ImageWriter writer,
            ImageTypeSpecifier type,
            GeoTiffIIOMetadataEncoder geoTIFFMetadata,
            ImageWriteParam params)
            throws IIOException {
        IIOMetadata imageMetadata = writer.getDefaultImageMetadata(type, params);
        imageMetadata = writer.convertImageMetadata(imageMetadata, type, params);
        org.w3c.dom.Element w3cElement =
                (org.w3c.dom.Element)
                        imageMetadata.getAsTree(GeoTiffConstants.GEOTIFF_IIO_METADATA_FORMAT_NAME);

        geoTIFFMetadata.assignTo(w3cElement);
        try {
            Node TIFFIFD = w3cElement.getChildNodes().item(0);
            final IIOMetadata iioMetadata =
                    new TIFFImageMetadata(TIFFImageMetadata.parseIFD(TIFFIFD));
            imageMetadata = iioMetadata;
        } catch (IIOInvalidTreeException e) {
            throw new IIOException("Failed to set GeoTIFFWritingUtilities specific tags.", e);
        }

        return imageMetadata;
    }

