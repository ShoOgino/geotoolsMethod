    /**
     * 
     * @param directory
     * @return
     * @throws IOException
     */
    FileLock acquireLock(File directory) throws IOException {
        // Get a file channel for the file
        File file = new File(directory, LOCK_FILE);
        FileChannel channel = new RandomAccessFile(file, "rw").getChannel();
    
        // Use the file channel to create a lock on the file.
        // This method blocks until it can retrieve the lock.
        FileLock lock = channel.lock();
    
        // Try acquiring the lock without blocking. This method returns
        // null or throws an exception if the file is already locked.
        while(!lock.isValid()) {
            try {
                lock = channel.tryLock();
            } catch (OverlappingFileLockException e) {
                // File is already locked in this thread or virtual machine
            }
            // wait for the other process to unlock it, should take a couple of seconds
            try {
                Thread.sleep(500);
            } catch(InterruptedException e) {
                // someone waked us earlier, no problem
            }
        }
        
        return lock;
    }

