    /**
     * This method is responsible for evaluating possible subsampling factors once the best
     * resolution level has been found in case we have support for overviews, or starting from the
     * original coverage in case there are no overviews available.
     *
     * @param readP the imageRead parameter to be set
     * @param requestedRes the requested resolutions from which to determine the decimation
     *     parameters.
     */
    public static void setDecimationParameters(
            ImageReadParam readP,
            GridEnvelope baseGridRange,
            double[] requestedRes,
            double[] highestRes) {
        {
            if (readP == null || baseGridRange == null)
                throw new IllegalArgumentException("Specified parameters are null");
            final int w = baseGridRange.getSpan(0);
            final int h = baseGridRange.getSpan(1);

            // ///////////////////////////////////////////////////////////////
            // DECIMATION ON READING
            // Setting subsampling factors with some checkings
            // 1) the subsampling factors cannot be zero
            // 2) the subsampling factors cannot be such that the w or h are 0
            // ///////////////////////////////////////////////////////////////
            if (requestedRes == null) {
                readP.setSourceSubsampling(1, 1, 0, 0);
            } else {
                int subSamplingFactorX = (int) Math.floor(requestedRes[0] / highestRes[0]);
                subSamplingFactorX = (subSamplingFactorX == 0) ? 1 : subSamplingFactorX;

                while (((w / subSamplingFactorX) <= 0) && (subSamplingFactorX >= 0))
                    subSamplingFactorX--;

                subSamplingFactorX = (subSamplingFactorX == 0) ? 1 : subSamplingFactorX;

                int subSamplingFactorY = (int) Math.floor(requestedRes[1] / highestRes[1]);
                subSamplingFactorY = (subSamplingFactorY == 0) ? 1 : subSamplingFactorY;

                while (((h / subSamplingFactorY) <= 0) && (subSamplingFactorY >= 0))
                    subSamplingFactorY--;

                subSamplingFactorY = (subSamplingFactorY == 0) ? 1 : subSamplingFactorY;

                readP.setSourceSubsampling(subSamplingFactorX, subSamplingFactorY, 0, 0);
            }
        }
    }

