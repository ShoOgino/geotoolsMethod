    /**
     * Compute the coverage request and produce a grid coverage. The produced grid coverage may be
     * {@code null} in case of empty request.
     *
     * @param index
     * @param imageReadParam
     * @param isEmptyRequest
     * @param needTransformation
     * @param imageReaderSpi
     * @param coverageName
     * @param coverageFactory
     * @param raster2Model
     * @param coordinateReferenceSystem
     * @param envelope2D
     * @throws IOException @TODO: handle more input types
     */
    public static GridCoverage compute(
            Object input,
            final int imageIndex,
            final boolean needTransformation,
            final boolean isEmptyRequest,
            final boolean useJAI,
            ImageReadParam imageReadParam,
            final boolean useMultithreading,
            final GridSampleDimension[] sampleDimensions,
            final ImageReaderSpi imageReaderSpi,
            final String coverageName,
            final GridCoverageFactory coverageFactory,
            final MathTransform raster2Model,
            final CoordinateReferenceSystem coordinateReferenceSystem,
            final GeneralEnvelope envelope2D)
            throws IOException {

        if (isEmptyRequest) {
            return null;
        } else {
            return Utilities.createCoverage(
                    imageReaderSpi,
                    input,
                    imageIndex,
                    imageReadParam,
                    useJAI,
                    useMultithreading,
                    needTransformation,
                    sampleDimensions,
                    coverageName,
                    coverageFactory,
                    raster2Model,
                    coordinateReferenceSystem,
                    envelope2D);
        }
    }

