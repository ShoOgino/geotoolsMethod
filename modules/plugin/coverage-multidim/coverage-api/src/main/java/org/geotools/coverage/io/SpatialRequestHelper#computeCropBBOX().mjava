    private void computeCropBBOX() throws DataSourceException {

        // get the crs for the requested bbox
        if (requestCRS == null)
            requestCRS = CRS.getHorizontalCRS(requestedBBox.getCoordinateReferenceSystem());
        try {

            //
            // The destination to source transform has been computed (and eventually erased) already
            // by inspectCoordinateSystem()

            // now transform the requested envelope to source crs
            if (destinationToSourceTransform != null
                    && !destinationToSourceTransform.isIdentity()) {
                final GeneralEnvelope temp =
                        new GeneralEnvelope(CRS.transform(requestedBBox, coverageProperties.crs2D));
                temp.setCoordinateReferenceSystem(coverageProperties.crs2D);
                cropBBox = new ReferencedEnvelope(temp);
                needsReprojection = true;

            } else {
                // we do not need to do anything, but we do this in order to aboid problems with the
                // envelope checks
                cropBBox =
                        new ReferencedEnvelope(
                                requestedBBox.getMinX(),
                                requestedBBox.getMaxX(),
                                requestedBBox.getMinY(),
                                requestedBBox.getMaxY(),
                                coverageProperties.crs2D);
            }

            // intersect requested BBox in native CRS with coverage native bbox to get the crop bbox
            // intersect the requested area with the bounds of this layer in native crs
            if (!cropBBox.intersects((BoundingBox) coverageProperties.bbox)) {
                if (LOGGER.isLoggable(Level.FINE)) {
                    LOGGER.fine(
                            new StringBuilder("The computed CropBoundingBox ")
                                    .append(cropBBox)
                                    .append(" Doesn't intersect the coverage BoundingBox ")
                                    .append(coverageProperties.bbox)
                                    .append(" resulting in an empty request")
                                    .toString());
                }
                cropBBox = null;
                empty = true;
                return;
            }
            // TODO XXX Optimize when referenced envelope has intersection method that actually
            // retains the CRS, this is the JTS one
            cropBBox =
                    new ReferencedEnvelope(
                            ((ReferencedEnvelope) cropBBox).intersection(coverageProperties.bbox),
                            coverageProperties.crs2D);

            return;
        } catch (TransformException te) {
            // something bad happened while trying to transform this
            // envelope. let's try with wgs84
            if (LOGGER.isLoggable(Level.FINE)) LOGGER.log(Level.FINE, te.getLocalizedMessage(), te);
        }

        try {
            // can we proceed? Do we have geo stuff to do all these operations?
            if (coverageProperties.geographicCRS2D != null
                    && coverageProperties.geographicBBox != null) {

                //
                // If we can not reproject the requested envelope to the native CRS,
                // we go back to reproject in the geographic crs of the native
                // coverage since this usually happens for conversions between CRS
                // whose area of definition is different
                //

                // STEP 1 reproject the requested envelope to the coverage geographic bbox
                if (!CRS.equalsIgnoreMetadata(coverageProperties.geographicCRS2D, requestCRS)) {
                    // try to convert the requested bbox to the coverage geocrs
                    requestCRSToCoverageGeographicCRS2D =
                            CRS.findMathTransform(
                                    requestCRS, coverageProperties.geographicCRS2D, true);
                    if (!requestCRSToCoverageGeographicCRS2D.isIdentity()) {
                        requestedBBOXInCoverageGeographicCRS =
                                CRS.transform(requestedBBox, coverageProperties.geographicCRS2D);
                        requestedBBOXInCoverageGeographicCRS.setCoordinateReferenceSystem(
                                coverageProperties.geographicCRS2D);
                    }
                }
                if (requestedBBOXInCoverageGeographicCRS == null) {
                    requestedBBOXInCoverageGeographicCRS = new GeneralEnvelope(requestCRS);
                }

                // STEP 2 intersection with the geographic bbox for this coverage
                if (!requestedBBOXInCoverageGeographicCRS.intersects(
                        coverageProperties.geographicBBox, true)) {
                    cropBBox = null;
                    empty = true;
                    return;
                }
                // intersect with the coverage native geographic bbox
                // note that for the moment we got to use general envelope since there is no
                // intersection otherwise
                requestedBBOXInCoverageGeographicCRS.intersect(coverageProperties.geographicBBox);
                requestedBBOXInCoverageGeographicCRS.setCoordinateReferenceSystem(
                        coverageProperties.geographicCRS2D);

                // now go back to the coverage native CRS in order to compute an approximate
                // requested resolution
                approximateRequestedBBoInNativeCRS =
                        CRS.transform(
                                requestedBBOXInCoverageGeographicCRS, coverageProperties.crs2D);
                approximateRequestedBBoInNativeCRS.setCoordinateReferenceSystem(
                        coverageProperties.crs2D);
                cropBBox = new ReferencedEnvelope(approximateRequestedBBoInNativeCRS);
                return;
            }

        } catch (TransformException te) {
            // something bad happened while trying to transform this
            // envelope. let's try with wgs84
            if (LOGGER.isLoggable(Level.FINE)) LOGGER.log(Level.FINE, te.getLocalizedMessage(), te);
        } catch (FactoryException fe) {
            // something bad happened while trying to transform this
            // envelope. let's try with wgs84
            if (LOGGER.isLoggable(Level.FINE)) LOGGER.log(Level.FINE, fe.getLocalizedMessage(), fe);
        }

        LOGGER.log(
                Level.INFO,
                "We did not manage to crop the requested envelope, we fall back onto loading the whole coverage.");
        cropBBox = null;
    }

