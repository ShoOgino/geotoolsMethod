    /**
     * This test uses use the default implementations to express 7 bands of a landsat image.
     */
    @Test
    public void testLandsatAxis() {
        CoordinateSystemAxis csAxis = new DefaultCoordinateSystemAxis(
                new SimpleInternationalString("light"), "light", AxisDirection.OTHER,
                SI.MICRO(SI.METER));

        DefaultLinearCS lightCS = new DefaultLinearCS("light", csAxis);
        Map<String, Object> datumProperties = new HashMap<String, Object>();
        datumProperties.put("name", "light");

        EngineeringDatum lightDatum = new DefaultEngineeringDatum(datumProperties);
        DefaultEngineeringCRS lightCRS = new DefaultEngineeringCRS("wave length", lightDatum,
                lightCS);

        List<Measure<Band, Dimensionless>> keys = EnumMeasure.valueOf(Band.class);

        DefaultAxis<Band, Dimensionless> axis = new DefaultAxis<Band, Dimensionless>(new NameImpl(
                "Bands"), new SimpleInternationalString("Landsat bands by wavelength"), keys,
                Unit.ONE);

        Map<Measure<Integer, Dimensionless>, SampleDimension> samples = new HashMap<Measure<Integer, Dimensionless>, SampleDimension>();
        
        // Ensure that the equals method is correct
        EnumMeasure<Band> band = EnumMeasure.valueOf(Band.BLUE);
        assertTrue(band.equals(keys.get(0)));
        
        // Check if the ordinal value is correct
        assertEquals(Band.BLUE.ordinal(), keys.get(0).doubleValue(null), 0.01d);
        
        // Check if the value is correct
        assertEquals(Band.BLUE, keys.get(0).getValue());
        
        // Check if the TO method is correct
        assertSame(keys.get(0), keys.get(0).to(null));
        
        // Ensure the Unit is one
        assertEquals(Unit.ONE, keys.get(0).getUnit());
    }

