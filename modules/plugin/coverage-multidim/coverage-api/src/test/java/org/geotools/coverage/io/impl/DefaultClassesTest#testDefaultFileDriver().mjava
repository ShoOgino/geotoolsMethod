    @Test
    public void testDefaultFileDriver() {
        DefaultFileDriver driver =
                new DefaultFileDriver(
                        TestDriver.TEST_DRIVER,
                        TestDriver.TEST_DRIVER,
                        TestDriver.TEST_DRIVER,
                        new Hints(),
                        Collections.singletonList(".EXT"),
                        EnumSet.of(
                                DriverCapabilities.CONNECT,
                                DriverCapabilities.CREATE,
                                DriverCapabilities.DELETE));

        // Various checks on the DefaultFileDriver class
        assertFalse(driver.canProcess(DriverCapabilities.CONNECT, url, connectionParams));
        assertFalse(driver.canProcess(DriverCapabilities.CREATE, url, connectionParams));
        assertFalse(driver.canProcess(DriverCapabilities.DELETE, url, connectionParams));

        assertFalse(driver.canConnect(connectionParams));
        assertFalse(driver.canCreate(connectionParams));
        assertFalse(driver.canDelete(connectionParams));

        // Ensure that UnsupportedOperationException is thrown
        boolean notThrown = false;
        try {
            driver.connect(connectionParams, hints, null);
            notThrown = true;
        } catch (UnsupportedOperationException e) {
        } catch (IOException e) {
            notThrown = true;
        }
        assertFalse(notThrown);
        // Reset the boolean
        notThrown = false;

        try {
            driver.create(connectionParams, hints, null);
            notThrown = true;
        } catch (UnsupportedOperationException e) {
        } catch (IOException e) {
            notThrown = true;
        }
        assertFalse(notThrown);
        // Reset the boolean
        notThrown = false;

        try {
            driver.delete(connectionParams, hints, null);
            notThrown = true;
        } catch (UnsupportedOperationException e) {
        } catch (IOException e) {
            notThrown = true;
        }
        assertFalse(notThrown);

        try {
            driver.process(DriverCapabilities.CONNECT, url, connectionParams, hints, null);
            notThrown = true;
        } catch (UnsupportedOperationException e) {
        } catch (IOException e) {
            notThrown = true;
        }
        assertFalse(notThrown);
        // Reset the boolean
        notThrown = false;

        try {
            driver.process(DriverCapabilities.CREATE, url, connectionParams, hints, null);
            notThrown = true;
        } catch (UnsupportedOperationException e) {
        } catch (IOException e) {
            notThrown = true;
        }
        assertFalse(notThrown);
        // Reset the boolean
        notThrown = false;

        try {
            driver.process(DriverCapabilities.DELETE, url, connectionParams, hints, null);
            notThrown = true;
        } catch (UnsupportedOperationException e) {
        } catch (IOException e) {
            notThrown = true;
        }
        assertFalse(notThrown);

        // ParameterInfo
        Map<String, Parameter<?>> connectParameterInfo = driver.getConnectParameterInfo();
        assertNotNull(connectParameterInfo);
        assertTrue(connectParameterInfo.containsKey(DefaultFileDriver.URL.key));
        Map<String, Parameter<?>> createParameterInfo = driver.getCreateParameterInfo();
        assertNotNull(createParameterInfo);
        assertTrue(createParameterInfo.containsKey(DefaultFileDriver.URL.key));
        Map<String, Parameter<?>> deleteParameterInfo = driver.getDeleteParameterInfo();
        assertNotNull(deleteParameterInfo);
        assertTrue(deleteParameterInfo.containsKey(DefaultFileDriver.URL.key));
    }

