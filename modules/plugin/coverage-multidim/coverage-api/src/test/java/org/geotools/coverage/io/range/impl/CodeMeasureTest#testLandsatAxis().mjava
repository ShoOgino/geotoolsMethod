    /**
     * This test uses use the default implementations to express 7 bands of a landsat image.
     */
    @Test
    public void testLandsatAxis() {
        CoordinateSystemAxis csAxis = new DefaultCoordinateSystemAxis(
                new SimpleInternationalString("light"), "light", AxisDirection.OTHER,
                SI.MICRO(SI.METRE));

        DefaultLinearCS lightCS = new DefaultLinearCS("light", csAxis);
        Map<String, Object> datumProperties = new HashMap<String, Object>();
        datumProperties.put("name", "light");

        EngineeringDatum lightDatum = new DefaultEngineeringDatum(datumProperties);
        SingleCRS lightCRS = new DefaultEngineeringCRS("wave length", lightDatum, lightCS);

        List<Measure<Code, Dimensionless>> keys = CodeMeasure.valueOf(codes);

        DefaultAxis<Code, Dimensionless> axis = new DefaultAxis<Code, Dimensionless>(new NameImpl(
                "Bands"), new SimpleInternationalString("Expressed in wavelengths"), keys,
                AbstractUnit.ONE, lightCRS);

        assertEquals(lightCRS, axis.getCoordinateReferenceSystem());
        assertEquals(7, axis.getKeys().size());
        
        // Ensure that the equals method is correct
        CodeMeasure<Code> code = (CodeMeasure<Code>) CodeMeasure.valueOf(codes.get(0));
        CodeMeasure<Code> code2 = (CodeMeasure<Code>) CodeMeasure.valueOf(codes.get(1));
        assertFalse(code.equals(code2));
        
        // Check if the ordinal value is correct
        assertNotEquals(code.doubleValue(null), code2.doubleValue(null), 0.01d);
        
        // Ensure the Unit is one
        assertEquals(AbstractUnit.ONE, code.getUnit());
        
        // Check if the value is correct
        assertSame(codes.get(0), code.getValue());
        
        // Check if the TO method is correct
        assertSame(code.to(null), code);
    }

