    /**
     * Configures the aliases to be used on the unit parser. An alias is a different name for a unit
     */
    public static void setAliases(Map<String, String> aliases) {
        SimpleUnitFormat format = AbstractNetCDFUnitFormat.getNewInstance();

        // missing unit that cannot be expressed via config files
        Unit<?> bel = ONE.transform(new LogConverter(10));
        format.alias(bel.divide(10), "dB");

        // register non SI units as well
        for (Unit<?> u : NonSI.getInstance().getUnits()) {
            if (u.getSymbol() != null && unknownSymbol(format, u.getSymbol())) {
                format.alias(u, u.getSymbol());
            }
        }

        // register a notion of unitless
        format.label(ONE, "unitless");

        // go with the aliases (key -> value, that is, alias -> actual unit)
        for (Map.Entry<String, String> entry : aliases.entrySet()) {
            try {
                format.alias(format.parse(entry.getValue()), entry.getKey());
            } catch (MeasurementParseException ex) {
                LOGGER.log(
                        Level.WARNING,
                        "Failed to parse "
                                + entry.getKey()
                                + " -> "
                                + entry.getValue()
                                + ", skipped.",
                        ex);
            }
        }

        // replace
        FORMAT = format;
    }

