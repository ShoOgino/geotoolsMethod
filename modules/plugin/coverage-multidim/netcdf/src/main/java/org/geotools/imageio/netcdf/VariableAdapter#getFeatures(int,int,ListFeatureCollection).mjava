    /**
     * Return features for that variable adapter, starting from slices with index = "startIndex", and up to "limit" elements.
     * This allows for paging. Put the created features inside the provided collection
     * 
     * @param startIndex the first slice to be returned
     * @param limit the max number of features to be created
     * @param collection the feature collection where features need to be stored
     */
    public void getFeatures(final int startIndex, final int limit, final ListFeatureCollection collection) {
        final SimpleFeatureType indexSchema = collection.getSchema();
        final int slicesNum = getNumberOfSlices();
        if (startIndex > slicesNum) {
            throw new IllegalArgumentException("The paging start index can't be higher than the number of available slices");
        }
        int lastIndex = startIndex + limit;
        if (lastIndex > slicesNum) {
            lastIndex = slicesNum;
        }
        final String varName = variableDS.getFullName();
        for (int imageIndex = startIndex; imageIndex < lastIndex; imageIndex++) {

            int[] index = splitIndex(imageIndex);

            //Put a new sliceIndex in the list
            final Slice2DIndex variableIndex = new Slice2DIndex(index, varName);
            reader.ancillaryFileManager.addSlice(variableIndex);

            // Create a feature for that index to be put in the CoverageSlicesCatalog
            final SimpleFeature feature = createFeature(
                    variableDS, 
                    coverageName.toString(), 
                    index,
                    coordinateSystem, 
                    imageIndex, 
                    indexSchema);
            collection.add(feature);
        }
    }

