        /** Mapper parsing the coordinateVariables. */
        public DimensionMapper(Map<String, CoordinateVariable<?>> coordinates) {
            // check other dimensions
            int coordinates2Dx = 0;
            int coordinates2Dy = 0;

            dimensions = new HashMap<>();
            Set<String> coordinateKeys = new TreeSet<>(coordinates.keySet());
            for (String key : coordinateKeys) {
                // get from coordinate vars
                final CoordinateVariable<?> cv = getCoordinateVariable(key);
                if (cv != null) {
                    final String name = cv.getName();
                    AxisType axisType = cv.getAxisType();
                    switch (axisType) {
                        case GeoX:
                        case Lon:
                            coordinates2Dx++;
                            continue;
                        case GeoY:
                        case Lat:
                            coordinates2Dy++;
                            continue;
                        case Height:
                        case Pressure:
                        case RadialElevation:
                        case RadialDistance:
                        case GeoZ:
                            if (NetCDFCRSUtilities.VERTICAL_AXIS_NAMES.contains(name)
                                    && !dimensions.containsKey(NetCDFUtilities.ELEVATION_DIM)) {
                                // Main elevation dimension
                                dimensions.put(NetCDFUtilities.ELEVATION_DIM, name);
                            } else {
                                // additional elevation dimension
                                dimensions.put(name.toUpperCase(), name);
                            }
                            break;
                        case Time:
                            if (!dimensions.containsKey(NetCDFUtilities.TIME_DIM)) {
                                // Main time dimension
                                dimensions.put(NetCDFUtilities.TIME_DIM, name);
                            } else {
                                // additional time dimension
                                dimensions.put(name.toUpperCase(), name);
                            }
                            break;
                        default:
                            // additional dimension
                            dimensions.put(name.toUpperCase(), name);
                            break;
                    }
                } else {
                    if (LOGGER.isLoggable(Level.FINE)) {
                        LOGGER.fine(
                                "Null coordinate variable: '"
                                        + key
                                        + "' while processing input: "
                                        + dataset.getLocation());
                    }
                }
            }
            if (coordinates2Dx + coordinates2Dy > 2) {
                if (coordinates2Dx != coordinates2Dy) {
                    throw new IllegalArgumentException(
                            "number of x/lon coordinates must match number of y/lat coordinates");
                }
                // More than 2D coordinates have been found, as an instance lon1, lat1, lon2, lat2
                // Report that by unsetting the singleBbox flag.
                setHasSingleBBox(false);
            }
        }

