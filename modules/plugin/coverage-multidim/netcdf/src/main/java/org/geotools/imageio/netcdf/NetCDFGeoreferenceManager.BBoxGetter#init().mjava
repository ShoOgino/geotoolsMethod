        protected void init() throws FactoryException, IOException {
            double[] xLon = new double[2];
            double[] yLat = new double[2];
            byte set = 0;
            isLonLat = false;
            Map<String, Object> crsProperties = new HashMap<String, Object>();
            String axisUnit = null;
            // Scan over coordinateVariables
            for (CoordinateVariable<?> cv : getCoordinatesVariables()) {
                if (cv.isNumeric()) {

                    // is it lat or lon (or geoY or geoX)?
                    AxisType type = cv.getAxisType();
                    switch (type) {
                        case GeoY:
                        case Lat:
                            getCoordinate(cv, yLat);
                            if (yLat[1] > yLat[0]) {
                                setNeedsFlipping(true);
                            } else {
                                setNeedsFlipping(false);
                            }
                            set++;
                            break;
                        case GeoX:
                        case Lon:
                            getCoordinate(cv, xLon);
                            set++;
                            break;
                        default:
                            break;
                    }
                    switch (type) {
                        case Lat:
                        case Lon:
                            isLonLat = true;
                            break;
                        case GeoY:
                        case GeoX:
                            axisUnit = cv.getUnit();
                            break;
                        default:
                            break;
                    }
                }
                if (set == 2) {
                    break;
                }
            }

            if (set != 2) {
                throw new IllegalStateException("Unable to create envelope for this dataset");
            }

            // The previous code was able to automatically convert km coordinates to meter.
            // Let's check if we still want this automatically conversion occur or we
            // want the actual axisUnit to be used.
            if (!NetCDFCRSUtilities.isConvertAxisKm() && axisUnit != null) {
                // We assume that unit will be the same for Lon/GeoX
                crsProperties.put(ProjectionBuilder.AXIS_UNIT, axisUnit);
            }
            // create the envelope
            CoordinateReferenceSystem crs = NetCDFCRSUtilities.WGS84;
            // Looks for Projection definition
            if (!isLonLat) {
                // First, looks for a global crs (it may have been defined
                // as a NetCDF output write operation) to be used as fallback
                CoordinateReferenceSystem defaultCrs = NetCDFProjection.lookForDatasetCRS(dataset);

                // Then, look for a per variable CRS
                CoordinateReferenceSystem localCrs =
                        NetCDFProjection.lookForVariableCRS(dataset, defaultCrs, crsProperties);
                if (localCrs != null) {
                    // lookup for a custom EPSG if any
                    crs = NetCDFProjection.lookupForCustomEpsg(localCrs);
                }
            }
            ReferencedEnvelope boundingBox =
                    new ReferencedEnvelope(xLon[0], xLon[1], yLat[0], yLat[1], crs);
            boundingBoxes.put(NetCDFGeoreferenceManager.DEFAULT, boundingBox);
        }

