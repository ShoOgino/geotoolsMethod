    /**
     * Parse the coordinateAxes and retrieve the associated coordinateVariable
     * to be used for the dimension mapping.
     *  
     * @param coordinateAxes
     */
    private void initMapping(Map<String, CoordinateVariable<?>> coordinates) {
        // check other dimensions
        int coordinates2D = 0;
        Map<String, String> dimensionsMap = new HashMap<String, String>();
        Set<String> coordinateKeys = new TreeSet<String>(coordinates.keySet());
        for (String key : coordinateKeys) {
            // get from coordinate vars
            final CoordinateVariable<?> cv = getCoordinateVariable(key);
            if (cv != null) {
                final String name = cv.getName();
                AxisType axisType = cv.getAxisType();
                switch (axisType) {
                case GeoX:
                case GeoY:
                case Lat:
                case Lon:
                    // TODO: Add support for multiple different bboxes within the same file
                    coordinates2D++;
                    continue;
                case Height:
                case Pressure:
                case RadialElevation:
                case RadialDistance:
                case GeoZ:
                    if (NetCDFCRSUtilities.VERTICAL_AXIS_NAMES.contains(name)
                            && !dimensionsMap.containsKey(NetCDFUtilities.ELEVATION_DIM)) {
                        // Main elevation dimension
                        dimensionsMap.put(NetCDFUtilities.ELEVATION_DIM, name);
                    } else {
                        // additional elevation dimension
                        dimensionsMap.put(name.toUpperCase(), name);
                    }
                    break;
                case Time:
                    if (!dimensionsMap.containsKey(NetCDFUtilities.TIME_DIM)) {
                        // Main time dimension
                        dimensionsMap.put(NetCDFUtilities.TIME_DIM, name);
                    } else {
                        // additional time dimension
                        dimensionsMap.put(name.toUpperCase(), name);
                    }
                    break;
                default:
                    if (LOGGER.isLoggable(Level.FINE)) {
                        LOGGER.fine("The specified axis type isn't currently supported: " 
                    + axisType + "\nskipping it");
                    }
                    break;
                }
            } else {
                if (LOGGER.isLoggable(Level.FINE)) {
                    LOGGER.fine("Null coordinate variable: '" + key + "' while processing input: " + dataset.getLocation());
                }
            }
        }
        if (coordinates2D > 2) {
            setHasMultiple2Dcoords(true);
        }

        dimensionsMapping = dimensionsMap;
    }

