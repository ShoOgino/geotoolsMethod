    /**
     * @param coverage
     * @param cs
     * @return
     * @throws SchemaException
     */
    String suggestSchemaFromCoordinateSystem(
            Coverage coverage, CoordinateSystem cs, boolean isShared) throws SchemaException {

        // init with base
        String schemaAttributes = isShared ? BASE_SCHEMA_LOCATION : BASE_SCHEMA;

        // check other dimensions
        String timeAttribute = "";
        String elevationAttribute = "";
        String otherAttributes = "";
        for (CoordinateAxis axis : cs.getCoordinateAxes()) {
            // get from coordinate vars
            String axisName = axis.getFullName();
            if (NetCDFUtilities.getIgnoredDimensions().contains(axisName)) {
                continue;
            }
            final CoordinateVariable<?> cv = georeferencing.getCoordinateVariable(axisName);
            if (cv == null) {
                if (LOGGER.isLoggable(Level.FINE)) {
                    LOGGER.fine("Unable to find a coordinate variable for " + axisName);
                }
                continue;
            }
            String name = cv.getName();
            String typeName = cv.getType().getName();
            switch (cv.getAxisType()) {
                case GeoX:
                case GeoY:
                case Lat:
                case Lon:
                    continue;
                case Time:
                    name = uniqueTimeAttribute ? NetCDFUtilities.TIME : name;
                    timeAttribute += ("," + name + ":" + typeName);
                    break;
                case Height:
                case Pressure:
                case RadialElevation:
                case RadialDistance:
                case GeoZ:
                    elevationAttribute += ("," + name + ":" + typeName);
                    break;
                default:
                    otherAttributes += ("," + name + ":" + typeName);
            }
        }
        schemaAttributes += timeAttribute + elevationAttribute + otherAttributes;
        return schemaAttributes;
    }

