    /**
     * Return a proper {@link NetCDFCoordinateReferenceSystemType} depending on the input OGC {@link
     * CoordinateReferenceSystem} instance.
     *
     * @param crs
     * @return
     */
    public static NetCDFCoordinateReferenceSystemType parseCRS(CoordinateReferenceSystem crs) {
        NetCDFCoordinateReferenceSystemType crsType = null;
        if (crs instanceof DefaultGeographicCRS) {
            crsType = WGS84;
        } else if (crs instanceof ProjectedCRS) {
            ProjectedCRS projectedCRS = (ProjectedCRS) crs;
            Projection projection = projectedCRS.getConversionFromBase();
            MathTransform transform = projection.getMathTransform();
            if (transform instanceof TransverseMercator) {
                crsType = TRANSVERSE_MERCATOR;
            } else if (transform instanceof LambertConformal1SP) {
                crsType = LAMBERT_CONFORMAL_CONIC_1SP;
            } else if (transform instanceof LambertConformal2SP) {
                crsType = LAMBERT_CONFORMAL_CONIC_2SP;
            } else if (transform instanceof LambertAzimuthalEqualArea) {
                crsType = LAMBERT_AZIMUTHAL_EQUAL_AREA;
            } else if (transform instanceof Orthographic) {
                crsType = ORTHOGRAPHIC;
            } else if (transform instanceof PolarStereographic) {
                crsType = POLAR_STEREOGRAPHIC;
            } else if (transform instanceof Stereographic) {
                crsType = STEREOGRAPHIC;
            } else if (transform instanceof Mercator1SP) {
                crsType = MERCATOR_1SP;
            } else if (transform instanceof Mercator2SP) {
                crsType = MERCATOR_2SP;
            } else if (transform instanceof AlbersEqualArea) {
                crsType = ALBERS_EQUAL_AREA;
            } else if (transform instanceof RotatedPole) {
                crsType = ROTATED_POLE;
            }
        } else {
            // Fallback on SPATIAL_REF to deal with projection which
            // doesn't have a CF Mapping.
            crsType = SPATIAL_REF;
        }

        if (LOGGER.isLoggable(Level.FINE)) {
            LOGGER.fine("Using a NetCDF CRS based on " + crsType);
        }
        return crsType;
    }

