    /**
     * Initialize main properties for this reader.
     *
     * @throws exception {@link InvalidRangeException}
     */
    private void init() throws IOException {
        int numImages = 0;
        try {
            if (dataset != null) {
                checkType = NetCDFUtilities.getCheckType(dataset);

                // get the coordinate variables
                georeferencing = new NetCDFGeoreferenceManager(dataset);
                final File slicesIndexFile = ancillaryFileManager.getSlicesIndexFile();
                uniqueTimeAttribute =
                        ancillaryFileManager.getParameterAsBoolean(
                                NetCDFUtilities.UNIQUE_TIME_ATTRIBUTE);

                if (slicesIndexFile != null) {
                    // === use sidecar index
                    if (slicesIndexFile.exists()) {
                        ancillaryFileManager.initSliceManager();
                        numImages = ancillaryFileManager.slicesIndexManager.getNumberOfRecords();
                        if (!ignoreMetadata) {
                            coverages.addAll(ancillaryFileManager.getCoveragesNames());
                            DataStoreConfiguration datastoreConfiguration =
                                    ancillaryFileManager.getDatastoreConfiguration();
                            settingTypeNames(datastoreConfiguration);
                            initCatalog(datastoreConfiguration);
                        }
                    }

                    if (numImages <= 0 || !slicesIndexFile.exists()) {
                        // === index doesn't exists already, build it first
                        // close existing

                        // TODO: Optimize this. Why it's storing the index and reading it back??
                        ancillaryFileManager.resetSliceManager();
                        numImages = initIndex();

                        // reopen file to cut caching
                        ancillaryFileManager.initSliceManager();
                        numImages = ancillaryFileManager.slicesIndexManager.getNumberOfRecords();
                    }

                } else {
                    // === the dataset is no file dataset, need to build memory index
                    numImages = initIndex();
                }

            } else {
                throw new IllegalArgumentException("No valid NetCDF dataset has been found");
            }
        } catch (InvalidRangeException e) {
            throw new IllegalArgumentException("Exception occurred during NetCDF file parsing", e);
        }
        setNumImages(numImages);
    }

