    /**
     * Build a custom {@link Ellipsoid} provided the name and a Map contains <key,number> parameters describing that ellipsoid. Supported params are
     * {@link #SEMI_MAJOR}, {@link #SEMI_MINOR}, {@link NetCDFUtilities#INVERSE_FLATTENING}
     * 
     * @param name
     * @param ellipsoidParams
     * @return
     */
    public static Ellipsoid createEllipsoid(String name, Map<String, Number> ellipsoidParams) {
        Number semiMajor = NetCDFUtilities.DEFAULT_EARTH_RADIUS;
        Number semiMinor = null;
        Number inverseFlattening = Double.NEGATIVE_INFINITY;
        if (ellipsoidParams != null && !ellipsoidParams.isEmpty()) {
            if (ellipsoidParams.containsKey(NetCDFUtilities.SEMI_MAJOR)) {
                semiMajor = ellipsoidParams.get(NetCDFUtilities.SEMI_MAJOR);
            }
            if (ellipsoidParams.containsKey(NetCDFUtilities.SEMI_MINOR)) {
                semiMinor = ellipsoidParams.get(NetCDFUtilities.SEMI_MINOR);
            }
            if (ellipsoidParams.containsKey(NetCDFUtilities.INVERSE_FLATTENING)) {
                inverseFlattening = ellipsoidParams.get(NetCDFUtilities.INVERSE_FLATTENING);
            }
        }
        if (semiMinor != null) {
            return DefaultEllipsoid.createEllipsoid(name, semiMajor.doubleValue(), semiMinor.doubleValue(), SI.METRE);
        } else {
            return DefaultEllipsoid.createFlattenedSphere(name, semiMajor.doubleValue(), inverseFlattening.doubleValue(), SI.METRE);
        }
    }

