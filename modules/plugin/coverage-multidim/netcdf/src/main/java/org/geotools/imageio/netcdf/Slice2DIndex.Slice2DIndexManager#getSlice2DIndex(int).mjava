        /**
         * Read a {@link Slice2DIndex} from file given the imageIndex.
         * 
         * @param imageIndex the imageIndex to look for.
         * @return the {@link Slice2DIndex} for the picked image.
         * @throws IOException
         */
        public synchronized Slice2DIndex getSlice2DIndex(int imageIndex) throws IOException {
            // Synchronized these access due to the RAF usage.
            // concurrent seeks and reads on the same RAF may
            // may result into unexpected results
            long addressPosition = ADDRESS_POSITION + imageIndex * ADDRESS_SIZE;

            raf.seek(addressPosition);
            long dataPosition = raf.readLong();
            long endDataPosition = raf.readLong();

            raf.seek(dataPosition);
            int nextValue = raf.readInt();

            int[] index;
            if (nextValue < 0) {
                int dimensions = -nextValue;
                index = new int[dimensions];
                for (int i = 0; i < dimensions; i++) {
                    index[i] = raf.readInt();
                }
            } else { //backwards compatibility
                index = new int[2];
                index[VariableAdapter.T] = nextValue;
                index[VariableAdapter.Z] = raf.readInt();
            }

            int stringSize = (int) (endDataPosition - raf.getFilePointer());
            byte[] stringBytes = new byte[stringSize];
            raf.read(stringBytes);
            String varName = new String(stringBytes);

            return new Slice2DIndex(index, varName);
        }

