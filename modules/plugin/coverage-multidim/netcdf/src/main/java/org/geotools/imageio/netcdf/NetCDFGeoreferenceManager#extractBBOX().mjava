    /**
     * Extract the bbox information
     * 
     * @throws IOException 
     * @throws FactoryException 
     */
    private void extractBBOX() throws IOException, FactoryException {
        double [] xLon = new double[2];
        double [] yLat = new double[2];
        byte set = 0;
        isLonLat = false;
        for (CoordinateVariable<?> cv : getCoordinatesVariables()) {
            if (cv.isNumeric()) {

                // is it lat or lon (or geoY or geoX)?
                AxisType type = cv.getAxisType();
                switch (type) {
                case GeoY: case Lat:
                    getCoordinate(cv, yLat);
                    if (yLat[1] > yLat[0]) {
                        setNeedsFlipping(true);
                    } else {
                        setNeedsFlipping(false);
                    }
                    set++;
                    break;
                case GeoX:
                case Lon:
                    getCoordinate(cv, xLon);
                    set++;
                    break;
                default:
                    break;
                }
                switch (type) {
                case Lat:
                case Lon:
                    isLonLat = true;
                default:
                    break;
                }
            }
            if (set == 2) {
                break;
            }
        }
        // create the envelope
        if (set != 2) {
            throw new IllegalStateException("Unable to create envelope for this dataset");
        }
        CoordinateReferenceSystem crs = NetCDFCRSUtilities.WGS84;
        if (!isHasMultiple2Dcoords()) {

            // Looks for Projection definition
            if (!isLonLat) {
                // First, looks for a global crs (it may have been defined 
                // as a NetCDF output write operation) to be used as fallback
                CoordinateReferenceSystem defaultCrs = NetCDFProjection.lookForDatasetCRS(dataset);

                // Then, look for a per variable CRS 
                CoordinateReferenceSystem localCrs = NetCDFProjection.lookForVariableCRS(dataset, defaultCrs);
                if (localCrs != null) {
                    // lookup for a custom EPSG if any
                    crs = NetCDFProjection.lookupForCustomEpsg(localCrs);
                }
            }
            ReferencedEnvelope boundingBox = new ReferencedEnvelope(xLon[0], xLon[1], yLat[0], yLat[1], crs);
            addBoundingBox(NetCDFGeoreferenceManager.DEFAULT, boundingBox);
        } else {
            // TODO: Support multiple Grids definition within the same file which
            // aren't currently supported
            throw new UnsupportedOperationException(
                    "Multiple 2D georeferencing within same datasets still need to be supported");
        }
    }

