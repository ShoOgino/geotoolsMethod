    /**
     * @param binding
     * @param coordinateAxis
     */
    public TimeCoordinateVariable(CoordinateAxis coordinateAxis) {
        super(Date.class, coordinateAxis);
        units = coordinateAxis.getUnitsString();
        /*
         * Gets the axis origin. In the particular case of time axis, units are typically written in the form "days since 1990-01-01
         * 00:00:00". We extract the part before "since" as the units and the part after "since" as the date.
         */
        String origin = null;
        final String[] unitsParts = units.split("(?i)\\s+since\\s+");
        if (unitsParts.length == 2) {
            units = unitsParts[0].trim();
            origin = unitsParts[1].trim();
        } else {
            final Attribute attribute = coordinateAxis.findAttribute("time_origin");
            if (attribute != null) {
                origin = attribute.getStringValue();
            }
        }

        baseTimeUnits = NetCDFTimeUtilities.getTimeUnits(units, null);
        if (baseTimeUnits == -1) {
            throw new IllegalArgumentException(
                    "Couldn't determine time units from unit string '" + units + "'");
        }
        if (origin != null) {
            origin = NetCDFTimeUtilities.trimFractionalPart(origin);
            // add 0 digits if absent
            origin = NetCDFTimeUtilities.checkDateDigits(origin);

            try {
                epoch = (Date) NetCDFUtilities.getAxisFormat(AxisType.Time, origin)
                        .parseObject(origin);
            } catch (ParseException e) {
                LOGGER.warning("Error while parsing time Axis. Skip setting the TemporalExtent from coordinateAxis");
            }
        }
        init();
    }

