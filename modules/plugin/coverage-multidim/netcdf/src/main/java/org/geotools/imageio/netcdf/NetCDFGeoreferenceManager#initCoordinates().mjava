    /**
     * Parse the CoordinateAxes of the dataset and setup proper {@link CoordinateVariable} instances
     * on top of it and proper mapping between NetCDF dimensions and related coordinate variables.
     */
    private void initCoordinates() {
        // get the coordinate variables
        Map<String, CoordinateVariable<?>> coordinates = new HashMap<>();
        Set<String> unsupported = NetCDFUtilities.getUnsupportedDimensions();
        Set<String> ignored = NetCDFUtilities.getIgnoredDimensions();
        for (CoordinateAxis axis : dataset.getCoordinateAxes()) {
            final int axisDimensions = axis.getDimensions().size();
            if (axisDimensions > 0 && axisDimensions < 3) {
                String axisName = axis.getFullName();
                if (axis.getAxisType() != null) {
                    coordinates.put(axisName, CoordinateVariable.create(axis));
                } else {
                    // Workaround for Unsupported Axes
                    if (unsupported.contains(axisName)) {
                        axis.setAxisType(AxisType.GeoZ);
                        coordinates.put(axisName, CoordinateVariable.create(axis));
                        // Workaround for files that have a time dimension, but in a format that
                        // could not be parsed
                    } else if ("time".equals(axisName)) {
                        if (LOGGER.isLoggable(Level.FINE)) {
                            LOGGER.fine(
                                    "Detected unparseable unit string in time axis: '"
                                            + axis.getUnitsString()
                                            + "'.");
                        }
                        axis.setAxisType(AxisType.Time);
                        coordinates.put(axisName, CoordinateVariable.create(axis));
                    } else if (!ignored.contains(axisName)) {
                        LOGGER.warning(
                                "Unsupported axis: "
                                        + axis
                                        + " in input: "
                                        + dataset.getLocation()
                                        + " has been found");
                    }
                }
            }
        }
        coordinatesVariables = coordinates;
        dimensionMapper = new DimensionMapper(coordinates);
    }

