    /** @throws Exception */
    protected void test2DTime_DiffSize(File file) throws Exception {

        NetCDFImageReaderSpi readerSpi = new NetCDFImageReaderSpi();
        assertTrue(readerSpi.canDecodeInput(file));

        NetCDFImageReader imageReader = (NetCDFImageReader) readerSpi.createReaderInstance();
        imageReader.setInput(file);

        // check max. dimension is used
        assertEquals(2, imageReader.getVariableByName("time").getDimensions().size());
        assertEquals(2, imageReader.getVariableByName("time").getDimension(0).getLength());
        assertEquals(3, imageReader.getVariableByName("time").getDimension(1).getLength());

        NetCDFFormat format = new NetCDFFormat();
        NetCDFReader reader = (NetCDFReader) format.getReader(file);

        // ten slices !
        assertEquals(10, reader.getGranules(D, true).getCount(new Query(D)));

        // check time, elevation and runtime in metadata
        assertEquals("true", reader.getMetadataValue(D, "HAS_ELEVATION_DOMAIN"));
        assertEquals("true", reader.getMetadataValue(D, "HAS_TIME_DOMAIN"));
        assertEquals("true", reader.getMetadataValue(D, "HAS_RUN_DOMAIN"));
        assertEquals("java.util.Date", reader.getMetadataValue(D, "RUN_DOMAIN_DATATYPE"));
        assertEquals("0.0/0.0,1.0/1.0", reader.getMetadataValue(D, "ELEVATION_DOMAIN"));
        assertEquals(
                "2012-04-01T00:00:00.000Z/2012-04-01T00:00:00.000Z,"
                        + "2012-04-01T01:00:00.000Z/2012-04-01T01:00:00.000Z,"
                        + "2012-04-01T02:00:00.000Z/2012-04-01T02:00:00.000Z,"
                        + "2012-04-01T03:00:00.000Z/2012-04-01T03:00:00.000Z",
                reader.getMetadataValue(D, "TIME_DOMAIN"));
        assertEquals(
                "2012-04-01T02:00:00.000Z,2012-04-01T03:00:00.000Z",
                reader.getMetadataValue(D, "RUN_DOMAIN"));

        // parameter descriptor for runtime
        Set<ParameterDescriptor<List>> pd = reader.getDynamicParameters(D);
        assertEquals(1, pd.size());

        final ParameterDescriptor<List> runtime = pd.iterator().next();
        assertTrue("run".equalsIgnoreCase(runtime.getName().getCode()));

        // check requesting data
        ParameterValue<List> timeValue = ImageMosaicFormat.TIME.createValue();
        ParameterValue<List> zValue = ImageMosaicFormat.ELEVATION.createValue();
        ParameterValue<List> runtimeValue = runtime.createValue();

        // z = 0, time = 0, runtime = 2;
        zValue.setValue(Collections.singletonList(0.0));
        timeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 00:00:00")));
        runtimeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 02:00:00")));

        checkFoursome(
                reader, new GeneralParameterValue[] {zValue, timeValue, runtimeValue}, 0, 1, 2, 3);

        // z = 1, time = 0, runtime = 2;
        zValue.setValue(Collections.singletonList(1.0));
        timeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 00:00:00")));
        runtimeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 02:00:00")));

        checkFoursome(
                reader, new GeneralParameterValue[] {zValue, timeValue, runtimeValue}, 4, 5, 6, 7);

        // z = 0, time = 1, runtime = 2;
        zValue.setValue(Collections.singletonList(0.0));
        timeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 01:00:00")));
        runtimeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 02:00:00")));

        checkFoursome(
                reader,
                new GeneralParameterValue[] {zValue, timeValue, runtimeValue},
                8,
                9,
                10,
                11);

        // z = 1, time = 1, runtime = 2;
        zValue.setValue(Collections.singletonList(1.0));
        timeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 01:00:00")));
        runtimeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 02:00:00")));

        checkFoursome(
                reader,
                new GeneralParameterValue[] {zValue, timeValue, runtimeValue},
                12,
                13,
                14,
                15);

        // z = 0, time = 2, runtime = 2;
        zValue.setValue(Collections.singletonList(0.0));
        timeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 02:00:00")));
        runtimeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 02:00:00")));

        checkNull(reader, new GeneralParameterValue[] {zValue, timeValue, runtimeValue});

        // z = 1, time = 2, runtime = 2;
        zValue.setValue(Collections.singletonList(1.0));
        timeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 02:00:00")));
        runtimeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 02:00:00")));

        // z = 0, time = 3, runtime = 2;
        zValue.setValue(Collections.singletonList(0.0));
        timeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 03:00:00")));
        runtimeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 02:00:00")));

        checkNull(reader, new GeneralParameterValue[] {zValue, timeValue, runtimeValue});

        // z = 1, time = 3, runtime = 2;
        zValue.setValue(Collections.singletonList(1.0));
        timeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 03:00:00")));
        runtimeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 02:00:00")));

        checkNull(reader, new GeneralParameterValue[] {zValue, timeValue, runtimeValue});

        // z = 0, time = 0, runtime = 3;
        zValue.setValue(Collections.singletonList(0.0));
        timeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 00:00:00")));
        runtimeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 03:00:00")));

        checkNull(reader, new GeneralParameterValue[] {zValue, timeValue, runtimeValue});

        // z = 1, time = 0, runtime = 3;
        zValue.setValue(Collections.singletonList(1.0));
        timeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 00:00:00")));
        runtimeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 03:00:00")));

        checkNull(reader, new GeneralParameterValue[] {zValue, timeValue, runtimeValue});

        // z = 0, time = 1, runtime = 3;
        zValue.setValue(Collections.singletonList(0.0));
        timeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 01:00:00")));
        runtimeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 03:00:00")));

        checkFoursome(
                reader,
                new GeneralParameterValue[] {zValue, timeValue, runtimeValue},
                16,
                17,
                18,
                19);

        // z = 1, time = 1, runtime = 3;
        zValue.setValue(Collections.singletonList(1.0));
        timeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 01:00:00")));
        runtimeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 03:00:00")));

        checkFoursome(
                reader,
                new GeneralParameterValue[] {zValue, timeValue, runtimeValue},
                20,
                21,
                22,
                23);

        // z = 0, time = 2, runtime = 3;
        zValue.setValue(Collections.singletonList(0.0));
        timeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 02:00:00")));
        runtimeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 03:00:00")));

        checkFoursome(
                reader,
                new GeneralParameterValue[] {zValue, timeValue, runtimeValue},
                24,
                25,
                26,
                27);

        // z = 1, time = 2, runtime = 3;
        zValue.setValue(Collections.singletonList(1.0));
        timeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 02:00:00")));
        runtimeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 03:00:00")));

        checkFoursome(
                reader,
                new GeneralParameterValue[] {zValue, timeValue, runtimeValue},
                28,
                29,
                30,
                31);

        // z = 0, time = 3, runtime = 3;
        zValue.setValue(Collections.singletonList(0.0));
        timeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 03:00:00")));
        runtimeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 03:00:00")));

        checkFoursome(
                reader,
                new GeneralParameterValue[] {zValue, timeValue, runtimeValue},
                32,
                33,
                34,
                35);

        // z = 1, time = 3, runtime = 3;
        zValue.setValue(Collections.singletonList(1.0));
        timeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 03:00:00")));
        runtimeValue.setValue(Collections.singletonList(DF.parse("2012-04-01 03:00:00")));

        checkFoursome(
                reader,
                new GeneralParameterValue[] {zValue, timeValue, runtimeValue},
                36,
                37,
                38,
                39);
        reader.dispose();
    }

