    private void testHarvest(ImageMosaicReader reader, File mosaic, GranuleSource source, Query q)
            throws IOException {
        assertNotNull(reader);

        // now add another netcdf and harvest it
        File nc2 = TestData.file(this, "polyphemus_20130302_test.nc");
        FileUtils.copyFileToDirectory(nc2, mosaic);
        File fileToHarvest = new File(mosaic, "polyphemus_20130302_test.nc");
        List<HarvestedSource> harvestSummary = reader.harvest(null, fileToHarvest, null);
        assertEquals(1, harvestSummary.size());
        HarvestedSource hf = harvestSummary.get(0);
        assertEquals("polyphemus_20130302_test.nc", ((File) hf.getSource()).getName());
        assertTrue(hf.success());
        assertEquals(1, reader.getGridCoverageNames().length);

        // check that we have four times now
        SimpleFeatureCollection granules = source.getGranules(q);
        assertEquals(4, granules.size());
        try (SimpleFeatureIterator it = granules.features()) {
            SimpleFeature f = it.next();
            assertEquals("polyphemus_20130301_test.nc", f.getAttribute("location"));
            assertEquals(0, f.getAttribute("imageindex"));
            assertEquals(
                    "2013-03-01T00:00:00.000Z",
                    ConvertersHack.convert(f.getAttribute("time"), String.class));
            assertTrue(it.hasNext());
            f = it.next();
            assertEquals("polyphemus_20130301_test.nc", f.getAttribute("location"));
            assertEquals(1, f.getAttribute("imageindex"));
            assertEquals(
                    "2013-03-01T01:00:00.000Z",
                    ConvertersHack.convert(f.getAttribute("time"), String.class));
            f = it.next();
            assertEquals("polyphemus_20130302_test.nc", f.getAttribute("location"));
            assertEquals(0, f.getAttribute("imageindex"));
            assertEquals(
                    "2013-03-02T00:00:00.000Z",
                    ConvertersHack.convert(f.getAttribute("time"), String.class));
            assertTrue(it.hasNext());
            f = it.next();
            assertEquals("polyphemus_20130302_test.nc", f.getAttribute("location"));
            assertEquals(1, f.getAttribute("imageindex"));
            assertEquals(
                    "2013-03-02T01:00:00.000Z",
                    ConvertersHack.convert(f.getAttribute("time"), String.class));
        }
        ImageLayout layout = reader.getImageLayout();
        SampleModel sampleModel = layout.getSampleModel(null);
        assertEquals(DataBuffer.TYPE_FLOAT, sampleModel.getDataType());
    }

