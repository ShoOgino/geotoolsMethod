    @Test
    public void testAddTimeUnit() {
        final Calendar cal = new GregorianCalendar();
        cal.setTimeZone(NetCDFTimeUtilities.UTC_TIMEZONE);
        cal.setTimeInMillis(0);

        // year
        Calendar yearCal = (Calendar) cal.clone();
        NetCDFTimeUtilities.addTimeUnit(yearCal, Calendar.YEAR, 1);
        assertEquals(31536000000l, yearCal.getTimeInMillis());

        // month
        Calendar monthCal = (Calendar) cal.clone();
        NetCDFTimeUtilities.addTimeUnit(monthCal, Calendar.MONTH, 2);
        assertEquals(5097600000l, monthCal.getTimeInMillis());

        // date
        Calendar dateCal = (Calendar) cal.clone();
        NetCDFTimeUtilities.addTimeUnit(dateCal, Calendar.DATE, 5);
        assertEquals(432000000l, dateCal.getTimeInMillis());

        // hour
        Calendar hourCal = (Calendar) cal.clone();
        NetCDFTimeUtilities.addTimeUnit(hourCal, Calendar.HOUR, 907);
        assertEquals(3265200000l, hourCal.getTimeInMillis());

        // minute
        Calendar minuteCal = (Calendar) cal.clone();
        NetCDFTimeUtilities.addTimeUnit(minuteCal, Calendar.MINUTE, 112358);
        assertEquals(6741480000l, minuteCal.getTimeInMillis());

        // second
        Calendar secondCal = (Calendar) cal.clone();
        NetCDFTimeUtilities.addTimeUnit(secondCal, Calendar.SECOND, 3333333333l);
        assertEquals(3333333333000l, secondCal.getTimeInMillis());

        // millisecond
        Calendar msCal = (Calendar) cal.clone();
        NetCDFTimeUtilities.addTimeUnit(msCal, Calendar.MILLISECOND, 99999999999999l);
        assertEquals(99999999999999l, msCal.getTimeInMillis());
    }

