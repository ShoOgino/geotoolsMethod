    /**
     * Helper method that reads stationA data set using the image mosaic reader directly.
     * Some basic checks are also made.
     */
    private Raster readCoverageUsingImageMosaicReader(GeneralParameterValue[] readParameters) throws Exception {

        // create test directory for this test removing any existing one
        File testDirectory = new File(TestData.file(this, "."), "MultipleBandsDimensionTest");
        FileUtils.deleteQuietly(testDirectory);
        assertThat(testDirectory.mkdirs(), is(true));

        // just keeping a reference to the reader so we can close it in the finally block
        ImageMosaicReader reader = null;

        try {

            // move test files to the test directory
            FileUtils.copyFileToDirectory(TestData.file(this, "stations.nc"), testDirectory);
            FileUtils.copyFileToDirectory(TestData.file(this, "stations_mosaic_indexer.xml"), testDirectory);
            FileUtils.copyFileToDirectory(TestData.file(this, "stations_netcdf_auxiliary.xml"), testDirectory);
            FileUtils.copyFileToDirectory(TestData.file(this, "stations_datastore.properties"), testDirectory);
            FileUtils.moveFile(new File(testDirectory, "stations_mosaic_indexer.xml"), new File(testDirectory, "indexer.xml"));
            FileUtils.moveFile(new File(testDirectory, "stations_netcdf_auxiliary.xml"), new File(testDirectory, "netcdf_auxiliary.xml"));
            FileUtils.moveFile(new File(testDirectory, "stations_datastore.properties"), new File(testDirectory, "datastore.properties"));

            // instantiate the image mosaic reader
            ImageMosaicFormat format = new ImageMosaicFormat();
            reader = format.getReader(testDirectory);

            // reading stationA data set
            GridCoverage2D coverage = reader.read("stationA", readParameters);
            assertThat(coverage, notNullValue());
            PlanarImage image =  PlanarImage.wrapRenderedImage(coverage.getRenderedImage());
            return image.getData();


        } finally {

            // cleaning the tests directory
            FileUtils.deleteQuietly(testDirectory);
            if (reader != null) {
                reader.dispose();
            }
        }
    }

