    /**
     * Prepares the read parameters for doing an {@link ImageReader#read(int, ImageReadParam)}.
     *
     * <p>It sets the passed {@link ImageReadParam} in terms of decimation on reading using the
     * provided requestedEnvelope and requestedDim to evaluate the needed resolution.
     *
     * @todo this versions is deeply GDAL based.
     */
    protected void setReadParameters() throws IOException, TransformException {

        // set source region
        if (!coverageRequestedRasterArea.isEmpty()) {
            imageReadParam.setSourceRegion(this.coverageRequestedRasterArea);
        } else {
            emptyRequest = true;
        }

        // //
        //
        // Initialize overview policy
        //
        // //
        if (overviewPolicy == null) {
            overviewPolicy = OverviewPolicy.getDefaultPolicy();
        }

        // //
        //
        // default values for subsampling
        //
        // //
        imageReadParam.setSourceSubsampling(1, 1, 0, 0);

        // //
        //
        // requested to ignore overviews
        //
        // //
        if (overviewPolicy.equals(OverviewPolicy.IGNORE)) {
            return;
        }

        // ////////////////////////////////////////////////////////////////////
        //
        // DECIMATION ON READING since GDAL will automatically use the
        // overviews
        //
        // ////////////////////////////////////////////////////////////////////
        double[] requestedRes = null;
        double[] fullRes = null;
        if (approximateWGS84RequestedResolution == null) {
            requestedRes = requestedResolution;
            fullRes = coverageFullResolution;

        } else {
            requestedRes = approximateWGS84RequestedResolution;
            fullRes = approximateCoverageWGS84FullResolution;
        }

        if ((requestedRes[0] > fullRes[0]) || (requestedRes[1] > fullRes[1])) {
            setDecimationParameters(requestedRes, fullRes);
        }
    }

