    @SuppressWarnings("unused")
    private void replaceAll() throws Exception {
        System.out.println("replaceAll start\n");
        // replaceAll start
        Map<String, Serializable> params = new HashMap<>();
        params.put("directory", directory);
        DataStore store = DataStoreFinder.getDataStore(params);

        final SimpleFeatureType type = store.getSchema("example");

        DefaultFeatureCollection collection = new DefaultFeatureCollection();
        SimpleFeature f = SimpleFeatureBuilder.build(type, new Object[] {1, "jody"}, "fid1");
        collection.add(f);
        f = SimpleFeatureBuilder.build(type, new Object[] {2, "brent"}, "fid3");
        collection.add(f);
        f = SimpleFeatureBuilder.build(type, new Object[] {3, "dave"}, "fid3");
        collection.add(f);
        f = SimpleFeatureBuilder.build(type, new Object[] {4, "justin"}, "fid4");
        collection.add(f);

        try (FeatureWriter<SimpleFeatureType, SimpleFeature> writer =
                store.getFeatureWriter("road", Transaction.AUTO_COMMIT)) {
            // remove all features
            while (writer.hasNext()) {
                writer.next();
                writer.remove();
            }
            // copy new features in
            try (SimpleFeatureIterator iterator = collection.features()) {
                while (iterator.hasNext()) {
                    SimpleFeature feature = iterator.next();
                    SimpleFeature newFeature = writer.next(); // new blank feature
                    newFeature.setAttributes(feature.getAttributes());
                    writer.write();
                }
            }
        }
        // replaceAll end
        System.out.println("\nreplaceAll end\n");
    }

