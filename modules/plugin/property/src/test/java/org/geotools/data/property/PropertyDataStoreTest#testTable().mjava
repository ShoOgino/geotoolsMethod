    /**
     * In response to <a href="http://jira.codehaus.org/browse/GEOT-3540">GEOT-3540
     * PropertyDataStore doesn't support empty trailing spaces</a>.
     *
     * <p>Table with no geoemtry, containing null and empty strings at end of line
     */
    @Test
    public void testTable() throws Exception {
        SimpleFeatureSource table = store.getFeatureSource("table");
        // GenericEntity.f004=description-f004|name-f004
        FeatureId fid1 = ff.featureId("GenericEntity.f004");
        Filter select = ff.id(Collections.singleton(fid1));
        SimpleFeatureCollection featureCollection = table.getFeatures(select);
        featureCollection.accepts(
                f -> {
                    SimpleFeature feature = (SimpleFeature) f;
                    String name = (String) feature.getAttribute("name");
                    Assert.assertEquals("name-f004", name);
                },
                null);
        // GenericEntity.f003=description-f003|<null>
        fid1 = ff.featureId("GenericEntity.f003");
        select = ff.id(Collections.singleton(fid1));
        featureCollection = table.getFeatures(select);
        featureCollection.accepts(
                f -> {
                    SimpleFeature feature = (SimpleFeature) f;
                    String name = (String) feature.getAttribute("name");
                    Assert.assertNull("represent null", name);
                },
                null);
        // GenericEntity.f007=description-f007|
        fid1 = ff.featureId("GenericEntity.f007");
        select = ff.id(Collections.singleton(fid1));
        featureCollection = table.getFeatures(select);
        featureCollection.accepts(
                f -> {
                    SimpleFeature feature = (SimpleFeature) f;
                    String name = (String) feature.getAttribute("name");
                    Assert.assertEquals("represent empty string", "", name);
                },
                null);
        // "  GenericEntity.f009=description-f009| "
        fid1 = ff.featureId("GenericEntity.f009");
        select = ff.id(Collections.singleton(fid1));
        featureCollection = table.getFeatures(select);
        featureCollection.accepts(
                f -> {
                    SimpleFeature feature = (SimpleFeature) f;
                    String name = (String) feature.getAttribute("name");
                    Assert.assertEquals("represent empty string", " ", name);
                },
                null);
    }

