    @Test
    public void testUseExistingFid() throws Exception {
        SimpleFeatureType ROAD = store.getSchema("road");
        SimpleFeature chrisFeature =
                SimpleFeatureBuilder.build(
                        ROAD, new Object[] {Integer.valueOf(5), "chris"}, "fid5");
        chrisFeature.getUserData().put(Hints.USE_PROVIDED_FID, Boolean.TRUE);

        SimpleFeatureStore roadAuto = (SimpleFeatureStore) store.getFeatureSource("road");
        SimpleFeatureCollection addCollection = DataUtilities.collection(chrisFeature);
        List<FeatureId> fids = roadAuto.addFeatures(addCollection);

        // check the id was preserved
        Assert.assertEquals(1, fids.size());
        FeatureId fid = SimpleFeatureBuilder.createDefaultFeatureIdentifier("fid5");
        Assert.assertTrue(fids.contains(fid));

        // manually check the feature with the proper id is actually there
        SimpleFeatureIterator it =
                roadAuto.getFeatures(ff.id(Collections.singleton(fid))).features();
        Assert.assertTrue(it.hasNext());
        SimpleFeature sf = it.next();
        it.close();
        Assert.assertEquals(fid, sf.getIdentifier());
    }

