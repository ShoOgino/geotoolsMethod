    private static void createChildTable(final ISession session, final TestData td)
            throws IOException, UnavailableConnectionException {
        final SeTable table = session.createSeTable(CHILD);
        Command<Void> createCmd = new Command<Void>() {

            @SuppressWarnings("deprecation")
            @Override
            public Void execute(ISession session, SeConnection connection) throws SeException,
                    IOException {
                try {
                    table.delete();
                } catch (SeException e) {
                    // no-op, table didn't existed
                }

                SeColumnDefinition[] colDefs = new SeColumnDefinition[4];

                colDefs[0] = new SeColumnDefinition("ID", SeColumnDefinition.TYPE_INTEGER, 10, 0,
                        false);
                colDefs[1] = new SeColumnDefinition("MASTER_ID", SeColumnDefinition.TYPE_INTEGER,
                        10, 0, false);
                colDefs[2] = new SeColumnDefinition("NAME", SeColumnDefinition.TYPE_STRING, 255, 0,
                        false);
                colDefs[3] = new SeColumnDefinition("DESCRIPTION", SeColumnDefinition.TYPE_STRING,
                        255, 0, false);

                table.create(colDefs, td.getConfigKeyword());
                return null;
            }
        };

        session.issue(createCmd);

        /*
         * SeRegistration tableRegistration = new SeRegistration(conn, CHILD);
         * tableRegistration.setRowIdColumnType
         * (SeRegistration.SE_REGISTRATION_ROW_ID_COLUMN_TYPE_USER);
         * tableRegistration.setRowIdColumnName("ID"); tableRegistration.alter();
         */
        insertChildData(session, table);

        LOGGER.info("successfully created child table " + CHILD);
    }

