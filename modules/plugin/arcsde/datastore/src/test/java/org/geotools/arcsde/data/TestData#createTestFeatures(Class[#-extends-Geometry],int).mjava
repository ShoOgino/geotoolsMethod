    /**
     * Creates a SimpleFeatureCollection with features whose schema adheres to the one created in
     * <code>createTestData()</code> and returns it.
     *
     * <p>This schema is something like:
     *
     * <pre>
     *
     * colDefs[0] &quot;INT32_COL&quot;, SeColumnDefinition.TYPE_INTEGER, 10, 0, true colDefs[1] =
     * &quot;INT16_COL&quot;, SeColumnDefinition.TYPE_SMALLINT, 4, 0, true colDefs[2] =
     * &quot;FLOAT32_COL&quot;, SeColumnDefinition.TYPE_FLOAT, 5, 2, true colDefs[3] =
     * &quot;FLOAT64_COL&quot;, SeColumnDefinition.TYPE_DOUBLE, 15, 4, true colDefs[4] =
     * &quot;STRING_COL&quot;, SeColumnDefinition.TYPE_STRING, 25, 0, true colDefs[5] =
     * &quot;NSTRING_COL&quot;, SeColumnDefinition.TYPE_NSTRING, 25, 0, true colDefs[6] =
     * &quot;DATE_COL&quot;, SeColumnDefinition.TYPE_DATE, 1, 0, true colDefs[7] =
     * &quot;SHAPE&quot;, Geometry, 1, 0, true
     *
     * </pre>
     *
     * @param jtsGeomType class of JTS geometry to create
     * @param numFeatures number of features to create.
     * @throws IOException if the schema for te test table cannot be fetched from the database.
     * @throws SeException
     */
    public SimpleFeatureCollection createTestFeatures(
            Class<? extends Geometry> jtsGeomType, int numFeatures)
            throws IOException, SeException {
        SimpleFeatureType type = getDataStore().getSchema(getTempTableName());
        ListFeatureCollection col = new ListFeatureCollection(type);
        Object[] values = new Object[type.getAttributeCount()];

        for (int i = 0; i < numFeatures; i++) {
            values[0] = Integer.valueOf(i);

            // put some nulls
            values[1] = ((i % 2) == 0) ? null : Integer.valueOf(2 * i);
            values[2] = new Float(0.1 * i);
            values[3] = new Double(1000 * i);
            values[4] = "String value #" + i;
            values[5] = "NString value #" + i;

            Calendar cal = Calendar.getInstance();
            cal.set(Calendar.DAY_OF_MONTH, i);
            values[6] = cal.getTime();
            values[7] = createTestGeometry(jtsGeomType, i);

            SimpleFeature f = SimpleFeatureBuilder.build(type, values, null);
            col.add(f);
        }
        return col;
    }

