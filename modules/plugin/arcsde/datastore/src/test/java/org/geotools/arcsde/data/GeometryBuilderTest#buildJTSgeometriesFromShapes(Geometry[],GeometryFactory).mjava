    private Geometry[] buildJTSgeometriesFromShapes(final Geometry[] expectedGeometries,
            final GeometryFactory geometryFactory) throws SeException, IOException,
            DataSourceException {

        Class<? extends Geometry> geometryClass = expectedGeometries[0].getClass();
        final ArcSDEGeometryBuilder geometryBuilder = ArcSDEGeometryBuilder
                .builderFor(geometryClass);
        LOGGER.fine("created " + geometryBuilder.getClass().getName());

        Geometry[] createdGeometries = new Geometry[expectedGeometries.length];
        Geometry createdGeometry;
        Geometry expectedGeometry;
        double[][][] sdeCoords;

        // create a sde CRS with a huge value range and 5 digits of presission
        SeCoordinateReference seCRS = TestData.getGenericCoordRef();

        for (int i = 0; i < expectedGeometries.length; i++) {
            expectedGeometry = expectedGeometries[i];
            sdeCoords = geometryToSdeCoords(expectedGeometry, seCRS);

            // geometryBuilder.newGeometry is a protected method
            // and should not be called directly. We use it here
            // just for testing purposes. Instead,
            // geometryBuilder.construct(SeShape)
            // must be used
            createdGeometry = geometryBuilder.newGeometry(sdeCoords, geometryFactory);
            createdGeometries[i] = createdGeometry;
        }
        return createdGeometries;
    }

