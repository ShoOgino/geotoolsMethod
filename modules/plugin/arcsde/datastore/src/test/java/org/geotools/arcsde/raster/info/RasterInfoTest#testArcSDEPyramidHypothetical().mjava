    @Test
    @Ignore
    public void testArcSDEPyramidHypothetical() throws Exception {
        RasterInfo pyramid = createPyramid();
        System.out.println(pyramid);

        RasterTestData testData = new RasterTestData();
        testData.setUp();
        String tableName = testData.getRasterTableName(RasterCellType.TYPE_8BIT_U, 1, false);
        testData.loadTestRaster(
                tableName,
                1,
                1013,
                1021,
                RasterCellType.TYPE_8BIT_U,
                null,
                true,
                false,
                SeRaster.SE_INTERPOLATION_NEAREST,
                9);

        ISessionPool pool = testData.getConnectionPool();
        ISession conn = pool.getSession();

        final SeQuery q =
                conn.createAndExecuteQuery(new String[] {"RASTER"}, new SeSqlConstruct(tableName));

        try {
            pyramid =
                    conn.issue(
                            new Command<RasterInfo>() {
                                @Override
                                public RasterInfo execute(ISession session, SeConnection connection)
                                        throws SeException, IOException {
                                    SeRow r = q.fetch();
                                    SeRasterAttr rAttr = r.getRaster(0);

                                    SeObjectId rasterColumnId = rAttr.getRasterColumnId();
                                    SeRasterColumn rasterColumn =
                                            new SeRasterColumn(connection, rasterColumnId);
                                    SeCoordinateReference coordRef = rasterColumn.getCoordRef();
                                    String coordRefWKT = coordRef.getCoordSysDescription();
                                    CoordinateReferenceSystem crs;
                                    try {
                                        crs = CRS.parseWKT(coordRefWKT);
                                    } catch (FactoryException e) {
                                        throw new RuntimeException(e);
                                    }

                                    RasterInfo pyramid = new RasterInfo(rAttr, crs);
                                    return pyramid;
                                }
                            });
        } finally {
            conn.dispose();
        }

        System.out.println(pyramid);

        /*
         * ArcSDEPyramid pyramid = new ArcSDEPyramid(10, 10); pyramid.addPyramidLevel(0, new
         * SeExtent(0, 0, 100, 100), null, null, 10, 10, new Dimension( 100, 100));
         * pyramid.addPyramidLevel(1, new SeExtent(0, 0, 100, 100), null, null, 5, 5, new Dimension(
         * 50, 50));
         *
         * RasterQueryInfo ret = pyramid.fitExtentToRasterPixelGrid(new ReferencedEnvelope(0, 10, 0,
         * 10, null), 0); assertTrue(ret.envelope.equals(new ReferencedEnvelope(0, 10, 0, 10,
         * null))); assertTrue(ret.image.width == 10 && ret.image.height == 10);
         *
         * ret = pyramid.fitExtentToRasterPixelGrid(new ReferencedEnvelope(0, 9, 0, 9, null), 0);
         * assertTrue(ret.envelope.intersects((BoundingBox) new ReferencedEnvelope(0, 9, 0, 9,
         * null))); assertTrue(ret.image.width == 9 && ret.image.height == 9);
         *
         * ret = pyramid.fitExtentToRasterPixelGrid(new ReferencedEnvelope(15, 300, 15, 300, null),
         * 1); assertTrue(ret.envelope.equals(new ReferencedEnvelope(14, 300, 14, 300, null)));
         * assertTrue(ret.image.width == 143 && ret.image.height == 143);
         *
         * ret = pyramid.fitExtentToRasterPixelGrid( new ReferencedEnvelope(-100, 200, -100, 200,
         * null), 1); assertTrue(ret.envelope.equals(new ReferencedEnvelope(-100, 200, -100, 200,
         * null))); assertTrue(ret.image.width == 150 && ret.image.height == 150);
         */
    }

