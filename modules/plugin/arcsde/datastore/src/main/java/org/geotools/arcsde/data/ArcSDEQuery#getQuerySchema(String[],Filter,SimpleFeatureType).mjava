    /**
     * Returns a {@link SimpleFeatureType} whichs a "view" of the <code>fullSchema</code> adapted as
     * per the required query property names.
     *
     * @param queryProperties the query containing the list of property names required by the output
     *     schema and the {@link Filter query predicate} from which to fetch required properties to
     *     be used at runtime filter evaluation.
     * @param unsupportedFilter
     * @param fullSchema a feature type representing an ArcSDE layer full schema.
     * @return a FeatureType derived from <code>fullSchema</code> which contains the property names
     *     required by the <code>query</code> and the ones referenced in the query filter.
     * @throws DataSourceException
     */
    public static SimpleFeatureType getQuerySchema(
            final String[] queryProperties,
            Filter unsupportedFilter,
            final SimpleFeatureType fullSchema)
            throws DataSourceException {
        // guess which properties need to actually be retrieved.
        final List<String> queryColumns =
                getQueryColumns(queryProperties, unsupportedFilter, fullSchema);
        final String[] attNames = queryColumns.toArray(new String[queryColumns.size()]);

        try {
            // create the resulting feature type for the real attributes to
            // retrieve
            SimpleFeatureType querySchema = DataUtilities.createSubType(fullSchema, attNames);
            return querySchema;
        } catch (SchemaException ex) {
            throw new DataSourceException(
                    "Some requested attributes do not match the table schema: " + ex.getMessage(),
                    ex);
        }
    }

