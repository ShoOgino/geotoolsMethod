    /**
     * Looks up and returns the JNDI resource addressed by {@code jndiName}
     * 
     * @param jndiName
     * @return the resource mapped at {@code jndiName}, which shall be either a
     *         {@code java.util.Map<String, String>}, an {@link ArcSDEConnectionConfig} or a
     *         {@link ISessionPool}.
     * @throws IOException
     *             if a resource is not found at {@code jndiName}
     */
    private Object lookupJndiResource(final String jndiName) throws IOException {
        if (jndiName == null) {
            throw new IOException("Missing " + JNDI_REFNAME.description);
        }

        final Context ctx;

        try {
            ctx = GeoTools.getInitialContext(GeoTools.getDefaultHints());
        } catch (NamingException e) {
            throw new RuntimeException(e);
        }

        Object lookup = null;
        try {
            lookup = ctx.lookup(jndiName);
        } catch (NamingException e1) {
            // check if the user did not specify "java:comp/env"
            // and this code is running in a J2EE environment
            try {
                if (jndiName.startsWith(J2EE_ROOT_CONTEXT) == false) {
                    lookup = ctx.lookup(J2EE_ROOT_CONTEXT + jndiName);
                    // success --> issue a waring
                    LOGGER.warning("Using " + J2EE_ROOT_CONTEXT + jndiName + " instead of "
                            + jndiName + " would avoid an unnecessary JNDI lookup");
                }
            } catch (NamingException e2) {
                // do nothing, was only a try
            }
        }

        if (lookup == null) {
            throw new IOException("Cannot find JNDI data source: " + jndiName);
        }
        return lookup;
    }

