        @SuppressWarnings("unchecked")
        @Override
        public List<String> execute(ISession session, SeConnection connection) throws SeException,
                IOException {
            /*
             * Note we could do almost the same by calling
             * connection.getRegisteredTables():Vector<SeRegistration> but SeRegistration does not
             * have a getQualifiedName() method so I fear we can loose ability to serve feature
             * types from different users. So first getting the list of all the tables with select
             * privilege and then checking if it's registered...
             */
            final List<SeTable> registeredTables = connection.getTables(SeDefs.SE_SELECT_PRIVILEGE);

            /*
             * Get the list of raster tables so they're ignored as feature types
             */
            final List<String> rasterColumns = session.getRasterColumns();

            final List<String> typeNames = new ArrayList<String>(registeredTables.size());
            for (SeTable table : registeredTables) {
                String tableName = table.getQualifiedName().toUpperCase();
                SeRegistration reg;
                try {
                    reg = new SeRegistration(connection, tableName);
                    // do not call getInfo or it failst with tables owned by other user than the
                    // connection one
                    // reg.getInfo();
                } catch (SeException e) {
                    if (e.getSeError().getSdeError() == SeError.SE_TABLE_NOREGISTERED) {
                        LOGGER.finest("Ignoring non registered table " + tableName);
                        continue;
                    }
                    throw e;
                }

                boolean isSystemTable = reg.getRowIdAllocation() == SeRegistration.SE_REGISTRATION_ROW_ID_ALLOCATION_SINGLE;
                if (isSystemTable) {
                    LOGGER.finer("Ignoring ArcSDE registered table " + tableName
                            + " as it is a system table");
                    continue;
                }

                if (reg.isHidden()) {
                    LOGGER.finer("Ignoring ArcSDE registered table " + tableName
                            + " as it is hidden");
                    continue;
                }
                boolean hasLayer = reg.hasLayer();

                if (!hasLayer) {
                    if (!allowNonSpatialTables) {
                        LOGGER.finer("Ignoring ArcSDE registered table " + tableName
                                + " as it is non spatial");
                        continue;
                    }
                    if (reg.getRowIdColumnType() == SeRegistration.SE_REGISTRATION_ROW_ID_COLUMN_TYPE_NONE) {
                        LOGGER.finer("Ignoring ArcSDE registered table " + tableName
                                + " as it has no row id column");
                        continue;
                    }

                }

                if (!rasterColumns.contains(tableName)) {
                    typeNames.add(tableName);
                }
            }

            return typeNames;
        }

