    private static List<String> getQueryColumns(
            final String[] queryProperties,
            final Filter unsupportedFilter,
            final SimpleFeatureType fullSchema)
            throws DataSourceException {
        final List<String> columnNames = new ArrayList<String>();

        if ((queryProperties == null) || (queryProperties.length == 0)) {
            final List<AttributeDescriptor> attNames = fullSchema.getAttributeDescriptors();
            for (Iterator<AttributeDescriptor> it = attNames.iterator(); it.hasNext(); ) {
                AttributeDescriptor att = it.next();
                String attName = att.getLocalName();
                // de namespace-ify the names
                // REVISIT: this shouldnt be needed!
                if (attName.indexOf(":") != -1) {
                    attName = attName.substring(attName.indexOf(":") + 1);
                }
                columnNames.add(attName);
            }
        } else {
            columnNames.addAll(Arrays.asList(queryProperties));

            // Ok, say we don't support the full filter natively and it references
            // some properties, then they have to be retrieved in order to evaluate
            // the filter at runtime
            if (unsupportedFilter != null) {
                final FilterAttributeExtractor attExtractor;
                attExtractor = new FilterAttributeExtractor(fullSchema);
                unsupportedFilter.accept(attExtractor, null);
                final String[] filterAtts = attExtractor.getAttributeNames();
                for (String attName : filterAtts) {
                    if (!columnNames.contains(attName)) {
                        columnNames.add(attName);
                    }
                }
            }
        }

        return columnNames;
    }

