    /**
     * Returns the full qualifed name of sql expression that is registered as the source of the
     * attribute named <code>alias</code>.
     * 
     * @param alias
     * @return
     */
    public String getColumnDefinition(final String alias) {
        final String encodedColumnDefinition;
        if (this.definitionQuery != null) {
            // its an inprocess view
            SelectExpressionItem colDef = (SelectExpressionItem) attributeNames.get(alias);
            // String alias = colDef.getAlias();
            String sqlExpression = String.valueOf(colDef);

            // encodedColumnDefinition = sqlExpression + " AS " + alias;
            encodedColumnDefinition = sqlExpression;
        } else {
            String nonNsPrefixedAlias = alias;
            if (alias.indexOf(":") != -1) {
                // we've got to 'de-namespaceify' this attribute, if neccesary
                nonNsPrefixedAlias = alias.substring(alias.indexOf(":") + 1);
            }
            // commented out, this produces some sql queries to fail, not sure why.
            // ArcSDEQueryTest.testCalculateQueryExtent for example
            //encodedColumnDefinition = layerQualifiedName + "." + nonNsPrefixedAlias;
            encodedColumnDefinition = nonNsPrefixedAlias;
        }
        return encodedColumnDefinition;
    }

