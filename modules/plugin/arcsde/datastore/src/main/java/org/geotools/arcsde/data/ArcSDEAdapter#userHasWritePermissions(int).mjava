    /**
     * Checks wether the user can write to the given {@code table}.
     *
     * <p>Depends on the proviledges of the user the connection the table was created with.
     *
     * @param permissions the sde table permissions mask (as per SeTable.getPermissions())to check
     *     for write permissions
     * @return {@code true} if the table's connection user has both insert, update and delete
     *     priviledges.
     * @throws ArcSdeException if an SeException is thrown asking the table for the permissions
     */
    private static boolean userHasWritePermissions(final int permissions) throws ArcSdeException {

        final int insertMask = SeDefs.SE_INSERT_PRIVILEGE;
        final int updateMask = SeDefs.SE_UPDATE_PRIVILEGE;
        final int deleteMask = SeDefs.SE_DELETE_PRIVILEGE;
        boolean canWrite = false;
        if (((insertMask & permissions) == insertMask)
                && ((updateMask & permissions) == updateMask)
                && ((deleteMask & permissions) == deleteMask)) {
            canWrite = true;
        }
        return canWrite;
    }

