    /**
     * @return an {@link ISessionPool} ready to be shared (ie, per connection option singleton).
     *     Whether shared or not is a matter of external JNDI configuration.
     * @see ObjectFactory#getObjectInstance(Object, Name, Context, Hashtable)
     */
    public Object getObjectInstance(
            final Object obj,
            final Name name,
            final Context nameCtx,
            final Hashtable<?, ?> environment)
            throws Exception {

        final Reference ref = (Reference) obj;

        LOGGER.info("ArcSDEConnectionFactory: ref is " + ref);

        final String className = ref.getClassName();

        LOGGER.info("ArcSDEConnectionFactory: className is " + className);

        // may an alternate SessionPoolFactory being set?
        checkAlternateSessionPoolFactory(ref);

        Object dereferencedObject = null;
        if (ISessionPool.class.getName().equals(className)) {
            ArcSDEConnectionConfig config = createConfig(ref);
            LOGGER.info("ArcSDEConnectionFactory: config is " + config);

            @SuppressWarnings("PMD.CloseResource") // return value
            ISessionPool sharedPool = getSharedPool(config);
            LOGGER.info("ArcSDEConnectionFactory: shared pool is " + sharedPool);

            dereferencedObject = sharedPool;
        } else {
            LOGGER.info("ArcSDEConnectionFactory: not a config");
        }

        return dereferencedObject;
    }

