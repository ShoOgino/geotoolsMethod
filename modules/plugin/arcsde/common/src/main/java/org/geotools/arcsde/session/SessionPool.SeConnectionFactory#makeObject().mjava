        /**
         * Called whenever a new instance is needed.
         *
         * <p>The implementation for this method needs to be synchronized in order to make sure no
         * two {@code SeConnection} instances are created at the same time. Otherwise, when that
         * happens under load, SeConnection's constructor uses to throw a nasty {@code
         * NegativeArraySizeException}.
         *
         * @return a newly created <code>SeConnection</code>
         * @throws SeException if the connection can't be created
         */
        @Override
        public synchronized Object makeObject() throws IOException {
            ISession seConn;
            seConn = new Session(SessionPool.this, config);
            return seConn;
        }

