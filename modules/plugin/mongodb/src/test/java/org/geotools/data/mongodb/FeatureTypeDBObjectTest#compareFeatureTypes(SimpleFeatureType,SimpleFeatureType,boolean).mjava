    static void compareFeatureTypes(
            SimpleFeatureType left, SimpleFeatureType right, boolean strictGeometryClass) {

        assertThat(right.getTypeName(), is(equalTo(left.getTypeName())));
        // verify feature type user data persisted
        Map<?, ?> resultUserData = right.getUserData();
        Map<?, ?> originalUserData = left.getUserData();
        assertThat(resultUserData.size(), is(equalTo(originalUserData.size())));
        for (Map.Entry entry : resultUserData.entrySet()) {
            assertThat(entry.getValue(), is(equalTo(originalUserData.get(entry.getKey()))));
        }

        // verify we persist and restore same number of attributes
        assertThat(right.getAttributeCount(), is(equalTo(left.getAttributeCount())));

        // verify we persist and restore geometry name
        String rgdName = right.getGeometryDescriptor().getLocalName();
        assertThat(rgdName, is(equalTo(left.getGeometryDescriptor().getLocalName())));
        // verify we persist and restore CRS (this should always be WGS84 in the wild)
        assertTrue(
                "CRS are equal",
                CRS.equalsIgnoreMetadata(
                        right.getCoordinateReferenceSystem(), left.getCoordinateReferenceSystem()));

        if (strictGeometryClass) {
            assertThat(
                    right.getGeometryDescriptor().getType().getBinding().getSimpleName(),
                    is(
                            equalTo(
                                    left.getGeometryDescriptor()
                                            .getType()
                                            .getBinding()
                                            .getSimpleName())));
        } else {
            // NOTE!  Geometry type is generalized when persisted...
            assertThat(
                    Geometry.class.isAssignableFrom(
                            right.getGeometryDescriptor().getType().getBinding()),
                    is(equalTo(true)));
            assertThat(
                    Geometry.class.isAssignableFrom(
                            left.getGeometryDescriptor().getType().getBinding()),
                    is(equalTo(true)));
        }

        for (AttributeDescriptor rad : right.getAttributeDescriptors()) {
            String radName = rad.getLocalName();
            AttributeDescriptor oad = left.getDescriptor(radName);
            assertThat(rad.getMinOccurs(), is(equalTo(oad.getMinOccurs())));
            assertThat(rad.getMaxOccurs(), is(equalTo(oad.getMaxOccurs())));
            assertThat(rad.getDefaultValue(), is(equalTo(oad.getDefaultValue())));
            if (!radName.equals(rgdName)) {
                assertThat(
                        rad.getType().getBinding().getSimpleName(),
                        is(equalTo(oad.getType().getBinding().getSimpleName())));
            }
            Map<?, ?> radUserData = rad.getUserData();
            Map<?, ?> oadUserData = oad.getUserData();
            assertThat(radUserData.size(), is(equalTo(oadUserData.size())));
            for (Map.Entry entry : radUserData.entrySet()) {
                assertThat(entry.getValue(), is(equalTo(oadUserData.get(entry.getKey()))));
            }
        }
    }

