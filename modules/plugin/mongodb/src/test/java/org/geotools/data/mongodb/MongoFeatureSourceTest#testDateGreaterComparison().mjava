    public void testDateGreaterComparison() throws Exception {
        FilterFactory2 ff = CommonFactoryFinder.getFilterFactory2();
        PropertyIsGreaterThan gt =
                ff.greater(
                        ff.property("properties.dateProperty"),
                        ff.literal("2015-01-01T11:30:00.000Z"));

        SimpleFeatureSource source = dataStore.getFeatureSource("ft1");
        Query q = new Query("ft1", gt);

        assertEquals(2, source.getCount(q));
        assertEquals(
                new ReferencedEnvelope(0d, 2d, 0d, 2d, DefaultGeographicCRS.WGS84),
                source.getBounds(q));

        SimpleFeatureCollection features = source.getFeatures(q);
        try (SimpleFeatureIterator it = features.features()) {
            assertTrue(it.hasNext());
            assertFeature(it.next(), 0);
        }

        // test again passing Date object as literal
        gt =
                ff.greater(
                        ff.property("properties.dateProperty"),
                        ff.literal(MongoTestSetup.parseDate("2015-01-01T11:30:00.000Z")));
        q = new Query("ft1", gt);

        assertEquals(2, source.getCount(q));
        assertEquals(
                new ReferencedEnvelope(0d, 2d, 0d, 2d, DefaultGeographicCRS.WGS84),
                source.getBounds(q));
        try (SimpleFeatureIterator it = source.getFeatures(q).features()) {
            assertTrue(it.hasNext());
            assertFeature(it.next(), 0);
        }

        // test no-match filter
        gt =
                ff.greater(
                        ff.property("properties.dateProperty"),
                        ff.literal("2015-01-01T22:30:00.000Z"));
        q = new Query("ft1", gt);

        // no feature should match
        assertEquals(0, source.getCount(q));
    }

