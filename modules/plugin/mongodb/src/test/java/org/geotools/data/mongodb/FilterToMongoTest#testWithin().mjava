    public void testWithin() {
        Coordinate[] coordinates =
                new Coordinate[] {
                    new Coordinate(10.0, 10.0),
                    new Coordinate(20.0, 10.0),
                    new Coordinate(20.0, 20.0),
                    new Coordinate(10.0, 20.0),
                    new Coordinate(10.0, 10.0),
                };

        Within within =
                ff.within(
                        ff.property("geom"),
                        ff.literal(new GeometryFactory().createPolygon(coordinates)));
        BasicDBObject obj = (BasicDBObject) within.accept(filterToMongo, null);
        assertNotNull(obj);

        BasicDBObject filterGeometry = (BasicDBObject) obj.get("geometry");
        assertNotNull(filterGeometry);

        BasicDBObject filterWithin = (BasicDBObject) filterGeometry.get("$geoWithin");
        assertNotNull(filterWithin);

        BasicDBObject filterIntersectsGeometry = (BasicDBObject) filterWithin.get("$geometry");
        assertNotNull(filterIntersectsGeometry);

        Geometry geometry = geometryBuilder.toGeometry(filterIntersectsGeometry);
        assertTrue(Orientation.isCCW(geometry.getCoordinates()));

        BasicDBObject filterIntersectsCrs = (BasicDBObject) filterIntersectsGeometry.get("crs");
        assertNotNull(filterIntersectsCrs);

        BasicDBObject filterIntersectsCrsProperties =
                (BasicDBObject) filterIntersectsCrs.get("properties");
        assertNotNull(filterIntersectsCrsProperties);

        String filterIntersectsCrsPropertiesName =
                (String) filterIntersectsCrsProperties.get("name");
        assertNotNull(filterIntersectsCrsPropertiesName);
        assertEquals(
                "urn:x-mongodb:crs:strictwinding:EPSG:4326", filterIntersectsCrsPropertiesName);
    }

