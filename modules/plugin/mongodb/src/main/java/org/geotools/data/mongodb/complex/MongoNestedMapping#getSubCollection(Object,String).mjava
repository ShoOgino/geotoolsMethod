    private List getSubCollection(Object feature, String collectionPath) {
        // let's make sure we have a feature
        // we should have a feature
        if (!(feature instanceof Feature)) {
            // not a feature so nothing to do
            throw invalidFeature(feature, collectionPath);
        }
        Feature f = (Feature) feature;
        Feature extracted = extractFeature(feature, collectionPath);

        if (extracted instanceof MongoFeature) {
            MongoFeature mongoFeature = (MongoFeature) extracted;
            DBObject mongoObject = mongoFeature.getMongoObject();
            Supplier<GeometryCoordinateSequenceTransformer> transformer =
                    getTransformer(f, mongoFeature);

            return getSubCollection(
                    mongoObject, collectionPath, Collections.emptyMap(), transformer);
        } else if (extracted instanceof MongoCollectionFeature) {
            MongoCollectionFeature collectionFeature = (MongoCollectionFeature) extracted;
            MongoFeature mongoFeature = collectionFeature.getMongoFeature();
            Supplier<GeometryCoordinateSequenceTransformer> transformer =
                    getTransformer(f, mongoFeature);

            return getSubCollection(
                    mongoFeature.getMongoObject(),
                    collectionPath,
                    collectionFeature.getCollectionsIndexes(),
                    transformer);
        }
        throw new RuntimeException("MongoDB nesting only works with MongoDB features.");
    }

