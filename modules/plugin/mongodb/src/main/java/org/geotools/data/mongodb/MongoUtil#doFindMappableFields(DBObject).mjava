    private static Map<String, Class<?>> doFindMappableFields(DBObject dbo) {
        if (dbo == null) {
            return Collections.emptyMap();
        }
        Map<String, Class<?>> map = new LinkedHashMap<>();
        for (Map.Entry<?, ?> e : ((Map<?, ?>) dbo.toMap()).entrySet()) {
            Object k = e.getKey();
            if (k instanceof String) {
                String field = (String) k;
                Object v = e.getValue();
                if (v instanceof DBObject) {
                    // No list support
                    if (!(v instanceof BasicDBList)) {
                        for (Map.Entry<String, Class<?>> childEntry :
                                doFindMappableFields((DBObject) v).entrySet()) {
                            map.put(field + "." + childEntry.getKey(), childEntry.getValue());
                        }
                    }
                } else if (!(v instanceof List)) {
                    // this is here as documentation/placeholder.  no array/list support yet.
                    Class<?> binding = mapBSONObjectToJavaType(v);
                    if (binding != null) {
                        map.put(field, binding);
                    }
                }
            }
        }
        return map;
    }

