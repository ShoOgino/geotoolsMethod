    /**
     * Evaluates the requested envelope and builds a new adjusted version of it fitting this
     * coverage envelope.
     *
     * <p>While adjusting the requested envelope this methods also compute the source region as a
     * rectangle which is suitable for a successive read operation with {@link ImageIO} to do
     * crop-on-read.
     *
     * @throws DataSourceException in case something bad occurs
     */
    private void computeRequestSpatialElements() throws DataSourceException {

        //
        // Inspect the request and precompute transformation between CRS. We
        // also check if we can simply adjust the requested GG in case the
        // request CRS is different from the coverage native CRS but the
        // transformation is simpl ean affine transformation.
        //
        // In such a case we can simplify our work by adjusting the
        // requested grid to world, preconcatenating the coordinate
        // operation to change CRS
        //
        inspectCoordinateReferenceSystems();

        //
        // WE DO HAVE A REQUESTED AREA!
        //
        //
        // Create the crop bbox in the coverage CRS for cropping it later
        // on.
        //
        computeCropBBOX();
        if (empty || (cropBBox != null && cropBBox.isEmpty())) {
            if (LOGGER.isLoggable(Level.FINE))
                LOGGER.log(Level.FINE, "RequestedBBox empty or null");
            // this means that we do not have anything to load at all!
            empty = true;
            return;
        }

        //
        // CROP SOURCE REGION using the refined requested envelope
        //
        computeCropRasterArea();
        if (empty || (destinationRasterArea != null && destinationRasterArea.isEmpty())) {
            if (LOGGER.isLoggable(Level.FINE))
                LOGGER.log(Level.FINE, "CropRasterArea empty or null");
            // this means that we do not have anything to load at all!
            return;
        }

        if (LOGGER.isLoggable(Level.FINE)) {
            StringBuffer sb =
                    new StringBuffer("Adjusted Requested Envelope = ")
                            .append(requestedBBox.toString())
                            .append("\n")
                            .append("Requested raster dimension = ")
                            .append(requestedRasterArea.toString())
                            .append("\n")
                            .append("Corresponding raster source region = ")
                            .append(requestedRasterArea.toString());
            LOGGER.log(Level.FINE, sb.toString());
        }
        //
        // Compute the request resolution from the request
        //
        computeRequestedResolution();
    }

