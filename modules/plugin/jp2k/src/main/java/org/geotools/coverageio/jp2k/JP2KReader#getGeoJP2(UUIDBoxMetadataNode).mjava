    /** Get the degenerate GeoTIFF to obtain the related CoordinateReferenceSystem tags */
    private void getGeoJP2(final UUIDBoxMetadataNode uuid) throws IOException {
        try (ByteArrayInputStream inputStream = new ByteArrayInputStream(uuid.getData())) {
            final TIFFImageReader tiffreader =
                    (TIFFImageReader) new TIFFImageReaderSpi().createReaderInstance();
            tiffreader.setInput(ImageIO.createImageInputStream(inputStream));
            final IIOMetadata tiffmetadata = tiffreader.getImageMetadata(0);

            final GeoTiffIIOMetadataDecoder metadataDecoder =
                    new GeoTiffIIOMetadataDecoder(tiffmetadata);
            final GeoTiffMetadata2CRSAdapter adapter = new GeoTiffMetadata2CRSAdapter(hints);
            CoordinateReferenceSystem crs = adapter.createCoordinateSystem(metadataDecoder);
            if (crs != null) {
                if (this.crs == null) this.crs = crs;
            }
            if (this.raster2Model == null) {
                this.raster2Model = GeoTiffMetadata2CRSAdapter.getRasterToModel(metadataDecoder);
                final AffineTransform tempTransform =
                        new AffineTransform((AffineTransform) raster2Model);
                tempTransform.translate(-0.5, -0.5);
                setEnvelopeFromTransform(tempTransform);
            }
        } catch (Exception e) {
            if (LOGGER.isLoggable(FINE))
                LOGGER.log(FINE, "Unable to parse CRS from underlying TIFF", e);
        }
    }

