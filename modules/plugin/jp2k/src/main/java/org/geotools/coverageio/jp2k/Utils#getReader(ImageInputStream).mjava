    /**
     * Look for an {@link ImageReader} instance that is able to read the provided {@link
     * ImageInputStream}, which must be non null.
     *
     * <p>In case no reader is found, <code>null</code> is returned.
     *
     * @param inStream an instance of {@link ImageInputStream} for which we need to find a suitable
     *     {@link ImageReader}.
     * @return a suitable instance of {@link ImageReader} or <code>null</code> if one cannot be
     *     found.
     */
    static ImageReader getReader(final ImageInputStream inStream) {
        Utilities.ensureNonNull("inStream", inStream);
        // get a reader
        //		inStream.mark();
        try {
            if (inStream instanceof AccessibleStream
                    && ((AccessibleStream) inStream).getTarget() instanceof File) {
                final File file = (File) ((AccessibleStream) inStream).getTarget();
                if (FILEFILTER.accept(file))
                    return JP2KFormatFactory.getCachedSpi().createReaderInstance();
            }
            return null;

        } catch (IOException e) {
            if (LOGGER.isLoggable(Level.WARNING)) LOGGER.warning(e.getLocalizedMessage());
            return null;
        }
    }

