    /**
     * Test avoidance of aggregate UniqueVisitor optimization (as they do not respect dialect type
     * mapping for Date and Timestamp at this time.
     *
     * @throws IOException
     */
    @Test
    public void testUnique() throws IOException {
        UniqueVisitor highlander = new UniqueVisitor("date");
        SimpleFeatureSource fs = gpkg.getFeatureSource(gpkg.getTypeNames()[0]);

        SimpleFeatureCollection features = fs.getFeatures();
        features.accepts(highlander, new NullProgressListener());

        Set<Date> uniqueSet = highlander.getUnique();
        assertEquals(uniqueSet.size(), features.size());
    }

