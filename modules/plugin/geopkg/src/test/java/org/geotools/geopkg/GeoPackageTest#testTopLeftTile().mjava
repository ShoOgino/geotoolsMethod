    @Test
    /*
     * From the OGC GeoPackage Specification [1]:
     *
     * "The tile coordinate (0,0) always refers to the tile in the upper left corner of the tile matrix at any zoom
     * level, regardless of the actual availability of that tile"
     *
     * [1]: http://www.geopackage.org/spec/#tile_matrix
     */
    public void testTopLeftTile() throws IOException, FactoryException {
        File sourceFile = GeoPackageFormat.getFileFromSource(getClass().getResource("Blue_Marble.gpkg"));
        GeoPackage geopkg = new GeoPackage(sourceFile);
        List<TileEntry> tiles = geopkg.tiles();

        //Get 0,0,0 tile
        Tile topLeftTile = geopkg.reader(tiles.get(0), 0, 0, 0, 0, 0, 0).next();

        BufferedImage tileImg = ImageIO.read(new ByteArrayInputStream(topLeftTile.getData()));
        ImageAssert.assertEquals(URLs.urlToFile(getClass().getResource("bluemarble_0_0_0.jpeg")), tileImg, 250);

        //Render the GeoPackage at zoom level 0
        GeoPackageReader reader = new GeoPackageReader(getClass().getResource("Blue_Marble.gpkg"), null);

        GeneralParameterValue[] parameters = new GeneralParameterValue[1];
        GridGeometry2D gg = new GridGeometry2D(new GridEnvelope2D(new Rectangle(1536,768)), new ReferencedEnvelope(-180,180,-90,90, CRS.decode("EPSG:4326", true)));
        parameters[0] = new Parameter<GridGeometry2D>(AbstractGridFormat.READ_GRIDGEOMETRY2D, gg);
        GridCoverage2D gc = reader.read("bluemarble_tif_tiles", parameters);
        BufferedImage img = ((PlanarImage) gc.getRenderedImage()).getAsBufferedImage();

        //ImageIO.write(img, "JPEG", new File("bluemarblerendered.jpeg"));

        //Get top left tile
        BufferedImage topLeftImg = new BufferedImage(256, 256, img.getType());
        Graphics2D graphics = topLeftImg.createGraphics();
        graphics.drawImage(img,
                0, 0, 256, 256, //Destination coordinates
                0, 0, 256, 256, //Source coordinates
                null);

        //ImageIO.write(topLeftImg, "JPEG", new File("bluemarbletopleft.jpeg"));
        ImageAssert.assertEquals(URLs.urlToFile(getClass().getResource("bluemarble_0_0_0.jpeg")), topLeftImg, 250);

    }

