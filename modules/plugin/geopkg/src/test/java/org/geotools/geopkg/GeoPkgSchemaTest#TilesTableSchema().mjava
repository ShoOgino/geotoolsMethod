    @Test
    public void TilesTableSchema() {
        TileEntry e = new TileEntry();
        e.setTableName("tilestable1");
        e.setBounds(new ReferencedEnvelope(-180, 180, -90, 90, DefaultGeographicCRS.WGS84));
        e.getTileMatricies().add(new TileMatrix(0, 1, 1, 256, 256, 0.1, 0.1));

        try {
            geopackage.create(e);
        } catch (IOException ex) {
            fail(ex.getMessage());
        }
        ArrayList<Map<String, Object>> expectedColumnDefinitions = new ArrayList<>();
        Map<String, Object> idColumn = new HashMap<>();
        idColumn.put("cid", 0);
        idColumn.put("name", "id");
        idColumn.put("typeval", "INTEGER");
        idColumn.put("notnull", true);
        idColumn.put("default_value", null);
        idColumn.put("pk", true);
        expectedColumnDefinitions.add(idColumn);
        Map<String, Object> zoomLevelColumn = new HashMap<>();
        zoomLevelColumn.put("cid", 1);
        zoomLevelColumn.put("name", "zoom_level");
        zoomLevelColumn.put("typeval", "INTEGER");
        zoomLevelColumn.put("notnull", true);
        zoomLevelColumn.put("default_value", null);
        zoomLevelColumn.put("pk", false);
        expectedColumnDefinitions.add(zoomLevelColumn);
        Map<String, Object> tileColumnColumn = new HashMap<>();
        tileColumnColumn.put("cid", 2);
        tileColumnColumn.put("name", "tile_column");
        tileColumnColumn.put("typeval", "INTEGER");
        tileColumnColumn.put("notnull", true);
        tileColumnColumn.put("default_value", null);
        tileColumnColumn.put("pk", false);
        expectedColumnDefinitions.add(tileColumnColumn);
        Map<String, Object> tileRowColumn = new HashMap<>();
        tileRowColumn.put("cid", 3);
        tileRowColumn.put("name", "tile_row");
        tileRowColumn.put("typeval", "INTEGER");
        tileRowColumn.put("notnull", true);
        tileRowColumn.put("default_value", null);
        tileRowColumn.put("pk", false);
        expectedColumnDefinitions.add(tileRowColumn);
        Map<String, Object> tiledataColumn = new HashMap<>();
        tiledataColumn.put("cid", 4);
        tiledataColumn.put("name", "tile_data");
        tiledataColumn.put("typeval", "BLOB");
        tiledataColumn.put("notnull", true);
        tiledataColumn.put("default_value", null);
        tiledataColumn.put("pk", false);
        expectedColumnDefinitions.add(tiledataColumn);

        ArrayList<Map<String, Object>> columnDefinitions;
        try {
            columnDefinitions = getTableSchema(e.getTableName());
            assertEquals(expectedColumnDefinitions, columnDefinitions);
        } catch (SQLException ex) {
            fail(ex.getMessage());
        }
    }

