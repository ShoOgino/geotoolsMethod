    public void testCreateSchemaWithCustomEnum() throws Exception {
        SimpleFeatureTypeBuilder builder = new SimpleFeatureTypeBuilder();
        builder.setName(tname("ft2"));
        builder.setNamespaceURI(dataStore.getNamespaceURI());
        builder.setCRS(CRS.decode("EPSG:4326"));
        builder.add(aname("geometry"), Geometry.class);
        builder.add(aname("intProperty"), Integer.class);
        DataColumn dc = new DataColumn();
        dc.setColumnName("enumProperty");
        dc.setName("enumProperty");
        dc.setConstraint(new DataColumnConstraint.Enum("myEnum", "one", "two", "three"));
        builder.userData(GeoPackage.DATA_COLUMN, dc);
        builder.add(aname("enumProperty"), String.class);
        SimpleFeatureType featureType = builder.buildFeatureType();
        dataStore.createSchema(featureType);

        SimpleFeatureType ft2 = dataStore.getSchema(tname("ft2"));
        AttributeDescriptor enumDescriptor = ft2.getDescriptor(aname("enumProperty"));
        assertEquals(String.class, enumDescriptor.getType().getBinding());
        assertEquals(
                Arrays.asList("one", "two", "three"), FeatureTypes.getFieldOptions(enumDescriptor));

        // go low level and verify inputs
        GeoPackage geoPackage = new GeoPackage(dataStore);
        GeoPkgSchemaExtension schemas = geoPackage.getExtension(GeoPkgSchemaExtension.class);
        List<GeoPkgExtension.Association> extensionAssociations = schemas.getAssociations();
        assertThat(
                extensionAssociations,
                Matchers.hasItem(new GeoPkgExtension.Association("gpkg_data_columns")));
        assertThat(
                extensionAssociations,
                Matchers.hasItem(new GeoPkgExtension.Association("gpkg_data_column_constraints")));
        assertThat(
                extensionAssociations,
                Matchers.hasItem(new GeoPkgExtension.Association("ft2", "enumProperty")));
        List<DataColumn> dataColumns =
                geoPackage.getExtension(GeoPkgSchemaExtension.class).getDataColumns("ft2");
        assertEquals(1, dataColumns.size());
        DataColumn adc = dataColumns.get(0);
        assertEquals("enumProperty", adc.getColumnName());
        assertEquals("enumProperty", adc.getName());
        DataColumnConstraint.Enum dcc = (DataColumnConstraint.Enum) adc.getConstraint();
        assertNotNull(dcc);
        assertEquals("myEnum", dcc.getName());
        Map<String, String> values = dcc.getValues();
        assertEquals(3, values.size());
        assertEquals("one", values.get("0"));
        assertEquals("two", values.get("1"));
        assertEquals("three", values.get("2"));

        // check also the enum map is there, to support reading
        EnumMapper mapper =
                (EnumMapper) enumDescriptor.getUserData().get(JDBCDataStore.JDBC_ENUM_MAP);
        assertNotNull(mapper);
        assertEquals("one", mapper.fromInteger(0));
        assertEquals("two", mapper.fromInteger(1));
        assertEquals("three", mapper.fromInteger(2));
    }

