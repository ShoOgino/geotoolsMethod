    @Test
    public void testWriteArraysAndEnumsHighLevel() throws Exception {
        writeEnumeratedArrayFeatures();

        // check we can read back in array form, with enums expanded
        ContentFeatureSource fs = dataStore.getFeatureSource(tname("ft_array"));
        Query q = new Query(tname("ft_array"));
        FilterFactory ff = dataStore.getFilterFactory();
        q.setSortBy(ff.sort("id", SortOrder.ASCENDING));
        List<SimpleFeature> features = DataUtilities.list(fs.getFeatures(q));

        // TODO: clarify data type once we write the actual data type in the mime type
        // so far it's just using application/json, no way to tell the inner type
        SimpleFeature f0 = features.get(0);
        assertArrayEquals(new String[] {"1"}, (String[]) f0.getAttribute("intArrayProperty"));
        assertArrayEquals(new String[] {"a"}, (String[]) f0.getAttribute("strArrayProperty"));
        assertArrayEquals(new String[] {"one"}, (String[]) f0.getAttribute("enumArrayProperty"));

        SimpleFeature f1 = features.get(1);
        assertArrayEquals(new String[] {"2", "2"}, (String[]) f1.getAttribute("intArrayProperty"));
        assertArrayEquals(new String[] {"a", "b"}, (String[]) f1.getAttribute("strArrayProperty"));
        assertArrayEquals(
                new String[] {"one", "two"}, (String[]) f1.getAttribute("enumArrayProperty"));

        SimpleFeature f2 = features.get(2);
        assertArrayEquals(
                new String[] {"3", "3", "3"}, (String[]) f2.getAttribute("intArrayProperty"));
        assertArrayEquals(
                new String[] {"a", "b", "c"}, (String[]) f2.getAttribute("strArrayProperty"));
        assertArrayEquals(
                new String[] {"one", "two", "three"},
                (String[]) f2.getAttribute("enumArrayProperty"));
    }

