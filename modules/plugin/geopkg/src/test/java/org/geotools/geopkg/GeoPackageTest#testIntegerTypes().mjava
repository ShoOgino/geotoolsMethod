    @Test
    public void testIntegerTypes() throws Exception {
        // all types work in creation
        String typeName = "numericTypes";
        final SimpleFeatureType numericType =
                DataUtilities.createType(
                        typeName,
                        "n_byte:java.lang.Byte,n_short:java.lang.Short,n_int:java.lang.Integer,n_long:java.lang.Long");
        JDBCDataStore store = geopkg.dataStore();
        store.createSchema(numericType);
        SimpleFeatureType createdType = store.getSchema(typeName);
        assertTrue(FeatureTypes.equals(numericType, createdType));

        // write it out, each number at the limits of its range
        SimpleFeatureBuilder fb = new SimpleFeatureBuilder(numericType);
        fb.add(Byte.MAX_VALUE);
        fb.add(Short.MAX_VALUE);
        fb.add(Integer.MAX_VALUE);
        fb.add(Long.MAX_VALUE);
        SimpleFeature feature = fb.buildFeature(null);
        SimpleFeatureCollection collection = DataUtilities.collection(feature);
        SimpleFeatureStore fs = (SimpleFeatureStore) store.getFeatureSource(typeName);
        fs.addFeatures(collection);

        // read it back
        SimpleFeature read = DataUtilities.first(fs.getFeatures());
        assertEquals(Byte.MAX_VALUE, read.getAttribute("n_byte"));
        assertEquals(Short.MAX_VALUE, read.getAttribute("n_short"));
        assertEquals(Integer.MAX_VALUE, read.getAttribute("n_int"));
        assertEquals(Long.MAX_VALUE, read.getAttribute("n_long"));
    }

