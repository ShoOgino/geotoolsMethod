    @Test
    public void testCreateSchemaWithSharedContraint() throws Exception {
        SimpleFeatureTypeBuilder builder = new SimpleFeatureTypeBuilder();
        builder.setName(tname("ft2"));
        builder.setNamespaceURI(dataStore.getNamespaceURI());
        builder.setCRS(CRS.decode("EPSG:4326"));
        builder.add(aname("geometry"), Geometry.class);
        builder.add(aname("intProperty"), Integer.class);
        DataColumn dc = new DataColumn();
        dc.setColumnName("enumProperty");
        dc.setName("enumProperty");
        DataColumnConstraint.Enum constraint =
                new DataColumnConstraint.Enum("myEnum", "one", "two", "three");
        dc.setConstraint(constraint);
        builder.userData(GeoPackage.DATA_COLUMN, dc);
        builder.add(aname("enumProperty"), String.class);
        DataColumn dc2 = new DataColumn();
        dc2.setColumnName("enumProperty2");
        dc2.setName("enumProperty2");
        dc2.setConstraint(constraint);
        builder.userData(GeoPackage.DATA_COLUMN, dc2);
        builder.add(aname("enumProperty2"), String.class);
        SimpleFeatureType featureType = builder.buildFeatureType();
        dataStore.createSchema(featureType);

        SimpleFeatureType ft2 = dataStore.getSchema(tname("ft2"));
        AttributeDescriptor enumDescriptor = ft2.getDescriptor(aname("enumProperty"));
        assertEquals(String.class, enumDescriptor.getType().getBinding());
        assertEquals(
                Arrays.asList("one", "two", "three"), FeatureTypes.getFieldOptions(enumDescriptor));
        AttributeDescriptor enumDescriptor2 = ft2.getDescriptor(aname("enumProperty2"));
        assertEquals(String.class, enumDescriptor2.getType().getBinding());
        assertEquals(
                Arrays.asList("one", "two", "three"),
                FeatureTypes.getFieldOptions(enumDescriptor2));

        // go low level and verify inputs
        @SuppressWarnings("PMD.CloseResource") // dataStore is closed elsewhere
        GeoPackage geoPackage = new GeoPackage(dataStore);
        GeoPkgSchemaExtension schemas = geoPackage.getExtension(GeoPkgSchemaExtension.class);
        List<GeoPkgExtension.Association> extensionAssociations = schemas.getAssociations();
        assertThat(
                extensionAssociations,
                Matchers.hasItem(new GeoPkgExtension.Association("gpkg_data_columns")));
        assertThat(
                extensionAssociations,
                Matchers.hasItem(new GeoPkgExtension.Association("gpkg_data_column_constraints")));
        assertThat(
                extensionAssociations,
                Matchers.hasItem(new GeoPkgExtension.Association("ft2", "enumProperty")));
        assertThat(
                extensionAssociations,
                Matchers.hasItem(new GeoPkgExtension.Association("ft2", "enumProperty2")));
        List<DataColumn> dataColumns =
                geoPackage.getExtension(GeoPkgSchemaExtension.class).getDataColumns("ft2");
        assertEquals(2, dataColumns.size());
        // first column
        DataColumn adc = dataColumns.get(0);
        assertEquals("enumProperty", adc.getColumnName());
        assertEquals("enumProperty", adc.getName());
        DataColumnConstraint.Enum dcc = (DataColumnConstraint.Enum) adc.getConstraint();
        assertNotNull(dcc);
        assertEquals("myEnum", dcc.getName());
        Map<String, String> values = dcc.getValues();
        assertEquals(3, values.size());
        assertEquals("one", values.get("0"));
        assertEquals("two", values.get("1"));
        assertEquals("three", values.get("2"));
        // second enumerated column, should have the same constraint
        DataColumn adc2 = dataColumns.get(1);
        assertEquals("enumProperty2", adc2.getColumnName());
        assertEquals("enumProperty2", adc2.getName());
        DataColumnConstraint.Enum dcc2 = (DataColumnConstraint.Enum) adc2.getConstraint();
        assertEquals(dcc2, dcc);
    }

