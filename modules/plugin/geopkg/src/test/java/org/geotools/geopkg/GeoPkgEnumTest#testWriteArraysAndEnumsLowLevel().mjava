    @Test
    public void testWriteArraysAndEnumsLowLevel() throws Exception {
        writeEnumeratedArrayFeatures();

        // check they have been written as JSON arrays, eventually packed
        String sql = "SELECT * FROM ft_array order by fid";
        try (Connection c = dataStore.getConnection(Transaction.AUTO_COMMIT);
                Statement st = c.createStatement();
                ResultSet rs = st.executeQuery(sql)) {
            assertTrue(rs.next());
            // TODO: clarify data type once we write the actual data type in the mime type
            // so far it's just using application/json, no way to tell the inner type
            assertEquals("[\"1\"]", rs.getObject("intArrayProperty"));
            assertEquals("[\"a\"]", rs.getObject("strArrayProperty"));
            assertEquals("[0]", rs.getObject("enumArrayProperty"));
            assertTrue(rs.next());
            assertEquals("[\"2\", \"2\"]", rs.getObject("intArrayProperty"));
            assertEquals("[\"a\", \"b\"]", rs.getObject("strArrayProperty"));
            assertEquals("[0, 1]", rs.getObject("enumArrayProperty"));
            assertTrue(rs.next());
            assertEquals("[\"3\", \"3\", \"3\"]", rs.getObject("intArrayProperty"));
            assertEquals("[\"a\", \"b\", \"c\"]", rs.getObject("strArrayProperty"));
            assertEquals("[0, 1, 2]", rs.getObject("enumArrayProperty"));
            assertTrue(rs.next());
            assertNull(rs.getObject("intArrayProperty"));
            assertNull(rs.getObject("strArrayProperty"));
            assertNull(rs.getObject("enumArrayProperty"));
        }
    }

