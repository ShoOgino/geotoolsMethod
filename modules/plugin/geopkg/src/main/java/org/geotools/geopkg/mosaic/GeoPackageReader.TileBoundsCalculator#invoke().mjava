        public TileBoundsCalculator invoke() {
            // the requested bounds
            final double minX = requestedEnvelope.getMinX();
            final double maxX = requestedEnvelope.getMaxX();
            final double minY = requestedEnvelope.getMinY();
            final double maxY = requestedEnvelope.getMaxY();

            // cannot "round" here or half a tile in the requested area might be missing
            leftTile = (int) Math.floor((minX - offsetX) / resX);
            topTile = (int) Math.floor((offsetY - maxY) / resY);
            rightTile = (int) Math.ceil((maxX - offsetX) / resX);
            // but check if the extra tile is completely outside, and if so, remove
            if (offsetX + (rightTile * resX) > maxX) {
                rightTile -= 1;
            }
            bottomTile = (int) Math.ceil((offsetY - minY) / resY);
            if (offsetY - (bottomTile * resY) < minY) {
                bottomTile -= 1;
            }
            return this;
        }

