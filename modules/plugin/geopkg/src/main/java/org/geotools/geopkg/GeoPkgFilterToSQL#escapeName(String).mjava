    /**
     * cf. visit(Literal expression,...) When doing temporal queries (like "time BETWEEN t1 AND t2")
     *
     * <p>The encoding of the column name ("time") and the literals must be the same!
     *
     * <p>datetime("Time",'localtime') BETWEEN datetime(?,'localtime') AND datetime(?,'localtime')
     *
     * <p>For non-time columns, this just relegates to the superclass
     *
     * <p>For GeoPKG, the time column is actually stored as a STRING.
     */
    @Override
    public String escapeName(String name) {
        String super_result = super.escapeName(name);
        AttributeDescriptor desc = featureType.getDescriptor(name);
        // desc might be null in the case of joins et al
        if ((desc != null) && (desc.getType().getBinding() != null)) {
            Class<?> binding = desc.getType().getBinding();
            // localtime -- everything must be consistent -- see literal visitor
            if (Time.class.isAssignableFrom(binding)) {
                return "time(" + super_result + ",'localtime')";
            } else if (Timestamp.class.isAssignableFrom(binding)) {
                return "datetime("
                        + super_result
                        + ",'localtime')"; // localtime -- everything must be consistent -- see
                // literal visitor
            } else if (java.sql.Date.class.isAssignableFrom(binding)) {
                return "date("
                        + super_result
                        + ",'localtime')"; // localtime -- everything must be consistent -- see
                // literal visitor
            }
        }
        return super_result;
    }

