    /**
     * Retrieve tile boundaries (min row, max row, min column and max column) for a particular zoom
     * level, available in the actual data
     *
     * @param entry The tile entry
     * @param zoom the zoom level
     * @param isMax true for max boundary, false for min boundary
     * @param isRow true for rows, false for columns
     * @return the min/max column/row of the zoom level available in the data
     * @throws IOException
     */
    public int getTileBound(TileEntry entry, int zoom, boolean isMax, boolean isRow)
            throws IOException {
        try {

            int tileBounds = -1;

            StringBuffer sql =
                    new StringBuffer(
                            "SELECT "
                                    + (isMax ? "MAX" : "MIN")
                                    + "( "
                                    + (isRow ? "tile_row" : "tile_column")
                                    + ") FROM ");
            sql.append(entry.getTableName());
            sql.append(" WHERE zoom_level == ");
            sql.append(zoom);

            Connection cx = connPool.getConnection();
            try {
                Statement st = cx.createStatement();
                try {
                    ResultSet rs = st.executeQuery(sql.toString());
                    try {
                        if (!rs.next()) {
                            throw new SQLException(
                                    "Could not compute tile bounds, query did not return any record");
                        }
                        tileBounds = rs.getInt(1);
                    } finally {
                        close(rs);
                    }
                } finally {
                    close(st);
                }
            } finally {
                close(cx);
            }

            return tileBounds;

        } catch (SQLException e) {
            throw new IOException(e);
        }
    }

