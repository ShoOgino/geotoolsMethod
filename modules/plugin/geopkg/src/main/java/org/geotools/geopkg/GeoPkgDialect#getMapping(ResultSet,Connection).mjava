    @Override
    public Class<?> getMapping(ResultSet columns, Connection cx) throws SQLException {
        String tbl = columns.getString("TABLE_NAME");
        String col = columns.getString("COLUMN_NAME");

        String sql =
                format(
                        "SELECT b.geometry_type_name"
                                + " FROM %s a, %s b"
                                + " WHERE a.table_name = b.table_name"
                                + " AND b.table_name = ?"
                                + " AND b.column_name = ?",
                        GEOPACKAGE_CONTENTS, GEOMETRY_COLUMNS);

        if (LOGGER.isLoggable(Level.FINE)) {
            LOGGER.fine(String.format("%s; 1=%s, 2=%s", sql, tbl, col));
        }

        try (PreparedStatement ps = cx.prepareStatement(sql)) {
            ps.setString(1, tbl);
            ps.setString(2, col);

            ResultSet rs = ps.executeQuery();
            try {
                if (rs.next()) {
                    String t = rs.getString(1);
                    Geometries g = Geometries.getForName(t);
                    if (g != null) {
                        return g.getBinding();
                    }
                }
            } finally {
                dataStore.closeSafe(rs);
            }
        }

        // if it's an enumeration, switch data type to string
        GeoPackage geoPackage = geopkg();
        try {
            GeoPkgSchemaExtension extension = geoPackage.getExtension(GeoPkgSchemaExtension.class);
            List<DataColumn> dataColumns = extension.getDataColumns(tbl);
            for (DataColumn dataColumn : dataColumns) {
                if (col.equals(dataColumn.getColumnName())) {
                    DataColumnConstraint constraint = dataColumn.getConstraint();
                    if (constraint instanceof DataColumnConstraint.Enum) {
                        return String.class;
                    }
                }
            }
        } catch (IOException e) {
            throwSQLException(e);
        }

        return null;
    }

