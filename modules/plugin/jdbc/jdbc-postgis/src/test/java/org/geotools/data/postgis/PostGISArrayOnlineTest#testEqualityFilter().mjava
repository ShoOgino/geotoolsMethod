    @Test
    public void testEqualityFilter() throws Exception {
        FilterFactory ff = dataStore.getFilterFactory();
        ContentFeatureSource fs = dataStore.getFeatureSource(tname("arraytest"));

        // check string equality
        assertMatchedFeatureIds(
                fs,
                ff.equals(ff.property(aname("strings")), ff.literal(new String[] {"A", "B"})),
                0);
        // check string equality with null values
        assertMatchedFeatureIds(
                fs,
                ff.equals(ff.property(aname("strings")), ff.literal(new String[] {null, "C"})),
                1);

        // check int equality
        assertMatchedFeatureIds(
                fs, ff.equals(ff.property(aname("ints")), ff.literal(new Integer[] {1, 2})), 0);
        // check int equality with null values
        assertMatchedFeatureIds(
                fs, ff.equals(ff.property(aname("ints")), ff.literal(new Integer[] {null, 3})), 1);

        // check float equality
        assertMatchedFeatureIds(
                fs,
                ff.equals(ff.property(aname("floats")), ff.literal(new Float[] {3.4f, 5.6f})),
                0);
        // check float equality with null values
        assertMatchedFeatureIds(
                fs,
                ff.equals(ff.property(aname("floats")), ff.literal(new Float[] {null, 7.8f})),
                1);

        // check timestamp equality
        assertMatchedFeatureIds(
                fs,
                ff.equals(
                        ff.property(aname("timestamps")),
                        ff.literal(new Timestamp[] {expectedDate})),
                0);
        // check float equality with null values
        assertMatchedFeatureIds(
                fs,
                ff.equals(
                        ff.property(aname("timestamps")),
                        ff.literal(new Timestamp[] {null, expectedDate})),
                1);
    }

