    @Test
    public void testGreaterThanAny() throws Exception {
        FilterFactory ff = dataStore.getFilterFactory();
        ContentFeatureSource fs = dataStore.getFeatureSource(tname("arraytest"));

        // all non null string arrays besides the null ones contain
        assertMatchedFeatureIds(
                fs,
                ff.greater(ff.property(aname("strings")), ff.literal("A"), false, MatchAction.ANY),
                0,
                1);
        // all non null int arrays besides the null ones contain
        assertMatchedFeatureIds(
                fs,
                ff.greater(ff.property(aname("ints")), ff.literal(1), false, MatchAction.ANY),
                0,
                1);

        // none has numbers so high
        assertMatchedFeatureIds(
                fs, ff.greater(ff.property(aname("ints")), ff.literal(20), false, MatchAction.ANY));

        // only one matching here
        assertMatchedFeatureIds(
                fs,
                ff.greater(ff.property(aname("floats")), ff.literal(6f), false, MatchAction.ANY),
                1);

        // timestamps, none matching
        assertMatchedFeatureIds(
                fs,
                ff.greater(
                        ff.property(aname("timestamps")),
                        ff.literal(expectedDate),
                        false,
                        MatchAction.ANY));

        // timestamps, all matching this time
        assertMatchedFeatureIds(
                fs,
                ff.greater(
                        ff.property(aname("timestamps")),
                        ff.literal(new Date(expectedDate.getTime() - 3600)),
                        false,
                        MatchAction.ANY),
                0,
                1);
    }

