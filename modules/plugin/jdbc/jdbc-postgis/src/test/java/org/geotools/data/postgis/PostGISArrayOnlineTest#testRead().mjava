    @Test
    public void testRead() throws Exception {
        FilterFactory ff = dataStore.getFilterFactory();

        // check the non null array
        SimpleFeature first =
                getSingleArrayFeature(
                        ff.id(Collections.singleton(ff.featureId(tname("arraytest") + ".0"))));
        assertArrayEquals(new String[] {"A", "B"}, (String[]) first.getAttribute(aname("strings")));
        assertArrayEquals(new Integer[] {1, 2}, (Integer[]) first.getAttribute(aname("ints")));
        assertArrayEquals(new Float[] {3.4f, 5.6f}, (Float[]) first.getAttribute(aname("floats")));
        assertArrayEquals(
                new Timestamp[] {expectedDate},
                (Timestamp[]) first.getAttribute(aname("timestamps")));

        // check the one containing null values inside non null arrays
        SimpleFeature nullValues =
                getSingleArrayFeature(
                        ff.id(Collections.singleton(ff.featureId(tname("arraytest") + ".1"))));
        assertArrayEquals(
                new String[] {null, "C"}, (String[]) nullValues.getAttribute(aname("strings")));
        assertArrayEquals(
                new Integer[] {null, 3}, (Integer[]) nullValues.getAttribute(aname("ints")));
        assertArrayEquals(
                new Float[] {null, 7.8f}, (Float[]) nullValues.getAttribute(aname("floats")));
        assertArrayEquals(
                new Timestamp[] {null, expectedDate},
                (Timestamp[]) nullValues.getAttribute(aname("timestamps")));

        // check the one containing null arrays
        SimpleFeature nullArrays =
                getSingleArrayFeature(
                        ff.id(Collections.singleton(ff.featureId(tname("arraytest") + ".2"))));
        assertNull(nullArrays.getAttribute(aname("strings")));
        assertNull(nullArrays.getAttribute(aname("ints")));
        assertNull(nullArrays.getAttribute(aname("floats")));
    }

