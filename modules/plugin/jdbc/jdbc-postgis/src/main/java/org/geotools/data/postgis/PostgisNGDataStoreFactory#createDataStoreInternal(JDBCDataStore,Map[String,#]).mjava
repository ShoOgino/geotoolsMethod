    protected JDBCDataStore createDataStoreInternal(JDBCDataStore dataStore, Map<String, ?> params)
            throws IOException {

        // setup loose bbox
        SQLDialect genericDialect = dataStore.getSQLDialect();
        PostGISDialect dialect;
        if (genericDialect instanceof PostGISPSDialect) {
            dialect = ((PostGISPSDialect) genericDialect).getDelegate();
        } else {
            dialect = (PostGISDialect) dataStore.getSQLDialect();
        }
        Boolean loose = (Boolean) LOOSEBBOX.lookUp(params);
        dialect.setLooseBBOXEnabled(loose == null || Boolean.TRUE.equals(loose));

        // check the estimated extents
        Boolean estimated = (Boolean) ESTIMATED_EXTENTS.lookUp(params);
        dialect.setEstimatedExtentsEnabled(estimated == null || Boolean.TRUE.equals(estimated));

        // check if we can encode functions in sql
        Boolean encodeFunctions = (Boolean) ENCODE_FUNCTIONS.lookUp(params);
        dialect.setFunctionEncodingEnabled(encodeFunctions == null || encodeFunctions);

        // setup the ps dialect if need be
        Boolean usePs = (Boolean) PREPARED_STATEMENTS.lookUp(params);
        if (Boolean.TRUE.equals(usePs)) {
            dataStore.setSQLDialect(new PostGISPSDialect(dataStore, dialect));
        }

        // check geometry simplification (on by default)
        Boolean simplify = (Boolean) SIMPLIFY.lookUp(params);
        dialect.setSimplifyEnabled(simplify == null || simplify);
        // check preserving topology when simplifying geometries (off by default)
        SimplificationMethod simplificationMethod =
                (SimplificationMethod) SIMPLIFICATION_METHOD.lookUp(params);
        dialect.setTopologyPreserved(
                SimplificationMethod.PRESERVETOPOLOGY.equals(simplificationMethod));

        // encode BBOX filter with wrapping ST_Envelope (GEOT-5167)
        Boolean encodeBBOXAsEnvelope = false;
        String largeGeometriesOptimized =
                System.getProperty("org.geotools.data.postgis.largeGeometriesOptimize");
        if (largeGeometriesOptimized != null) {
            encodeBBOXAsEnvelope = largeGeometriesOptimized.toLowerCase().equals("true");
        }
        dialect.setEncodeBBOXFilterAsEnvelope(Boolean.TRUE.equals(encodeBBOXAsEnvelope));

        return dataStore;
    }

