    // Given a function and one of its parameters check if it is a constant one
    // and eventually resolve it to Literal setting to the function,
    // after doing a defensive copy of it.
    private Function constantParameterToLiteral(
            Function expression, Expression param, int paramIdx) {
        FilterAttributeExtractor extractor = new FilterAttributeExtractor();
        param.accept(extractor, null);
        if (extractor.isConstantExpression()) {
            // defensive copy of filter before manipulating it
            DuplicatingFilterVisitor duplicating = new DuplicatingFilterVisitor();
            Function duplicated = (Function) expression.accept(duplicating, null);
            // if constant can encode
            Object result = param.evaluate(null);
            FilterFactory2 ff = CommonFactoryFinder.getFilterFactory2();
            // setting constant expression evaluated to literal
            duplicated.getParameters().set(paramIdx, ff.literal(result));
            return duplicated;
        }
        return expression;
    }

