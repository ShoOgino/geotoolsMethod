    /**
     * Polygon examples used to illustrate compound encoding.</p> <code><pre>
     *   5,13+-------------+   11,13
     *      /               \
     * 2,11+                 \
     *     | 7,10+----+10,10  \
     *     |     |    |       +13,9
     *     |     |    |       |
     *     |     |    |       |
     *     |  7,5+----+10,5   +13,5
     *  2,4+                  /
     *      \                /
     *   4,3+---------------+10,3
     * </pre></code>
     * <p>
     * A Polygon with expected encoding:
     * </p>
     * <ul>
     * <li><b>SDO_GTYPE:</b><code>2003</code><br/>
     * 2 dimensional polygon, 3 for polygon</li>
     * <li><b>SDO_SRID:</b><code>NULL</code></li>
     * <li><b>SDO_POINT:</b>NULL></li>
     * <li><b>SDO_ELEM_INFO:</b><code>(1,1003,1,19,2003,1)</code><br/>
     * Two triplets
     * <ul>
     * <li>(1,1003,1): exterior polygon ring starting at 1</li>
     *
     * <li>(19,2003,1): interior polygon ring starting at 19</li>
     * </ul>
     * </li>
     * <li><b>SDO_ORDINATES:</b> <code><pre>
     *        (2,4, 4,3, 10,3, 13,5, 13,9, 11,13, 5,13, 2,11, 2,4,
     *         7,5, 7,10, 10,10, 10,5, 7,5)
     *     </code>
     *
     * <pre/></li>
     * </ul>
     * <p>
     * SQL:
     * </p>
     * <code><pre>
     * MDSYS.SDO_GEOMETRY(
     *   2003,
     *   NULL,
     *   NULL,
     *   MDSYS.SDO_ELEM_INFO_ARRAY(1,1003,1, 19,2003,1),
     *   MDSYS.SDO_ORDINATE_ARRAY(2,4, 4,3, 10,3, 13,5, 13,9, 11,13, 5,13, 2,11, 2,4,
     *       7,5, 7,10, 10,10, 10,5, 7,5)
     * )
     * </pre></code>
     */
    public final void testPolygonEncoding() throws SQLException {
        if (this.connection == null) return;

        Geometry g = fixture.polygonWithHole;
        STRUCT datum = converter.toSDO(g);

        assertEquals(2003, SDO.gType(g));
        assertEquals(-1, SDO.SRID(g));
        assertNull(SDO.point(g));

        int elemInfo[] = SDO.elemInfo(g);
        assertEquals(
                "elemInfo",
                new int[] {
                    1, 1003, 1, // polygon
                    19, 2003, 1
                }, // hole
                elemInfo);

        double ords[] = SDO.ordinates(g);
        double expt[] =
                new double[] {
                    2, 4, 4, 3, 10, 3, 13, 5, 13, 9, 11, 13, 5, 13, 2, 11, 2, 4, // ring
                    7, 5, 7, 10, 10, 10, 10, 5, 7, 5
                }; // hole
        assertEquals("ords", expt, ords);
        Geometry geom = (Geometry) converter.asGeometry(datum);

        assertEquals(fixture.polygonWithHole, geom);
    }

