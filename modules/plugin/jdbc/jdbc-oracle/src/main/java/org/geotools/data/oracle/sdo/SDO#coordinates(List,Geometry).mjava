    /**
     * Encode Geometry as described by GTYPE and ELEM_INFO
     *
     * <p>CoordinateSequence & CoordinateAccess wil be used to determine the dimension, and the
     * number of ordinates added.
     *
     * @param list Flat list of Double
     * @param geom Geometry
     * @throws IllegalArgumentException If geometry cannot be encoded
     */
    public static void coordinates(List list, Geometry geom) {
        switch (TT(geom)) {
            case TT.UNKNOWN:
                break; // extend with your own custom types

            case TT.POINT:
                addCoordinates(list, (Point) geom);

                return;

            case TT.LINE:
                addCoordinates(list, (LineString) geom);

                return;

            case TT.POLYGON:
                addCoordinates(list, (Polygon) geom);

                return;

            case TT.COLLECTION:
                addCoordinates(list, (GeometryCollection) geom);

                return;

            case TT.MULTIPOINT:
                addCoordinates(list, (MultiPoint) geom);

                return;

            case TT.MULTILINE:
                addCoordinates(list, (MultiLineString) geom);

                return;

            case TT.MULTIPOLYGON:
                addCoordinates(list, (MultiPolygon) geom);

                return;
        }

        throw new IllegalArgumentException(
                "Cannot encode JTS "
                        + geom.getGeometryType()
                        + " as "
                        + "SDO_ORDINATRES (Limitied to Point, Line, Polygon, "
                        + "GeometryCollection, MultiPoint, MultiLineString and MultiPolygon)");
    }

