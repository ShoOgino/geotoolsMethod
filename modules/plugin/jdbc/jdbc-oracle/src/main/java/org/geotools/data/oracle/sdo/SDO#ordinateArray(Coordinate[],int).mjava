    /**
     * Ordinate access.
     *
     * <p>CoordinateAccess is required for additional ordinates.
     *
     * <p>Ordinate limitied to:
     *
     * <ul>
     *   <li>0: x ordinate array
     *   <li>1: y ordinate array
     *   <li>2: z ordinate array
     *   <li>3: empty ordinate array
     * </ul>
     *
     * @param array
     * @param ordinate
     */
    public static double[] ordinateArray(Coordinate[] array, int ordinate) {
        if (array == null) {
            return null;
        }

        final int LENGTH = array.length;
        double[] ords = new double[LENGTH];
        Coordinate c;

        if (ordinate == 0) {
            for (int i = 0; i < LENGTH; i++) {
                c = array[i];
                ords[i] = (c != null) ? c.x : Double.NaN;
            }
        } else if (ordinate == 1) {
            for (int i = 0; i < LENGTH; i++) {
                c = array[i];
                ords[i] = (c != null) ? c.y : Double.NaN;
            }
        } else if (ordinate == 2) {
            for (int i = 0; i < LENGTH; i++) {
                c = array[i];
                ords[i] = (c != null) ? c.z : Double.NaN;
            }
        } else {
            // default to NaN
            for (int i = 0; i < LENGTH; i++) {
                ords[i] = Double.NaN;
            }
        }

        return ords;
    }

