    /**
     * Obtains the native oracle connection object given a database connecetion.
     *
     */
    OracleConnection unwrapConnection( Connection cx ) throws SQLException {
        if(cx == null)
            return null;
        
        if ( cx instanceof OracleConnection ) {
            return (OracleConnection) cx;
        }
        
        try {
            // try to use java 6 unwrapping the first time, it can fail, if so, the unwrapper will
            // be set instead
            if(cx instanceof Wrapper && uw != null) {
                try {
                    Wrapper w = cx;
                    if(w.isWrapperFor(OracleConnection.class)) {
                        return w.unwrap(OracleConnection.class);
                    }
                } catch(Throwable t) {
                    // not a mistake, old DBCP versions will throw an Error here, we need to catch it
                    LOGGER.log(Level.FINE, "Failed to unwrap connection using java 6 facilities", t);
                }
            }
            if(uw == null)
                uw = DataSourceFinder.getUnWrapper( cx );
            if ( uw != null ) {
                Connection uwcx = uw.unwrap( cx );
                if ( uwcx != null && uwcx instanceof OracleConnection ) {
                    return (OracleConnection) uwcx;
                }
            }
        } catch(IOException e) {
            throw (SQLException) new SQLException(
                    "Could not obtain native oracle connection.").initCause(e);
        }
        
        throw new SQLException( "Could not obtain native oracle connection for " + cx.getClass());
    }

