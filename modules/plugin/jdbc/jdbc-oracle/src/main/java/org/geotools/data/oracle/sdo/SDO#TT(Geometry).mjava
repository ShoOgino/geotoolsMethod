    /**
     * Return TT as defined by SDO_GTYPE (represents geometry type).
     *
     * <p>TT is used to represent the type of the JTS Geometry:
     *
     * <pre><code>
     * <b>Value Geometry Type    JTS Geometry</b>
     * 00    UNKNOWN_GEOMETRY null
     * 01    POINT            Point
     * 02    LINE             LineString
     *       CURVE            <i>not supported</i>
     * 03    POLYGON          Polygon
     * 04    COLLECTION       GeometryCollection
     * 05    MULTIPOINT       MultiPoint
     * 06    MULTILINE        MultiLineString
     *       MULTICURVE       <i>not supported</i>
     * 07    MULTIPOLYGON     MultiPolygon
     * </code></pre>
     *
     * @param geom
     * @return <code>TT</code> representing <code>geom</code>
     * @throws IllegalArgumentException If SDO_GTYPE can not be represetned by JTS
     */
    public static int TT(Geometry geom) {
        if (geom == null) {
            return TT.UNKNOWN; // UNKNOWN
        } else if (geom instanceof Point) {
            return TT.POINT;
        } else if (geom instanceof LineString) {
            return TT.LINE;
        } else if (geom instanceof Polygon) {
            return TT.POLYGON;
        } else if (geom instanceof MultiPoint) {
            return TT.MULTIPOINT;
        } else if (geom instanceof MultiLineString) {
            return TT.MULTILINE;
        } else if (geom instanceof MultiPolygon) {
            return TT.MULTIPOLYGON;
        } else if (geom instanceof GeometryCollection) {
            return TT.COLLECTION;
        }

        throw new IllegalArgumentException(
                "Cannot encode JTS "
                        + geom.getGeometryType()
                        + " as SDO_GTYPE "
                        + "(Limitied to Point, Line, Polygon, GeometryCollection, MultiPoint,"
                        + " MultiLineString and MultiPolygon)");
    }

