    /**
     * Convert provided SDO_GEOMETRY to JTS Geometry.
     *
     * <p>Will return {@code null} as {@code null}.
     *
     * @param sdoGeometry datum STRUCT to be converted to a geometry
     * @return JTS {@code Geometry} representing the provided {@code datum}
     */
    public Geometry asGeometry(OracleStruct sdoGeometry) throws SQLException {
        // Note Returning null for null Datum
        if (sdoGeometry == null) return null;

        Object[] data = sdoGeometry.getAttributes();
        final int GTYPE = asInteger((Number) data[0], 0);
        final int SRID = asInteger((Number) data[1], SDO.SRID_NULL);
        final double[] POINT = asDoubleArray((OracleStruct) data[2], Double.NaN);
        final int[] ELEMINFO = asIntArray((OracleArray) data[3], 0);
        final double[] ORDINATES = asDoubleArray((OracleArray) data[4], Double.NaN);

        return SDO.create(geometryFactory, GTYPE, SRID, POINT, ELEMINFO, ORDINATES);
    }

