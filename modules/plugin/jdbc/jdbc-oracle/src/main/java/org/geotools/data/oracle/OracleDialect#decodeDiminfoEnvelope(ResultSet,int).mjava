    /**
     * @param rs result set of the dimension info query
     * @param column column of the dimension info
     * @return the envelope out of the dimension info (assumption: x before y or longitude before
     *     latitude) or null, if no data is in the specified column
     * @throws SQLException if dimension info can not be parsed
     * @author Hendrik Peilke
     */
    private Envelope decodeDiminfoEnvelope(ResultSet rs, int column) throws SQLException {
        Array returnArray = rs.getArray(column);

        if (returnArray == null) {
            throw new SQLException("no data inside the specified column");
        }

        Object data[] = (Object[]) returnArray.getArray();
        if (data.length < 2) {
            throw new SQLException("too little dimension information found in sdo_geom_metadata");
        }

        Object[] xInfo = ((Struct) data[0]).getAttributes();
        Object[] yInfo = ((Struct) data[1]).getAttributes();

        // because Oracle insists on BigDecimal/BigInteger for numbers
        Double minx = ((Number) xInfo[1]).doubleValue();
        Double maxx = ((Number) xInfo[2]).doubleValue();
        Double miny = ((Number) yInfo[1]).doubleValue();
        Double maxy = ((Number) yInfo[2]).doubleValue();
        returnArray.free();
        return new Envelope(minx, maxx, miny, maxy);
    }

