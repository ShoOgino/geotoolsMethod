    /**
     * 
     * @param rs result set of the dimension info query
     * @param column column of the dimension info
     * @return the envelope out of the dimension info 
     *         (assumption: x before y or longitude before latitude)
     *         or null, if no data is in the specified column
     * @throws SQLException if dimension info can not be parsed
     * @author Hendrik Peilke
     */
    private Envelope decodeDiminfoEnvelope(ResultSet rs, int column) throws SQLException
    {
        ARRAY returnArray = (ARRAY) rs.getObject(column);
        
        if(returnArray == null) {
            throw new SQLException("no data inside the specified column");
        }
        
        Datum data[] = returnArray.getOracleArray();
        
        if(data.length < 2) {
            throw new SQLException("too little dimension information found in sdo_geom_metadata");
        }
        
        Datum[] xInfo = ((STRUCT) data[0]).getOracleAttributes();
        Datum[] yInfo = ((STRUCT) data[1]).getOracleAttributes();
        Double minx = xInfo[1].doubleValue();
        Double maxx = xInfo[2].doubleValue();
        Double miny = yInfo[1].doubleValue();
        Double maxy = yInfo[2].doubleValue();
        
        return new Envelope(minx,maxx,miny,maxy);
    }

