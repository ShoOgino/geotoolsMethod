    /**
     * A version of assert that indicates range pre/post condition.
     *
     * <p>Works like assert exception IllegalArgumentException is thrown indicating this is a
     * required check.
     *
     * <p>Example phrased as a positive statement of the requirement to be met:
     *
     * <pre><code>
     * ensure( "INTERPRETATION {0} must be on of {1}.
     * </code></pre>
     *
     * @param condition MessageFormat pattern - positive statement of requirement
     * @param actual value supplied ({0} in message format)
     * @param set Array of acceptable values ({1} in message format)
     * @throws IllegalArgumentException unless actual is a member of set
     */
    private static void ensure(String condition, int actual, int[] set) {
        if (set == null) return; // don't apparently care
        for (int i = 0; i < set.length; i++) {
            if (set[i] == actual) return; // found it
        }
        StringBuffer array = new StringBuffer();
        for (int i = 0; i < set.length; i++) {
            array.append(set[i]);
            if (i < set.length) {
                array.append(",");
            }
        }
        String msg = MessageFormat.format(condition, new Object[] {new Integer(actual), array});
        throw new IllegalArgumentException(msg);
    }

