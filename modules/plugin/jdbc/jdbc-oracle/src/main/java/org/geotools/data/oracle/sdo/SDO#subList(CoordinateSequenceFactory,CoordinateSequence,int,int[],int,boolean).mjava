    // Decoding Helper Functions
    //
    //
    /**
     * Returns a range from a CoordinateList, based on ELEM_INFO triplets.
     *
     * @param factory Factory used for JTS
     * @param coords Coordinates
     * @param GTYPE Encoding of <b>D</b>imension, <b>L</b>RS and <b>TT</b>ype
     * @param elemInfo
     * @param triplet
     */
    private static CoordinateSequence subList(
            CoordinateSequenceFactory factory,
            CoordinateSequence coords,
            int GTYPE,
            int[] elemInfo,
            int triplet,
            boolean compoundElement) {

        final int STARTING_OFFSET = STARTING_OFFSET(elemInfo, triplet);
        int ENDING_OFFSET = STARTING_OFFSET(elemInfo, triplet + 1); // -1 for end
        final int LEN = D(GTYPE);
        if (ENDING_OFFSET != -1 && compoundElement) {
            ENDING_OFFSET += LEN;
        }

        if ((STARTING_OFFSET == 1) && (ENDING_OFFSET == -1)) {
            // Use all Cordiantes
            return coords;
        }

        int start = (STARTING_OFFSET - 1) / LEN;
        int end = (ENDING_OFFSET != -1) ? ((ENDING_OFFSET - 1) / LEN) : coords.size();

        return subList(factory, coords, start, end);
    }

