    void installTriggers(
            Connection cx,
            String tableName,
            String geomName,
            String indexTableName,
            List<PrimaryKeyColumn> primaryKeys)
            throws SQLException {
        /*
        "CREATE TRIGGER \"{0}_{1}_mi\" AFTER INSERT ON {12}"
        + "  REFERENCING NEW TABLE AS nt"
        + "  FOR EACH STATEMENT"
        + "  BEGIN ATOMIC"
        + "  ("
        + "    INSERT INTO {13} SELECT \"{2}\","
        + "      sysspatial.tessellate_index("
        + "      \"{1}\".ST_Envelope().ST_ExteriorRing().ST_PointN(1).ST_X(), "
        + "      \"{1}\".ST_Envelope().ST_ExteriorRing().ST_PointN(1).ST_Y(), "
        + "      \"{1}\".ST_Envelope().ST_ExteriorRing().ST_PointN(3).ST_X(), "
        + "      \"{1}\".ST_Envelope().ST_ExteriorRing().ST_PointN(3).ST_Y(), "
        + "      {3,number,0.0#}, {4,number,0.0#}, {5,number,0.0#}, {6,number,0.0#}, "
        + "      {7,number,0}, {8,number,0}, {9,number,0}, {10,number,0.0#}, {11,number,0})"
        // + ")"
        + "    FROM nt WHERE \"{1}\" IS NOT NULL;"
        + "  ) " + "END"
         */

        /*"CREATE TRIGGER \"{0}_{1}_mu\" AFTER UPDATE OF \"{1}\" ON {12}"
        + "  REFERENCING NEW AS nt"
        + "  FOR EACH STATEMENT"
        + "  BEGIN ATOMIC"
        + "  ("
        + "    DELETE FROM {13} WHERE id in (SELECT \"{2}\" from nt); "
        + "    INSERT INTO {13} SELECT \"{2}\","
        + "    sysspatial.tessellate_index("
        + "      \"{1}\".ST_Envelope().ST_ExteriorRing().ST_PointN(1).ST_X(), "
        + "      \"{1}\".ST_Envelope().ST_ExteriorRing().ST_PointN(1).ST_Y(), "
        + "      \"{1}\".ST_Envelope().ST_ExteriorRing().ST_PointN(3).ST_X(), "
        + "      \"{1}\".ST_Envelope().ST_ExteriorRing().ST_PointN(3).ST_Y(), "
        + "      {3,number,0.0#}, {4,number,0.0#}, {5,number,0.0#}, {6,number,0.0#}, "
        + "      {7,number,0}, {8,number,0}, {9,number,0}, {10,number,0.0#}, {11,number,0})"
        + "    FROM nt WHERE \"{1}\" IS NOT NULL;" + "  ) "*/

        /*"CREATE TRIGGER \"{0}_{1}_md\" AFTER DELETE ON {2}"
        + "  REFERENCING OLD TABLE AS ot"
        + "  FOR EACH STATEMENT"
        + "  BEGIN ATOMIC"
        + "  ("
        + "    DELETE FROM \"{0}_{1}_idx\" WHERE ID IN (SELECT \"{1}\" from ot);"
        + "  )" + "END"*/
        installInsertTrigger(cx, tableName, geomName, indexTableName, primaryKeys);
        installUpdateTrigger(cx, tableName, geomName, indexTableName, primaryKeys);
        installDeleteTrigger(cx, tableName, geomName, indexTableName, primaryKeys);
        LOGGER.info("Installed triggers on " + tableName + " to update " + indexTableName);
    }

