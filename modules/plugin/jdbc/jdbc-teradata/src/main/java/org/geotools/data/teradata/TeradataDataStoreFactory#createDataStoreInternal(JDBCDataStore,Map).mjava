    @Override
    protected JDBCDataStore createDataStoreInternal(JDBCDataStore dataStore, final Map params)
            throws IOException {

        // setup loose bbox
        TeradataDialect dialect = (TeradataDialect) dataStore.getSQLDialect();

        Boolean lobWorkaround = (Boolean) LOBWORKAROUND.lookUp(params);
        // check for old name and respect setting if provided and new name is not
        // NOTE: this will not appear updated in geoserver's UI however
        if (lobWorkaround == null && params.containsKey("LOB Workaround")) {
            lobWorkaround = (Boolean) LOBWORKAROUND.handle((String) params.get("LOB Workaround"));
            params.put(LOBWORKAROUND.key, lobWorkaround.toString());
        }
        dialect.setLobWorkaroundEnabled(lobWorkaround == null || !lobWorkaround);

        Boolean loose = (Boolean) LOOSEBBOX.lookUp(params);
        dialect.setLooseBBOXEnabled(loose == null || Boolean.TRUE.equals(loose));

        // primary key finder
        if (!params.containsKey(PK_METADATA_TABLE.key)) {
            dataStore.setPrimaryKeyFinder(KEY_FINDER);
        }

        // estimated bounds
        Boolean estimatedBounds = (Boolean) ESTIMATED_BOUNDS.lookUp(params);
        if (estimatedBounds != null && estimatedBounds.booleanValue()) {
            dialect.setEstimatedBounds(estimatedBounds);
        }

        if (params.containsKey(APPLICATION.key)) {
            dialect.setApplication((String) APPLICATION.lookUp(params));
        }

        // set schema to be same as user
        String username = null;
        if (params.containsKey(USER.key)) {
            username = (String) USER.lookUp(params);
        } else if (params.containsKey(DATASOURCE.key)) {
            DataSource dataSource = (DataSource) DATASOURCE.lookUp(params);
            if (dataSource instanceof BasicDataSource) {
                username = ((BasicDataSource) dataSource).getUsername();
            } else if (dataSource instanceof DBCPDataSource) {
                try {
                    username =
                            ((BasicDataSource)
                                            ((DBCPDataSource) dataSource).unwrap(DataSource.class))
                                    .getUsername();
                } catch (SQLException e) {
                    throw (IOException) new IOException().initCause(e);
                }
            }
        }
        if (params.containsKey(SCHEMA.key)) {
            dataStore.setDatabaseSchema((String) SCHEMA.lookUp(params));
        } else {
            dataStore.setDatabaseSchema(username);
        }
        return dataStore;
    }

