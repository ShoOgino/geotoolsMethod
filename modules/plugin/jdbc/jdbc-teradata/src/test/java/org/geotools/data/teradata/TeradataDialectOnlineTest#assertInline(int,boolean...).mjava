    private void assertInline(final int startIdx, boolean... expectInline) throws Exception {
        SimpleFeatureSource featureSource = dataStore.getFeatureSource("ft3");
        // verify dialect encodes LOB workadound and reads correctly
        StringBuffer buf = new StringBuffer("select id, geometry");
        dialect.encodePostSelect(featureSource.getSchema(), buf);
        // ensure order by or ids aren't in sequence
        buf.append(" from ft3 order by id");
        Connection connection = dataStore.getConnection(Transaction.AUTO_COMMIT);
        Statement s = connection.createStatement();
        ResultSet rs = s.executeQuery(buf.toString());
        // geometry column is always Clob
        assertEquals("java.sql.Clob", rs.getMetaData().getColumnClassName(2));
        // geometry_inline derived column is String
        assertEquals("java.lang.String", rs.getMetaData().getColumnClassName(3));

        // make sure that starting from startIdx we get an inline String or not
        for (int i = 0; i < expectInline.length; i++) {
            rs.next();
            String result = rs.getString(3);
            if (expectInline[i]) {
                assertNotNull(result);
                new WKTReader().read(result);
            } else {
                assertNull(result);
            }
        }
    }

