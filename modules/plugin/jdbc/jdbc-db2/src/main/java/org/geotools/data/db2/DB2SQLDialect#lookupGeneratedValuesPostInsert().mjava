    /**
     * Controls whether keys are looked up post or pre insert.
     * <p>TODO TODO TODO
     * Due to DB2 implementation problems, ps.addBatch(), ps.executeBatch() 
     * doesn't work for auto-generated identity key columns.
     * This function should return 'true' to make the overall logic work with
     * auto-generated columns but this breaks the logic for sequence
     * generated key columns so for now, return 'false'.
     * 
     * Part of the reason for the breakage is that if 'true', KeysFetcher 
     * will add to the INSERT statement NEXT VALUE FOR seq_name but doesn't
     * include the schema so an error occurs since the test setup
     * specifies the sequence schema name as 'geotools' which is different
     * from the default which is the connection id.
     * It isn't clear why the 'geotools' schema isn't being specified.
     * Even if this was corrected, the current DB2 JDBC support wouldn't
     * correctly get the inserted key values later.
     * 
     * Another problem is that if 'true', JDBCDataStore::insertPS
     * executes:
     * ps = cx.prepareStatement(sql, keysFetcher.getColumnNames());
     * which causes a failure with ps.addBatch() because it defaults to
     * uppercase for the key column while the table was defined with
     * a lowercase key column - this is a DB2 JDBC defect
     * which is not likely to be fixed.
     * 
     * It isn't really clear why this method is being called for
     * sequence key columns. Fixing this probably requires significant
     * changes to the core JDBC logic which I'm not prepared to
     * do. -- David Adler 04/18/2017
     * <p>
     * When a row is inserted into a table, and a key is automatically generated
     * DB2 allows the generated key to be retrieved after the insert. 
     * The DB2 dialect returns <code>true</code> to cause the lookup to occur after the insert via 
     * {@link #getLastAutoGeneratedValue(String, String, String, Connection)}.
     * </p>
     * <p>
     * DB2 implements:
     * <ul> 
     * <li>{@link #getLastAutoGeneratedValue(String, String, String, Connection)}
     * </ul>
     * </p>
     */
    
@Override    
    public boolean lookupGeneratedValuesPostInsert() {
        return false;
    }

