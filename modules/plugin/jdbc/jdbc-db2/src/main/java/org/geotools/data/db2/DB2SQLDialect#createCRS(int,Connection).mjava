    /* (non-Javadoc)
     * @see org.geotools.jdbc.SQLDialect#createCRS(int, java.sql.Connection)
     *
     * First, look up the wkt def for the srid, if not found return null
     * If we have a wkt def from db2, try to decode with CRS.parseWKT, on success return
     * the crs
     *
     * If we cannot parse the WKT def, use the organization and organization coordsys id to parse
     * with CRS.decode(), on success return the crs
     *
     * Otherwise, its time to give up and return null
     */
    @Override
    public CoordinateReferenceSystem createCRS(int srid, Connection cx) throws SQLException {
        String org = null, wkt = null;
        int orgid = 0;
        try (PreparedStatement ps = cx.prepareStatement(SELECT_CRS_WKT)) {
            ps.setInt(1, srid);
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    wkt = rs.getString(1);
                    org = rs.getString(2);
                    orgid = rs.getInt(3);
                }
            }
        }
        if (orgid != 0 && org != null) {
            try {
                CoordinateReferenceSystem crs =
                        CRS.decode(org + ":" + orgid, true); // Force longitude first
                return crs;
            } catch (Exception e) {
                if (LOGGER.isLoggable(Level.WARNING))
                    LOGGER.log(
                            Level.WARNING,
                            "Could not decode "
                                    + org
                                    + ":"
                                    + orgid
                                    + " using the geotools database",
                            e);
            }
        }

        if (wkt != null) {
            try {

                CoordinateReferenceSystem crs = CRS.parseWKT(wkt);
                return crs;
            } catch (Exception e) {
                if (LOGGER.isLoggable(Level.WARNING))
                    LOGGER.log(Level.WARNING, "Could not decode db2 wkt definition for " + srid);
            }
        }
        return null;
    }

