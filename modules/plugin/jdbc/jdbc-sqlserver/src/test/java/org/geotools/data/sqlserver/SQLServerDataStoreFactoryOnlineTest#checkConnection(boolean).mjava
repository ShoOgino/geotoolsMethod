    void checkConnection(boolean includedb) throws Exception {
        Properties db = fixture;

        // db.load(getClass().getResourceAsStream("factory.properties"));

        Map<String, Object> params = new HashMap<String, Object>();
        params.put(HOST.key, db.getProperty(HOST.key));
        if (includedb) {
            params.put(DATABASE.key, db.getProperty(DATABASE.key));
        }
        String instance = db.getProperty(INSTANCE.key);
        if (instance == null || instance.isEmpty()) {
            params.put(PORT.key, db.getProperty(PORT.key));
        } else {
            params.put(INSTANCE.key, instance);
        }
        params.put(USER.key, db.getProperty(USER.key));
        String password = db.getProperty(PASSWD.key);
        if (password == null) {
            password = db.getProperty("password");
        }
        params.put(PASSWD.key, password);
        // since we use the same test for SQLServer and JTDSSQLServer
        SQLServerDataStoreFactory factory = null;
        if (db.getProperty("driver").equalsIgnoreCase(
                "com.microsoft.sqlserver.jdbc.SQLServerDriver")) {
            factory = new SQLServerDataStoreFactory();

        } else {
            factory = new JTDSSqlServerDataStoreFactory();
        }
        params.put(DBTYPE.key, factory.getDatabaseID());
        params.put(SQLServerDataStoreFactory.INTSEC.key, false);

        assertTrue(factory.canProcess(params));

        JDBCDataStore store = factory.createDataStore(params);
        assertNotNull(store);
        try {
            // check dialect
            assertTrue(store.getSQLDialect() instanceof SQLServerDialect);

            // force connection usage
            assertNotNull(store.getSchema("ft1"));
        } finally {
            store.dispose();
        }
    }

