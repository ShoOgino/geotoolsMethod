    public static CommandLineArguments parse(String[] args) {

        ConnectionType connType;
        int port = 0;
        int instance = 0;
        String database = null;
        HashMap<String, String> options = new HashMap<>();

        int aidx = 0;
        if (args.length < 2) {
            showUsage();
            return null;
        }
        String user = args[aidx++];
        String host = args[aidx++];
        int colonIdx = host.indexOf(':');
        if (colonIdx != -1) {
            connType = ConnectionType.USING_PORT;
            String sport = host.substring(colonIdx + 1);
            try {
                port = Integer.parseInt(sport);
            } catch (NumberFormatException e) {
                showUsage();
                return null;
            }
            host = host.substring(0, colonIdx);
        } else {
            if (aidx == args.length) {
                showUsage();
                return null;
            }
            try {
                instance = Integer.parseInt(args[aidx++]);
            } catch (NumberFormatException e) {
                showUsage();
                return null;
            }
            if ((aidx < args.length) && !args[aidx].startsWith("--")) {
                database = args[aidx++];
                connType = ConnectionType.MULTI_CONTAINER;
            } else {
                connType = ConnectionType.SINGLE_CONTAINER;
            }
        }
        if (aidx < args.length) {
            String option = args[aidx++];
            if (!option.equals("--ssl")) {
                showUsage();
                return null;
            }
            options.put("encrypt", "true");
        }
        if (aidx != args.length) {
            showUsage();
            return null;
        }

        switch (connType) {
            case USING_PORT:
                return new CommandLineArguments(
                        user, HanaConnectionParameters.forPort(host, port, options));
            case SINGLE_CONTAINER:
                return new CommandLineArguments(
                        user, HanaConnectionParameters.forSingleContainer(host, instance, options));
            case MULTI_CONTAINER:
                return new CommandLineArguments(
                        user,
                        HanaConnectionParameters.forMultiContainer(
                                host, instance, database, options));
            default:
                throw new AssertionError();
        }
    }

