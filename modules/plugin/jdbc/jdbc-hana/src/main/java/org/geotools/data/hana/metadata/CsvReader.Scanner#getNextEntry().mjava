        public String getNextEntry() {
            if (position == line.length()) {
                return null;
            }
            if (position > 0) {
                if (line.charAt(position) != ',') {
                    throw new AssertionError();
                }
                ++position;
            }
            if (position == line.length()) {
                return "";
            }

            StringBuilder sb = new StringBuilder();

            boolean inQuotes = false;
            if (line.charAt(position) == '"') {
                inQuotes = true;
                ++position;
            }
            while (position < line.length()) {
                char c = line.charAt(position);
                if (!inQuotes && (c == ',')) {
                    break;
                }
                if (inQuotes && (c == '"')) {
                    ++position;
                    if (position == line.length()) {
                        inQuotes = false;
                        break;
                    }
                    if (line.charAt(position) != '"') {
                        inQuotes = false;
                        break;
                    }
                    sb.append('"');
                    ++position;
                } else {
                    sb.append(c);
                    ++position;
                }
            }
            if (inQuotes) {
                throw new RuntimeException("CSV-file is malformed");
            }
            if ((position < line.length()) && (line.charAt(position) != ',')) {
                throw new RuntimeException("CSV-file is malformed");
            }
            return sb.toString();
        }

