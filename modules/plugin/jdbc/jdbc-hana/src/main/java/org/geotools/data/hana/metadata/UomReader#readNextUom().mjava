    public Uom readNextUom() throws IOException {
        List<String> entries = csvReader.readNextRow();
        if (entries == null) {
            return null;
        }
        if (entries.size() != 3) {
            throw new RuntimeException("UOM-CSV is malformed");
        }
        String name = entries.get(0);
        String stype = entries.get(1);
        Uom.Type type;
        if ("linear".equals(stype)) {
            type = Uom.Type.LINEAR;
        } else if ("angular".equals(stype)) {
            type = Uom.Type.ANGULAR;
        } else {
            throw new RuntimeException("UOM-CSV is malformed");
        }
        double factor = Double.parseDouble(entries.get(2));
        return new Uom(name, type, factor);
    }

