    @Override
    protected void writeLiteral(Object literal) throws IOException {
        if (literal instanceof Date) {
            Calendar c = Calendar.getInstance(TimeZone.getTimeZone("GMT"));//make sure Date and cal tz match
            c.setTime((Date)literal);
            
            // GR: TODO I think this method should check for whether literal is a
            // java.sql.Date/Time/Timestamp and use the appropriate format instead for the server to
            // evaluate to a SQL DATE/TIME/DATETIME as appropriate:
            // http://dev.mysql.com/doc/refman/5.5/en/date-and-time-functions.html#function_str-to-date

            //JD: no timezone handling... str_to_date does not allow us to specify time zone..
            // instead we just get whatever the database/server default timezone is... so this
            // obviously fails if the client and server are in different times zones
            out.write(String.format("STR_TO_DATE('%d,%d,%d,%d,%d,%d,%d'", 
                c.get(Calendar.YEAR),c.get(Calendar.MONTH)+1,c.get(Calendar.DAY_OF_MONTH),
                c.get(Calendar.HOUR_OF_DAY),c.get(Calendar.MINUTE),c.get(Calendar.SECOND),
                c.get(Calendar.MILLISECOND) * 1000) + ",'%Y,%m,%d,%H,%i,%s,%f')");
           
        }
        else {
            super.writeLiteral(literal);
        }

    }

