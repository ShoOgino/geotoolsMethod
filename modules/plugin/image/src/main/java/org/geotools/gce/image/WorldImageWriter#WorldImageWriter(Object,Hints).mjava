    /**
     * Destination must be a File. The directory it resides in must already exist. It must point to
     * where the raster image is to be located. The world image will be derived from there.
     *
     * @param destination
     */
    public WorldImageWriter(Object destination, Hints hints) {
        this.destination = destination;

        // convert everything into a file when possible
        // we have to separate the handling of a file from the handling of an
        // output stream due to the fact that the latter requires no world file.
        if (this.destination instanceof String) {
            this.destination = new File((String) destination);
        } else if (this.destination instanceof URL) {
            final URL url = ((URL) destination);
            if (url.getProtocol().equalsIgnoreCase("file")) {
                String auth = url.getAuthority();
                String path = url.getPath();
                if (auth != null && !auth.equals("")) {
                    path = "//" + auth + path;
                }

                this.destination = new File(path);
            } else {
                throw new RuntimeException(
                        "WorldImageWriter::write:It is not possible writing to an URL!");
            }
        }

        // //
        //
        // managing hints
        //
        // //
        if (this.hints == null) this.hints = new Hints();
        if (hints != null) {
            // prevent the use from reordering axes
            this.hints.add(hints);
        }
    }

