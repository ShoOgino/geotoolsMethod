	public void testOverviewsNearest() throws IOException {
        final File file = TestData.file(this, "etopo.tif");
        
        ///////////////////////////////////////////////////////////////////////
        //
        // HINTS
        //
        ///////////////////////////////////////////////////////////////////////
        WorldImageReader wiReader = new WorldImageReader(file);

        // more than native resolution (250 pixel representation for 125 pixels image)
        assertEquals(0, getChosenOverview(250,wiReader));
        // native resolution (125 pixel representation for 125 pixels image)
        assertEquals(0, getChosenOverview(125,wiReader));
        // half of native, the overview is in position 3 (out of order, remember?)
        assertEquals(3, getChosenOverview(73,wiReader));
        // quarter of native, the overview is in position 2
        assertEquals(2, getChosenOverview(31,wiReader));
        // 1/8 of native, the overview is in position 4
        assertEquals(4, getChosenOverview(16,wiReader));
        // 1/16 of native, the overview is in position 1
        assertEquals(1, getChosenOverview(9,wiReader));
        // 1/32 of native, no overview, still 1
        assertEquals(1, getChosenOverview(4,wiReader));
        
        // 13 is nearer to 16 and to 9
        assertEquals(4, getChosenOverview(13,wiReader));
        // 11 is nearer to 9 than to 16
        assertEquals(4, getChosenOverview(13,wiReader));
        wiReader.dispose();
        
        
        ///////////////////////////////////////////////////////////////////////
        //
        // PARAMETER
        //
        ///////////////////////////////////////////////////////////////////////
        wiReader = new WorldImageReader(file);
		final ParameterValue policy = (ParameterValue) ((AbstractGridFormat) wiReader
				.getFormat()).OVERVIEW_POLICY.createValue();	
		policy.setValue(OverviewPolicy.NEAREST);

        // more than native resolution (250 pixel representation for 125 pixels image)
        assertEquals(0, getChosenOverview(250,wiReader,policy));
        // native resolution (125 pixel representation for 125 pixels image)
        assertEquals(0, getChosenOverview(125,wiReader,policy));
        // half of native, the overview is in position 3 (out of order, remember?)
        assertEquals(3, getChosenOverview(73,wiReader,policy));
        // quarter of native, the overview is in position 2
        assertEquals(2, getChosenOverview(31,wiReader,policy));
        // 1/8 of native, the overview is in position 4
        assertEquals(4, getChosenOverview(16,wiReader,policy));
        // 1/16 of native, the overview is in position 1
        assertEquals(1, getChosenOverview(9,wiReader,policy));
        // 1/32 of native, no overview, still 1
        assertEquals(1, getChosenOverview(4,wiReader,policy));
        
        // 13 is nearer to 16 and to 9
        assertEquals(4, getChosenOverview(13,wiReader));
        // 11 is nearer to 9 than to 16
        assertEquals(4, getChosenOverview(13,wiReader));
        wiReader.dispose();
    }

