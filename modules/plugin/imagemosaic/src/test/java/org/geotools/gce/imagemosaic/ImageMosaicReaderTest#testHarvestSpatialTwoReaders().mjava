    @Test
    public void testHarvestSpatialTwoReaders() throws Exception {
        File source = URLs.urlToFile(rgbURL);
        File testDataDir = TestData.file(this, ".");
        File directory1 = new File(testDataDir, "rgbHarvest1");
        File directory2 = new File(testDataDir, "rgbHarvest2");
        if (directory1.exists()) {
            FileUtils.deleteDirectory(directory1);
        }
        FileUtils.copyDirectory(source, directory1);
        // remove all mosaic related files
        for (File file : FileUtils.listFiles(directory1, new RegexFileFilter("rgb.*"), null)) {
            assertTrue(file.delete());
        }
        // move all files except global_mosaic_0 to the second dir
        directory2.mkdirs();
        for (File file :
                FileUtils.listFiles(
                        directory1, new RegexFileFilter("global_mosaic_[^0].*"), null)) {
            assertTrue(file.renameTo(new File(directory2, file.getName())));
        }

        // crate the first reader
        URL harvestSingleURL = URLs.fileToUrl(directory1);
        final AbstractGridFormat format = TestUtils.getFormat(harvestSingleURL);
        ImageMosaicReader reader = TestUtils.getReader(harvestSingleURL, format);
        GeneralEnvelope singleGranuleEnvelope = reader.getOriginalEnvelope();
        // System.out.println(singleGranuleEnvelope);

        // now create a second reader that won't be informed of the harvesting changes
        // (simulating changes over a cluster, where the bbox information won't be updated from one
        // node to the other)
        ImageMosaicReader reader2 = TestUtils.getReader(harvestSingleURL, format);

        // harvest the other files with the first reader
        for (File file : directory2.listFiles()) {
            assertTrue(file.renameTo(new File(directory1, file.getName())));
        }
        reader.harvest(null, directory1, null);

        // make a request in a bbox that's outside of the original envelope, the
        // second reader does not have the metadata updated, but can still respond to the
        // request
        MathTransform mt = reader.getOriginalGridToWorld(PixelInCell.CELL_CORNER);
        Envelope env = new Envelope2D(DefaultGeographicCRS.WGS84, 10, 40, 15, 45);
        GridEnvelope2D rasterEnvelope =
                new GridEnvelope2D(
                        new Envelope2D(CRS.transform(mt.inverse(), env)), PixelInCell.CELL_CORNER);
        GridGeometry2D gg = new GridGeometry2D(rasterEnvelope, env);
        final ParameterValue<GridGeometry2D> ggParameter =
                AbstractGridFormat.READ_GRIDGEOMETRY2D.createValue();
        ggParameter.setValue(gg);
        GridCoverage2D coverage = reader2.read(new GeneralParameterValue[] {ggParameter});
        assertNotNull(coverage);
        coverage.dispose(true);

        reader.dispose();
        reader2.dispose();
    }

