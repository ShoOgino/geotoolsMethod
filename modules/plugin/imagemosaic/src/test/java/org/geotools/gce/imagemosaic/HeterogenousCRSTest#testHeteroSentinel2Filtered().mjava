    @Test
    public void testHeteroSentinel2Filtered() throws Exception {
        String testLocation = "hetero_s2";
        URL storeUrl = TestData.url(this, testLocation);

        File testDataFolder = new File(storeUrl.toURI());
        File testDirectory = crsMosaicFolder.newFolder(testLocation);
        FileUtils.copyDirectory(testDataFolder, testDirectory);
        
        ImageMosaicReader imReader = new ImageMosaicReader(testDirectory, null);
        Assert.assertNotNull(imReader);
        
        // read a coverage and compare with expected image
        ParameterValue<Color> inputTransparentColor = AbstractGridFormat.INPUT_TRANSPARENT_COLOR.createValue();
        inputTransparentColor.setValue(Color.BLACK);
        ParameterValue<Color> outputTransparentColor = ImageMosaicFormat.OUTPUT_TRANSPARENT_COLOR.createValue();
        outputTransparentColor.setValue(Color.BLACK);
        ParameterValue<GridGeometry2D> ggp = AbstractGridFormat.READ_GRIDGEOMETRY2D.createValue();
        GridEnvelope2D range = new GridEnvelope2D(0, 0, 158, 103);
        GridGeometry2D gg = new GridGeometry2D(range, new ReferencedEnvelope(11.6834779, 11.8616874, 47.6380806, 47.7542552, CRS.decode("EPSG:4236", true)));
        ggp.setValue(gg);
        ParameterValue<Filter> filter = ImageMosaicFormat.FILTER.createValue();
        filter.setValue(CQL.toFilter("location = 'g1.tif'"));

        final String expectedResultLocation = "hetero_s2_results/filtered.png";
        assertExpectedMosaic(imReader, expectedResultLocation, inputTransparentColor, outputTransparentColor, filter, ggp);
        imReader.dispose();
    }

