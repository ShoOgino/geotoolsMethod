    @Test
    public void testHarvestHeteroUTM() throws Exception {
        File indexer = TestData.file(this, "hetero_utm/indexer.properties");
        File utm32n = TestData.file(this, "hetero_utm/utm32n.tiff");
        File utm33n = TestData.file(this, "hetero_utm/utm33n.tiff");
        File utm32s = TestData.file(this, "hetero_utm/utm32s.tiff");
        File utm33s = TestData.file(this, "hetero_utm/utm33s.tiff");

        File testStoreDirectory = crsMosaicFolder.newFolder("harvestHeteroUtm");
        FileUtils.copyFile(utm32n, new File(testStoreDirectory, utm32n.getName()));
        FileUtils.copyFile(indexer, new File(testStoreDirectory, indexer.getName()));

        // setup reader and check initial status
        ImageMosaicReader reader = new ImageMosaicReader(testStoreDirectory);
        Assert.assertNotNull(reader);
        assertExpectedBounds(new ReferencedEnvelope(11, 12, 0, 1, WGS84), reader);
        assertExpectedMosaic(reader, "hetero_utm_results/topleft.png");

        // update and check
        assertEquals(1, reader.harvest(null, utm33n, null).size());
        assertExpectedBounds(new ReferencedEnvelope(11, 13, 0, 1, WGS84), reader);
        assertExpectedMosaic(reader, "hetero_utm_results/top.png");

        // update and check
        assertEquals(1, reader.harvest(null, utm32s, null).size());
        assertExpectedBounds(new ReferencedEnvelope(11, 13, -1, 1, WGS84), reader);
        assertExpectedMosaic(reader, "hetero_utm_results/top_bottoleft.png");

        // update and check
        assertEquals(1, reader.harvest(null, utm33s, null).size());
        assertExpectedBounds(new ReferencedEnvelope(11, 13, -1, 1, WGS84), reader);
        assertExpectedMosaic(reader, "hetero_utm_results/full.png");

        reader.dispose();
    }

