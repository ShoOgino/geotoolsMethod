    public void testSingle(File expectedOutput) throws Exception {
        ImageMosaicReader reader = new ImageMosaicReader(testMosaicUrl, hints);

        // read a small grid geometry that will only catch one feature
        GridGeometry2D readGeometry =
                new GridGeometry2D(
                        new GridEnvelope2D(0, 0, 300, 300),
                        new ReferencedEnvelope(
                                -0.667, -0.640, 0.386, 0.412, DefaultGeographicCRS.WGS84));

        // test with no EGR
        GeneralParameterValue[] readParams =
                getFootprintReadParams(
                        reader,
                        new SimpleEntry<>(ImageMosaicFormat.READ_GRIDGEOMETRY2D, readGeometry),
                        new SimpleEntry<>(ImageMosaicFormat.SORT_BY, "z D"));
        testOutputCoverage(reader, readParams, expectedOutput);

        // test with EGR, should be the same, all features are essential
        readParams =
                getFootprintReadParams(
                        reader,
                        new SimpleEntry<>(ImageMosaicFormat.READ_GRIDGEOMETRY2D, readGeometry),
                        new SimpleEntry<>(ImageMosaicFormat.SORT_BY, "z D"),
                        new SimpleEntry<>(
                                ImageMosaicFormat.EXCESS_GRANULE_REMOVAL, ExcessGranulePolicy.ROI));
        testOutputCoverage(reader, readParams, expectedOutput, "0_large.tiff");

        // test with EGR and MT
        readParams =
                getFootprintReadParams(
                        reader,
                        new SimpleEntry<>(ImageMosaicFormat.READ_GRIDGEOMETRY2D, readGeometry),
                        new SimpleEntry<>(ImageMosaicFormat.SORT_BY, "z D"),
                        new SimpleEntry<>(
                                ImageMosaicFormat.EXCESS_GRANULE_REMOVAL, ExcessGranulePolicy.ROI),
                        new SimpleEntry<>(ImageMosaicFormat.ALLOW_MULTITHREADING, true));
        testOutputCoverage(reader, readParams, expectedOutput, "0_large.tiff");
    }

