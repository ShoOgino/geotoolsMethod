    /**
     * Test if empty mosaic with caching can be read
     *
     * @author Hendrik Peilke
     */
    @Test
    public void testEmptyShapefileMosaicWithCaching() throws Exception {
        // get some test data
        final File testMosaic = TestData.file(this, "/empty_mosaic/empty_mosaic_with_caching.shp");
        assertTrue(testMosaic.exists());

        final ImageMosaicReader reader = new ImageMosaicFormat().getReader(testMosaic);

        // manager should have an empty bbox
        final RasterManager manager = reader.getRasterManager(reader.getGridCoverageNames()[0]);
        assertTrue(manager.spatialDomainManager.coverageBBox.isEmpty());

        // reading the mosaic with its own envelope (should be empty, so the request will be emtpy)
        // this should return an empty coverage
        ParameterValue<GridGeometry2D> gg = AbstractGridFormat.READ_GRIDGEOMETRY2D.createValue();
        GeneralEnvelope envelope = reader.getOriginalEnvelope();
        Rectangle rasterArea = ((GridEnvelope2D) reader.getOriginalGridRange());
        GridEnvelope2D range = new GridEnvelope2D(rasterArea);
        gg.setValue(new GridGeometry2D(range, envelope));
        GridCoverage2D coverage = reader.read(new GeneralParameterValue[] {gg});
        assertNull(coverage);

        // read without parameters, should also give null, since the bbox of the coverage is used
        coverage = reader.read(null);
        assertNull(coverage);

        // use more complex parameters and own bbox
        final ParameterValue<Boolean> useJai = AbstractGridFormat.USE_JAI_IMAGEREAD.createValue();
        useJai.setValue(false);
        final ParameterValue<String> tileSize =
                AbstractGridFormat.SUGGESTED_TILE_SIZE.createValue();
        tileSize.setValue("128,128");
        final ParameterValue<double[]> bkg = ImageMosaicFormat.BACKGROUND_VALUES.createValue();
        bkg.setValue(new double[] {-9999.0});
        gg = AbstractGridFormat.READ_GRIDGEOMETRY2D.createValue();
        Envelope2D env = new Envelope2D(reader.getCoordinateReferenceSystem(), 0, 0, 1000, 1000);
        GridGeometry2D gg2D =
                new GridGeometry2D(new GridEnvelope2D(0, 0, 100, 100), (Envelope) env);
        gg.setValue(gg2D);
        coverage = reader.read(new GeneralParameterValue[] {bkg, gg, useJai, tileSize});
        assertNull(coverage);

        reader.dispose();
    }

