    @Test
    public void testRequestHole() throws Exception {
        // copy the footprints mosaic over
        FileUtils.copyDirectory(footprintsSource, testMosaic);
        Properties p = new Properties();
        p.put(FootprintInsetPolicy.INSET_PROPERTY, "0.1");
        saveFootprintProperties(p);
        final AbstractGridFormat format = TestUtils.getFormat(testMosaicUrl);
        ImageMosaicReader reader = TestUtils.getReader(testMosaicUrl, format);
        reader.dispose();
        // get rid of the sample image
        File sampleImage = new File(testMosaic, Utils.SAMPLE_IMAGE_NAME);
        sampleImage.delete();
        // a new reader without the sample image, in normal conditions it can actually produce
        // output
        reader = TestUtils.getReader(testMosaicUrl, format);

        // activate footprint management
        GeneralParameterValue[] params = new GeneralParameterValue[3];
        ParameterValue<String> footprintManagement = AbstractGridFormat.FOOTPRINT_BEHAVIOR
                .createValue();
        footprintManagement.setValue(FootprintBehavior.Transparent.name());
        params[0] = footprintManagement;

        // this prevents us from having problems with link to files still open.
        ParameterValue<Boolean> jaiImageRead = ImageMosaicFormat.USE_JAI_IMAGEREAD.createValue();
        jaiImageRead.setValue(false);
        params[1] = jaiImageRead;

        // limit yourself to reading just a bit of it
        MathTransform mt = reader.getOriginalGridToWorld(PixelInCell.CELL_CENTER);
        GridEnvelope2D ge = new GridEnvelope2D(6, 44, 1, 1);
        final ParameterValue<GridGeometry2D> gg = AbstractGridFormat.READ_GRIDGEOMETRY2D
                .createValue();
        gg.setValue(new GridGeometry2D(ge, mt, DefaultGeographicCRS.WGS84));
        params[2] = gg;

        // read the first time, no sample_image yet present
        GridCoverage2D coverage = reader.read(params);
        reader.dispose();
        assertNotNull(coverage);
        RenderedImage ri = coverage.getRenderedImage();
        assertNotEquals(Transparency.OPAQUE, ri.getColorModel().getTransparency());
        reader.dispose();
        
        // read a second time
        reader = TestUtils.getReader(testMosaicUrl, format);
        coverage = reader.read(params);
        reader.dispose();
        assertNotNull(coverage);
        ri = coverage.getRenderedImage();
        assertNotEquals(Transparency.OPAQUE, ri.getColorModel().getTransparency());
        reader.dispose();
    }

