    @Test
    public void testCogMosaicDefaultConfig() throws Exception {
        File workDir = new File(TestData.file(this, "."), "default");
        workDir = new File(workDir, "cogtest");
        if (!workDir.mkdirs()) {
            FileUtils.deleteDirectory(workDir);
            assertTrue("Unable to create workdir:" + workDir, workDir.mkdirs());
        }
        FileUtils.copyFile(TestData.file(this, "cogtest.zip"), new File(workDir, "cogtest.zip"));
        TestData.unzipFile(this, "default/cogtest/cogtest.zip");
        File file = new File(workDir, "cogtest.properties");
        Properties properties = new Properties();
        try (FileInputStream fin = new FileInputStream(file)) {
            properties.load(fin);
        }

        try (FileWriter fw = new FileWriter(file)) {
            assertNotNull(properties.remove("CogRangeReader"));
            assertNotNull(properties.remove("SuggestedSPI"));
            properties.store(fw, "");
        }

        ImageMosaicFormat format = new ImageMosaicFormat();
        ImageMosaicReader reader = format.getReader(workDir);
        GridCoverage2D coverage = reader.read(null);
        assertNotNull(coverage);
        RenderedImage image = coverage.getRenderedImage();
        int numTileX = image.getNumXTiles();
        int numTileY = image.getNumYTiles();
        Raster raster = image.getTile(numTileX / 2, numTileY / 2);
        assertEquals(512, raster.getWidth());
        assertEquals(512, raster.getHeight());
        assertEquals(1, raster.getNumBands());
        reader.dispose();
    }

