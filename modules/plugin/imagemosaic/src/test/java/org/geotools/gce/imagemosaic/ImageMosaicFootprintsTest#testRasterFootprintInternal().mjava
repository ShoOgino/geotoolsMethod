    @Test
    public void testRasterFootprintInternal() throws Exception {
        // Raster
        File testMosaicRaster = new File(TestData.file(this, "."), "footprintRaster");
        if (testMosaicRaster.exists()) {
            FileUtils.deleteDirectory(testMosaicRaster);
        }

        // Reading Coverage with Raster footprint
        GridCoverage2D coverage = readRasterFootprint("rastermask2", testMosaicRaster, false);

        // Evaluate results
        byte[] results = new byte[4];
        DirectPosition2D position = new DirectPosition2D();
        // Should be 0
        position.setLocation(-86.724, 25.085);
        results = coverage.evaluate(position, results);
        assertEquals(results[0], 0);
        assertEquals(results[1], 0);
        assertEquals(results[2], 0);
        assertEquals(results[3], 0);
        // Should be > 0
        position.setLocation(-86.252, 27.7984);
        results = coverage.evaluate(position, results);
        assertNotEquals(results[0], 0);
        assertNotEquals(results[1], 0);
        assertNotEquals(results[2], 0);
        assertNotEquals(results[3], 0);
        // Should be 0
        position.setLocation(-87.937, 26.144);
        results = coverage.evaluate(position, results);
        assertEquals(results[0], 0);
        assertEquals(results[1], 0);
        assertEquals(results[2], 0);
        assertEquals(results[3], 0);
        // Should be > 0
        position.setLocation(-89.084, 27.133);
        results = coverage.evaluate(position, results);
        assertNotEquals(results[0], 0);
        assertNotEquals(results[1], 0);
        assertNotEquals(results[2], 0);
        assertNotEquals(results[3], 0);
        // Should be 0
        position.setLocation(-89.763, 25.167);
        results = coverage.evaluate(position, results);
        assertEquals(results[0], 0);
        assertEquals(results[1], 0);
        assertEquals(results[2], 0);
        assertEquals(results[3], 0);
    }

