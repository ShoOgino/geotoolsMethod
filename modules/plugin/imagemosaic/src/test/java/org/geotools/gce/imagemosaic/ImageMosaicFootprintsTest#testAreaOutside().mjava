    @Test
    public void testAreaOutside() throws Exception {
        // copy the footprints mosaic over
        FileUtils.copyDirectory(footprintsSource, testMosaic);
        Properties p = new Properties();
        p.put(FootprintInsetPolicy.INSET_PROPERTY, "0.1"); 
        saveFootprintProperties(p);
        final AbstractGridFormat format = TestUtils.getFormat(testMosaicUrl);
        final ImageMosaicReader reader = TestUtils.getReader(testMosaicUrl, format);     
        
        // activate footprint management
        GeneralParameterValue[] params = new GeneralParameterValue[3];
        ParameterValue<String> footprintManagement = AbstractGridFormat.FOOTPRINT_BEHAVIOR.createValue();
        footprintManagement.setValue(FootprintBehavior.Transparent.name());
        params[0] = footprintManagement;
        
        // this prevents us from having problems with link to files still open.
        ParameterValue<Boolean> jaiImageRead = ImageMosaicFormat.USE_JAI_IMAGEREAD.createValue();
        jaiImageRead.setValue(false); 
        params[1] = jaiImageRead;
        
        // limit yourself to reading just a bit of it
        final ParameterValue<GridGeometry2D> gg = AbstractGridFormat.READ_GRIDGEOMETRY2D
                .createValue();
        final Dimension dim = new Dimension();
        dim.setSize(4, 4);
        final Rectangle rasterArea = ((GridEnvelope2D) reader.getOriginalGridRange());
        rasterArea.setSize(dim);
        rasterArea.x = 0;
        rasterArea.y = (int) (rasterArea.getHeight() / 2);
        final GridEnvelope2D range = new GridEnvelope2D(rasterArea);
        gg.setValue(new GridGeometry2D(range, PixelInCell.CELL_CENTER,reader.getOriginalGridToWorld(PixelInCell.CELL_CENTER),reader.getCoordinateReferenceSystem(),null));
        params[2]=gg;
        
        GridCoverage2D coverage = reader.read(params);
        reader.dispose();
        assertNotNull(coverage);
        
        // check the ROI is there
        RenderedImage ri = coverage.getRenderedImage();
        Object roiCandidate = ri.getProperty("ROI");
        assertTrue(roiCandidate instanceof ROI);
        // empty ROI
        ROI roi = (ROI) roiCandidate;
        assertFalse(roi.intersects(ri.getMinX(), ri.getMinY(), ri.getWidth(), ri.getHeight()));

    }

