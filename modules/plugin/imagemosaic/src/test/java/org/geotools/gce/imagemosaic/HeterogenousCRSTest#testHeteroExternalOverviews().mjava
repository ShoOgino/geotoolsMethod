    @Test
    public void testHeteroExternalOverviews() throws Exception {
        String testLocation = "hetero_s2_ovr";
        URL storeUrl = TestData.url(this, testLocation);

        File testDataFolder = new File(storeUrl.toURI());
        File testDirectory = crsMosaicFolder.newFolder(testLocation);
        FileUtils.copyDirectory(testDataFolder, testDirectory);

        ImageMosaicReader imReader = new ImageMosaicReader(testDirectory, null);
        Assert.assertNotNull(imReader);

        // check what gets used for source file for native resolution
        List<String> filesNativeRes = getSourceFilesForParams(imReader);
        assertThat(filesNativeRes, containsInAnyOrder("g1.tif", "g2.tif", "g4.tif", "g3.tif"));

        // check what gets used for source file at half resolution
        ParameterValue<GridGeometry2D> ggp = AbstractGridFormat.READ_GRIDGEOMETRY2D.createValue();
        GridEnvelope originalRange = imReader.getOriginalGridRange();
        GridEnvelope readRange =
                new GridEnvelope2D(
                        0, 0, originalRange.getSpan(0) / 4, originalRange.getSpan(1) / 4);
        GridGeometry2D gg = new GridGeometry2D(readRange, imReader.getOriginalEnvelope());
        ggp.setValue(gg);
        List<String> filesExtOvr = getSourceFilesForParams(imReader, ggp);
        assertThat(
                filesExtOvr,
                containsInAnyOrder("g1.tif.ovr", "g2.tif.ovr", "g4.tif.ovr", "g3.tif.ovr"));

        imReader.dispose();
    }

