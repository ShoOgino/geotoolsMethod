    private GridCoverage2D readCoverageInDateRange(
            ImageMosaicReader reader, String start, String end) throws Exception {
        final ParameterValue<List> time = ImageMosaicFormat.TIME.createValue();
        Date s = parseTimeStamp(start);
        Date e = parseTimeStamp(end);
        DateRange range = new DateRange(s, e);
        time.setValue(Arrays.asList(range));

        // use imageio with defined tiles
        final ParameterValue<Boolean> useJai = AbstractGridFormat.USE_JAI_IMAGEREAD.createValue();
        useJai.setValue(false);

        final ParameterValue<List> elevation = ImageMosaicFormat.ELEVATION.createValue();
        elevation.setValue(
                new ArrayList<Double>() {
                    {
                        add(34d); // Elevation
                    }
                });

        // specify additional Dimensions
        Set<ParameterDescriptor<List>> params = reader.getDynamicParameters();
        ParameterValue<List<String>> waveLength = null;
        final String selectedWaveLength = "20";
        for (ParameterDescriptor param : params) {
            if (param.getName().getCode().equalsIgnoreCase("WAVELENGTH")) {
                @SuppressWarnings("unchecked")
                ParameterValue<List<String>> value = (ParameterValue) param.createValue();
                waveLength = value;
                waveLength.setValue(
                        new ArrayList<String>() {
                            {
                                add(selectedWaveLength);
                            }
                        });
            }
        }
        assertNotNull(waveLength);

        GeneralParameterValue[] values =
                new GeneralParameterValue[] {useJai, time, waveLength, elevation};
        return TestUtils.getCoverage(reader, values, false);
    }

