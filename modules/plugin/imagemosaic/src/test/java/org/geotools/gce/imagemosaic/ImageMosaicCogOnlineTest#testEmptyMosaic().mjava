    /** Simple test method to test emptyMosaic creation support followed by harvesting a URL */
    @Test
    public void testEmptyMosaic() throws Exception {
        final File workDir = prepareWorkingDir("emptycog.zip", "emptyCogMosaic", "");
        try (FileWriter out =
                new FileWriter(
                        new File(
                                TestData.file(this, "."),
                                "/emptyCogMosaic/datastore.properties"))) {
            out.write("database=cogmosaic\n");
            out.write(ImageMosaicReaderTest.H2_SAMPLE_PROPERTIES);
            out.flush();
        }
        ImageMosaicReader reader = IMAGE_MOSAIC_FORMAT.getReader(workDir);
        GranuleCatalog originalCatalog = reader.granuleCatalog;

        try {
            // now go and harvest a granule
            String granuleUrl =
                    "https://s3-us-west-2.amazonaws.com/landsat-pds/c1/L8/153/075/LC08_L1TP_153075_20190515_20190515_01_RT/LC08_L1TP_153075_20190515_20190515_01_RT_B3.TIF";
            URL source = new URL(granuleUrl);
            List<HarvestedSource> summary = reader.harvest(null, source, null);
            assertSame(originalCatalog, reader.granuleCatalog);
            assertEquals(1, summary.size());

            // check the granule catalog
            String coverageName = reader.getGridCoverageNames()[0];
            GranuleSource granules = reader.getGranules(coverageName, true);
            assertEquals(1, granules.getCount(Query.ALL));
            Query q = new Query(Query.ALL);
            try (SimpleFeatureIterator fi = granules.getGranules(q).features()) {
                assertTrue(fi.hasNext());
                SimpleFeature f = fi.next();
                assertEquals(granuleUrl, f.getAttribute("location"));
            }

        } finally {
            reader.dispose();
        }
    }

