    /**
     * Test if empty mosaic can be read and granules can be added and read
     *
     * @author Hendrik Peilke
     */
    @Test
    public void testEmptyShapefileMosaic() throws Exception {
        // get some test data
        final File testMosaic = TestData.file(this, "/empty_mosaic/empty_mosaic.shp");
        assertTrue(testMosaic.exists());

        ImageMosaicReader reader = new ImageMosaicFormat().getReader(testMosaic);

        // remove cached granules on error and reload
        reader.granuleCatalog.removeGranules(
                new Query("empty_mosaic", Filter.INCLUDE), Transaction.AUTO_COMMIT);
        reader.dispose();
        reader = new ImageMosaicFormat().getReader(testMosaic);

        // manager should have an empty bbox
        final RasterManager manager = reader.getRasterManager(reader.getGridCoverageNames()[0]);
        assertTrue(manager.spatialDomainManager.coverageBBox.isEmpty());

        // reading the mosaic with its own envelope (should be empty, so the request will be emtpy)
        // this should return an empty coverage
        ParameterValue<GridGeometry2D> gg = AbstractGridFormat.READ_GRIDGEOMETRY2D.createValue();
        GeneralEnvelope envelope = reader.getOriginalEnvelope();
        Rectangle rasterArea = ((GridEnvelope2D) reader.getOriginalGridRange());
        GridEnvelope2D range = new GridEnvelope2D(rasterArea);
        gg.setValue(new GridGeometry2D(range, envelope));
        GridCoverage2D coverage = reader.read(new GeneralParameterValue[] {gg});
        assertNull(coverage);

        // read without parameters, should also give null, since the bbox of the coverage is used
        coverage = reader.read(null);
        assertNull(coverage);

        // use more complex parameters and own bbox --> should also return null coverage
        final ParameterValue<Boolean> useJai = AbstractGridFormat.USE_JAI_IMAGEREAD.createValue();
        useJai.setValue(false);
        final ParameterValue<String> tileSize =
                AbstractGridFormat.SUGGESTED_TILE_SIZE.createValue();
        tileSize.setValue("128,128");
        final ParameterValue<double[]> bkg = ImageMosaicFormat.BACKGROUND_VALUES.createValue();
        bkg.setValue(new double[] {-9999.0});
        gg = AbstractGridFormat.READ_GRIDGEOMETRY2D.createValue();
        Envelope2D env = new Envelope2D(reader.getCoordinateReferenceSystem(), 0, 0, 1000, 1000);
        GridGeometry2D gg2D =
                new GridGeometry2D(new GridEnvelope2D(0, 0, 100, 100), (Envelope) env);
        gg.setValue(gg2D);
        coverage = reader.read(new GeneralParameterValue[] {bkg, gg, useJai, tileSize});
        assertNull(coverage);

        // now add a granule, reinitialize and test the opposite...
        SimpleFeatureType granuleType =
                reader.granuleCatalog.getType(reader.granuleCatalog.getTypeNames()[0]);
        GeometryFactory gf = new GeometryFactory();
        SimpleFeatureBuilder sFB = new SimpleFeatureBuilder(granuleType);
        SimpleFeature f = sFB.buildFeature(null);
        f.setAttribute("location", "addedGranule.tif");
        LinearRing shell =
                gf.createLinearRing(
                        new Coordinate[] {
                            new Coordinate(0, 0),
                            new Coordinate(0, 5903),
                            new Coordinate(5662, 5903),
                            new Coordinate(5662, 0),
                            new Coordinate(0, 0)
                        });
        f.setDefaultGeometry(gf.createPolygon(shell));
        List<SimpleFeature> granules = new LinkedList<SimpleFeature>();
        granules.add(f);
        reader.granuleCatalog.addGranules("empty_mosaic", granules, null);
        manager.initialize(false);

        // manager should now have no empty bbox
        assertFalse(manager.spatialDomainManager.coverageBBox.isEmpty());

        // read without parameters, should give back the whole coverage
        coverage = reader.read(null);
        assertNotNull(coverage);
        assertNotNull(coverage.getRenderedImage());
        coverage.dispose(true);

        // use more complex parameters and own bbox --> should also return a coverage
        coverage = reader.read(new GeneralParameterValue[] {bkg, gg, useJai, tileSize});
        assertNotNull(coverage);
        assertNotNull(coverage.getRenderedImage());
        coverage.dispose(true);

        // now remove granule, reinitialize and test the first tests again
        reader.granuleCatalog.removeGranules(
                new Query("empty_mosaic", Filter.INCLUDE), Transaction.AUTO_COMMIT);
        manager.initialize(false);

        // manager should have an empty bbox
        assertTrue(manager.spatialDomainManager.coverageBBox.isEmpty());

        // read without parameters, should give back a null coverage
        coverage = reader.read(null);
        assertNull(coverage);

        // use more complex parameters and own bbox --> should also return a null coverage
        coverage = reader.read(new GeneralParameterValue[] {bkg, gg, useJai, tileSize});
        assertNull(coverage);

        reader.dispose();
    }

