    @Test
    public void testGIFSupportFiles() throws Exception {
        final AbstractGridFormat format = TestUtils.getFormat(indexURL);
        ImageMosaicReader reader = getReader(indexURL, format);
        ResourceInfo info = reader.getInfo(reader.getGridCoverageNames()[0]);
        assertTrue(info instanceof FileResourceInfo);
        FileResourceInfo fileInfo = (FileResourceInfo) info;
        try (CloseableIterator<FileGroup> files = fileInfo.getFiles(null)) {
            List<FileGroup> fileGroups = new ArrayList<>();
            Set<File> mainFiles = new HashSet<>();
            Set<File> supportFiles = new HashSet<>();
            while (files.hasNext()) {
                FileGroup group = files.next();
                fileGroups.add(group);
                mainFiles.add(group.getMainFile());
                supportFiles.addAll(group.getSupportFiles());
            }
            assertEquals(3, fileGroups.size());
            assertEquals(3, mainFiles.size());
            assertEquals(6, supportFiles.size());
            File dir = URLs.urlToFile(indexURL);
            String[] mainFilesPaths = dir.list(FileFilterUtils.suffixFileFilter(".gif"));
            String[] supportFilesPaths =
                    dir.list(
                            FileFilterUtils.and(
                                    FileFilterUtils.or(
                                            FileFilterUtils.suffixFileFilter(".prj"),
                                            FileFilterUtils.suffixFileFilter(".wld")),
                                    FileFilterUtils.notFileFilter(
                                            FileFilterUtils.prefixFileFilter("index"))));
            for (String filePath : mainFilesPaths) {
                final File myFile = new File(dir, filePath);
                assertTrue(mainFiles.contains(myFile));
            }
            for (String filePath : supportFilesPaths) {
                final File myFile = new File(dir, filePath);
                assertTrue(supportFiles.contains(myFile));
            }
        }
        reader.dispose();
    }

