    @Test
    @Ignore
    public void testExistingOracleSchema() throws Exception {

        final String folder = "mosaictemp";
        final String zipFile = "mosaictemp.zip";
        final File workDir = new File(TestData.file(this, "."), folder);
        if (!workDir.mkdir()) {
            FileUtils.deleteDirectory(workDir);
            assertTrue("Unable to create workdir:" + workDir, workDir.mkdir());
        }
        FileUtils.copyFile(TestData.file(this, zipFile), new File(workDir, zipFile));
        TestData.unzipFile(this, folder + File.separatorChar + zipFile);
        final URL timeElevURL = fileToUrl(workDir);
        //

        // now start the test
        AbstractGridFormat format = TestUtils.getFormat(timeElevURL);
        assertNotNull(format);
        ImageMosaicReader reader = TestUtils.getReader(timeElevURL, format);
        assertNotNull(reader);

        reader.dispose();

        // append the parameter to the indexer.properties
        FileWriter out = null;
        try {
            out =
                    new FileWriter(
                            new File(
                                    TestData.file(this, "."),
                                    folder + File.separatorChar + "indexer.properties"),
                            true);
            out.write("UseExistingSchema=true\n");
            out.flush();
        } finally {
            if (out != null) {
                IOUtils.closeQuietly(out);
            }
        }

        // remove existing properties file and sample_image
        File sampleImage =
                new File(
                        TestData.file(this, "."),
                        folder + File.separatorChar + Utils.SAMPLE_IMAGE_NAME);
        File mosaicProperties =
                new File(
                        TestData.file(this, "."),
                        folder + File.separatorChar + folder + ".properties");

        // now start the test
        format = TestUtils.getFormat(timeElevURL);
        assertNotNull(format);
        reader = TestUtils.getReader(timeElevURL, format);
        assertNotNull(reader);

        // the mosaic is correctly created
        assertTrue(sampleImage.exists());
        assertTrue(mosaicProperties.exists());

        // clean up
        reader.dispose();
        if (!INTERACTIVE) {
            FileUtils.deleteDirectory(TestData.file(this, folder));
        }
    }

