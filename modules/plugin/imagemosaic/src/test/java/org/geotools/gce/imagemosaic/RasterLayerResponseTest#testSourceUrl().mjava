    /**
     * Test that {@link GridCoverage2DReader#SOURCE_URL_PROPERTY} is correctly set on a coverage
     * created by {@link RasterLayerResponse}.
     */
    @Test
    public void testSourceUrl() throws Exception {
        final URL testMosaic = TestData.url(this, "heterogeneous");
        ImageMosaicReader reader = null;
        try {
            reader = new ImageMosaicFormat().getReader(testMosaic, null);
            ParameterValue<GridGeometry2D> gg =
                    AbstractGridFormat.READ_GRIDGEOMETRY2D.createValue();
            GeneralEnvelope envelope = reader.getOriginalEnvelope();
            Dimension dim = new Dimension();
            dim.setSize(10, 20);
            Rectangle rasterArea = ((GridEnvelope2D) reader.getOriginalGridRange());
            rasterArea.setSize(dim);
            GridEnvelope2D range = new GridEnvelope2D(rasterArea);
            gg.setValue(new GridGeometry2D(range, envelope));
            RasterManager manager = reader.getRasterManager(reader.getGridCoverageNames()[0]);
            RasterLayerRequest request =
                    new RasterLayerRequest(new GeneralParameterValue[] {gg}, manager);
            RasterLayerResponse response =
                    new RasterLayerResponse(
                            request, manager, new DefaultSubmosaicProducerFactory());
            GridCoverage2D coverage = response.createResponse();
            URL sourceUrl = (URL) coverage.getProperty(GridCoverage2DReader.SOURCE_URL_PROPERTY);
            assertNotNull(sourceUrl);
            assertEquals("file", sourceUrl.getProtocol());
            assertTrue(sourceUrl.getPath().endsWith(".tif"));
        } finally {
            if (reader != null) {
                try {
                    reader.dispose();
                } catch (Throwable t) {
                    // we tried
                }
            }
        }
    }

