    private void testMosaic(String testLocation, String sortOrder, String resultLocation,
        String expectedCRS, GeneralParameterValue... params)
        throws URISyntaxException, IOException {

        ImageMosaicReader imReader = getTestMosaic(testLocation);
        
        // check it advertises the mixed crs 
        assertEquals("true", imReader.getMetadataValue(GridCoverage2DReader.MULTICRS_READER));

        //hack workaround for the store not being created with a consistent CRS in certain
        //environments.
        assertEquals(CRS.toSRS(imReader.getCoordinateReferenceSystem()), expectedCRS);
        Collection<GeneralParameterValue> finalParamsCollection =
            new ArrayList<>(Arrays.asList(params));

        //Let's do a sort order to get the correct results
        ParameterValue<String> sortByParam = ImageMosaicFormat.SORT_BY.createValue();
        sortByParam.setValue(sortOrder);

        finalParamsCollection.add(sortByParam);

        GridCoverage2D gc2d = imReader
            .read(finalParamsCollection.toArray(new GeneralParameterValue[]{}));
        assertEquals(CRS.toSRS(gc2d.getCoordinateReferenceSystem()), expectedCRS);

        if (resultLocation != null) {
            RenderedImage renderImage = gc2d.getRenderedImage();
            File resultsFile = testFile(resultLocation);

            //number 1000 was a bit arbitrary for differences, should account for small differences in
            //interpolation and such, but not the reprojection of the blue tiff. Correct and incorrect
            //images will be pretty similar anyway
            ImageAssert.assertEquals(resultsFile, renderImage, 1000);
        }
    }

