    /**
     * Constructor for the {@link GranuleDescriptor}
     *
     * @param feature a {@link SimpleFeature} referring to that granule
     * @param suggestedSPI the suggested {@link ImageReaderSpi} to be used to get a reader to handle
     *     this granule.
     * @param pathType A {@link PathType} identifying if the granule location should be resolved as
     *     a relative or an absolute path.
     * @param locationAttribute the attribute containing the granule location.
     * @param parentLocation the location of the parent of that granule.
     * @param heterogeneousGranules if {@code true}, this granule belongs to a set of heterogeneous
     *     granules
     */
    public GranuleDescriptor(
            final SimpleFeature feature,
            final AbstractGridFormat suggestedFormat,
            final ImageReaderSpi suggestedSPI,
            final ImageInputStreamSpi suggestedIsSPI,
            final PathType pathType,
            final String locationAttribute,
            final String parentLocation,
            final MultiLevelROI roiProvider,
            final boolean heterogeneousGranules,
            final Hints hints) {
        // Get location and envelope of the image to load.
        final String granuleLocation = (String) feature.getAttribute(locationAttribute);
        final ReferencedEnvelope granuleBBox = getFeatureBounds(feature);

        // If the granuleDescriptor is not there, dump a message and continue
        final URL rasterFile = pathType.resolvePath(parentLocation, granuleLocation);
        if (rasterFile == null) {
            throw new IllegalArgumentException(
                    Errors.format(
                            ErrorKeys.ILLEGAL_ARGUMENT_$2, "granuleLocation", granuleLocation));
        }
        if (LOGGER.isLoggable(Level.FINE)) LOGGER.fine("File found " + granuleLocation);

        this.originator = feature;
        init(
                granuleBBox,
                rasterFile,
                suggestedFormat,
                suggestedSPI,
                suggestedIsSPI,
                roiProvider,
                heterogeneousGranules,
                false,
                hints);
    }

