    private void createTiles(int w, int h, int tw, int th, AffineTransform w2s) {
        int colnum = w / tw;

        int rownum = h / th;

        // create main tiles list
        activeTiles = new LinkedList<>();
        for (int col = 0; col < colnum; col++) {
            for (int row = 0; row < rownum; row++) {
                Tile tile = new Tile(tileWidth, tileHeight, col, row, w2s);
                activeTiles.add(tile);
            }
        }

        // add smaller last row and column if needed
        if ((w % tw) != 0) {
            for (int row = 0; row < rownum; row++) {
                Tile tile = new Tile(w % tw, tileHeight, colnum, row, w2s, tileWidth, tileHeight);
                activeTiles.add(tile);
            }
        }

        if ((h % th) != 0) {
            for (int col = 0; col < colnum; col++) {
                Tile tile = new Tile(tileWidth, h % th, col, rownum, w2s, tileWidth, tileHeight);
                activeTiles.add(tile);
            }
        }

        // add the rightmost lower cut tile
        if (((w % tw) != 0) && ((h % th) != 0)) {
            Tile tile = new Tile(w % tw, h % th, colnum, rownum, w2s, tileWidth, tileHeight);
            activeTiles.add(tile);
        }
    }

