    protected boolean acceptGranule(GranuleDescriptor granuleDescriptor) {
        Object imageIndex = granuleDescriptor.getOriginator().getAttribute("imageindex");

        if (imageIndex != null && imageIndex instanceof Integer) {
            rasterLayerResponse.setImageChoice((Integer) imageIndex);
        }

        final GranuleLoader loader = new GranuleLoader(rasterLayerResponse.getBaseReadParameters(),
                rasterLayerResponse.getImageChoice(), rasterLayerResponse.getMosaicBBox(),
                rasterLayerResponse.getFinalWorldToGridCorner(), granuleDescriptor,
                rasterLayerResponse.getRequest(), rasterLayerResponse.getHints());
        if (!dryRun) {
            if (rasterLayerResponse.isMultithreadingAllowed() && rasterLayerResponse
                    .getRasterManager().getParentReader().getMultiThreadedLoader() != null) {
                // MULTITHREADED EXECUTION submitting the task
                granulesFutures.add(rasterLayerResponse.getRasterManager().getParentReader()
                        .getMultiThreadedLoader().submit(loader));
            } else {
                // SINGLE THREADED Execution, we defer the execution to when we have done the loading
                final FutureTask<GranuleDescriptor.GranuleLoadingResult> task = new FutureTask<>(
                        loader);
                granulesFutures.add(task);
                task.run(); // run in current thread
            }
        }
        if (LOGGER.isLoggable(Level.FINE)) {
            LOGGER.fine("We added the granule " + granuleDescriptor.toString());
        }

        // we added it
        granulesNumber++;
        return true;
    }

