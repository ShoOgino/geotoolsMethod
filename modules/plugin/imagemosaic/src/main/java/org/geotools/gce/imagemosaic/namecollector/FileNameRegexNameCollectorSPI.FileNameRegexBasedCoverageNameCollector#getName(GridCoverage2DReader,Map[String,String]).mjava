        @Override
        public String getName(GridCoverage2DReader reader, Map<String, String> map) {
            Object source = reader.getSource();
            SourceGetter sourceGetter = new SourceGetter(source);
            final File file = sourceGetter.getFile();
            String path = null;
            if (file == null) {
                if (source instanceof SourceSPIProvider) {
                    SourceSPIProvider provider = (SourceSPIProvider) source;
                    try {
                        path = provider.getSourceUrl().toString();
                    } catch (MalformedURLException e) {
                        throw new IllegalArgumentException(
                                "Unable to retrieve a valid source for the specified reader");
                    }
                    int indexOf = path.lastIndexOf("/");
                    path = path.substring(indexOf + 1);
                } else {
                    throw new IllegalArgumentException(
                            "Unable to retrieve a valid source file" + " for the specified reader");
                }
            } else {
                path = file.getAbsolutePath();
            }
            String baseName = FilenameUtils.getBaseName(path);
            final Matcher matcher = pattern.matcher(baseName);
            // Take the first match
            if (matcher.find()) {
                // Chaining group Strings together
                int count = matcher.groupCount();
                String match = "";
                for (int i = 1; i <= count; i++) {
                    match += matcher.group(i);
                }
                return match;
            }
            throw new IllegalArgumentException("Unable to retrieve the coverageName");
        }

