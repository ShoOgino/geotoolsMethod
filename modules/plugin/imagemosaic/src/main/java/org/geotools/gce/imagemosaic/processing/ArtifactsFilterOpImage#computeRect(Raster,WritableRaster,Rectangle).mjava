    private void computeRect(final Raster sources, final WritableRaster destinationRaster, final Rectangle destRect) {
        // Clear the background and return if no sources.
        if (sources == null) {
            ImageUtil.fillBackground(destinationRaster, destRect, backgroundValues);
            return;
        }

        // Determine the format tag id.
        final SampleModel[] sourceSM = new SampleModel[] { sources.getSampleModel() };
        final int formatTagID = RasterAccessor.findCompatibleTag(sourceSM, destinationRaster.getSampleModel());

        // Create dest accessor.
        final RasterAccessor rasterAccessor = new RasterAccessor(destinationRaster, destRect,
                new RasterFormatTag(destinationRaster.getSampleModel(), formatTagID), null);

        final int dataType = rasterAccessor.getDataType();
        // Branch to data type-specific method.
        switch (dataType) {
        case DataBuffer.TYPE_BYTE:
            computeRect(rasterAccessor);
            break;
        default:
            throw new UnsupportedOperationException("The following datatype isn't actually supported " + dataType);
        }

        rasterAccessor.copyDataToRaster();
    }

