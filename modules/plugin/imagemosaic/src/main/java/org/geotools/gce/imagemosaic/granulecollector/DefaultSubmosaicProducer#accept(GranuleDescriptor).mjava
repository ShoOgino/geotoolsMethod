    /**
     * This method is responsible for collecting all the granules accepting a certain {@link
     * Filter}.
     *
     * <p>The method return <code>true</code> when a {@link GranuleDescriptor} for which the {@link
     * GranuleDescriptor#originator} {@link SimpleFeature} is evaluated positively by the internal
     * filter and retain the granule, or <code>false</code> otherwise so that the caller can keep
     * trying with a different {@link DefaultSubmosaicProducer}
     *
     * @param granuleDescriptor the {@link GranuleDescriptor} to test with the internal {@link
     *     Filter}
     * @return <code>true</code> in case the {@link GranuleDescriptor} is added, <code>false</code>
     *     otherwise.
     */
    @Override
    public boolean accept(GranuleDescriptor granuleDescriptor) {
        Utilities.ensureNonNull("granuleDescriptor", granuleDescriptor);

        if (granuleFilter.evaluate(granuleDescriptor.getOriginator())) {
            return acceptGranule(granuleDescriptor);
        } else {
            if (LOGGER.isLoggable(Level.FINE)) {
                LOGGER.fine("We filtered out the granule " + granuleDescriptor.toString());
            }
        }
        return false;
    }

