        /**
         * Extract the time domain extrema.
         * 
         * @param extrema a {@link String} either TIME_DOMAIN_MAXIMUM or TIME_DOMAIN_MINIMUM.
         * 
         * @return either TIME_DOMAIN_MAXIMUM or TIME_DOMAIN_MINIMUM as a {@link String}.
         * TODO use num for extrema
         */
        private String getExtrema(String extrema) {
            try {
                String attribute = propertyName;
                // In case the domain has range, we will check the second element 
                // in case we are looking for the maximum
                if (domainType != DomainType.SINGLE_VALUE && extrema.toLowerCase().endsWith("maximum")) {
                        attribute = additionalPropertyName;
                }
                final FeatureCalc visitor = createExtremaQuery(extrema, attribute);
                
                // check result
                CalcResult tempRes = visitor.getResult();
                if (tempRes == null){
                    throw new IllegalStateException("Unable to compute extrema value:"+extrema);
                }
                final Object result=tempRes.getValue();
                if (result == null){
                    throw new IllegalStateException("Unable to compute extrema value:"+extrema);
                }                
                return ConvertersHack.convert(result, String.class);
            } catch (IOException e) {
                if(LOGGER.isLoggable(Level.WARNING))
                        LOGGER.log(Level.WARNING,"Unable to compute extrema for TIME_DOMAIN",e);
                return null;
            }
        }

