    private RenderedImage forceVirtualNativeResolution(
            RenderedImage raster,
            final RasterLayerRequest request,
            final double[] virtualNativeResolution,
            final GranuleOverviewLevelDescriptor selectedlevel,
            final Hints hints) {

        // Setup affine transformation to force the read raster to the requested virtual native
        // resolution
        final AffineTransform virtualTransform =
                XAffineTransform.getScaleInstance(
                        XAffineTransform.getScaleX0(selectedlevel.gridToWorldTransformCorner)
                                / virtualNativeResolution[0],
                        XAffineTransform.getScaleY0(selectedlevel.gridToWorldTransformCorner)
                                / virtualNativeResolution[1]);

        final Dimension tileDimensions = request.getTileDimensions();
        RenderingHints localHints = null;
        if (tileDimensions != null && request.getReadType().equals(ReadType.DIRECT_READ)) {
            final ImageLayout layout = new ImageLayout();
            layout.setTileHeight(tileDimensions.width).setTileWidth(tileDimensions.height);
            localHints = new RenderingHints(JAI.KEY_IMAGE_LAYOUT, layout);
        } else {
            final ImageLayout originalLayout = Utils.getImageLayoutHint(hints);
            if (originalLayout != null) {
                final ImageLayout localLayout = new ImageLayout();
                localLayout.setTileHeight(originalLayout.getTileHeight(null));
                localLayout.setTileWidth(originalLayout.getTileWidth(null));
                localHints = new RenderingHints(JAI.KEY_IMAGE_LAYOUT, localLayout);
            }
        }
        if (localHints == null) {
            localHints = new RenderingHints(null);
        }
        updateLocalHints(hints, localHints);
        localHints.add(ImageUtilities.BORDER_EXTENDER_HINTS);
        ImageWorker worker = new ImageWorker(raster).setRenderingHints(localHints);
        return worker.affine(
                        virtualTransform, request.getInterpolation(), request.getBackgroundValues())
                .getRenderedImage();
    }

