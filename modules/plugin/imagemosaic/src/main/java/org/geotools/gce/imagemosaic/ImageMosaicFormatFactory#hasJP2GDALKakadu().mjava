    private static boolean hasJP2GDALKakadu() {
        try {
            Class<?> cl = Class.forName(GDAL_JP2KAKADU_SPI);
            Class<?> cGdal = Class.forName(GDAL_SPI);
            Object jp2Kak = cl.getDeclaredConstructor().newInstance();
            final Method method = cGdal.getDeclaredMethod("isAvailable", (Class[]) null);
            if (method != null) {
                return (Boolean) method.invoke(jp2Kak, (Object[]) null);
            }
        } catch (ClassNotFoundException
                | InstantiationException
                | InvocationTargetException
                | IllegalAccessException
                | IllegalArgumentException
                | NoSuchMethodException
                | SecurityException e) {
            if (LOGGER.isLoggable(Level.FINE))
                LOGGER.log(Level.FINE, "Unable to load GDAL JP2 Kakadu Reader SPI", e);
        }
        return false;
    }

