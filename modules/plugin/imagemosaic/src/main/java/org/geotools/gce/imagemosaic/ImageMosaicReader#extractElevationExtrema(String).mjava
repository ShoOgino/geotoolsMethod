    /**
     * Extract the elevation domain extrema.
     * 
     * @param metadataName a {@link String} either ELEVATION_DOMAIN_MAXIMUM or ELEVATION_DOMAIN_MINIMUM.
     * 
     * @return either ELEVATION_DOMAIN_MAXIMUM or ELEVATION_DOMAIN_MINIMUM as a {@link String}.
     */
    private String extractElevationExtrema(String metadataName) {
        if(elevationAttribute==null){
            if(LOGGER.isLoggable(Level.INFO))
                LOGGER.info("Requesting extrema on attribute "+metadataName+" when no such an attribute is supported!");
            return null;
        }
        try {
            final FeatureCalc visitor = createExtremaQuery(metadataName,rasterManager.elevationAttribute);
            
            // check result
            final Object result = visitor.getResult().getValue();
            if(result instanceof Number) {
                return result.toString();
            } else {
                return null;
            }
        } catch (IOException e) {
            if(LOGGER.isLoggable(Level.WARNING))
                    LOGGER.log(Level.WARNING,"Unable to compute extrema for ELEVATION_DOMAIN",e);
            return null;
        }
    }

