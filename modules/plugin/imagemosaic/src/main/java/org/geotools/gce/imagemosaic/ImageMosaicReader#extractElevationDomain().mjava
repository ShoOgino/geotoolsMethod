    /**
     * Extract the elevation domain as a comma separated list of string values.
     * @return a {@link String} that contains a comma separated list of values.
     */
    private String extractElevationDomain() {
        if(elevationAttribute==null){
            if(LOGGER.isLoggable(Level.INFO))
                LOGGER.info("Requesting domain on attribute elevation when no such an attribute is supported!");
            return null;
        }
        try {
            final Set<Double> result = extractDomain(elevationAttribute);          
            // check result
            if(result.size()<=0)
                    return null;
            
            final StringBuilder buff= new StringBuilder();
            for(Iterator<Double> it=result.iterator();it.hasNext();){
                    final double value= (Double) it.next();
                    buff.append(value);
                    if(it.hasNext())
                    	buff.append(",");
            }
            return buff.toString();
        } catch (IOException e) {
            if(LOGGER.isLoggable(Level.WARNING))
                    LOGGER.log(Level.WARNING,"Unable to parse attribute: ELEVATION_DOMAIN",e);
            return null;
        }
    }

