    @Override
    public MultiLevelROI getMultiScaleROI(SimpleFeature sf) throws IOException {
        String path = getPath(sf);
        final String baseFullName = getBaseFullName(path);
        Geometry footprint;
        List<Geometry> footprintOverviews;
        AbstractGridCoverage2DReader reader = null;
        try {
            footprint = loadFootprint(baseFullName, false);
            int nOverviews = numOverviews;
            if (numOverviews == LOOK_FOR_OVERVIEWS) {
                // No number of overviews have been provided.
                // Getting a reader to retrieve that number.
                File file = new File(path);
                AbstractGridFormat format =
                        GridFormatFinder.findFormat(file, Utils.EXCLUDE_MOSAIC_HINTS);
                reader = format.getReader(file);
                DatasetLayout layout = reader.getDatasetLayout();
                int extOv = layout.getNumExternalOverviews();
                int intOv = layout.getNumInternalOverviews();
                nOverviews = (extOv > 0 ? extOv : 0) + (intOv > 0 ? intOv : 0);
                this.numOverviews = nOverviews;
            }
            footprintOverviews = new ArrayList<>(nOverviews);
            for (int i = 0; i < nOverviews; i++) {
                // Setting up the path of the overview's footprint file
                String pathOverview = baseFullName + String.format(overviewSuffixFormat, i + 1);
                Geometry overviewFootprint = loadFootprint(pathOverview, true);
                footprintOverviews.add(overviewFootprint);
            }
            return new MultiLevelROIGeometryOverviews(
                    footprint, footprintOverviews, overviewsRoiInRasterSpace, hints);
        } catch (Exception e) {
            throw new IOException("Exception occurred while loading footprints ", e);
        } finally {
            if (reader != null) {
                try {
                    reader.dispose();
                } catch (Throwable t) {
                    // silently ignore exceptions on reader dispose
                }
            }
        }
    }

