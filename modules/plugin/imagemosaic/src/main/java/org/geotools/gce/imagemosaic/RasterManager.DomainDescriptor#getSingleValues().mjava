        /** Retrieves the single values list of this domain (no ranges available) */
        private String getSingleValues() {
            try {

                // implicit ordering
                final Set result = new TreeSet(extractDomain(propertyName));
                // check result
                if (result.isEmpty()) {
                    return "";
                }

                final StringBuilder buff = new StringBuilder();
                for (Iterator it = result.iterator(); it.hasNext(); ) {
                    buff.append(ConvertersHack.convert(it.next(), String.class));
                    if (it.hasNext()) {
                        buff.append(",");
                    }
                }
                return buff.toString();
            } catch (IOException e) {
                if (LOGGER.isLoggable(Level.WARNING))
                    LOGGER.log(Level.WARNING, "Unable to parse attribute: " + identifier, e);
                return "";
            }
        }

