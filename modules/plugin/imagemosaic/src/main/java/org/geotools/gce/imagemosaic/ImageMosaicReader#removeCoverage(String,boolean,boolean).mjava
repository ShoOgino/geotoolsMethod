    /**
     * 
     * @param coverageName
     * @param forceDelete
     * @param checkForReferences {@code true} true in case, when deleting, we need to check whether the file is being referred by some other coverage
     *        or not. In the latter case, we can safely delete it
     *
     * @return
     * @throws IOException
     */
    private boolean removeCoverage(String coverageName, final boolean forceDelete,
            final boolean checkForReferences) throws IOException {
        RasterManager manager = getRasterManager(coverageName);
        if (manager != null) {
            manager.removeStore(coverageName, forceDelete, checkForReferences);

            // Should I preserve managers for future re-harvesting or it's ok
            // to remove them
            rasterManagers.remove(coverageName);
            names.remove(coverageName);
            if (defaultName == coverageName) {
                Iterator<String> iterator = names.iterator();
                if (iterator.hasNext()) {
                    defaultName = iterator.next();
                } else {
                    defaultName = null;
                }
            }

            return true;
        } else {
            throw new IOException(
                    "No Raster manager have been found for the specified coverageName. "
                            + coverageName);
        }
    }

