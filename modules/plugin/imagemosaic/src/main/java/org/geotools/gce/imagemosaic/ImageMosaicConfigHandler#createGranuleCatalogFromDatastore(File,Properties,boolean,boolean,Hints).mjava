    private static GranuleCatalog createGranuleCatalogFromDatastore(
            File parent, Properties properties, boolean create, boolean wraps, Hints hints)
            throws IOException {
        GranuleCatalog catalog = null;
        // SPI
        final String SPIClass = properties.getProperty("SPI");
        DataStoreFactorySpi spi = null;
        try {
            if (SPIClass == null) {
                if (properties.get(Utils.Prop.STORE_NAME) == null) {
                    throw new IllegalArgumentException(
                            "Required property SPI is missing from configuration");
                }
            } else {
                // create a datastore as instructed
                spi =
                        (DataStoreFactorySpi)
                                Class.forName(SPIClass).getDeclaredConstructor().newInstance();
            }
            // set ParentLocation parameter since for embedded database like H2 we must change the
            // database
            // to incorporate the path where to write the db
            properties.put("ParentLocation", URLs.fileToUrl(parent).toExternalForm());
            if (wraps) {
                properties.put(Prop.WRAP_STORE, wraps);
            }

            catalog =
                    GranuleCatalogFactory.createGranuleCatalog(
                            properties, false, create, spi, hints);
            MultiLevelROIProvider rois =
                    MultiLevelROIProviderMosaicFactory.createFootprintProvider(parent);
            catalog.setMultiScaleROIProvider(rois);

        } catch (Exception e) {
            final IOException ioe = new IOException();
            throw (IOException) ioe.initCause(e);
        }
        return catalog;
    }

