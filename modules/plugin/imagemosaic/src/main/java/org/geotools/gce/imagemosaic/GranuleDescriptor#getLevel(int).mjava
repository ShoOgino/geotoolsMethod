	public GranuleOverviewLevelDescriptor getLevel(final int index) {
		
			//load level
			// create the base grid to world transformation
			ImageInputStream inStream=null;
			ImageReader reader=null;
			try {
				
				// get a stream
				inStream = Utils.getInputStream(granuleUrl);
				if(inStream==null)
					throw new IllegalArgumentException("Unable to create an inputstream for the granuleurl:"+(granuleUrl!=null?granuleUrl:"null"));
		
				// get a reader and try to cache the relevant SPI
				if(cachedReaderSPI==null){
					reader = ImageUtilities.getImageioReader( inStream);
					if(reader!=null)
						cachedReaderSPI=reader.getOriginatingProvider();
				}
				else
					reader=cachedReaderSPI.createReaderInstance();
				if(reader==null)
					throw new IllegalArgumentException("Unable to get an ImageReader for the provided file "+granuleUrl.toString());					
				
				// call internal method which will close everything
				return getLevel(index, reader, inStream);

			} catch (IllegalStateException e) {
				
				// clean up
				try{
					if(inStream!=null)
						inStream.close();
				}
				catch (Throwable ee) {
					
				}
				finally{
					if(reader!=null)
						reader.dispose();
				}
				
				throw new IllegalArgumentException(e);
				
			} catch (IOException e) {
				
				// clean up
				try{
					if(inStream!=null)
						inStream.close();
				}
				catch (Throwable ee) {
				}
				finally{
					if(reader!=null)
						reader.dispose();
				}
				
				throw new IllegalArgumentException(e);
			}
	}

