    GranuleOverviewLevelDescriptor getLevel(final int index) {

        // load level
        // create the base grid to world transformation
        ImageReader reader = null;
        try (ImageInputStream inStream =
                cachedStreamSPI.createInputStreamInstance(
                        granuleUrl, ImageIO.getUseCache(), ImageIO.getCacheDirectory())) {

            // get a stream
            assert cachedStreamSPI != null : "no cachedStreamSPI available!";

            if (inStream == null)
                throw new IllegalArgumentException(
                        "Unable to create an inputstream for the granuleurl:"
                                + (granuleUrl != null ? granuleUrl : "null"));

            // get a reader and try to cache the relevant SPI
            if (cachedReaderSPI == null) {
                reader = ImageIOExt.getImageioReader(inStream);
                if (reader != null) cachedReaderSPI = reader.getOriginatingProvider();
            } else reader = cachedReaderSPI.createReaderInstance();
            if (reader == null)
                throw new IllegalArgumentException(
                        "Unable to get an ImageReader for the provided file "
                                + granuleUrl.toString());

            reader.setInput(inStream, false, false);

            // call internal method which will close everything
            return getLevel(index, reader, index, false);

        } catch (IllegalStateException e) {

            // clean up
            if (reader != null) reader.dispose();

            throw new IllegalArgumentException(e);

        } catch (IOException e) {
            // clean up
            if (reader != null) reader.dispose();

            throw new IllegalArgumentException(e);
        }
    }

