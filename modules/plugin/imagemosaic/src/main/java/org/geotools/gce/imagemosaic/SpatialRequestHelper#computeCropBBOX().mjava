    private void computeCropBBOX() throws DataSourceException {

        try {

            //
            // The destination to source transform has been computed (and eventually erased) already
            // by inspectCoordinateSystem()

            // now transform the requested envelope to source crs
            if (needsReprojection) {
                try {
                    this.computedBBox =
                            Utils.reprojectEnvelope(
                                    requestedBBox,
                                    coverageProperties.crs2D,
                                    coverageProperties.bbox);
                } catch (FactoryException e) {
                    throw new DataSourceException(e);
                }
            } else {
                // we do not need to do anything, but we do this in order to avoid problems with the
                // envelope checks
                computedBBox = new ReferencedEnvelope(requestedBBox);
            }

            // intersect requested BBox in native CRS with coverage native bbox to get the crop bbox
            // intersect the requested area with the bounds of this layer in native crs
            if (!computedBBox.intersects((BoundingBox) coverageProperties.bbox)) {
                if (LOGGER.isLoggable(Level.FINE)) {
                    LOGGER.fine(
                            new StringBuilder("The computed CropBoundingBox ")
                                    .append(computedBBox)
                                    .append(" Doesn't intersect the coverage BoundingBox ")
                                    .append(coverageProperties.bbox)
                                    .append(" resulting in an empty request")
                                    .toString());
                }
                computedBBox = null;
                emptyRequest = true;
                return;
            }

            // TODO XXX Optimize when referenced envelope has intersection method that actually
            // retains the CRS, this is the JTS one
            computedBBox =
                    new ReferencedEnvelope(
                            computedBBox.intersection(coverageProperties.bbox),
                            coverageProperties.crs2D);
            if (computedBBox.isEmpty()) {
                // this means that we do not have anything to load at all!
                emptyRequest = true;
            }
            return;
        } catch (TransformException te) {
            // something bad happened while trying to transform this
            // envelope. let's try with wgs84
            if (LOGGER.isLoggable(Level.FINE)) LOGGER.log(Level.FINE, te.getLocalizedMessage(), te);
        }

        try {
            // can we proceed? Do we have geo stuff to do all these operations?
            if (coverageProperties.geographicCRS != null
                    && coverageProperties.geographicBBox != null) {

                //
                // If we can not reproject the requested envelope to the native CRS,
                // we go back to reproject in the geographic crs of the native
                // coverage since this usually happens for conversions between CRS
                // whose area of definition is different
                //

                // STEP 1 reproject the requested envelope to the coverage geographic bbox
                if (!CRS.equalsIgnoreMetadata(coverageProperties.geographicCRS, requestCRS)) {
                    // try to convert the requested bbox to the coverage geocrs
                    requestedBBOXInCoverageGeographicCRS =
                            CRS.transform(requestedBBox, coverageProperties.geographicCRS);
                    requestedBBOXInCoverageGeographicCRS.setCoordinateReferenceSystem(
                            coverageProperties.geographicCRS);
                }
                if (requestedBBOXInCoverageGeographicCRS == null) {
                    requestedBBOXInCoverageGeographicCRS = new GeneralEnvelope(requestCRS);
                }

                // STEP 2 intersection with the geographic bbox for this coverage
                if (!requestedBBOXInCoverageGeographicCRS.intersects(
                        coverageProperties.geographicBBox, true)) {
                    computedBBox = null;
                    emptyRequest = true;
                    return;
                }
                // intersect with the coverage native geographic bbox
                // note that for the moment we got to use general envelope since there is no
                // intersection otherwise
                requestedBBOXInCoverageGeographicCRS.intersect(coverageProperties.geographicBBox);
                requestedBBOXInCoverageGeographicCRS.setCoordinateReferenceSystem(
                        coverageProperties.geographicCRS);

                // now go back to the coverage native CRS in order to compute an approximate
                // requested resolution
                approximateRequestedBBoInNativeCRS =
                        CRS.transform(
                                requestedBBOXInCoverageGeographicCRS, coverageProperties.crs2D);
                approximateRequestedBBoInNativeCRS.setCoordinateReferenceSystem(
                        coverageProperties.crs2D);
                computedBBox = new ReferencedEnvelope(approximateRequestedBBoInNativeCRS);
                return;
            }

        } catch (Exception e) {
            // something bad happened while trying to transform this
            // envelope. let's try with wgs84
            if (LOGGER.isLoggable(Level.FINE)) LOGGER.log(Level.FINE, e.getLocalizedMessage(), e);
        }

        LOGGER.log(
                Level.INFO,
                "We did not manage to crop the requested envelope, we fall back onto loading the whole coverage.");
        computedBBox = null;
    }

