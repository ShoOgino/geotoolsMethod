    @Override
    @SuppressWarnings("unchecked")
    public SimpleFeatureCollection getGranules(Query q) throws IOException {
        q = mergeHints(q);
        Utilities.ensureNonNull("q", q);
        final Lock lock = rwLock.readLock();
        try {
            lock.lock();
            checkStore();

            // get filter and check bbox
            final Filter filter = q.getFilter();
            // try to combine the index bbox with the one that may come from the query.
            ReferencedEnvelope requestedBBox = extractAndCombineBBox(filter);

            // load what we need to load
            checkIndex(lock);
            final List<GranuleDescriptor> features = index.query(requestedBBox);
            List<SimpleFeature> filtered = new ArrayList<>();
            final int maxGranules = q.getMaxFeatures();
            int numGranules = 0;
            for (GranuleDescriptor g : features) {
                // check how many tiles we are returning
                if (q.getSortBy() == null && maxGranules > 0 && numGranules >= maxGranules) break;
                final SimpleFeature originator = g.getOriginator();
                if (originator != null && filter.evaluate(originator)) {
                    if (Boolean.TRUE.equals(q.getHints().get(NATIVE_BOUNDS))) {
                        originator
                                .getUserData()
                                .put(NATIVE_BOUNDS_KEY, reference(g.getGranuleBBOX()));
                    }
                    filtered.add(originator);
                }
            }
            if (q.getSortBy() != null) {
                Comparator<SimpleFeature> comparator =
                        SortedFeatureReader.getComparator(q.getSortBy());
                if (comparator != null) {
                    Collections.sort(filtered, comparator);
                }
                if (maxGranules > 0 && filtered.size() > maxGranules) {
                    filtered = filtered.subList(0, maxGranules);
                }
            }
            return new ListFeatureCollection(wrappedCatalogue.getType(typeName), filtered);
        } finally {
            lock.unlock();
        }
    }

