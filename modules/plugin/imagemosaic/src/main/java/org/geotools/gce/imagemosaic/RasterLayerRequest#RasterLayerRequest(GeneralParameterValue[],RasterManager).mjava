    /**
     * Build a new {@code CoverageRequest} given a set of input parameters.
     * 
     * @param params The {@code GeneralParameterValue}s to initialize this request
     * @param baseGridCoverage2DReader
     * @throws IOException 
     */
    public RasterLayerRequest(final GeneralParameterValue[] params,
            final RasterManager rasterManager) throws IOException {

        // //
        //
        // Setting default parameters
        //
        // //
        this.rasterManager = rasterManager;
        this.heterogeneousGranules = rasterManager.heterogeneousGranules;
        CoverageProperties coverageProperties = new CoverageProperties();
        coverageProperties.setBBox(computeCoverageBoundingBox(rasterManager));
        coverageProperties.setRasterArea(rasterManager.spatialDomainManager.coverageRasterArea);
        coverageProperties
                .setFullResolution(rasterManager.spatialDomainManager.coverageFullResolution);
        coverageProperties
                .setGridToWorld2D(rasterManager.spatialDomainManager.coverageGridToWorld2D);
        coverageProperties.setCrs2D(rasterManager.spatialDomainManager.coverageCRS2D);
        coverageProperties
                .setGeographicBBox(rasterManager.spatialDomainManager.coverageGeographicBBox);
        coverageProperties
                .setGeographicCRS2D(rasterManager.spatialDomainManager.coverageGeographicCRS2D);
        this.spatialRequestHelper = new SpatialRequestHelper(coverageProperties);
        setDefaultParameterValues();

        // //
        //
        // Parsing parameter that can be used to control this request
        //
        // //
        if (params != null) {
            for (GeneralParameterValue gParam : params) {
                if (gParam instanceof ParameterValue<?>) {
                    final ParameterValue<?> param = (ParameterValue<?>) gParam;
                    final ReferenceIdentifier name = param.getDescriptor().getName();
                    extractParameter(param, name);
                }
            }
        }
        // re-compute bbox now that eventual filter has been read
        if(this.filter != null) {
            coverageProperties.setBBox(computeCoverageBoundingBox(rasterManager));
        }

        // //
        //
        // Set specific imageIO parameters: type of read operation,
        // imageReadParams
        //
        // //
        checkReadType();
        spatialRequestHelper.setAccurateResolution(accurateResolution);
        spatialRequestHelper.compute();
    }

