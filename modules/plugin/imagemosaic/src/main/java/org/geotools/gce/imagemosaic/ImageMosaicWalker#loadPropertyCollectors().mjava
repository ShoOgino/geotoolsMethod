    /**
     * Load properties collectors from the configuration
     */
    private void loadPropertyCollectors() {
        // load property collectors
        Indexer indexer = runConfiguration.getIndexer();
        Collectors collectors = indexer.getCollectors();
        if (collectors == null) {
            if (LOGGER.isLoggable(Level.FINE)) {
                LOGGER.fine("No properties collector have been found");
            }
            return;
        }
        List<Collector> collectorList = collectors.getCollector();

        // load the SPI set
        final Set<PropertiesCollectorSPI> pcSPIs = PropertiesCollectorFinder
                .getPropertiesCollectorSPI();

            // parse the string
            final List<PropertiesCollector> pcs = new ArrayList<PropertiesCollector>();
            for (Collector collector: collectorList) {
                PropertiesCollectorSPI selectedSPI = null;
                final String spiName = collector.getSpi();
                for (PropertiesCollectorSPI spi : pcSPIs) {
                    if (spi.isAvailable() && spi.getName().equalsIgnoreCase(spiName)) {
                        selectedSPI = spi;
                        break;
                    }
                }

                if (selectedSPI == null) {
                    if (LOGGER.isLoggable(Level.INFO)) {
                        LOGGER.info("Unable to find a PropertyCollector for this definition: "
                                + spiName);
                    }
                    continue;
                }

                // property names
                final String regex = DefaultPropertiesCollectorSPI.REGEX_PREFIX + collector.getValue();

                // create the PropertiesCollector
                final PropertiesCollector pc = selectedSPI.create(regex, Arrays.asList(collector.getMapped()));
                if (pc != null) {
                    pcs.add(pc);
                } else {
                    if (LOGGER.isLoggable(Level.INFO)) {
                        LOGGER.info("Unable to create PropertyCollector" );
                    }
                }
            }
            this.propertiesCollectors = pcs;
    }

