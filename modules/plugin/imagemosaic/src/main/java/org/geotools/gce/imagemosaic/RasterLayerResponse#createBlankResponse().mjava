    /**
     * @return
     */
    private RenderedImage createBlankResponse() {
        // if we get here that means that we do not have anything to load
        // but still we are inside the definition area for the mosaic,
        // therefore we create a fake coverage using the background values,
        // if provided (defaulting to 0), as well as the compute raster
        // bounds, envelope and grid to world.

        final Number[] values = ImageUtilities.getBackgroundValues(rasterManager.defaultSM, backgroundValues);
        // create a constant image with a proper layout
        RenderedImage finalImage = ConstantDescriptor.create(
                Float.valueOf(rasterBounds.width),
                Float.valueOf(rasterBounds.height),
                values,
                null);
        if (rasterBounds.x != 0 || rasterBounds.y != 0) {
            finalImage = TranslateDescriptor.create(finalImage, Float.valueOf(rasterBounds.x), Float.valueOf(rasterBounds.y), Interpolation.getInstance(Interpolation.INTERP_NEAREST), null);
        }
        if(rasterManager.defaultCM!=null){
            final ImageLayout2 il= new ImageLayout2();
            il.setColorModel(rasterManager.defaultCM);
            Dimension tileSize= request.getTileDimensions();
            if(tileSize==null){
                tileSize=JAI.getDefaultTileSize();
            } 
            il.setSampleModel(rasterManager.defaultCM.createCompatibleSampleModel(tileSize.width, tileSize.height));
            il.setTileGridXOffset(0).setTileGridYOffset(0).setTileWidth((int)tileSize.getWidth()).setTileHeight((int)tileSize.getHeight());
            return FormatDescriptor.create(
                    finalImage,
                    Integer.valueOf(il.getSampleModel(null).getDataType()),
                    new RenderingHints(JAI.KEY_IMAGE_LAYOUT,il));
        }
        return finalImage;
    }

