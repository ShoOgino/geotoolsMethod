    /**
     * Render a Geometry on the grid.
     *
     * @param geometry the geometry to add
     * @return true if the added geometry turned on at least one pixel
     */
    public boolean add(Geometry geometry) {
        if (LOGGER.isLoggable(Level.FINE)) {
            LOGGER.fine("Adding geometry " + geometry);
        }

        PreparedGeometry pg = PreparedGeometryFactory.prepare(geometry);

        // transform the JTS object into AWT, and project on grid space
        LiteShape shape = new LiteShape(geometry, null, false);
        Shape projectedShape = w2gTransform.createTransformedShape(shape);
        boolean added = false;

        for (Iterator<Tile> it = activeTiles.iterator(); it.hasNext(); ) {
            Tile tile = it.next();

            Polygon tileBBox = tile.getTileBBox();
            Envelope geometryEnvelope = geometry.getEnvelopeInternal();
            if (geometryEnvelope.intersects(tileBBox.getEnvelopeInternal())
                    && pg.intersects(tileBBox)) // geometry partially covers the tile: draw it
            {
                if (pg.contains(tileBBox)) // geometry fully covers the tile?
                {
                    added = true;
                    if (LOGGER.isLoggable(Level.FINE)) {
                        LOGGER.fine(
                                "Removing fully covered tile "
                                        + tile
                                        + " ("
                                        + activeTiles.size()
                                        + " left)");
                    }
                    it.remove();
                    tile.dispose();
                } else {
                    if (LOGGER.isLoggable(Level.FINE)) {
                        LOGGER.fine("drawing " + pg + " on " + tile + ' ' + tileBBox);
                    }

                    tile.draw(projectedShape);

                    if (tile.refreshCoverageCount()) {
                        added = true;
                        if (tile.isFullyCovered()) {
                            if (LOGGER.isLoggable(Level.FINE)) {
                                LOGGER.fine(
                                        "Removing covered tile "
                                                + tile
                                                + " ("
                                                + activeTiles.size()
                                                + " left)");
                            }
                            it.remove();
                            tile.dispose();
                        }
                    }
                }
            } else {
                if (LOGGER.isLoggable(Level.FINE)) {
                    LOGGER.fine("Skipping tile " + tile);
                }
            }
        }

        return added;
    }

