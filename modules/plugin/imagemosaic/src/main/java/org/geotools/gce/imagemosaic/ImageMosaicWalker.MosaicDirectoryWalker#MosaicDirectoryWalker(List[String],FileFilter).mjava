        public MosaicDirectoryWalker(final List<String> indexingDirectories,
                final FileFilter filter) throws IOException {
            super(filter, Integer.MAX_VALUE);// runConfiguration.isRecursive()?Integer.MAX_VALUE:0);

            this.transaction = new DefaultTransaction("MosaicCreationTransaction"
                    + System.nanoTime());
            indexingPreamble();

            try {
                // start walking directories
                for (String indexingDirectory : indexingDirectories) {
                    walk(new File(indexingDirectory), null);

                    // did we cancel?
                    if (canceled)
                        break;
                }
                // did we cancel?
                if (canceled)
                    transaction.rollback();
                else
                    transaction.commit();
            } catch (Exception e) {
                LOGGER.log(Level.WARNING, "Failure occurred while collecting the granules", e);
                transaction.rollback();
            } finally {
                try {
                    indexingPostamble(!canceled);
                } catch (Exception e) {
                    final String message = "Unable to close indexing" + e.getLocalizedMessage();
                    if (LOGGER.isLoggable(Level.WARNING)) {
                        LOGGER.log(Level.WARNING, message, e);
                    }
                    // notify listeners
                    fireException(e);
                }
                
                try {
                    transaction.close();
                } catch (Exception e) {
                    final String message = "Unable to close indexing" + e.getLocalizedMessage();
                    if (LOGGER.isLoggable(Level.WARNING)) {
                        LOGGER.log(Level.WARNING, message, e);
                    }
                    // notify listeners
                    fireException(e);
                }
            }
        }

