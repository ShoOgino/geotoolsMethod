    /**
     * Look for a footprint geometry for the provided featureID.
     * 
     * @param featureID
     *            the ID of a feature for which the footprint should be searched
     * @param footprintsMap
     *            the map containing <.ID,Geometry> pairs
     * @return the related {@link Geometry} if found, or null otherwise.
     */
    static Geometry lookupFootprintGeometry(
            final String featureID, 
            final Map<String, Geometry> footprintsMap) {
        Utilities.ensureNonNull("featureID", featureID);
        Utilities.ensureNonNull("footprintsMap", footprintsMap);
        
        if (footprintsMap != null && !footprintsMap.isEmpty()) {
            final String id = featureID.substring(featureID.lastIndexOf(".") + 1, featureID.length());
            return footprintsMap.containsKey(id) ? footprintsMap.get(id) : null;
        }
        return null;
    }

