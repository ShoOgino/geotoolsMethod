        /**
         * Retrieves the Range values for this domain
         *
         * @return
         */
        private String getRangeValues() {
            try {
                Set<String> result =
                        extractDomain(propertyName, additionalPropertyName, domainType);
                if (result.size() <= 0) {
                    return "";
                }

                final StringBuilder buff = new StringBuilder();
                for (Iterator it = result.iterator(); it.hasNext(); ) {
                    buff.append(ConvertersHack.convert(it.next(), String.class));
                    if (it.hasNext()) {
                        buff.append(",");
                    }
                }
                return buff.toString();
            } catch (IOException e) {
                if (LOGGER.isLoggable(Level.WARNING))
                    LOGGER.log(Level.WARNING, "Unable to parse attribute: " + identifier, e);
                return "";
            }
        }

