    /**
     * Returns the set of authority codes of the given type. The type argument specify the base
     * class. For example if this factory is an instance of CRSAuthorityFactory, then:
     *
     * <ul>
     *   <li>CoordinateReferenceSystem.class asks for all authority codes accepted by
     *       createGeographicCRS, createProjectedCRS, createVerticalCRS, createTemporalCRS and their
     *       friends.
     *   <li>ProjectedCRS.class asks only for authority codes accepted by createProjectedCRS.
     * </ul>
     *
     * The following implementaiton filters the set of codes based on the "PROJCS" and "GEOGCS" at
     * the start of the WKT strings. It is assumed that we only have GeographicCRS and
     * ProjectedCRS's here.
     *
     * @param clazz The spatial reference objects type (may be Object.class).
     * @return The set of authority codes for spatial reference objects of the given type. If this
     *     factory doesn't contains any object of the given type, then this method returns an empty
     *     set.
     * @throws FactoryException if access to the underlying database failed.
     */
    public Set<String> getAuthorityCodes(Class clazz) throws FactoryException {
        // could cashe this info if it is time consuming to filter
        if (clazz.getName().equalsIgnoreCase(CoordinateReferenceSystem.class.getName())) {
            Set<String> all = new java.util.TreeSet<>();
            for (Object o : epsg.keySet()) {
                String code = (String) o;
                all.add(AUTHORITY_PREFIX + code);
            }
            return all;
        } else if (clazz.getName().equalsIgnoreCase(GeographicCRS.class.getName())) {
            Set<Object> all = epsg.keySet();
            Set<String> geoCRS = new java.util.TreeSet<>();
            for (Object o : all) {
                String code = (String) o;
                String wkt = epsg.getProperty(code);
                if (wkt.startsWith("GEOGCS")) {
                    geoCRS.add(AUTHORITY_PREFIX + code);
                }
            }
            return geoCRS;

        } else if (clazz.getName().equalsIgnoreCase(ProjectedCRS.class.getName())) {
            Set<Object> all = epsg.keySet();
            Set<String> projCRS = new java.util.TreeSet<>();
            for (Object o : all) {
                String code = (String) o;
                String wkt = epsg.getProperty(code);
                if (wkt.startsWith("PROJCS")) {
                    projCRS.add(AUTHORITY_PREFIX + code);
                }
            }
            return projCRS;

        } else {
            return new java.util.TreeSet<>();
        }
    }

