    /**
     * Creates, registers, and initializes the <b>Package</b> for this
     * model, and for any others upon which it depends.  Simple
     * dependencies are satisfied by calling this method on all
     * dependent packages before doing anything else.  This method drives
     * initialization for interdependent packages directly, in parallel
     * with this package, itself.
     * <p>Of this package and its interdependencies, all packages which
     * have not yet been registered by their URI values are first created
     * and registered.  The packages are then initialized in two steps:
     * meta-model objects for all of the packages are created before any
     * are initialized, since one package's meta-model objects may refer to
     * those of another.
     * <p>Invocation of this method will not affect any packages that have
     * already been initialized.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see #eNS_URI
     * @see #createPackageContents()
     * @see #initializePackageContents()
     * @generated
     */
    public static WfsvPackage init() {
        if (isInited) return (WfsvPackage)EPackage.Registry.INSTANCE.getEPackage(WfsvPackage.eNS_URI);

        // Obtain or create and register package
        WfsvPackageImpl theWfsvPackage = (WfsvPackageImpl)(EPackage.Registry.INSTANCE.getEPackage(eNS_URI) instanceof WfsvPackageImpl ? EPackage.Registry.INSTANCE.getEPackage(eNS_URI) : new WfsvPackageImpl());

        isInited = true;

        // Initialize simple dependencies
        XMLTypePackage.eINSTANCE.eClass();

        // Obtain or create and register interdependencies
        WfsPackageImpl theWfsPackage = (WfsPackageImpl)(EPackage.Registry.INSTANCE.getEPackage(WfsPackage.eNS_URI) instanceof WfsPackageImpl ? EPackage.Registry.INSTANCE.getEPackage(WfsPackage.eNS_URI) : WfsPackage.eINSTANCE);

        // Create package meta-data objects
        theWfsvPackage.createPackageContents();
        theWfsPackage.createPackageContents();

        // Initialize created meta-data
        theWfsvPackage.initializePackageContents();
        theWfsPackage.initializePackageContents();

        // Mark meta-data to indicate it can't be changed
        theWfsvPackage.freeze();

        return theWfsvPackage;
    }

