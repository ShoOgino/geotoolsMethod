    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public String toString() {
        if (eIsProxy()) return super.toString();

        StringBuffer result = new StringBuffer(super.toString());
        result.append(" (planar: ");
        if (planarESet) result.append(planar); else result.append("<unset>");
        result.append(", directed: ");
        if (directedESet) result.append(directed); else result.append("<unset>");
        result.append(", grid: ");
        if (gridESet) result.append(grid); else result.append("<unset>");
        result.append(", minDistance: ");
        if (minDistanceESet) result.append(minDistance); else result.append("<unset>");
        result.append(", minAngle: ");
        if (minAngleESet) result.append(minAngle); else result.append("<unset>");
        result.append(", graphType: ");
        if (graphTypeESet) result.append(graphType); else result.append("<unset>");
        result.append(", drawingType: ");
        if (drawingTypeESet) result.append(drawingType); else result.append("<unset>");
        result.append(", lineType: ");
        if (lineTypeESet) result.append(lineType); else result.append("<unset>");
        result.append(", aestheticCriteria: ");
        result.append(aestheticCriteria);
        result.append(')');
        return result.toString();
    }

