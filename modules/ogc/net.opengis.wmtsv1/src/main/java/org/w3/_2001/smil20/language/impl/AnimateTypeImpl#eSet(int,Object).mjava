    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void eSet(int featureID, Object newValue) {
        switch (featureID) {
            case LanguagePackage.ANIMATE_TYPE__GROUP:
                ((FeatureMap.Internal)getGroup()).set(newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__ANY:
                ((FeatureMap.Internal)getAny()).set(newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__ALT:
                setAlt((String)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__BEGIN:
                setBegin((String)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__CALC_MODE:
                setCalcMode((CalcModeType)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__CLASS:
                setClass((String)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__DUR:
                setDur((String)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__END:
                setEnd((String)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__FILL:
                setFill((FillTimingAttrsType)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__FILL_DEFAULT:
                setFillDefault((FillDefaultType)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__ID:
                setId((String)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__LANG:
                setLang((String)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__LONGDESC:
                setLongdesc((String)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__MAX:
                setMax((String)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__MIN:
                setMin((String)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__REPEAT:
                setRepeat((BigInteger)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__REPEAT_COUNT:
                setRepeatCount((BigDecimal)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__REPEAT_DUR:
                setRepeatDur((String)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__RESTART:
                setRestart((RestartTimingType)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__RESTART_DEFAULT:
                setRestartDefault((RestartDefaultType)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__SKIP_CONTENT:
                setSkipContent((Boolean)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__SYNC_BEHAVIOR:
                setSyncBehavior((SyncBehaviorType)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__SYNC_BEHAVIOR_DEFAULT:
                setSyncBehaviorDefault((SyncBehaviorDefaultType)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__SYNC_TOLERANCE:
                setSyncTolerance((String)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__SYNC_TOLERANCE_DEFAULT:
                setSyncToleranceDefault((String)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__TARGET_ELEMENT:
                setTargetElement((String)newValue);
                return;
            case LanguagePackage.ANIMATE_TYPE__ANY_ATTRIBUTE:
                ((FeatureMap.Internal)getAnyAttribute()).set(newValue);
                return;
        }
        super.eSet(featureID, newValue);
    }

