    /**
     * Creates, registers, and initializes the <b>Package</b> for this
     * model, and for any others upon which it depends.  Simple
     * dependencies are satisfied by calling this method on all
     * dependent packages before doing anything else.  This method drives
     * initialization for interdependent packages directly, in parallel
     * with this package, itself.
     * <p>Of this package and its interdependencies, all packages which
     * have not yet been registered by their URI values are first created
     * and registered.  The packages are then initialized in two steps:
     * meta-model objects for all of the packages are created before any
     * are initialized, since one package's meta-model objects may refer to
     * those of another.
     * <p>Invocation of this method will not affect any packages that have
     * already been initialized.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see #eNS_URI
     * @see #createPackageContents()
     * @see #initializePackageContents()
     * @generated
     */
    public static Wcs111Package init() {
        if (isInited) return (Wcs111Package)EPackage.Registry.INSTANCE.getEPackage(Wcs111Package.eNS_URI);

        // Obtain or create and register package
        Wcs111PackageImpl theWcs111Package = (Wcs111PackageImpl)(EPackage.Registry.INSTANCE.getEPackage(eNS_URI) instanceof Wcs111PackageImpl ? EPackage.Registry.INSTANCE.getEPackage(eNS_URI) : new Wcs111PackageImpl());

        isInited = true;

        // Initialize simple dependencies
        Ows11Package.eINSTANCE.eClass();
        XMLNamespacePackage.eINSTANCE.eClass();
        XMLTypePackage.eINSTANCE.eClass();

        // Create package meta-data objects
        theWcs111Package.createPackageContents();

        // Initialize created meta-data
        theWcs111Package.initializePackageContents();

        // Register package validator
        EValidator.Registry.INSTANCE.put
            (theWcs111Package, 
             new EValidator.Descriptor() {
                 @Override
                public EValidator getEValidator() {
                     return Wcs111Validator.INSTANCE;
                 }
             });

        // Mark meta-data to indicate it can't be changed
        theWcs111Package.freeze();

        return theWcs111Package;
    }

