    /**
	 * Validates the MemberTypes constraint of '<em>Positive Integer With Star</em>'.
	 * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
	 * @generated
	 */
    public boolean validatePositiveIntegerWithStar_MemberTypes(Object positiveIntegerWithStar, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (diagnostics != null) {
			BasicDiagnostic tempDiagnostics = new BasicDiagnostic();
			if (XMLTypePackage.Literals.POSITIVE_INTEGER.isInstance(positiveIntegerWithStar)) {
				if (xmlTypeValidator.validatePositiveInteger((BigInteger)positiveIntegerWithStar, tempDiagnostics, context)) return true;
			}
			if (Wfs20Package.Literals.STAR_STRING_TYPE.isInstance(positiveIntegerWithStar)) {
				if (validateStarStringType((StarStringType)positiveIntegerWithStar, tempDiagnostics, context)) return true;
			}
			for (Diagnostic diagnostic : tempDiagnostics.getChildren()) {
				diagnostics.add(diagnostic);
			}
		}
		else {
			if (XMLTypePackage.Literals.POSITIVE_INTEGER.isInstance(positiveIntegerWithStar)) {
				if (xmlTypeValidator.validatePositiveInteger((BigInteger)positiveIntegerWithStar, null, context)) return true;
			}
			if (Wfs20Package.Literals.STAR_STRING_TYPE.isInstance(positiveIntegerWithStar)) {
				if (validateStarStringType((StarStringType)positiveIntegerWithStar, null, context)) return true;
			}
		}
		return false;
	}

