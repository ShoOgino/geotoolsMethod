	/**
	 * Initializes the annotations for <b>http:///org/eclipse/emf/ecore/util/ExtendedMetaData</b>.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void createExtendedMetaDataAnnotations() {
		String source = "http:///org/eclipse/emf/ecore/util/ExtendedMetaData";
		addAnnotation
		  (bodyReferenceTypeEClass,
		   source,
		   new String[] {
			   "name", "BodyReference_._type",
			   "kind", "empty"
		   });
		addAnnotation
		  (getBodyReferenceType_Href(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "href",
			   "namespace", "http://www.w3.org/1999/xlink"
		   });
		addAnnotation
		  (boundingBoxDataTypeEClass,
		   source,
		   new String[] {
			   "name", "BoundingBoxData_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getBoundingBoxDataType_SupportedCRS(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SupportedCRS",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (complexDataTypeEClass,
		   source,
		   new String[] {
			   "name", "ComplexDataType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getComplexDataType_Any(),
		   source,
		   new String[] {
			   "kind", "elementWildcard",
			   "wildcards", "##other",
			   "name", ":1",
			   "processing", "lax"
		   });
		addAnnotation
		  (contentsTypeEClass,
		   source,
		   new String[] {
			   "name", "Contents_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getContentsType_ProcessSummary(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessSummary",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (dataDescriptionTypeEClass,
		   source,
		   new String[] {
			   "name", "DataDescriptionType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDataDescriptionType_Format(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Format",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (dataInputTypeEClass,
		   source,
		   new String[] {
			   "name", "DataInputType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDataInputType_Data(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Data",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDataInputType_Reference(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Reference",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDataInputType_Input(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Input",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDataInputType_Id(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "id"
		   });
		addAnnotation
		  (dataOutputTypeEClass,
		   source,
		   new String[] {
			   "name", "DataOutputType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDataOutputType_Data(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Data",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDataOutputType_Reference(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Reference",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDataOutputType_Output(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Output",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDataOutputType_Id(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "id"
		   });
		addAnnotation
		  (dataTransmissionModeTypeEEnum,
		   source,
		   new String[] {
			   "name", "DataTransmissionModeType"
		   });
		addAnnotation
		  (dataTransmissionModeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "DataTransmissionModeType:Object",
			   "baseType", "DataTransmissionModeType"
		   });
		addAnnotation
		  (dataTypeEClass,
		   source,
		   new String[] {
			   "name", "Data_._type",
			   "kind", "mixed"
		   });
		addAnnotation
		  (getDataType_Encoding(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "encoding"
		   });
		addAnnotation
		  (getDataType_MimeType(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "mimeType"
		   });
		addAnnotation
		  (getDataType_Schema(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "schema"
		   });
		addAnnotation
		  (describeProcessTypeEClass,
		   source,
		   new String[] {
			   "name", "DescribeProcess_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDescribeProcessType_Identifier(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Identifier",
			   "namespace", "http://www.opengis.net/ows/2.0"
		   });
		addAnnotation
		  (getDescribeProcessType_Lang(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "lang",
			   "namespace", "http://www.w3.org/XML/1998/namespace"
		   });
		addAnnotation
		  (descriptionTypeEClass,
		   source,
		   new String[] {
			   "name", "DescriptionType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (dismissTypeEClass,
		   source,
		   new String[] {
			   "name", "Dismiss_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDismissType_JobID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "JobID",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (documentRootEClass,
		   source,
		   new String[] {
			   "name", "",
			   "kind", "mixed"
		   });
		addAnnotation
		  (getDocumentRoot_Mixed(),
		   source,
		   new String[] {
			   "kind", "elementWildcard",
			   "name", ":mixed"
		   });
		addAnnotation
		  (getDocumentRoot_XMLNSPrefixMap(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "xmlns:prefix"
		   });
		addAnnotation
		  (getDocumentRoot_XSISchemaLocation(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "xsi:schemaLocation"
		   });
		addAnnotation
		  (getDocumentRoot_BoundingBoxData(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "BoundingBoxData",
			   "namespace", "##targetNamespace",
			   "affiliation", "DataDescription"
		   });
		addAnnotation
		  (getDocumentRoot_DataDescription(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataDescription",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_Capabilities(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Capabilities",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_ComplexData(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ComplexData",
			   "namespace", "##targetNamespace",
			   "affiliation", "DataDescription"
		   });
		addAnnotation
		  (getDocumentRoot_Contents(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Contents",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_Data(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Data",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_DescribeProcess(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DescribeProcess",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_Dismiss(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Dismiss",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_Execute(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Execute",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_ExpirationDate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ExpirationDate",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_Format(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Format",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_GenericProcess(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "GenericProcess",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_GetCapabilities(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "GetCapabilities",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_GetResult(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "GetResult",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_GetStatus(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "GetStatus",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_JobID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "JobID",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_LiteralData(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LiteralData",
			   "namespace", "##targetNamespace",
			   "affiliation", "DataDescription"
		   });
		addAnnotation
		  (getDocumentRoot_LiteralValue(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LiteralValue",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_Process(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Process",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_ProcessOffering(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessOffering",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_ProcessOfferings(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessOfferings",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_Reference(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Reference",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_Result(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Result",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_StatusInfo(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "StatusInfo",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_SupportedCRS(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SupportedCRS",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (executeRequestTypeEClass,
		   source,
		   new String[] {
			   "name", "ExecuteRequestType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getExecuteRequestType_Identifier(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Identifier",
			   "namespace", "http://www.opengis.net/ows/2.0"
		   });
		addAnnotation
		  (getExecuteRequestType_Input(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Input",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getExecuteRequestType_Output(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Output",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getExecuteRequestType_Mode(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "mode"
		   });
		addAnnotation
		  (getExecuteRequestType_Response(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "response"
		   });
		addAnnotation
		  (extensionTypeEClass,
		   source,
		   new String[] {
			   "name", "Extension_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getExtensionType_Any(),
		   source,
		   new String[] {
			   "kind", "elementWildcard",
			   "wildcards", "##other",
			   "name", ":0",
			   "processing", "lax"
		   });
		addAnnotation
		  (formatTypeEClass,
		   source,
		   new String[] {
			   "name", "Format_._type",
			   "kind", "empty"
		   });
		addAnnotation
		  (getFormatType_Default(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "default"
		   });
		addAnnotation
		  (getFormatType_Encoding(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "encoding"
		   });
		addAnnotation
		  (getFormatType_MaximumMegabytes(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "maximumMegabytes"
		   });
		addAnnotation
		  (getFormatType_MimeType(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "mimeType"
		   });
		addAnnotation
		  (getFormatType_Schema(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "schema"
		   });
		addAnnotation
		  (genericInputTypeEClass,
		   source,
		   new String[] {
			   "name", "GenericInputType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getGenericInputType_Input(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Input",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getGenericInputType_MaxOccurs(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "maxOccurs"
		   });
		addAnnotation
		  (getGenericInputType_MinOccurs(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "minOccurs"
		   });
		addAnnotation
		  (genericOutputTypeEClass,
		   source,
		   new String[] {
			   "name", "GenericOutputType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getGenericOutputType_Output(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Output",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (genericProcessTypeEClass,
		   source,
		   new String[] {
			   "name", "GenericProcessType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getGenericProcessType_Input(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Input",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getGenericProcessType_Output(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Output",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getCapabilitiesTypeEClass,
		   source,
		   new String[] {
			   "name", "GetCapabilitiesType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getGetCapabilitiesType_Service(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "service"
		   });
		addAnnotation
		  (getResultTypeEClass,
		   source,
		   new String[] {
			   "name", "GetResult_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getGetResultType_JobID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "JobID",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getStatusTypeEClass,
		   source,
		   new String[] {
			   "name", "GetStatus_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getGetStatusType_JobID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "JobID",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (inputDescriptionTypeEClass,
		   source,
		   new String[] {
			   "name", "InputDescriptionType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getInputDescriptionType_DataDescriptionGroup(),
		   source,
		   new String[] {
			   "kind", "group",
			   "name", "DataDescription:group",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getInputDescriptionType_DataDescription(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataDescription",
			   "namespace", "##targetNamespace",
			   "group", "DataDescription:group"
		   });
		addAnnotation
		  (getInputDescriptionType_Input(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Input",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getInputDescriptionType_MaxOccurs(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "maxOccurs"
		   });
		addAnnotation
		  (getInputDescriptionType_MinOccurs(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "minOccurs"
		   });
		addAnnotation
		  (jobControlOptionsTypeEDataType,
		   source,
		   new String[] {
			   "name", "JobControlOptionsType",
			   "memberTypes", "JobControlOptionsType_._member_._0 JobControlOptionsType_._member_._1"
		   });
		addAnnotation
		  (jobControlOptionsType1EDataType,
		   source,
		   new String[] {
			   "name", "jobControlOptions_._type",
			   "itemType", "JobControlOptionsType"
		   });
		addAnnotation
		  (jobControlOptionsTypeMember0EEnum,
		   source,
		   new String[] {
			   "name", "JobControlOptionsType_._member_._0"
		   });
		addAnnotation
		  (jobControlOptionsTypeMember0ObjectEDataType,
		   source,
		   new String[] {
			   "name", "JobControlOptionsType_._member_._0:Object",
			   "baseType", "JobControlOptionsType_._member_._0"
		   });
		addAnnotation
		  (jobControlOptionsTypeMember1EDataType,
		   source,
		   new String[] {
			   "name", "JobControlOptionsType_._member_._1",
			   "baseType", "http://www.eclipse.org/emf/2003/XMLType#string"
		   });
		addAnnotation
		  (literalDataDomainTypeEClass,
		   source,
		   new String[] {
			   "name", "LiteralDataDomainType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getLiteralDataDomainType_AllowedValues(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AllowedValues",
			   "namespace", "http://www.opengis.net/ows/2.0"
		   });
		addAnnotation
		  (getLiteralDataDomainType_AnyValue(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AnyValue",
			   "namespace", "http://www.opengis.net/ows/2.0"
		   });
		addAnnotation
		  (getLiteralDataDomainType_ValuesReference(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ValuesReference",
			   "namespace", "http://www.opengis.net/ows/2.0"
		   });
		addAnnotation
		  (getLiteralDataDomainType_DataType(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataType",
			   "namespace", "http://www.opengis.net/ows/2.0"
		   });
		addAnnotation
		  (getLiteralDataDomainType_UOM(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "UOM",
			   "namespace", "http://www.opengis.net/ows/2.0"
		   });
		addAnnotation
		  (getLiteralDataDomainType_DefaultValue(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DefaultValue",
			   "namespace", "http://www.opengis.net/ows/2.0"
		   });
		addAnnotation
		  (literalDataDomainType1EClass,
		   source,
		   new String[] {
			   "name", "LiteralDataDomain_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getLiteralDataDomainType1_Default(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "default"
		   });
		addAnnotation
		  (literalDataTypeEClass,
		   source,
		   new String[] {
			   "name", "LiteralDataType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getLiteralDataType_LiteralDataDomain(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LiteralDataDomain"
		   });
		addAnnotation
		  (literalValueTypeEClass,
		   source,
		   new String[] {
			   "name", "LiteralValue_._type",
			   "kind", "simple"
		   });
		addAnnotation
		  (getLiteralValueType_DataType(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "dataType"
		   });
		addAnnotation
		  (getLiteralValueType_Uom(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "uom"
		   });
		addAnnotation
		  (modeTypeEEnum,
		   source,
		   new String[] {
			   "name", "mode_._type"
		   });
		addAnnotation
		  (modeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "mode_._type:Object",
			   "baseType", "mode_._type"
		   });
		addAnnotation
		  (outputDefinitionTypeEClass,
		   source,
		   new String[] {
			   "name", "OutputDefinitionType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getOutputDefinitionType_Output(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Output",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getOutputDefinitionType_Encoding(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "encoding"
		   });
		addAnnotation
		  (getOutputDefinitionType_Id(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "id"
		   });
		addAnnotation
		  (getOutputDefinitionType_MimeType(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "mimeType"
		   });
		addAnnotation
		  (getOutputDefinitionType_Schema(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "schema"
		   });
		addAnnotation
		  (getOutputDefinitionType_Transmission(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "transmission"
		   });
		addAnnotation
		  (outputDescriptionTypeEClass,
		   source,
		   new String[] {
			   "name", "OutputDescriptionType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getOutputDescriptionType_DataDescriptionGroup(),
		   source,
		   new String[] {
			   "kind", "group",
			   "name", "DataDescription:group",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getOutputDescriptionType_DataDescription(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataDescription",
			   "namespace", "##targetNamespace",
			   "group", "DataDescription:group"
		   });
		addAnnotation
		  (getOutputDescriptionType_Output(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Output",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (outputTransmissionTypeEDataType,
		   source,
		   new String[] {
			   "name", "outputTransmission_._type",
			   "itemType", "DataTransmissionModeType"
		   });
		addAnnotation
		  (percentCompletedTypeEDataType,
		   source,
		   new String[] {
			   "name", "PercentCompleted_._type",
			   "baseType", "http://www.eclipse.org/emf/2003/XMLType#integer",
			   "minInclusive", "0",
			   "maxInclusive", "100"
		   });
		addAnnotation
		  (processDescriptionTypeEClass,
		   source,
		   new String[] {
			   "name", "ProcessDescriptionType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getProcessDescriptionType_Input(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Input",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getProcessDescriptionType_Output(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Output",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getProcessDescriptionType_Lang(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "lang",
			   "namespace", "http://www.w3.org/XML/1998/namespace"
		   });
		addAnnotation
		  (processOfferingsTypeEClass,
		   source,
		   new String[] {
			   "name", "ProcessOfferings_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getProcessOfferingsType_ProcessOffering(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessOffering",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (processOfferingTypeEClass,
		   source,
		   new String[] {
			   "name", "ProcessOffering_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getProcessOfferingType_Process(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Process",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getProcessOfferingType_Any(),
		   source,
		   new String[] {
			   "kind", "elementWildcard",
			   "wildcards", "##other",
			   "name", ":1",
			   "processing", "lax"
		   });
		addAnnotation
		  (getProcessOfferingType_JobControlOptions(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "jobControlOptions"
		   });
		addAnnotation
		  (getProcessOfferingType_OutputTransmission(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "outputTransmission"
		   });
		addAnnotation
		  (getProcessOfferingType_ProcessModel(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "processModel"
		   });
		addAnnotation
		  (getProcessOfferingType_ProcessVersion(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "processVersion"
		   });
		addAnnotation
		  (processSummaryTypeEClass,
		   source,
		   new String[] {
			   "name", "ProcessSummaryType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getProcessSummaryType_JobControlOptions(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "jobControlOptions"
		   });
		addAnnotation
		  (getProcessSummaryType_OutputTransmission(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "outputTransmission"
		   });
		addAnnotation
		  (getProcessSummaryType_ProcessModel(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "processModel"
		   });
		addAnnotation
		  (getProcessSummaryType_ProcessVersion(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "processVersion"
		   });
		addAnnotation
		  (referenceTypeEClass,
		   source,
		   new String[] {
			   "name", "ReferenceType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getReferenceType_Body(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Body",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getReferenceType_BodyReference(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "BodyReference",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getReferenceType_Encoding(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "encoding"
		   });
		addAnnotation
		  (getReferenceType_Href(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "href",
			   "namespace", "http://www.w3.org/1999/xlink"
		   });
		addAnnotation
		  (getReferenceType_MimeType(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "mimeType"
		   });
		addAnnotation
		  (getReferenceType_Schema(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "schema"
		   });
		addAnnotation
		  (requestBaseTypeEClass,
		   source,
		   new String[] {
			   "name", "RequestBaseType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getRequestBaseType_Extension(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Extension",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getRequestBaseType_Service(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "service"
		   });
		addAnnotation
		  (getRequestBaseType_Version(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "version"
		   });
		addAnnotation
		  (responseTypeEEnum,
		   source,
		   new String[] {
			   "name", "response_._type"
		   });
		addAnnotation
		  (responseTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "response_._type:Object",
			   "baseType", "response_._type"
		   });
		addAnnotation
		  (resultTypeEClass,
		   source,
		   new String[] {
			   "name", "Result_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getResultType_JobID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "JobID",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getResultType_ExpirationDate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ExpirationDate",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getResultType_Output(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Output",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (statusInfoTypeEClass,
		   source,
		   new String[] {
			   "name", "StatusInfo_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getStatusInfoType_JobID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "JobID",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getStatusInfoType_Status(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Status",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getStatusInfoType_ExpirationDate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ExpirationDate",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getStatusInfoType_EstimatedCompletion(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EstimatedCompletion",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getStatusInfoType_NextPoll(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NextPoll",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getStatusInfoType_PercentCompleted(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "PercentCompleted",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (statusTypeEDataType,
		   source,
		   new String[] {
			   "name", "Status_._type",
			   "memberTypes", "Status_._type_._member_._0 Status_._type_._member_._1"
		   });
		addAnnotation
		  (statusTypeMember0EEnum,
		   source,
		   new String[] {
			   "name", "Status_._type_._member_._0"
		   });
		addAnnotation
		  (statusTypeMember0ObjectEDataType,
		   source,
		   new String[] {
			   "name", "Status_._type_._member_._0:Object",
			   "baseType", "Status_._type_._member_._0"
		   });
		addAnnotation
		  (statusTypeMember1EDataType,
		   source,
		   new String[] {
			   "name", "Status_._type_._member_._1",
			   "baseType", "http://www.eclipse.org/emf/2003/XMLType#string"
		   });
		addAnnotation
		  (supportedCRSTypeEClass,
		   source,
		   new String[] {
			   "name", "SupportedCRS_._type",
			   "kind", "simple"
		   });
		addAnnotation
		  (getSupportedCRSType_Value(),
		   source,
		   new String[] {
			   "name", ":0",
			   "kind", "simple"
		   });
		addAnnotation
		  (getSupportedCRSType_Default(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "default"
		   });
		addAnnotation
		  (wpsCapabilitiesTypeEClass,
		   source,
		   new String[] {
			   "name", "WPSCapabilitiesType",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getWPSCapabilitiesType_Contents(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Contents",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getWPSCapabilitiesType_Extension(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Extension",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getWPSCapabilitiesType_Service(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "service"
		   });
	}

