	/**
	 * Calls <code>validateXXX</code> for the corresponding classifier of the model.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected boolean validate(int classifierID, Object value, DiagnosticChain diagnostics, Map<Object, Object> context) {
		switch (classifierID) {
			case Wps20Package.BODY_REFERENCE_TYPE:
				return validateBodyReferenceType((BodyReferenceType)value, diagnostics, context);
			case Wps20Package.BOUNDING_BOX_DATA_TYPE:
				return validateBoundingBoxDataType((BoundingBoxDataType)value, diagnostics, context);
			case Wps20Package.COMPLEX_DATA_TYPE:
				return validateComplexDataType((ComplexDataType)value, diagnostics, context);
			case Wps20Package.CONTENTS_TYPE:
				return validateContentsType((ContentsType)value, diagnostics, context);
			case Wps20Package.DATA_DESCRIPTION_TYPE:
				return validateDataDescriptionType((DataDescriptionType)value, diagnostics, context);
			case Wps20Package.DATA_INPUT_TYPE:
				return validateDataInputType((DataInputType)value, diagnostics, context);
			case Wps20Package.DATA_OUTPUT_TYPE:
				return validateDataOutputType((DataOutputType)value, diagnostics, context);
			case Wps20Package.DATA_TYPE:
				return validateDataType((DataType)value, diagnostics, context);
			case Wps20Package.DESCRIBE_PROCESS_TYPE:
				return validateDescribeProcessType((DescribeProcessType)value, diagnostics, context);
			case Wps20Package.DESCRIPTION_TYPE:
				return validateDescriptionType((DescriptionType)value, diagnostics, context);
			case Wps20Package.DISMISS_TYPE:
				return validateDismissType((DismissType)value, diagnostics, context);
			case Wps20Package.DOCUMENT_ROOT:
				return validateDocumentRoot((DocumentRoot)value, diagnostics, context);
			case Wps20Package.EXECUTE_REQUEST_TYPE:
				return validateExecuteRequestType((ExecuteRequestType)value, diagnostics, context);
			case Wps20Package.EXTENSION_TYPE:
				return validateExtensionType((ExtensionType)value, diagnostics, context);
			case Wps20Package.FORMAT_TYPE:
				return validateFormatType((FormatType)value, diagnostics, context);
			case Wps20Package.GENERIC_INPUT_TYPE:
				return validateGenericInputType((GenericInputType)value, diagnostics, context);
			case Wps20Package.GENERIC_OUTPUT_TYPE:
				return validateGenericOutputType((GenericOutputType)value, diagnostics, context);
			case Wps20Package.GENERIC_PROCESS_TYPE:
				return validateGenericProcessType((GenericProcessType)value, diagnostics, context);
			case Wps20Package.GET_CAPABILITIES_TYPE:
				return validateGetCapabilitiesType((GetCapabilitiesType)value, diagnostics, context);
			case Wps20Package.GET_RESULT_TYPE:
				return validateGetResultType((GetResultType)value, diagnostics, context);
			case Wps20Package.GET_STATUS_TYPE:
				return validateGetStatusType((GetStatusType)value, diagnostics, context);
			case Wps20Package.INPUT_DESCRIPTION_TYPE:
				return validateInputDescriptionType((InputDescriptionType)value, diagnostics, context);
			case Wps20Package.LITERAL_DATA_DOMAIN_TYPE:
				return validateLiteralDataDomainType((LiteralDataDomainType)value, diagnostics, context);
			case Wps20Package.LITERAL_DATA_DOMAIN_TYPE1:
				return validateLiteralDataDomainType1((LiteralDataDomainType1)value, diagnostics, context);
			case Wps20Package.LITERAL_DATA_TYPE:
				return validateLiteralDataType((LiteralDataType)value, diagnostics, context);
			case Wps20Package.LITERAL_VALUE_TYPE:
				return validateLiteralValueType((LiteralValueType)value, diagnostics, context);
			case Wps20Package.OUTPUT_DEFINITION_TYPE:
				return validateOutputDefinitionType((OutputDefinitionType)value, diagnostics, context);
			case Wps20Package.OUTPUT_DESCRIPTION_TYPE:
				return validateOutputDescriptionType((OutputDescriptionType)value, diagnostics, context);
			case Wps20Package.PROCESS_DESCRIPTION_TYPE:
				return validateProcessDescriptionType((ProcessDescriptionType)value, diagnostics, context);
			case Wps20Package.PROCESS_OFFERINGS_TYPE:
				return validateProcessOfferingsType((ProcessOfferingsType)value, diagnostics, context);
			case Wps20Package.PROCESS_OFFERING_TYPE:
				return validateProcessOfferingType((ProcessOfferingType)value, diagnostics, context);
			case Wps20Package.PROCESS_SUMMARY_TYPE:
				return validateProcessSummaryType((ProcessSummaryType)value, diagnostics, context);
			case Wps20Package.REFERENCE_TYPE:
				return validateReferenceType((ReferenceType)value, diagnostics, context);
			case Wps20Package.REQUEST_BASE_TYPE:
				return validateRequestBaseType((RequestBaseType)value, diagnostics, context);
			case Wps20Package.RESULT_TYPE:
				return validateResultType((ResultType)value, diagnostics, context);
			case Wps20Package.STATUS_INFO_TYPE:
				return validateStatusInfoType((StatusInfoType)value, diagnostics, context);
			case Wps20Package.SUPPORTED_CRS_TYPE:
				return validateSupportedCRSType((SupportedCRSType)value, diagnostics, context);
			case Wps20Package.WPS_CAPABILITIES_TYPE:
				return validateWPSCapabilitiesType((WPSCapabilitiesType)value, diagnostics, context);
			case Wps20Package.DATA_TRANSMISSION_MODE_TYPE:
				return validateDataTransmissionModeType((DataTransmissionModeType)value, diagnostics, context);
			case Wps20Package.JOB_CONTROL_OPTIONS_TYPE_MEMBER0:
				return validateJobControlOptionsTypeMember0((JobControlOptionsTypeMember0)value, diagnostics, context);
			case Wps20Package.MODE_TYPE:
				return validateModeType((ModeType)value, diagnostics, context);
			case Wps20Package.RESPONSE_TYPE:
				return validateResponseType((ResponseType)value, diagnostics, context);
			case Wps20Package.STATUS_TYPE_MEMBER0:
				return validateStatusTypeMember0((StatusTypeMember0)value, diagnostics, context);
			case Wps20Package.DATA_TRANSMISSION_MODE_TYPE_OBJECT:
				return validateDataTransmissionModeTypeObject((DataTransmissionModeType)value, diagnostics, context);
			case Wps20Package.JOB_CONTROL_OPTIONS_TYPE:
				return validateJobControlOptionsType(value, diagnostics, context);
			case Wps20Package.JOB_CONTROL_OPTIONS_TYPE1:
				return validateJobControlOptionsType1((List<?>)value, diagnostics, context);
			case Wps20Package.JOB_CONTROL_OPTIONS_TYPE_MEMBER0_OBJECT:
				return validateJobControlOptionsTypeMember0Object((JobControlOptionsTypeMember0)value, diagnostics, context);
			case Wps20Package.JOB_CONTROL_OPTIONS_TYPE_MEMBER1:
				return validateJobControlOptionsTypeMember1((String)value, diagnostics, context);
			case Wps20Package.MODE_TYPE_OBJECT:
				return validateModeTypeObject((ModeType)value, diagnostics, context);
			case Wps20Package.OUTPUT_TRANSMISSION_TYPE:
				return validateOutputTransmissionType((List<?>)value, diagnostics, context);
			case Wps20Package.PERCENT_COMPLETED_TYPE:
				return validatePercentCompletedType((BigInteger)value, diagnostics, context);
			case Wps20Package.RESPONSE_TYPE_OBJECT:
				return validateResponseTypeObject((ResponseType)value, diagnostics, context);
			case Wps20Package.STATUS_TYPE:
				return validateStatusType(value, diagnostics, context);
			case Wps20Package.STATUS_TYPE_MEMBER0_OBJECT:
				return validateStatusTypeMember0Object((StatusTypeMember0)value, diagnostics, context);
			case Wps20Package.STATUS_TYPE_MEMBER1:
				return validateStatusTypeMember1((String)value, diagnostics, context);
			default:
				return true;
		}
	}

