	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case SchemaPackage.DOCUMENT_ROOT__MIXED:
				return ((InternalEList<?>)getMixed()).basicRemove(otherEnd, msgs);
			case SchemaPackage.DOCUMENT_ROOT__XMLNS_PREFIX_MAP:
				return ((InternalEList<?>)getXMLNSPrefixMap()).basicRemove(otherEnd, msgs);
			case SchemaPackage.DOCUMENT_ROOT__XSI_SCHEMA_LOCATION:
				return ((InternalEList<?>)getXSISchemaLocation()).basicRemove(otherEnd, msgs);
			case SchemaPackage.DOCUMENT_ROOT__ALL:
				return basicSetAll(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__ANNOTATION:
				return basicSetAnnotation(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__ANY:
				return basicSetAny(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__ANY_ATTRIBUTE:
				return basicSetAnyAttribute(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__APPINFO:
				return basicSetAppinfo(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__ATTRIBUTE:
				return basicSetAttribute(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__ATTRIBUTE_GROUP:
				return basicSetAttributeGroup(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__CHOICE:
				return basicSetChoice(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__COMPLEX_CONTENT:
				return basicSetComplexContent(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__COMPLEX_TYPE:
				return basicSetComplexType(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__DOCUMENTATION:
				return basicSetDocumentation(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__ELEMENT:
				return basicSetElement(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__ENUMERATION:
				return basicSetEnumeration(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__FIELD:
				return basicSetField(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__FRACTION_DIGITS:
				return basicSetFractionDigits(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__GROUP:
				return basicSetGroup(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__IMPORT:
				return basicSetImport(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__INCLUDE:
				return basicSetInclude(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__KEY:
				return basicSetKey(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__KEYREF:
				return basicSetKeyref(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__LENGTH:
				return basicSetLength(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__LIST:
				return basicSetList(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__MAX_EXCLUSIVE:
				return basicSetMaxExclusive(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__MAX_INCLUSIVE:
				return basicSetMaxInclusive(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__MAX_LENGTH:
				return basicSetMaxLength(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__MIN_EXCLUSIVE:
				return basicSetMinExclusive(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__MIN_INCLUSIVE:
				return basicSetMinInclusive(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__MIN_LENGTH:
				return basicSetMinLength(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__NOTATION:
				return basicSetNotation(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__PATTERN:
				return basicSetPattern(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__REDEFINE:
				return basicSetRedefine(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__RESTRICTION:
				return basicSetRestriction(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__SCHEMA:
				return basicSetSchema(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__SELECTOR:
				return basicSetSelector(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__SEQUENCE:
				return basicSetSequence(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__SIMPLE_CONTENT:
				return basicSetSimpleContent(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__SIMPLE_TYPE:
				return basicSetSimpleType(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__TOTAL_DIGITS:
				return basicSetTotalDigits(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__UNION:
				return basicSetUnion(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__UNIQUE:
				return basicSetUnique(null, msgs);
			case SchemaPackage.DOCUMENT_ROOT__WHITE_SPACE:
				return basicSetWhiteSpace(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

