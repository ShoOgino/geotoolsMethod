	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case SchemaPackage.ELEMENT__SIMPLE_TYPE:
				return getSimpleType();
			case SchemaPackage.ELEMENT__COMPLEX_TYPE:
				return getComplexType();
			case SchemaPackage.ELEMENT__IDENTITY_CONSTRAINT:
				if (coreType) return getIdentityConstraint();
				return ((FeatureMap.Internal)getIdentityConstraint()).getWrapper();
			case SchemaPackage.ELEMENT__UNIQUE:
				return getUnique();
			case SchemaPackage.ELEMENT__KEY:
				return getKey();
			case SchemaPackage.ELEMENT__KEYREF:
				return getKeyref();
			case SchemaPackage.ELEMENT__ABSTRACT:
				return isAbstract();
			case SchemaPackage.ELEMENT__BLOCK:
				return getBlock();
			case SchemaPackage.ELEMENT__DEFAULT:
				return getDefault();
			case SchemaPackage.ELEMENT__FINAL:
				return getFinal();
			case SchemaPackage.ELEMENT__FIXED:
				return getFixed();
			case SchemaPackage.ELEMENT__FORM:
				return getForm();
			case SchemaPackage.ELEMENT__MAX_OCCURS:
				return getMaxOccurs();
			case SchemaPackage.ELEMENT__MIN_OCCURS:
				return getMinOccurs();
			case SchemaPackage.ELEMENT__NAME:
				return getName();
			case SchemaPackage.ELEMENT__NILLABLE:
				return isNillable();
			case SchemaPackage.ELEMENT__REF:
				return getRef();
			case SchemaPackage.ELEMENT__SUBSTITUTION_GROUP:
				return getSubstitutionGroup();
			case SchemaPackage.ELEMENT__TYPE:
				return getType();
		}
		return super.eGet(featureID, resolve, coreType);
	}

