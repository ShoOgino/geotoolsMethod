	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case SchemaPackage.COMPLEX_TYPE__SIMPLE_CONTENT:
				setSimpleContent((SimpleContentType)newValue);
				return;
			case SchemaPackage.COMPLEX_TYPE__COMPLEX_CONTENT:
				setComplexContent((ComplexContentType)newValue);
				return;
			case SchemaPackage.COMPLEX_TYPE__GROUP:
				setGroup((GroupRef)newValue);
				return;
			case SchemaPackage.COMPLEX_TYPE__ALL:
				setAll((All)newValue);
				return;
			case SchemaPackage.COMPLEX_TYPE__CHOICE:
				setChoice((ExplicitGroup)newValue);
				return;
			case SchemaPackage.COMPLEX_TYPE__SEQUENCE:
				setSequence((ExplicitGroup)newValue);
				return;
			case SchemaPackage.COMPLEX_TYPE__GROUP1:
				((FeatureMap.Internal)getGroup1()).set(newValue);
				return;
			case SchemaPackage.COMPLEX_TYPE__ATTRIBUTE:
				getAttribute().clear();
				getAttribute().addAll((Collection<? extends Attribute>)newValue);
				return;
			case SchemaPackage.COMPLEX_TYPE__ATTRIBUTE_GROUP:
				getAttributeGroup().clear();
				getAttributeGroup().addAll((Collection<? extends AttributeGroupRef>)newValue);
				return;
			case SchemaPackage.COMPLEX_TYPE__ANY_ATTRIBUTE1:
				setAnyAttribute1((Wildcard)newValue);
				return;
			case SchemaPackage.COMPLEX_TYPE__ABSTRACT:
				setAbstract((Boolean)newValue);
				return;
			case SchemaPackage.COMPLEX_TYPE__BLOCK:
				setBlock(newValue);
				return;
			case SchemaPackage.COMPLEX_TYPE__FINAL:
				setFinal(newValue);
				return;
			case SchemaPackage.COMPLEX_TYPE__MIXED:
				setMixed((Boolean)newValue);
				return;
			case SchemaPackage.COMPLEX_TYPE__NAME:
				setName((String)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

