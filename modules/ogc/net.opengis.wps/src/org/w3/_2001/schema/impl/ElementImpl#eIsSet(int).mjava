	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case SchemaPackage.ELEMENT__SIMPLE_TYPE:
				return simpleType != null;
			case SchemaPackage.ELEMENT__COMPLEX_TYPE:
				return complexType != null;
			case SchemaPackage.ELEMENT__IDENTITY_CONSTRAINT:
				return identityConstraint != null && !identityConstraint.isEmpty();
			case SchemaPackage.ELEMENT__UNIQUE:
				return !getUnique().isEmpty();
			case SchemaPackage.ELEMENT__KEY:
				return !getKey().isEmpty();
			case SchemaPackage.ELEMENT__KEYREF:
				return !getKeyref().isEmpty();
			case SchemaPackage.ELEMENT__ABSTRACT:
				return isSetAbstract();
			case SchemaPackage.ELEMENT__BLOCK:
				return BLOCK_EDEFAULT == null ? block != null : !BLOCK_EDEFAULT.equals(block);
			case SchemaPackage.ELEMENT__DEFAULT:
				return DEFAULT_EDEFAULT == null ? default_ != null : !DEFAULT_EDEFAULT.equals(default_);
			case SchemaPackage.ELEMENT__FINAL:
				return FINAL_EDEFAULT == null ? final_ != null : !FINAL_EDEFAULT.equals(final_);
			case SchemaPackage.ELEMENT__FIXED:
				return FIXED_EDEFAULT == null ? fixed != null : !FIXED_EDEFAULT.equals(fixed);
			case SchemaPackage.ELEMENT__FORM:
				return isSetForm();
			case SchemaPackage.ELEMENT__MAX_OCCURS:
				return isSetMaxOccurs();
			case SchemaPackage.ELEMENT__MIN_OCCURS:
				return isSetMinOccurs();
			case SchemaPackage.ELEMENT__NAME:
				return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
			case SchemaPackage.ELEMENT__NILLABLE:
				return isSetNillable();
			case SchemaPackage.ELEMENT__REF:
				return REF_EDEFAULT == null ? ref != null : !REF_EDEFAULT.equals(ref);
			case SchemaPackage.ELEMENT__SUBSTITUTION_GROUP:
				return SUBSTITUTION_GROUP_EDEFAULT == null ? substitutionGroup != null : !SUBSTITUTION_GROUP_EDEFAULT.equals(substitutionGroup);
			case SchemaPackage.ELEMENT__TYPE:
				return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
		}
		return super.eIsSet(featureID);
	}

