    /**
     * Initializes the annotations for <b>http:///org/eclipse/emf/ecore/util/ExtendedMetaData</b>.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected void createExtendedMetaDataAnnotations() {
        String source = "http:///org/eclipse/emf/ecore/util/ExtendedMetaData";	
        addAnnotation
          (accumulateTypeEEnum, 
           source, 
           new String[] {
             "name", "accumulate_._type"
           });	
        addAnnotation
          (accumulateTypeObjectEDataType, 
           source, 
           new String[] {
             "name", "accumulate_._type:Object",
             "baseType", "accumulate_._type"
           });	
        addAnnotation
          (additiveTypeEEnum, 
           source, 
           new String[] {
             "name", "additive_._type"
           });	
        addAnnotation
          (additiveTypeObjectEDataType, 
           source, 
           new String[] {
             "name", "additive_._type:Object",
             "baseType", "additive_._type"
           });	
        addAnnotation
          (animateColorPrototypeEClass, 
           source, 
           new String[] {
             "name", "animateColorPrototype",
             "kind", "empty"
           });	
        addAnnotation
          (getAnimateColorPrototype_Accumulate(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "accumulate"
           });	
        addAnnotation
          (getAnimateColorPrototype_Additive(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "additive"
           });	
        addAnnotation
          (getAnimateColorPrototype_AttributeName(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "attributeName"
           });	
        addAnnotation
          (getAnimateColorPrototype_AttributeType(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "attributeType"
           });	
        addAnnotation
          (getAnimateColorPrototype_By(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "by"
           });	
        addAnnotation
          (getAnimateColorPrototype_From(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "from"
           });	
        addAnnotation
          (getAnimateColorPrototype_To(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "to"
           });	
        addAnnotation
          (getAnimateColorPrototype_Values(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "values"
           });	
        addAnnotation
          (animateMotionPrototypeEClass, 
           source, 
           new String[] {
             "name", "animateMotionPrototype",
             "kind", "empty"
           });	
        addAnnotation
          (getAnimateMotionPrototype_Accumulate(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "accumulate"
           });	
        addAnnotation
          (getAnimateMotionPrototype_Additive(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "additive"
           });	
        addAnnotation
          (getAnimateMotionPrototype_By(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "by"
           });	
        addAnnotation
          (getAnimateMotionPrototype_From(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "from"
           });	
        addAnnotation
          (getAnimateMotionPrototype_Origin(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "origin"
           });	
        addAnnotation
          (getAnimateMotionPrototype_To(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "to"
           });	
        addAnnotation
          (getAnimateMotionPrototype_Values(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "values"
           });	
        addAnnotation
          (animatePrototypeEClass, 
           source, 
           new String[] {
             "name", "animatePrototype",
             "kind", "empty"
           });	
        addAnnotation
          (getAnimatePrototype_Accumulate(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "accumulate"
           });	
        addAnnotation
          (getAnimatePrototype_Additive(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "additive"
           });	
        addAnnotation
          (getAnimatePrototype_AttributeName(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "attributeName"
           });	
        addAnnotation
          (getAnimatePrototype_AttributeType(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "attributeType"
           });	
        addAnnotation
          (getAnimatePrototype_By(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "by"
           });	
        addAnnotation
          (getAnimatePrototype_From(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "from"
           });	
        addAnnotation
          (getAnimatePrototype_To(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "to"
           });	
        addAnnotation
          (getAnimatePrototype_Values(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "values"
           });	
        addAnnotation
          (attributeTypeTypeEEnum, 
           source, 
           new String[] {
             "name", "attributeType_._type"
           });	
        addAnnotation
          (attributeTypeTypeObjectEDataType, 
           source, 
           new String[] {
             "name", "attributeType_._type:Object",
             "baseType", "attributeType_._type"
           });	
        addAnnotation
          (calcModeTypeEEnum, 
           source, 
           new String[] {
             "name", "calcMode_._type"
           });	
        addAnnotation
          (calcModeTypeObjectEDataType, 
           source, 
           new String[] {
             "name", "calcMode_._type:Object",
             "baseType", "calcMode_._type"
           });	
        addAnnotation
          (documentRootEClass, 
           source, 
           new String[] {
             "name", "",
             "kind", "mixed"
           });	
        addAnnotation
          (getDocumentRoot_Mixed(), 
           source, 
           new String[] {
             "kind", "elementWildcard",
             "name", ":mixed"
           });	
        addAnnotation
          (getDocumentRoot_XMLNSPrefixMap(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "xmlns:prefix"
           });	
        addAnnotation
          (getDocumentRoot_XSISchemaLocation(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "xsi:schemaLocation"
           });	
        addAnnotation
          (getDocumentRoot_Animate(), 
           source, 
           new String[] {
             "kind", "element",
             "name", "animate",
             "namespace", "##targetNamespace",
             "affiliation", "http://www.w3.org/2001/SMIL20/Language#animate"
           });	
        addAnnotation
          (getDocumentRoot_AnimateColor(), 
           source, 
           new String[] {
             "kind", "element",
             "name", "animateColor",
             "namespace", "##targetNamespace",
             "affiliation", "http://www.w3.org/2001/SMIL20/Language#animateColor"
           });	
        addAnnotation
          (getDocumentRoot_AnimateMotion(), 
           source, 
           new String[] {
             "kind", "element",
             "name", "animateMotion",
             "namespace", "##targetNamespace",
             "affiliation", "http://www.w3.org/2001/SMIL20/Language#animateMotion"
           });	
        addAnnotation
          (getDocumentRoot_Set(), 
           source, 
           new String[] {
             "kind", "element",
             "name", "set",
             "namespace", "##targetNamespace",
             "affiliation", "http://www.w3.org/2001/SMIL20/Language#set"
           });	
        addAnnotation
          (fillDefaultTypeEEnum, 
           source, 
           new String[] {
             "name", "fillDefaultType"
           });	
        addAnnotation
          (fillDefaultTypeObjectEDataType, 
           source, 
           new String[] {
             "name", "fillDefaultType:Object",
             "baseType", "fillDefaultType"
           });	
        addAnnotation
          (fillTimingAttrsTypeEEnum, 
           source, 
           new String[] {
             "name", "fillTimingAttrsType"
           });	
        addAnnotation
          (fillTimingAttrsTypeObjectEDataType, 
           source, 
           new String[] {
             "name", "fillTimingAttrsType:Object",
             "baseType", "fillTimingAttrsType"
           });	
        addAnnotation
          (nonNegativeDecimalTypeEDataType, 
           source, 
           new String[] {
             "name", "nonNegativeDecimalType",
             "baseType", "http://www.eclipse.org/emf/2003/XMLType#decimal",
             "minInclusive", "0.0"
           });	
        addAnnotation
          (restartDefaultTypeEEnum, 
           source, 
           new String[] {
             "name", "restartDefaultType"
           });	
        addAnnotation
          (restartDefaultTypeObjectEDataType, 
           source, 
           new String[] {
             "name", "restartDefaultType:Object",
             "baseType", "restartDefaultType"
           });	
        addAnnotation
          (restartTimingTypeEEnum, 
           source, 
           new String[] {
             "name", "restartTimingType"
           });	
        addAnnotation
          (restartTimingTypeObjectEDataType, 
           source, 
           new String[] {
             "name", "restartTimingType:Object",
             "baseType", "restartTimingType"
           });	
        addAnnotation
          (setPrototypeEClass, 
           source, 
           new String[] {
             "name", "setPrototype",
             "kind", "empty"
           });	
        addAnnotation
          (getSetPrototype_AttributeName(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "attributeName"
           });	
        addAnnotation
          (getSetPrototype_AttributeType(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "attributeType"
           });	
        addAnnotation
          (getSetPrototype_To(), 
           source, 
           new String[] {
             "kind", "attribute",
             "name", "to"
           });	
        addAnnotation
          (syncBehaviorDefaultTypeEEnum, 
           source, 
           new String[] {
             "name", "syncBehaviorDefaultType"
           });	
        addAnnotation
          (syncBehaviorDefaultTypeObjectEDataType, 
           source, 
           new String[] {
             "name", "syncBehaviorDefaultType:Object",
             "baseType", "syncBehaviorDefaultType"
           });	
        addAnnotation
          (syncBehaviorTypeEEnum, 
           source, 
           new String[] {
             "name", "syncBehaviorType"
           });	
        addAnnotation
          (syncBehaviorTypeObjectEDataType, 
           source, 
           new String[] {
             "name", "syncBehaviorType:Object",
             "baseType", "syncBehaviorType"
           });
    }

