    /**
     * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @return the first non-null result returned by a <code>caseXXX</code> call.
     * @generated
     */
    @Override
    protected T doSwitch(int classifierID, EObject theEObject) {
        switch (classifierID) {
            case LanguagePackage.ANIMATE_COLOR_TYPE: {
                AnimateColorType animateColorType = (AnimateColorType)theEObject;
                T result = caseAnimateColorType(animateColorType);
                if (result == null) result = caseAnimateColorPrototype(animateColorType);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case LanguagePackage.ANIMATE_MOTION_TYPE: {
                AnimateMotionType animateMotionType = (AnimateMotionType)theEObject;
                T result = caseAnimateMotionType(animateMotionType);
                if (result == null) result = caseAnimateMotionPrototype(animateMotionType);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case LanguagePackage.ANIMATE_TYPE: {
                AnimateType animateType = (AnimateType)theEObject;
                T result = caseAnimateType(animateType);
                if (result == null) result = caseAnimatePrototype(animateType);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case LanguagePackage.DOCUMENT_ROOT: {
                DocumentRoot documentRoot = (DocumentRoot)theEObject;
                T result = caseDocumentRoot(documentRoot);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case LanguagePackage.SET_TYPE: {
                SetType setType = (SetType)theEObject;
                T result = caseSetType(setType);
                if (result == null) result = caseSetPrototype(setType);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            default: return defaultCase(theEObject);
        }
    }

