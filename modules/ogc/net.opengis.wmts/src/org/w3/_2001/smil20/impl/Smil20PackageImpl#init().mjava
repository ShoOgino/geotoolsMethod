    /**
     * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
     * 
     * <p>This method is used to initialize {@link Smil20Package#eINSTANCE} when that field is accessed.
     * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see #eNS_URI
     * @see #createPackageContents()
     * @see #initializePackageContents()
     * @generated
     */
    public static Smil20Package init() {
        if (isInited) return (Smil20Package)EPackage.Registry.INSTANCE.getEPackage(Smil20Package.eNS_URI);

        // Obtain or create and register package
        Smil20PackageImpl theSmil20Package = (Smil20PackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof Smil20PackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new Smil20PackageImpl());

        isInited = true;

        // Initialize simple dependencies
        Ows11Package.eINSTANCE.eClass();
        XlinkPackage.eINSTANCE.eClass();
        XMLTypePackage.eINSTANCE.eClass();

        // Obtain or create and register interdependencies
        Gml311PackageImpl theGml311Package = (Gml311PackageImpl)(EPackage.Registry.INSTANCE.getEPackage(Gml311Package.eNS_URI) instanceof Gml311PackageImpl ? EPackage.Registry.INSTANCE.getEPackage(Gml311Package.eNS_URI) : Gml311Package.eINSTANCE);
        LanguagePackageImpl theLanguagePackage = (LanguagePackageImpl)(EPackage.Registry.INSTANCE.getEPackage(LanguagePackage.eNS_URI) instanceof LanguagePackageImpl ? EPackage.Registry.INSTANCE.getEPackage(LanguagePackage.eNS_URI) : LanguagePackage.eINSTANCE);
        wmtsv_1PackageImpl thewmtsv_1Package = (wmtsv_1PackageImpl)(EPackage.Registry.INSTANCE.getEPackage(wmtsv_1Package.eNS_URI) instanceof wmtsv_1PackageImpl ? EPackage.Registry.INSTANCE.getEPackage(wmtsv_1Package.eNS_URI) : wmtsv_1Package.eINSTANCE);

        // Load packages
        theGml311Package.loadPackage();

        // Create package meta-data objects
        theSmil20Package.createPackageContents();
        theLanguagePackage.createPackageContents();
        thewmtsv_1Package.createPackageContents();

        // Initialize created meta-data
        theSmil20Package.initializePackageContents();
        theLanguagePackage.initializePackageContents();
        thewmtsv_1Package.initializePackageContents();

        // Fix loaded packages
        theGml311Package.fixPackageContents();

        // Register package validator
        EValidator.Registry.INSTANCE.put
            (theSmil20Package, 
             new EValidator.Descriptor() {
                 @Override
                public EValidator getEValidator() {
                     return Smil20Validator.INSTANCE;
                 }
             });

        // Mark meta-data to indicate it can't be changed
        theSmil20Package.freeze();

  
        // Update the registry and return the package
        EPackage.Registry.INSTANCE.put(Smil20Package.eNS_URI, theSmil20Package);
        return theSmil20Package;
    }

