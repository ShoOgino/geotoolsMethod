    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public boolean eIsSet(int featureID) {
        switch (featureID) {
            case LanguagePackage.ANIMATE_MOTION_TYPE__GROUP:
                return group != null && !group.isEmpty();
            case LanguagePackage.ANIMATE_MOTION_TYPE__ANY:
                return !getAny().isEmpty();
            case LanguagePackage.ANIMATE_MOTION_TYPE__ALT:
                return ALT_EDEFAULT == null ? alt != null : !ALT_EDEFAULT.equals(alt);
            case LanguagePackage.ANIMATE_MOTION_TYPE__BEGIN:
                return BEGIN_EDEFAULT == null ? begin != null : !BEGIN_EDEFAULT.equals(begin);
            case LanguagePackage.ANIMATE_MOTION_TYPE__CALC_MODE:
                return isSetCalcMode();
            case LanguagePackage.ANIMATE_MOTION_TYPE__CLASS:
                return CLASS_EDEFAULT == null ? class_ != null : !CLASS_EDEFAULT.equals(class_);
            case LanguagePackage.ANIMATE_MOTION_TYPE__DUR:
                return DUR_EDEFAULT == null ? dur != null : !DUR_EDEFAULT.equals(dur);
            case LanguagePackage.ANIMATE_MOTION_TYPE__END:
                return END_EDEFAULT == null ? end != null : !END_EDEFAULT.equals(end);
            case LanguagePackage.ANIMATE_MOTION_TYPE__FILL:
                return isSetFill();
            case LanguagePackage.ANIMATE_MOTION_TYPE__FILL_DEFAULT:
                return isSetFillDefault();
            case LanguagePackage.ANIMATE_MOTION_TYPE__ID:
                return ID_EDEFAULT == null ? id != null : !ID_EDEFAULT.equals(id);
            case LanguagePackage.ANIMATE_MOTION_TYPE__LANG:
                return LANG_EDEFAULT == null ? lang != null : !LANG_EDEFAULT.equals(lang);
            case LanguagePackage.ANIMATE_MOTION_TYPE__LONGDESC:
                return LONGDESC_EDEFAULT == null ? longdesc != null : !LONGDESC_EDEFAULT.equals(longdesc);
            case LanguagePackage.ANIMATE_MOTION_TYPE__MAX:
                return MAX_EDEFAULT == null ? max != null : !MAX_EDEFAULT.equals(max);
            case LanguagePackage.ANIMATE_MOTION_TYPE__MIN:
                return MIN_EDEFAULT == null ? min != null : !MIN_EDEFAULT.equals(min);
            case LanguagePackage.ANIMATE_MOTION_TYPE__REPEAT:
                return REPEAT_EDEFAULT == null ? repeat != null : !REPEAT_EDEFAULT.equals(repeat);
            case LanguagePackage.ANIMATE_MOTION_TYPE__REPEAT_COUNT:
                return REPEAT_COUNT_EDEFAULT == null ? repeatCount != null : !REPEAT_COUNT_EDEFAULT.equals(repeatCount);
            case LanguagePackage.ANIMATE_MOTION_TYPE__REPEAT_DUR:
                return REPEAT_DUR_EDEFAULT == null ? repeatDur != null : !REPEAT_DUR_EDEFAULT.equals(repeatDur);
            case LanguagePackage.ANIMATE_MOTION_TYPE__RESTART:
                return isSetRestart();
            case LanguagePackage.ANIMATE_MOTION_TYPE__RESTART_DEFAULT:
                return isSetRestartDefault();
            case LanguagePackage.ANIMATE_MOTION_TYPE__SKIP_CONTENT:
                return isSetSkipContent();
            case LanguagePackage.ANIMATE_MOTION_TYPE__SYNC_BEHAVIOR:
                return isSetSyncBehavior();
            case LanguagePackage.ANIMATE_MOTION_TYPE__SYNC_BEHAVIOR_DEFAULT:
                return isSetSyncBehaviorDefault();
            case LanguagePackage.ANIMATE_MOTION_TYPE__SYNC_TOLERANCE:
                return SYNC_TOLERANCE_EDEFAULT == null ? syncTolerance != null : !SYNC_TOLERANCE_EDEFAULT.equals(syncTolerance);
            case LanguagePackage.ANIMATE_MOTION_TYPE__SYNC_TOLERANCE_DEFAULT:
                return isSetSyncToleranceDefault();
            case LanguagePackage.ANIMATE_MOTION_TYPE__TARGET_ELEMENT:
                return TARGET_ELEMENT_EDEFAULT == null ? targetElement != null : !TARGET_ELEMENT_EDEFAULT.equals(targetElement);
            case LanguagePackage.ANIMATE_MOTION_TYPE__ANY_ATTRIBUTE:
                return anyAttribute != null && !anyAttribute.isEmpty();
        }
        return super.eIsSet(featureID);
    }

