    /**
     * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @return the first non-null result returned by a <code>caseXXX</code> call.
     * @generated
     */
    @Override
    protected T doSwitch(int classifierID, EObject theEObject) {
        switch (classifierID) {
            case Smil20Package.ANIMATE_COLOR_PROTOTYPE: {
                AnimateColorPrototype animateColorPrototype = (AnimateColorPrototype)theEObject;
                T result = caseAnimateColorPrototype(animateColorPrototype);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case Smil20Package.ANIMATE_MOTION_PROTOTYPE: {
                AnimateMotionPrototype animateMotionPrototype = (AnimateMotionPrototype)theEObject;
                T result = caseAnimateMotionPrototype(animateMotionPrototype);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case Smil20Package.ANIMATE_PROTOTYPE: {
                AnimatePrototype animatePrototype = (AnimatePrototype)theEObject;
                T result = caseAnimatePrototype(animatePrototype);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case Smil20Package.DOCUMENT_ROOT: {
                DocumentRoot documentRoot = (DocumentRoot)theEObject;
                T result = caseDocumentRoot(documentRoot);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            case Smil20Package.SET_PROTOTYPE: {
                SetPrototype setPrototype = (SetPrototype)theEObject;
                T result = caseSetPrototype(setPrototype);
                if (result == null) result = defaultCase(theEObject);
                return result;
            }
            default: return defaultCase(theEObject);
        }
    }

