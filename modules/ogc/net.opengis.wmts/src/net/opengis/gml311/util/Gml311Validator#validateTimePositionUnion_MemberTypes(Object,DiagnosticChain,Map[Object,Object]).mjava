    /**
     * Validates the MemberTypes constraint of '<em>Time Position Union</em>'.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public boolean validateTimePositionUnion_MemberTypes(Object timePositionUnion, DiagnosticChain diagnostics, Map<Object, Object> context) {
        if (diagnostics != null) {
            BasicDiagnostic tempDiagnostics = new BasicDiagnostic();
            if (Gml311Package.eINSTANCE.getCalDate().isInstance(timePositionUnion)) {
                if (validateCalDate((XMLGregorianCalendar)timePositionUnion, tempDiagnostics, context)) return true;
            }
            if (XMLTypePackage.Literals.TIME.isInstance(timePositionUnion)) {
                if (xmlTypeValidator.validateTime(timePositionUnion, tempDiagnostics, context)) return true;
            }
            if (XMLTypePackage.Literals.DATE_TIME.isInstance(timePositionUnion)) {
                if (xmlTypeValidator.validateDateTime(timePositionUnion, tempDiagnostics, context)) return true;
            }
            if (XMLTypePackage.Literals.ANY_URI.isInstance(timePositionUnion)) {
                if (xmlTypeValidator.validateAnyURI((String)timePositionUnion, tempDiagnostics, context)) return true;
            }
            if (XMLTypePackage.Literals.DECIMAL.isInstance(timePositionUnion)) {
                if (xmlTypeValidator.validateDecimal((BigDecimal)timePositionUnion, tempDiagnostics, context)) return true;
            }
            for (Diagnostic diagnostic : tempDiagnostics.getChildren()) {
                diagnostics.add(diagnostic);
            }
        }
        else {
            if (Gml311Package.eINSTANCE.getCalDate().isInstance(timePositionUnion)) {
                if (validateCalDate((XMLGregorianCalendar)timePositionUnion, null, context)) return true;
            }
            if (XMLTypePackage.Literals.TIME.isInstance(timePositionUnion)) {
                if (xmlTypeValidator.validateTime(timePositionUnion, null, context)) return true;
            }
            if (XMLTypePackage.Literals.DATE_TIME.isInstance(timePositionUnion)) {
                if (xmlTypeValidator.validateDateTime(timePositionUnion, null, context)) return true;
            }
            if (XMLTypePackage.Literals.ANY_URI.isInstance(timePositionUnion)) {
                if (xmlTypeValidator.validateAnyURI((String)timePositionUnion, null, context)) return true;
            }
            if (XMLTypePackage.Literals.DECIMAL.isInstance(timePositionUnion)) {
                if (xmlTypeValidator.validateDecimal((BigDecimal)timePositionUnion, null, context)) return true;
            }
        }
        return false;
    }

