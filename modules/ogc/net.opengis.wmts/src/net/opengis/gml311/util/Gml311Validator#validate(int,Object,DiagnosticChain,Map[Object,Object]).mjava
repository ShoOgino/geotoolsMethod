    /**
     * Calls <code>validateXXX</code> for the corresponding classifier of the model.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    protected boolean validate(int classifierID, Object value, DiagnosticChain diagnostics, Map<Object, Object> context) {
        switch (classifierID) {
            case Gml311Package.ABSOLUTE_EXTERNAL_POSITIONAL_ACCURACY_TYPE:
                return validateAbsoluteExternalPositionalAccuracyType((AbsoluteExternalPositionalAccuracyType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_CONTINUOUS_COVERAGE_TYPE:
                return validateAbstractContinuousCoverageType((AbstractContinuousCoverageType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_COORDINATE_OPERATION_BASE_TYPE:
                return validateAbstractCoordinateOperationBaseType((AbstractCoordinateOperationBaseType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_COORDINATE_OPERATION_TYPE:
                return validateAbstractCoordinateOperationType((AbstractCoordinateOperationType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_COORDINATE_SYSTEM_BASE_TYPE:
                return validateAbstractCoordinateSystemBaseType((AbstractCoordinateSystemBaseType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_COORDINATE_SYSTEM_TYPE:
                return validateAbstractCoordinateSystemType((AbstractCoordinateSystemType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_COVERAGE_TYPE:
                return validateAbstractCoverageType((AbstractCoverageType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_CURVE_SEGMENT_TYPE:
                return validateAbstractCurveSegmentType((AbstractCurveSegmentType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_CURVE_TYPE:
                return validateAbstractCurveType((AbstractCurveType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_DATUM_BASE_TYPE:
                return validateAbstractDatumBaseType((AbstractDatumBaseType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_DATUM_TYPE:
                return validateAbstractDatumType((AbstractDatumType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_DISCRETE_COVERAGE_TYPE:
                return validateAbstractDiscreteCoverageType((AbstractDiscreteCoverageType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_FEATURE_COLLECTION_TYPE:
                return validateAbstractFeatureCollectionType((AbstractFeatureCollectionType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_FEATURE_TYPE:
                return validateAbstractFeatureType((AbstractFeatureType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_GENERAL_CONVERSION_TYPE:
                return validateAbstractGeneralConversionType((AbstractGeneralConversionType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_GENERAL_DERIVED_CRS_TYPE:
                return validateAbstractGeneralDerivedCRSType((AbstractGeneralDerivedCRSType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_GENERAL_OPERATION_PARAMETER_REF_TYPE:
                return validateAbstractGeneralOperationParameterRefType((AbstractGeneralOperationParameterRefType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_GENERAL_OPERATION_PARAMETER_TYPE:
                return validateAbstractGeneralOperationParameterType((AbstractGeneralOperationParameterType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_GENERAL_PARAMETER_VALUE_TYPE:
                return validateAbstractGeneralParameterValueType((AbstractGeneralParameterValueType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_GENERAL_TRANSFORMATION_TYPE:
                return validateAbstractGeneralTransformationType((AbstractGeneralTransformationType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_GEOMETRIC_AGGREGATE_TYPE:
                return validateAbstractGeometricAggregateType((AbstractGeometricAggregateType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_GEOMETRIC_PRIMITIVE_TYPE:
                return validateAbstractGeometricPrimitiveType((AbstractGeometricPrimitiveType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_GEOMETRY_TYPE:
                return validateAbstractGeometryType((AbstractGeometryType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_GML_TYPE:
                return validateAbstractGMLType((AbstractGMLType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_GRIDDED_SURFACE_TYPE:
                return validateAbstractGriddedSurfaceType((AbstractGriddedSurfaceType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_META_DATA_TYPE:
                return validateAbstractMetaDataType((AbstractMetaDataType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_PARAMETRIC_CURVE_SURFACE_TYPE:
                return validateAbstractParametricCurveSurfaceType((AbstractParametricCurveSurfaceType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_POSITIONAL_ACCURACY_TYPE:
                return validateAbstractPositionalAccuracyType((AbstractPositionalAccuracyType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_REFERENCE_SYSTEM_BASE_TYPE:
                return validateAbstractReferenceSystemBaseType((AbstractReferenceSystemBaseType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_REFERENCE_SYSTEM_TYPE:
                return validateAbstractReferenceSystemType((AbstractReferenceSystemType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_RING_PROPERTY_TYPE:
                return validateAbstractRingPropertyType((AbstractRingPropertyType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_RING_TYPE:
                return validateAbstractRingType((AbstractRingType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_SOLID_TYPE:
                return validateAbstractSolidType((AbstractSolidType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_STYLE_TYPE:
                return validateAbstractStyleType((AbstractStyleType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_SURFACE_PATCH_TYPE:
                return validateAbstractSurfacePatchType((AbstractSurfacePatchType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_SURFACE_TYPE:
                return validateAbstractSurfaceType((AbstractSurfaceType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_TIME_COMPLEX_TYPE:
                return validateAbstractTimeComplexType((AbstractTimeComplexType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_TIME_GEOMETRIC_PRIMITIVE_TYPE:
                return validateAbstractTimeGeometricPrimitiveType((AbstractTimeGeometricPrimitiveType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_TIME_OBJECT_TYPE:
                return validateAbstractTimeObjectType((AbstractTimeObjectType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_TIME_PRIMITIVE_TYPE:
                return validateAbstractTimePrimitiveType((AbstractTimePrimitiveType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_TIME_REFERENCE_SYSTEM_TYPE:
                return validateAbstractTimeReferenceSystemType((AbstractTimeReferenceSystemType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_TIME_SLICE_TYPE:
                return validateAbstractTimeSliceType((AbstractTimeSliceType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_TIME_TOPOLOGY_PRIMITIVE_TYPE:
                return validateAbstractTimeTopologyPrimitiveType((AbstractTimeTopologyPrimitiveType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_TOPOLOGY_TYPE:
                return validateAbstractTopologyType((AbstractTopologyType)value, diagnostics, context);
            case Gml311Package.ABSTRACT_TOPO_PRIMITIVE_TYPE:
                return validateAbstractTopoPrimitiveType((AbstractTopoPrimitiveType)value, diagnostics, context);
            case Gml311Package.AFFINE_PLACEMENT_TYPE:
                return validateAffinePlacementType((AffinePlacementType)value, diagnostics, context);
            case Gml311Package.ANGLE_CHOICE_TYPE:
                return validateAngleChoiceType((AngleChoiceType)value, diagnostics, context);
            case Gml311Package.ANGLE_TYPE:
                return validateAngleType((AngleType)value, diagnostics, context);
            case Gml311Package.ARC_BY_BULGE_TYPE:
                return validateArcByBulgeType((ArcByBulgeType)value, diagnostics, context);
            case Gml311Package.ARC_BY_CENTER_POINT_TYPE:
                return validateArcByCenterPointType((ArcByCenterPointType)value, diagnostics, context);
            case Gml311Package.ARC_STRING_BY_BULGE_TYPE:
                return validateArcStringByBulgeType((ArcStringByBulgeType)value, diagnostics, context);
            case Gml311Package.ARC_STRING_TYPE:
                return validateArcStringType((ArcStringType)value, diagnostics, context);
            case Gml311Package.ARC_TYPE:
                return validateArcType((ArcType)value, diagnostics, context);
            case Gml311Package.AREA_TYPE:
                return validateAreaType((AreaType)value, diagnostics, context);
            case Gml311Package.ARRAY_ASSOCIATION_TYPE:
                return validateArrayAssociationType((ArrayAssociationType)value, diagnostics, context);
            case Gml311Package.ARRAY_TYPE:
                return validateArrayType((ArrayType)value, diagnostics, context);
            case Gml311Package.ASSOCIATION_TYPE:
                return validateAssociationType((AssociationType)value, diagnostics, context);
            case Gml311Package.BAG_TYPE:
                return validateBagType((BagType)value, diagnostics, context);
            case Gml311Package.BASE_STYLE_DESCRIPTOR_TYPE:
                return validateBaseStyleDescriptorType((BaseStyleDescriptorType)value, diagnostics, context);
            case Gml311Package.BASE_UNIT_TYPE:
                return validateBaseUnitType((BaseUnitType)value, diagnostics, context);
            case Gml311Package.BEZIER_TYPE:
                return validateBezierType((BezierType)value, diagnostics, context);
            case Gml311Package.BOOLEAN_PROPERTY_TYPE:
                return validateBooleanPropertyType((BooleanPropertyType)value, diagnostics, context);
            case Gml311Package.BOUNDED_FEATURE_TYPE:
                return validateBoundedFeatureType((BoundedFeatureType)value, diagnostics, context);
            case Gml311Package.BOUNDING_SHAPE_TYPE:
                return validateBoundingShapeType((BoundingShapeType)value, diagnostics, context);
            case Gml311Package.BSPLINE_TYPE:
                return validateBSplineType((BSplineType)value, diagnostics, context);
            case Gml311Package.CARTESIAN_CS_REF_TYPE:
                return validateCartesianCSRefType((CartesianCSRefType)value, diagnostics, context);
            case Gml311Package.CARTESIAN_CS_TYPE:
                return validateCartesianCSType((CartesianCSType)value, diagnostics, context);
            case Gml311Package.CATEGORY_EXTENT_TYPE:
                return validateCategoryExtentType((CategoryExtentType)value, diagnostics, context);
            case Gml311Package.CATEGORY_PROPERTY_TYPE:
                return validateCategoryPropertyType((CategoryPropertyType)value, diagnostics, context);
            case Gml311Package.CIRCLE_BY_CENTER_POINT_TYPE:
                return validateCircleByCenterPointType((CircleByCenterPointType)value, diagnostics, context);
            case Gml311Package.CIRCLE_TYPE:
                return validateCircleType((CircleType)value, diagnostics, context);
            case Gml311Package.CLOTHOID_TYPE:
                return validateClothoidType((ClothoidType)value, diagnostics, context);
            case Gml311Package.CODE_LIST_TYPE:
                return validateCodeListType((CodeListType)value, diagnostics, context);
            case Gml311Package.CODE_OR_NULL_LIST_TYPE:
                return validateCodeOrNullListType((CodeOrNullListType)value, diagnostics, context);
            case Gml311Package.CODE_TYPE:
                return validateCodeType((CodeType)value, diagnostics, context);
            case Gml311Package.COMPOSITE_CURVE_PROPERTY_TYPE:
                return validateCompositeCurvePropertyType((CompositeCurvePropertyType)value, diagnostics, context);
            case Gml311Package.COMPOSITE_CURVE_TYPE:
                return validateCompositeCurveType((CompositeCurveType)value, diagnostics, context);
            case Gml311Package.COMPOSITE_SOLID_PROPERTY_TYPE:
                return validateCompositeSolidPropertyType((CompositeSolidPropertyType)value, diagnostics, context);
            case Gml311Package.COMPOSITE_SOLID_TYPE:
                return validateCompositeSolidType((CompositeSolidType)value, diagnostics, context);
            case Gml311Package.COMPOSITE_SURFACE_PROPERTY_TYPE:
                return validateCompositeSurfacePropertyType((CompositeSurfacePropertyType)value, diagnostics, context);
            case Gml311Package.COMPOSITE_SURFACE_TYPE:
                return validateCompositeSurfaceType((CompositeSurfaceType)value, diagnostics, context);
            case Gml311Package.COMPOSITE_VALUE_TYPE:
                return validateCompositeValueType((CompositeValueType)value, diagnostics, context);
            case Gml311Package.COMPOUND_CRS_REF_TYPE:
                return validateCompoundCRSRefType((CompoundCRSRefType)value, diagnostics, context);
            case Gml311Package.COMPOUND_CRS_TYPE:
                return validateCompoundCRSType((CompoundCRSType)value, diagnostics, context);
            case Gml311Package.CONCATENATED_OPERATION_REF_TYPE:
                return validateConcatenatedOperationRefType((ConcatenatedOperationRefType)value, diagnostics, context);
            case Gml311Package.CONCATENATED_OPERATION_TYPE:
                return validateConcatenatedOperationType((ConcatenatedOperationType)value, diagnostics, context);
            case Gml311Package.CONE_TYPE:
                return validateConeType((ConeType)value, diagnostics, context);
            case Gml311Package.CONTAINER_PROPERTY_TYPE:
                return validateContainerPropertyType((ContainerPropertyType)value, diagnostics, context);
            case Gml311Package.CONTROL_POINT_TYPE:
                return validateControlPointType((ControlPointType)value, diagnostics, context);
            case Gml311Package.CONVENTIONAL_UNIT_TYPE:
                return validateConventionalUnitType((ConventionalUnitType)value, diagnostics, context);
            case Gml311Package.CONVERSION_REF_TYPE:
                return validateConversionRefType((ConversionRefType)value, diagnostics, context);
            case Gml311Package.CONVERSION_TO_PREFERRED_UNIT_TYPE:
                return validateConversionToPreferredUnitType((ConversionToPreferredUnitType)value, diagnostics, context);
            case Gml311Package.CONVERSION_TYPE:
                return validateConversionType((ConversionType)value, diagnostics, context);
            case Gml311Package.COORDINATE_OPERATION_REF_TYPE:
                return validateCoordinateOperationRefType((CoordinateOperationRefType)value, diagnostics, context);
            case Gml311Package.COORDINATE_REFERENCE_SYSTEM_REF_TYPE:
                return validateCoordinateReferenceSystemRefType((CoordinateReferenceSystemRefType)value, diagnostics, context);
            case Gml311Package.COORDINATES_TYPE:
                return validateCoordinatesType((CoordinatesType)value, diagnostics, context);
            case Gml311Package.COORDINATE_SYSTEM_AXIS_BASE_TYPE:
                return validateCoordinateSystemAxisBaseType((CoordinateSystemAxisBaseType)value, diagnostics, context);
            case Gml311Package.COORDINATE_SYSTEM_AXIS_REF_TYPE:
                return validateCoordinateSystemAxisRefType((CoordinateSystemAxisRefType)value, diagnostics, context);
            case Gml311Package.COORDINATE_SYSTEM_AXIS_TYPE:
                return validateCoordinateSystemAxisType((CoordinateSystemAxisType)value, diagnostics, context);
            case Gml311Package.COORDINATE_SYSTEM_REF_TYPE:
                return validateCoordinateSystemRefType((CoordinateSystemRefType)value, diagnostics, context);
            case Gml311Package.COORD_TYPE:
                return validateCoordType((CoordType)value, diagnostics, context);
            case Gml311Package.COUNT_PROPERTY_TYPE:
                return validateCountPropertyType((CountPropertyType)value, diagnostics, context);
            case Gml311Package.COVARIANCE_ELEMENT_TYPE:
                return validateCovarianceElementType((CovarianceElementType)value, diagnostics, context);
            case Gml311Package.COVARIANCE_MATRIX_TYPE:
                return validateCovarianceMatrixType((CovarianceMatrixType)value, diagnostics, context);
            case Gml311Package.COVERAGE_FUNCTION_TYPE:
                return validateCoverageFunctionType((CoverageFunctionType)value, diagnostics, context);
            case Gml311Package.CRS_REF_TYPE:
                return validateCRSRefType((CRSRefType)value, diagnostics, context);
            case Gml311Package.CUBIC_SPLINE_TYPE:
                return validateCubicSplineType((CubicSplineType)value, diagnostics, context);
            case Gml311Package.CURVE_ARRAY_PROPERTY_TYPE:
                return validateCurveArrayPropertyType((CurveArrayPropertyType)value, diagnostics, context);
            case Gml311Package.CURVE_PROPERTY_TYPE:
                return validateCurvePropertyType((CurvePropertyType)value, diagnostics, context);
            case Gml311Package.CURVE_SEGMENT_ARRAY_PROPERTY_TYPE:
                return validateCurveSegmentArrayPropertyType((CurveSegmentArrayPropertyType)value, diagnostics, context);
            case Gml311Package.CURVE_TYPE:
                return validateCurveType((CurveType)value, diagnostics, context);
            case Gml311Package.CYLINDER_TYPE:
                return validateCylinderType((CylinderType)value, diagnostics, context);
            case Gml311Package.CYLINDRICAL_CS_REF_TYPE:
                return validateCylindricalCSRefType((CylindricalCSRefType)value, diagnostics, context);
            case Gml311Package.CYLINDRICAL_CS_TYPE:
                return validateCylindricalCSType((CylindricalCSType)value, diagnostics, context);
            case Gml311Package.DATA_BLOCK_TYPE:
                return validateDataBlockType((DataBlockType)value, diagnostics, context);
            case Gml311Package.DATUM_REF_TYPE:
                return validateDatumRefType((DatumRefType)value, diagnostics, context);
            case Gml311Package.DEFAULT_STYLE_PROPERTY_TYPE:
                return validateDefaultStylePropertyType((DefaultStylePropertyType)value, diagnostics, context);
            case Gml311Package.DEFINITION_PROXY_TYPE:
                return validateDefinitionProxyType((DefinitionProxyType)value, diagnostics, context);
            case Gml311Package.DEFINITION_TYPE:
                return validateDefinitionType((DefinitionType)value, diagnostics, context);
            case Gml311Package.DEGREES_TYPE:
                return validateDegreesType((DegreesType)value, diagnostics, context);
            case Gml311Package.DERIVATION_UNIT_TERM_TYPE:
                return validateDerivationUnitTermType((DerivationUnitTermType)value, diagnostics, context);
            case Gml311Package.DERIVED_CRS_REF_TYPE:
                return validateDerivedCRSRefType((DerivedCRSRefType)value, diagnostics, context);
            case Gml311Package.DERIVED_CRS_TYPE:
                return validateDerivedCRSType((DerivedCRSType)value, diagnostics, context);
            case Gml311Package.DERIVED_CRS_TYPE_TYPE:
                return validateDerivedCRSTypeType((DerivedCRSTypeType)value, diagnostics, context);
            case Gml311Package.DERIVED_UNIT_TYPE:
                return validateDerivedUnitType((DerivedUnitType)value, diagnostics, context);
            case Gml311Package.DICTIONARY_ENTRY_TYPE:
                return validateDictionaryEntryType((DictionaryEntryType)value, diagnostics, context);
            case Gml311Package.DICTIONARY_TYPE:
                return validateDictionaryType((DictionaryType)value, diagnostics, context);
            case Gml311Package.DIRECTED_EDGE_PROPERTY_TYPE:
                return validateDirectedEdgePropertyType((DirectedEdgePropertyType)value, diagnostics, context);
            case Gml311Package.DIRECTED_FACE_PROPERTY_TYPE:
                return validateDirectedFacePropertyType((DirectedFacePropertyType)value, diagnostics, context);
            case Gml311Package.DIRECTED_NODE_PROPERTY_TYPE:
                return validateDirectedNodePropertyType((DirectedNodePropertyType)value, diagnostics, context);
            case Gml311Package.DIRECTED_OBSERVATION_AT_DISTANCE_TYPE:
                return validateDirectedObservationAtDistanceType((DirectedObservationAtDistanceType)value, diagnostics, context);
            case Gml311Package.DIRECTED_OBSERVATION_TYPE:
                return validateDirectedObservationType((DirectedObservationType)value, diagnostics, context);
            case Gml311Package.DIRECTED_TOPO_SOLID_PROPERTY_TYPE:
                return validateDirectedTopoSolidPropertyType((DirectedTopoSolidPropertyType)value, diagnostics, context);
            case Gml311Package.DIRECTION_PROPERTY_TYPE:
                return validateDirectionPropertyType((DirectionPropertyType)value, diagnostics, context);
            case Gml311Package.DIRECTION_VECTOR_TYPE:
                return validateDirectionVectorType((DirectionVectorType)value, diagnostics, context);
            case Gml311Package.DIRECT_POSITION_LIST_TYPE:
                return validateDirectPositionListType((DirectPositionListType)value, diagnostics, context);
            case Gml311Package.DIRECT_POSITION_TYPE:
                return validateDirectPositionType((DirectPositionType)value, diagnostics, context);
            case Gml311Package.DMS_ANGLE_TYPE:
                return validateDMSAngleType((DMSAngleType)value, diagnostics, context);
            case Gml311Package.DOCUMENT_ROOT:
                return validateDocumentRoot((DocumentRoot)value, diagnostics, context);
            case Gml311Package.DOMAIN_SET_TYPE:
                return validateDomainSetType((DomainSetType)value, diagnostics, context);
            case Gml311Package.DYNAMIC_FEATURE_COLLECTION_TYPE:
                return validateDynamicFeatureCollectionType((DynamicFeatureCollectionType)value, diagnostics, context);
            case Gml311Package.DYNAMIC_FEATURE_TYPE:
                return validateDynamicFeatureType((DynamicFeatureType)value, diagnostics, context);
            case Gml311Package.EDGE_TYPE:
                return validateEdgeType((EdgeType)value, diagnostics, context);
            case Gml311Package.ELLIPSOIDAL_CS_REF_TYPE:
                return validateEllipsoidalCSRefType((EllipsoidalCSRefType)value, diagnostics, context);
            case Gml311Package.ELLIPSOIDAL_CS_TYPE:
                return validateEllipsoidalCSType((EllipsoidalCSType)value, diagnostics, context);
            case Gml311Package.ELLIPSOID_BASE_TYPE:
                return validateEllipsoidBaseType((EllipsoidBaseType)value, diagnostics, context);
            case Gml311Package.ELLIPSOID_REF_TYPE:
                return validateEllipsoidRefType((EllipsoidRefType)value, diagnostics, context);
            case Gml311Package.ELLIPSOID_TYPE:
                return validateEllipsoidType((EllipsoidType)value, diagnostics, context);
            case Gml311Package.ENGINEERING_CRS_REF_TYPE:
                return validateEngineeringCRSRefType((EngineeringCRSRefType)value, diagnostics, context);
            case Gml311Package.ENGINEERING_CRS_TYPE:
                return validateEngineeringCRSType((EngineeringCRSType)value, diagnostics, context);
            case Gml311Package.ENGINEERING_DATUM_REF_TYPE:
                return validateEngineeringDatumRefType((EngineeringDatumRefType)value, diagnostics, context);
            case Gml311Package.ENGINEERING_DATUM_TYPE:
                return validateEngineeringDatumType((EngineeringDatumType)value, diagnostics, context);
            case Gml311Package.ENVELOPE_TYPE:
                return validateEnvelopeType((EnvelopeType)value, diagnostics, context);
            case Gml311Package.ENVELOPE_WITH_TIME_PERIOD_TYPE:
                return validateEnvelopeWithTimePeriodType((EnvelopeWithTimePeriodType)value, diagnostics, context);
            case Gml311Package.EXTENT_TYPE:
                return validateExtentType((ExtentType)value, diagnostics, context);
            case Gml311Package.FACE_TYPE:
                return validateFaceType((FaceType)value, diagnostics, context);
            case Gml311Package.FEATURE_ARRAY_PROPERTY_TYPE:
                return validateFeatureArrayPropertyType((FeatureArrayPropertyType)value, diagnostics, context);
            case Gml311Package.FEATURE_COLLECTION_TYPE:
                return validateFeatureCollectionType((FeatureCollectionType)value, diagnostics, context);
            case Gml311Package.FEATURE_PROPERTY_TYPE:
                return validateFeaturePropertyType((FeaturePropertyType)value, diagnostics, context);
            case Gml311Package.FEATURE_STYLE_PROPERTY_TYPE:
                return validateFeatureStylePropertyType((FeatureStylePropertyType)value, diagnostics, context);
            case Gml311Package.FEATURE_STYLE_TYPE:
                return validateFeatureStyleType((FeatureStyleType)value, diagnostics, context);
            case Gml311Package.FILE_TYPE:
                return validateFileType((FileType)value, diagnostics, context);
            case Gml311Package.FORMULA_TYPE:
                return validateFormulaType((FormulaType)value, diagnostics, context);
            case Gml311Package.GENERAL_CONVERSION_REF_TYPE:
                return validateGeneralConversionRefType((GeneralConversionRefType)value, diagnostics, context);
            case Gml311Package.GENERAL_TRANSFORMATION_REF_TYPE:
                return validateGeneralTransformationRefType((GeneralTransformationRefType)value, diagnostics, context);
            case Gml311Package.GENERIC_META_DATA_TYPE:
                return validateGenericMetaDataType((GenericMetaDataType)value, diagnostics, context);
            case Gml311Package.GEOCENTRIC_CRS_REF_TYPE:
                return validateGeocentricCRSRefType((GeocentricCRSRefType)value, diagnostics, context);
            case Gml311Package.GEOCENTRIC_CRS_TYPE:
                return validateGeocentricCRSType((GeocentricCRSType)value, diagnostics, context);
            case Gml311Package.GEODESIC_STRING_TYPE:
                return validateGeodesicStringType((GeodesicStringType)value, diagnostics, context);
            case Gml311Package.GEODESIC_TYPE:
                return validateGeodesicType((GeodesicType)value, diagnostics, context);
            case Gml311Package.GEODETIC_DATUM_REF_TYPE:
                return validateGeodeticDatumRefType((GeodeticDatumRefType)value, diagnostics, context);
            case Gml311Package.GEODETIC_DATUM_TYPE:
                return validateGeodeticDatumType((GeodeticDatumType)value, diagnostics, context);
            case Gml311Package.GEOGRAPHIC_CRS_REF_TYPE:
                return validateGeographicCRSRefType((GeographicCRSRefType)value, diagnostics, context);
            case Gml311Package.GEOGRAPHIC_CRS_TYPE:
                return validateGeographicCRSType((GeographicCRSType)value, diagnostics, context);
            case Gml311Package.GEOMETRIC_COMPLEX_PROPERTY_TYPE:
                return validateGeometricComplexPropertyType((GeometricComplexPropertyType)value, diagnostics, context);
            case Gml311Package.GEOMETRIC_COMPLEX_TYPE:
                return validateGeometricComplexType((GeometricComplexType)value, diagnostics, context);
            case Gml311Package.GEOMETRIC_PRIMITIVE_PROPERTY_TYPE:
                return validateGeometricPrimitivePropertyType((GeometricPrimitivePropertyType)value, diagnostics, context);
            case Gml311Package.GEOMETRY_ARRAY_PROPERTY_TYPE:
                return validateGeometryArrayPropertyType((GeometryArrayPropertyType)value, diagnostics, context);
            case Gml311Package.GEOMETRY_PROPERTY_TYPE:
                return validateGeometryPropertyType((GeometryPropertyType)value, diagnostics, context);
            case Gml311Package.GEOMETRY_STYLE_PROPERTY_TYPE:
                return validateGeometryStylePropertyType((GeometryStylePropertyType)value, diagnostics, context);
            case Gml311Package.GEOMETRY_STYLE_TYPE:
                return validateGeometryStyleType((GeometryStyleType)value, diagnostics, context);
            case Gml311Package.GRAPH_STYLE_PROPERTY_TYPE:
                return validateGraphStylePropertyType((GraphStylePropertyType)value, diagnostics, context);
            case Gml311Package.GRAPH_STYLE_TYPE:
                return validateGraphStyleType((GraphStyleType)value, diagnostics, context);
            case Gml311Package.GRID_COVERAGE_TYPE:
                return validateGridCoverageType((GridCoverageType)value, diagnostics, context);
            case Gml311Package.GRID_DOMAIN_TYPE:
                return validateGridDomainType((GridDomainType)value, diagnostics, context);
            case Gml311Package.GRID_ENVELOPE_TYPE:
                return validateGridEnvelopeType((GridEnvelopeType)value, diagnostics, context);
            case Gml311Package.GRID_FUNCTION_TYPE:
                return validateGridFunctionType((GridFunctionType)value, diagnostics, context);
            case Gml311Package.GRID_LENGTH_TYPE:
                return validateGridLengthType((GridLengthType)value, diagnostics, context);
            case Gml311Package.GRID_LIMITS_TYPE:
                return validateGridLimitsType((GridLimitsType)value, diagnostics, context);
            case Gml311Package.GRID_TYPE:
                return validateGridType((GridType)value, diagnostics, context);
            case Gml311Package.HISTORY_PROPERTY_TYPE:
                return validateHistoryPropertyType((HistoryPropertyType)value, diagnostics, context);
            case Gml311Package.IDENTIFIER_TYPE:
                return validateIdentifierType((IdentifierType)value, diagnostics, context);
            case Gml311Package.IMAGE_CRS_REF_TYPE:
                return validateImageCRSRefType((ImageCRSRefType)value, diagnostics, context);
            case Gml311Package.IMAGE_CRS_TYPE:
                return validateImageCRSType((ImageCRSType)value, diagnostics, context);
            case Gml311Package.IMAGE_DATUM_REF_TYPE:
                return validateImageDatumRefType((ImageDatumRefType)value, diagnostics, context);
            case Gml311Package.IMAGE_DATUM_TYPE:
                return validateImageDatumType((ImageDatumType)value, diagnostics, context);
            case Gml311Package.INDEX_MAP_TYPE:
                return validateIndexMapType((IndexMapType)value, diagnostics, context);
            case Gml311Package.INDIRECT_ENTRY_TYPE:
                return validateIndirectEntryType((IndirectEntryType)value, diagnostics, context);
            case Gml311Package.ISOLATED_PROPERTY_TYPE:
                return validateIsolatedPropertyType((IsolatedPropertyType)value, diagnostics, context);
            case Gml311Package.KNOT_PROPERTY_TYPE:
                return validateKnotPropertyType((KnotPropertyType)value, diagnostics, context);
            case Gml311Package.KNOT_TYPE:
                return validateKnotType((KnotType)value, diagnostics, context);
            case Gml311Package.LABEL_STYLE_PROPERTY_TYPE:
                return validateLabelStylePropertyType((LabelStylePropertyType)value, diagnostics, context);
            case Gml311Package.LABEL_STYLE_TYPE:
                return validateLabelStyleType((LabelStyleType)value, diagnostics, context);
            case Gml311Package.LABEL_TYPE:
                return validateLabelType((LabelType)value, diagnostics, context);
            case Gml311Package.LENGTH_TYPE:
                return validateLengthType((LengthType)value, diagnostics, context);
            case Gml311Package.LINEAR_CS_REF_TYPE:
                return validateLinearCSRefType((LinearCSRefType)value, diagnostics, context);
            case Gml311Package.LINEAR_CS_TYPE:
                return validateLinearCSType((LinearCSType)value, diagnostics, context);
            case Gml311Package.LINEAR_RING_PROPERTY_TYPE:
                return validateLinearRingPropertyType((LinearRingPropertyType)value, diagnostics, context);
            case Gml311Package.LINEAR_RING_TYPE:
                return validateLinearRingType((LinearRingType)value, diagnostics, context);
            case Gml311Package.LINE_STRING_PROPERTY_TYPE:
                return validateLineStringPropertyType((LineStringPropertyType)value, diagnostics, context);
            case Gml311Package.LINE_STRING_SEGMENT_ARRAY_PROPERTY_TYPE:
                return validateLineStringSegmentArrayPropertyType((LineStringSegmentArrayPropertyType)value, diagnostics, context);
            case Gml311Package.LINE_STRING_SEGMENT_TYPE:
                return validateLineStringSegmentType((LineStringSegmentType)value, diagnostics, context);
            case Gml311Package.LINE_STRING_TYPE:
                return validateLineStringType((LineStringType)value, diagnostics, context);
            case Gml311Package.LOCATION_PROPERTY_TYPE:
                return validateLocationPropertyType((LocationPropertyType)value, diagnostics, context);
            case Gml311Package.MEASURE_LIST_TYPE:
                return validateMeasureListType((MeasureListType)value, diagnostics, context);
            case Gml311Package.MEASURE_OR_NULL_LIST_TYPE:
                return validateMeasureOrNullListType((MeasureOrNullListType)value, diagnostics, context);
            case Gml311Package.MEASURE_TYPE:
                return validateMeasureType((MeasureType)value, diagnostics, context);
            case Gml311Package.META_DATA_PROPERTY_TYPE:
                return validateMetaDataPropertyType((MetaDataPropertyType)value, diagnostics, context);
            case Gml311Package.MOVING_OBJECT_STATUS_TYPE:
                return validateMovingObjectStatusType((MovingObjectStatusType)value, diagnostics, context);
            case Gml311Package.MULTI_CURVE_COVERAGE_TYPE:
                return validateMultiCurveCoverageType((MultiCurveCoverageType)value, diagnostics, context);
            case Gml311Package.MULTI_CURVE_DOMAIN_TYPE:
                return validateMultiCurveDomainType((MultiCurveDomainType)value, diagnostics, context);
            case Gml311Package.MULTI_CURVE_PROPERTY_TYPE:
                return validateMultiCurvePropertyType((MultiCurvePropertyType)value, diagnostics, context);
            case Gml311Package.MULTI_CURVE_TYPE:
                return validateMultiCurveType((MultiCurveType)value, diagnostics, context);
            case Gml311Package.MULTI_GEOMETRY_PROPERTY_TYPE:
                return validateMultiGeometryPropertyType((MultiGeometryPropertyType)value, diagnostics, context);
            case Gml311Package.MULTI_GEOMETRY_TYPE:
                return validateMultiGeometryType((MultiGeometryType)value, diagnostics, context);
            case Gml311Package.MULTI_LINE_STRING_PROPERTY_TYPE:
                return validateMultiLineStringPropertyType((MultiLineStringPropertyType)value, diagnostics, context);
            case Gml311Package.MULTI_LINE_STRING_TYPE:
                return validateMultiLineStringType((MultiLineStringType)value, diagnostics, context);
            case Gml311Package.MULTI_POINT_COVERAGE_TYPE:
                return validateMultiPointCoverageType((MultiPointCoverageType)value, diagnostics, context);
            case Gml311Package.MULTI_POINT_DOMAIN_TYPE:
                return validateMultiPointDomainType((MultiPointDomainType)value, diagnostics, context);
            case Gml311Package.MULTI_POINT_PROPERTY_TYPE:
                return validateMultiPointPropertyType((MultiPointPropertyType)value, diagnostics, context);
            case Gml311Package.MULTI_POINT_TYPE:
                return validateMultiPointType((MultiPointType)value, diagnostics, context);
            case Gml311Package.MULTI_POLYGON_PROPERTY_TYPE:
                return validateMultiPolygonPropertyType((MultiPolygonPropertyType)value, diagnostics, context);
            case Gml311Package.MULTI_POLYGON_TYPE:
                return validateMultiPolygonType((MultiPolygonType)value, diagnostics, context);
            case Gml311Package.MULTI_SOLID_COVERAGE_TYPE:
                return validateMultiSolidCoverageType((MultiSolidCoverageType)value, diagnostics, context);
            case Gml311Package.MULTI_SOLID_DOMAIN_TYPE:
                return validateMultiSolidDomainType((MultiSolidDomainType)value, diagnostics, context);
            case Gml311Package.MULTI_SOLID_PROPERTY_TYPE:
                return validateMultiSolidPropertyType((MultiSolidPropertyType)value, diagnostics, context);
            case Gml311Package.MULTI_SOLID_TYPE:
                return validateMultiSolidType((MultiSolidType)value, diagnostics, context);
            case Gml311Package.MULTI_SURFACE_COVERAGE_TYPE:
                return validateMultiSurfaceCoverageType((MultiSurfaceCoverageType)value, diagnostics, context);
            case Gml311Package.MULTI_SURFACE_DOMAIN_TYPE:
                return validateMultiSurfaceDomainType((MultiSurfaceDomainType)value, diagnostics, context);
            case Gml311Package.MULTI_SURFACE_PROPERTY_TYPE:
                return validateMultiSurfacePropertyType((MultiSurfacePropertyType)value, diagnostics, context);
            case Gml311Package.MULTI_SURFACE_TYPE:
                return validateMultiSurfaceType((MultiSurfaceType)value, diagnostics, context);
            case Gml311Package.NODE_TYPE:
                return validateNodeType((NodeType)value, diagnostics, context);
            case Gml311Package.OBLIQUE_CARTESIAN_CS_REF_TYPE:
                return validateObliqueCartesianCSRefType((ObliqueCartesianCSRefType)value, diagnostics, context);
            case Gml311Package.OBLIQUE_CARTESIAN_CS_TYPE:
                return validateObliqueCartesianCSType((ObliqueCartesianCSType)value, diagnostics, context);
            case Gml311Package.OBSERVATION_TYPE:
                return validateObservationType((ObservationType)value, diagnostics, context);
            case Gml311Package.OFFSET_CURVE_TYPE:
                return validateOffsetCurveType((OffsetCurveType)value, diagnostics, context);
            case Gml311Package.OPERATION_METHOD_BASE_TYPE:
                return validateOperationMethodBaseType((OperationMethodBaseType)value, diagnostics, context);
            case Gml311Package.OPERATION_METHOD_REF_TYPE:
                return validateOperationMethodRefType((OperationMethodRefType)value, diagnostics, context);
            case Gml311Package.OPERATION_METHOD_TYPE:
                return validateOperationMethodType((OperationMethodType)value, diagnostics, context);
            case Gml311Package.OPERATION_PARAMETER_BASE_TYPE:
                return validateOperationParameterBaseType((OperationParameterBaseType)value, diagnostics, context);
            case Gml311Package.OPERATION_PARAMETER_GROUP_BASE_TYPE:
                return validateOperationParameterGroupBaseType((OperationParameterGroupBaseType)value, diagnostics, context);
            case Gml311Package.OPERATION_PARAMETER_GROUP_REF_TYPE:
                return validateOperationParameterGroupRefType((OperationParameterGroupRefType)value, diagnostics, context);
            case Gml311Package.OPERATION_PARAMETER_GROUP_TYPE:
                return validateOperationParameterGroupType((OperationParameterGroupType)value, diagnostics, context);
            case Gml311Package.OPERATION_PARAMETER_REF_TYPE:
                return validateOperationParameterRefType((OperationParameterRefType)value, diagnostics, context);
            case Gml311Package.OPERATION_PARAMETER_TYPE:
                return validateOperationParameterType((OperationParameterType)value, diagnostics, context);
            case Gml311Package.OPERATION_REF_TYPE:
                return validateOperationRefType((OperationRefType)value, diagnostics, context);
            case Gml311Package.ORIENTABLE_CURVE_TYPE:
                return validateOrientableCurveType((OrientableCurveType)value, diagnostics, context);
            case Gml311Package.ORIENTABLE_SURFACE_TYPE:
                return validateOrientableSurfaceType((OrientableSurfaceType)value, diagnostics, context);
            case Gml311Package.PARAMETER_VALUE_GROUP_TYPE:
                return validateParameterValueGroupType((ParameterValueGroupType)value, diagnostics, context);
            case Gml311Package.PARAMETER_VALUE_TYPE:
                return validateParameterValueType((ParameterValueType)value, diagnostics, context);
            case Gml311Package.PASS_THROUGH_OPERATION_REF_TYPE:
                return validatePassThroughOperationRefType((PassThroughOperationRefType)value, diagnostics, context);
            case Gml311Package.PASS_THROUGH_OPERATION_TYPE:
                return validatePassThroughOperationType((PassThroughOperationType)value, diagnostics, context);
            case Gml311Package.PIXEL_IN_CELL_TYPE:
                return validatePixelInCellType((PixelInCellType)value, diagnostics, context);
            case Gml311Package.POINT_ARRAY_PROPERTY_TYPE:
                return validatePointArrayPropertyType((PointArrayPropertyType)value, diagnostics, context);
            case Gml311Package.POINT_PROPERTY_TYPE:
                return validatePointPropertyType((PointPropertyType)value, diagnostics, context);
            case Gml311Package.POINT_TYPE:
                return validatePointType((PointType)value, diagnostics, context);
            case Gml311Package.POLAR_CS_REF_TYPE:
                return validatePolarCSRefType((PolarCSRefType)value, diagnostics, context);
            case Gml311Package.POLAR_CS_TYPE:
                return validatePolarCSType((PolarCSType)value, diagnostics, context);
            case Gml311Package.POLYGON_PATCH_ARRAY_PROPERTY_TYPE:
                return validatePolygonPatchArrayPropertyType((PolygonPatchArrayPropertyType)value, diagnostics, context);
            case Gml311Package.POLYGON_PATCH_TYPE:
                return validatePolygonPatchType((PolygonPatchType)value, diagnostics, context);
            case Gml311Package.POLYGON_PROPERTY_TYPE:
                return validatePolygonPropertyType((PolygonPropertyType)value, diagnostics, context);
            case Gml311Package.POLYGON_TYPE:
                return validatePolygonType((PolygonType)value, diagnostics, context);
            case Gml311Package.POLYHEDRAL_SURFACE_TYPE:
                return validatePolyhedralSurfaceType((PolyhedralSurfaceType)value, diagnostics, context);
            case Gml311Package.PRIME_MERIDIAN_BASE_TYPE:
                return validatePrimeMeridianBaseType((PrimeMeridianBaseType)value, diagnostics, context);
            case Gml311Package.PRIME_MERIDIAN_REF_TYPE:
                return validatePrimeMeridianRefType((PrimeMeridianRefType)value, diagnostics, context);
            case Gml311Package.PRIME_MERIDIAN_TYPE:
                return validatePrimeMeridianType((PrimeMeridianType)value, diagnostics, context);
            case Gml311Package.PRIORITY_LOCATION_PROPERTY_TYPE:
                return validatePriorityLocationPropertyType((PriorityLocationPropertyType)value, diagnostics, context);
            case Gml311Package.PROJECTED_CRS_REF_TYPE:
                return validateProjectedCRSRefType((ProjectedCRSRefType)value, diagnostics, context);
            case Gml311Package.PROJECTED_CRS_TYPE:
                return validateProjectedCRSType((ProjectedCRSType)value, diagnostics, context);
            case Gml311Package.QUANTITY_EXTENT_TYPE:
                return validateQuantityExtentType((QuantityExtentType)value, diagnostics, context);
            case Gml311Package.QUANTITY_PROPERTY_TYPE:
                return validateQuantityPropertyType((QuantityPropertyType)value, diagnostics, context);
            case Gml311Package.RANGE_PARAMETERS_TYPE:
                return validateRangeParametersType((RangeParametersType)value, diagnostics, context);
            case Gml311Package.RANGE_SET_TYPE:
                return validateRangeSetType((RangeSetType)value, diagnostics, context);
            case Gml311Package.RECTANGLE_TYPE:
                return validateRectangleType((RectangleType)value, diagnostics, context);
            case Gml311Package.RECTIFIED_GRID_COVERAGE_TYPE:
                return validateRectifiedGridCoverageType((RectifiedGridCoverageType)value, diagnostics, context);
            case Gml311Package.RECTIFIED_GRID_DOMAIN_TYPE:
                return validateRectifiedGridDomainType((RectifiedGridDomainType)value, diagnostics, context);
            case Gml311Package.RECTIFIED_GRID_TYPE:
                return validateRectifiedGridType((RectifiedGridType)value, diagnostics, context);
            case Gml311Package.REFERENCE_SYSTEM_REF_TYPE:
                return validateReferenceSystemRefType((ReferenceSystemRefType)value, diagnostics, context);
            case Gml311Package.REFERENCE_TYPE:
                return validateReferenceType((ReferenceType)value, diagnostics, context);
            case Gml311Package.REF_LOCATION_TYPE:
                return validateRefLocationType((RefLocationType)value, diagnostics, context);
            case Gml311Package.RELATED_TIME_TYPE:
                return validateRelatedTimeType((RelatedTimeType)value, diagnostics, context);
            case Gml311Package.RELATIVE_INTERNAL_POSITIONAL_ACCURACY_TYPE:
                return validateRelativeInternalPositionalAccuracyType((RelativeInternalPositionalAccuracyType)value, diagnostics, context);
            case Gml311Package.RING_PROPERTY_TYPE:
                return validateRingPropertyType((RingPropertyType)value, diagnostics, context);
            case Gml311Package.RING_TYPE:
                return validateRingType((RingType)value, diagnostics, context);
            case Gml311Package.ROW_TYPE:
                return validateRowType((RowType)value, diagnostics, context);
            case Gml311Package.SCALAR_VALUE_PROPERTY_TYPE:
                return validateScalarValuePropertyType((ScalarValuePropertyType)value, diagnostics, context);
            case Gml311Package.SCALE_TYPE:
                return validateScaleType((ScaleType)value, diagnostics, context);
            case Gml311Package.SECOND_DEFINING_PARAMETER_TYPE:
                return validateSecondDefiningParameterType((SecondDefiningParameterType)value, diagnostics, context);
            case Gml311Package.SEQUENCE_RULE_TYPE:
                return validateSequenceRuleType((SequenceRuleType)value, diagnostics, context);
            case Gml311Package.SINGLE_OPERATION_REF_TYPE:
                return validateSingleOperationRefType((SingleOperationRefType)value, diagnostics, context);
            case Gml311Package.SOLID_ARRAY_PROPERTY_TYPE:
                return validateSolidArrayPropertyType((SolidArrayPropertyType)value, diagnostics, context);
            case Gml311Package.SOLID_PROPERTY_TYPE:
                return validateSolidPropertyType((SolidPropertyType)value, diagnostics, context);
            case Gml311Package.SOLID_TYPE:
                return validateSolidType((SolidType)value, diagnostics, context);
            case Gml311Package.SPEED_TYPE:
                return validateSpeedType((SpeedType)value, diagnostics, context);
            case Gml311Package.SPHERE_TYPE:
                return validateSphereType((SphereType)value, diagnostics, context);
            case Gml311Package.SPHERICAL_CS_REF_TYPE:
                return validateSphericalCSRefType((SphericalCSRefType)value, diagnostics, context);
            case Gml311Package.SPHERICAL_CS_TYPE:
                return validateSphericalCSType((SphericalCSType)value, diagnostics, context);
            case Gml311Package.STRING_OR_REF_TYPE:
                return validateStringOrRefType((StringOrRefType)value, diagnostics, context);
            case Gml311Package.STYLE_TYPE:
                return validateStyleType((StyleType)value, diagnostics, context);
            case Gml311Package.STYLE_VARIATION_TYPE:
                return validateStyleVariationType((StyleVariationType)value, diagnostics, context);
            case Gml311Package.SURFACE_ARRAY_PROPERTY_TYPE:
                return validateSurfaceArrayPropertyType((SurfaceArrayPropertyType)value, diagnostics, context);
            case Gml311Package.SURFACE_PATCH_ARRAY_PROPERTY_TYPE:
                return validateSurfacePatchArrayPropertyType((SurfacePatchArrayPropertyType)value, diagnostics, context);
            case Gml311Package.SURFACE_PROPERTY_TYPE:
                return validateSurfacePropertyType((SurfacePropertyType)value, diagnostics, context);
            case Gml311Package.SURFACE_TYPE:
                return validateSurfaceType((SurfaceType)value, diagnostics, context);
            case Gml311Package.SYMBOL_TYPE:
                return validateSymbolType((SymbolType)value, diagnostics, context);
            case Gml311Package.TARGET_PROPERTY_TYPE:
                return validateTargetPropertyType((TargetPropertyType)value, diagnostics, context);
            case Gml311Package.TEMPORAL_CRS_REF_TYPE:
                return validateTemporalCRSRefType((TemporalCRSRefType)value, diagnostics, context);
            case Gml311Package.TEMPORAL_CRS_TYPE:
                return validateTemporalCRSType((TemporalCRSType)value, diagnostics, context);
            case Gml311Package.TEMPORAL_CS_REF_TYPE:
                return validateTemporalCSRefType((TemporalCSRefType)value, diagnostics, context);
            case Gml311Package.TEMPORAL_CS_TYPE:
                return validateTemporalCSType((TemporalCSType)value, diagnostics, context);
            case Gml311Package.TEMPORAL_DATUM_BASE_TYPE:
                return validateTemporalDatumBaseType((TemporalDatumBaseType)value, diagnostics, context);
            case Gml311Package.TEMPORAL_DATUM_REF_TYPE:
                return validateTemporalDatumRefType((TemporalDatumRefType)value, diagnostics, context);
            case Gml311Package.TEMPORAL_DATUM_TYPE:
                return validateTemporalDatumType((TemporalDatumType)value, diagnostics, context);
            case Gml311Package.TIME_CALENDAR_ERA_PROPERTY_TYPE:
                return validateTimeCalendarEraPropertyType((TimeCalendarEraPropertyType)value, diagnostics, context);
            case Gml311Package.TIME_CALENDAR_ERA_TYPE:
                return validateTimeCalendarEraType((TimeCalendarEraType)value, diagnostics, context);
            case Gml311Package.TIME_CALENDAR_PROPERTY_TYPE:
                return validateTimeCalendarPropertyType((TimeCalendarPropertyType)value, diagnostics, context);
            case Gml311Package.TIME_CALENDAR_TYPE:
                return validateTimeCalendarType((TimeCalendarType)value, diagnostics, context);
            case Gml311Package.TIME_CLOCK_PROPERTY_TYPE:
                return validateTimeClockPropertyType((TimeClockPropertyType)value, diagnostics, context);
            case Gml311Package.TIME_CLOCK_TYPE:
                return validateTimeClockType((TimeClockType)value, diagnostics, context);
            case Gml311Package.TIME_COORDINATE_SYSTEM_TYPE:
                return validateTimeCoordinateSystemType((TimeCoordinateSystemType)value, diagnostics, context);
            case Gml311Package.TIME_EDGE_PROPERTY_TYPE:
                return validateTimeEdgePropertyType((TimeEdgePropertyType)value, diagnostics, context);
            case Gml311Package.TIME_EDGE_TYPE:
                return validateTimeEdgeType((TimeEdgeType)value, diagnostics, context);
            case Gml311Package.TIME_GEOMETRIC_PRIMITIVE_PROPERTY_TYPE:
                return validateTimeGeometricPrimitivePropertyType((TimeGeometricPrimitivePropertyType)value, diagnostics, context);
            case Gml311Package.TIME_INSTANT_PROPERTY_TYPE:
                return validateTimeInstantPropertyType((TimeInstantPropertyType)value, diagnostics, context);
            case Gml311Package.TIME_INSTANT_TYPE:
                return validateTimeInstantType((TimeInstantType)value, diagnostics, context);
            case Gml311Package.TIME_INTERVAL_LENGTH_TYPE:
                return validateTimeIntervalLengthType((TimeIntervalLengthType)value, diagnostics, context);
            case Gml311Package.TIME_NODE_PROPERTY_TYPE:
                return validateTimeNodePropertyType((TimeNodePropertyType)value, diagnostics, context);
            case Gml311Package.TIME_NODE_TYPE:
                return validateTimeNodeType((TimeNodeType)value, diagnostics, context);
            case Gml311Package.TIME_ORDINAL_ERA_PROPERTY_TYPE:
                return validateTimeOrdinalEraPropertyType((TimeOrdinalEraPropertyType)value, diagnostics, context);
            case Gml311Package.TIME_ORDINAL_ERA_TYPE:
                return validateTimeOrdinalEraType((TimeOrdinalEraType)value, diagnostics, context);
            case Gml311Package.TIME_ORDINAL_REFERENCE_SYSTEM_TYPE:
                return validateTimeOrdinalReferenceSystemType((TimeOrdinalReferenceSystemType)value, diagnostics, context);
            case Gml311Package.TIME_PERIOD_PROPERTY_TYPE:
                return validateTimePeriodPropertyType((TimePeriodPropertyType)value, diagnostics, context);
            case Gml311Package.TIME_PERIOD_TYPE:
                return validateTimePeriodType((TimePeriodType)value, diagnostics, context);
            case Gml311Package.TIME_POSITION_TYPE:
                return validateTimePositionType((TimePositionType)value, diagnostics, context);
            case Gml311Package.TIME_PRIMITIVE_PROPERTY_TYPE:
                return validateTimePrimitivePropertyType((TimePrimitivePropertyType)value, diagnostics, context);
            case Gml311Package.TIME_TOPOLOGY_COMPLEX_PROPERTY_TYPE:
                return validateTimeTopologyComplexPropertyType((TimeTopologyComplexPropertyType)value, diagnostics, context);
            case Gml311Package.TIME_TOPOLOGY_COMPLEX_TYPE:
                return validateTimeTopologyComplexType((TimeTopologyComplexType)value, diagnostics, context);
            case Gml311Package.TIME_TOPOLOGY_PRIMITIVE_PROPERTY_TYPE:
                return validateTimeTopologyPrimitivePropertyType((TimeTopologyPrimitivePropertyType)value, diagnostics, context);
            case Gml311Package.TIME_TYPE:
                return validateTimeType((TimeType)value, diagnostics, context);
            case Gml311Package.TIN_TYPE:
                return validateTinType((TinType)value, diagnostics, context);
            case Gml311Package.TOPO_COMPLEX_MEMBER_TYPE:
                return validateTopoComplexMemberType((TopoComplexMemberType)value, diagnostics, context);
            case Gml311Package.TOPO_COMPLEX_TYPE:
                return validateTopoComplexType((TopoComplexType)value, diagnostics, context);
            case Gml311Package.TOPO_CURVE_PROPERTY_TYPE:
                return validateTopoCurvePropertyType((TopoCurvePropertyType)value, diagnostics, context);
            case Gml311Package.TOPO_CURVE_TYPE:
                return validateTopoCurveType((TopoCurveType)value, diagnostics, context);
            case Gml311Package.TOPOLOGY_STYLE_PROPERTY_TYPE:
                return validateTopologyStylePropertyType((TopologyStylePropertyType)value, diagnostics, context);
            case Gml311Package.TOPOLOGY_STYLE_TYPE:
                return validateTopologyStyleType((TopologyStyleType)value, diagnostics, context);
            case Gml311Package.TOPO_POINT_PROPERTY_TYPE:
                return validateTopoPointPropertyType((TopoPointPropertyType)value, diagnostics, context);
            case Gml311Package.TOPO_POINT_TYPE:
                return validateTopoPointType((TopoPointType)value, diagnostics, context);
            case Gml311Package.TOPO_PRIMITIVE_ARRAY_ASSOCIATION_TYPE:
                return validateTopoPrimitiveArrayAssociationType((TopoPrimitiveArrayAssociationType)value, diagnostics, context);
            case Gml311Package.TOPO_PRIMITIVE_MEMBER_TYPE:
                return validateTopoPrimitiveMemberType((TopoPrimitiveMemberType)value, diagnostics, context);
            case Gml311Package.TOPO_SOLID_TYPE:
                return validateTopoSolidType((TopoSolidType)value, diagnostics, context);
            case Gml311Package.TOPO_SURFACE_PROPERTY_TYPE:
                return validateTopoSurfacePropertyType((TopoSurfacePropertyType)value, diagnostics, context);
            case Gml311Package.TOPO_SURFACE_TYPE:
                return validateTopoSurfaceType((TopoSurfaceType)value, diagnostics, context);
            case Gml311Package.TOPO_VOLUME_PROPERTY_TYPE:
                return validateTopoVolumePropertyType((TopoVolumePropertyType)value, diagnostics, context);
            case Gml311Package.TOPO_VOLUME_TYPE:
                return validateTopoVolumeType((TopoVolumeType)value, diagnostics, context);
            case Gml311Package.TRACK_TYPE:
                return validateTrackType((TrackType)value, diagnostics, context);
            case Gml311Package.TRANSFORMATION_REF_TYPE:
                return validateTransformationRefType((TransformationRefType)value, diagnostics, context);
            case Gml311Package.TRANSFORMATION_TYPE:
                return validateTransformationType((TransformationType)value, diagnostics, context);
            case Gml311Package.TRIANGLE_PATCH_ARRAY_PROPERTY_TYPE:
                return validateTrianglePatchArrayPropertyType((TrianglePatchArrayPropertyType)value, diagnostics, context);
            case Gml311Package.TRIANGLE_TYPE:
                return validateTriangleType((TriangleType)value, diagnostics, context);
            case Gml311Package.TRIANGULATED_SURFACE_TYPE:
                return validateTriangulatedSurfaceType((TriangulatedSurfaceType)value, diagnostics, context);
            case Gml311Package.UNIT_DEFINITION_TYPE:
                return validateUnitDefinitionType((UnitDefinitionType)value, diagnostics, context);
            case Gml311Package.UNIT_OF_MEASURE_TYPE:
                return validateUnitOfMeasureType((UnitOfMeasureType)value, diagnostics, context);
            case Gml311Package.USER_DEFINED_CS_REF_TYPE:
                return validateUserDefinedCSRefType((UserDefinedCSRefType)value, diagnostics, context);
            case Gml311Package.USER_DEFINED_CS_TYPE:
                return validateUserDefinedCSType((UserDefinedCSType)value, diagnostics, context);
            case Gml311Package.VALUE_ARRAY_PROPERTY_TYPE:
                return validateValueArrayPropertyType((ValueArrayPropertyType)value, diagnostics, context);
            case Gml311Package.VALUE_ARRAY_TYPE:
                return validateValueArrayType((ValueArrayType)value, diagnostics, context);
            case Gml311Package.VALUE_PROPERTY_TYPE:
                return validateValuePropertyType((ValuePropertyType)value, diagnostics, context);
            case Gml311Package.VECTOR_TYPE:
                return validateVectorType((VectorType)value, diagnostics, context);
            case Gml311Package.VERTICAL_CRS_REF_TYPE:
                return validateVerticalCRSRefType((VerticalCRSRefType)value, diagnostics, context);
            case Gml311Package.VERTICAL_CRS_TYPE:
                return validateVerticalCRSType((VerticalCRSType)value, diagnostics, context);
            case Gml311Package.VERTICAL_CS_REF_TYPE:
                return validateVerticalCSRefType((VerticalCSRefType)value, diagnostics, context);
            case Gml311Package.VERTICAL_CS_TYPE:
                return validateVerticalCSType((VerticalCSType)value, diagnostics, context);
            case Gml311Package.VERTICAL_DATUM_REF_TYPE:
                return validateVerticalDatumRefType((VerticalDatumRefType)value, diagnostics, context);
            case Gml311Package.VERTICAL_DATUM_TYPE:
                return validateVerticalDatumType((VerticalDatumType)value, diagnostics, context);
            case Gml311Package.VERTICAL_DATUM_TYPE_TYPE:
                return validateVerticalDatumTypeType((VerticalDatumTypeType)value, diagnostics, context);
            case Gml311Package.VOLUME_TYPE:
                return validateVolumeType((VolumeType)value, diagnostics, context);
            case Gml311Package.AESHETIC_CRITERIA_TYPE:
                return validateAesheticCriteriaType((AesheticCriteriaType)value, diagnostics, context);
            case Gml311Package.COMPASS_POINT_ENUMERATION:
                return validateCompassPointEnumeration((CompassPointEnumeration)value, diagnostics, context);
            case Gml311Package.CURVE_INTERPOLATION_TYPE:
                return validateCurveInterpolationType((CurveInterpolationType)value, diagnostics, context);
            case Gml311Package.DIRECTION_TYPE_MEMBER0:
                return validateDirectionTypeMember0((DirectionTypeMember0)value, diagnostics, context);
            case Gml311Package.DRAWING_TYPE_TYPE:
                return validateDrawingTypeType((DrawingTypeType)value, diagnostics, context);
            case Gml311Package.FILE_VALUE_MODEL_TYPE:
                return validateFileValueModelType((FileValueModelType)value, diagnostics, context);
            case Gml311Package.GRAPH_TYPE_TYPE:
                return validateGraphTypeType((GraphTypeType)value, diagnostics, context);
            case Gml311Package.INCREMENT_ORDER:
                return validateIncrementOrder((IncrementOrder)value, diagnostics, context);
            case Gml311Package.IS_SPHERE_TYPE:
                return validateIsSphereType((IsSphereType)value, diagnostics, context);
            case Gml311Package.KNOT_TYPES_TYPE:
                return validateKnotTypesType((KnotTypesType)value, diagnostics, context);
            case Gml311Package.LINE_TYPE_TYPE:
                return validateLineTypeType((LineTypeType)value, diagnostics, context);
            case Gml311Package.NULL_ENUMERATION_MEMBER0:
                return validateNullEnumerationMember0((NullEnumerationMember0)value, diagnostics, context);
            case Gml311Package.QUERY_GRAMMAR_ENUMERATION:
                return validateQueryGrammarEnumeration((QueryGrammarEnumeration)value, diagnostics, context);
            case Gml311Package.RELATIVE_POSITION_TYPE:
                return validateRelativePositionType((RelativePositionType)value, diagnostics, context);
            case Gml311Package.SEQUENCE_RULE_NAMES:
                return validateSequenceRuleNames((SequenceRuleNames)value, diagnostics, context);
            case Gml311Package.SIGN_TYPE:
                return validateSignType((SignType)value, diagnostics, context);
            case Gml311Package.SUCCESSION_TYPE:
                return validateSuccessionType((SuccessionType)value, diagnostics, context);
            case Gml311Package.SURFACE_INTERPOLATION_TYPE:
                return validateSurfaceInterpolationType((SurfaceInterpolationType)value, diagnostics, context);
            case Gml311Package.SYMBOL_TYPE_ENUMERATION:
                return validateSymbolTypeEnumeration((SymbolTypeEnumeration)value, diagnostics, context);
            case Gml311Package.TIME_INDETERMINATE_VALUE_TYPE:
                return validateTimeIndeterminateValueType((TimeIndeterminateValueType)value, diagnostics, context);
            case Gml311Package.TIME_UNIT_TYPE_MEMBER0:
                return validateTimeUnitTypeMember0((TimeUnitTypeMember0)value, diagnostics, context);
            case Gml311Package.AESHETIC_CRITERIA_TYPE_OBJECT:
                return validateAesheticCriteriaTypeObject((AesheticCriteriaType)value, diagnostics, context);
            case Gml311Package.ARC_MINUTES_TYPE:
                return validateArcMinutesType((BigInteger)value, diagnostics, context);
            case Gml311Package.ARC_SECONDS_TYPE:
                return validateArcSecondsType((BigDecimal)value, diagnostics, context);
            case Gml311Package.BOOLEAN_LIST:
                return validateBooleanList((List<?>)value, diagnostics, context);
            case Gml311Package.BOOLEAN_OR_NULL:
                return validateBooleanOrNull(value, diagnostics, context);
            case Gml311Package.BOOLEAN_OR_NULL_LIST:
                return validateBooleanOrNullList((List<?>)value, diagnostics, context);
            case Gml311Package.CAL_DATE:
                return validateCalDate((XMLGregorianCalendar)value, diagnostics, context);
            case Gml311Package.COMPASS_POINT_ENUMERATION_OBJECT:
                return validateCompassPointEnumerationObject((CompassPointEnumeration)value, diagnostics, context);
            case Gml311Package.COUNT_EXTENT_TYPE:
                return validateCountExtentType((List<?>)value, diagnostics, context);
            case Gml311Package.CURVE_INTERPOLATION_TYPE_OBJECT:
                return validateCurveInterpolationTypeObject((CurveInterpolationType)value, diagnostics, context);
            case Gml311Package.DECIMAL_MINUTES_TYPE:
                return validateDecimalMinutesType((BigDecimal)value, diagnostics, context);
            case Gml311Package.DEGREE_VALUE_TYPE:
                return validateDegreeValueType((BigInteger)value, diagnostics, context);
            case Gml311Package.DIRECTION_TYPE:
                return validateDirectionType((Enumerator)value, diagnostics, context);
            case Gml311Package.DIRECTION_TYPE_MEMBER0_OBJECT:
                return validateDirectionTypeMember0Object((DirectionTypeMember0)value, diagnostics, context);
            case Gml311Package.DIRECTION_TYPE_MEMBER1:
                return validateDirectionTypeMember1((SignType)value, diagnostics, context);
            case Gml311Package.DOUBLE_LIST:
                return validateDoubleList((List<?>)value, diagnostics, context);
            case Gml311Package.DOUBLE_OR_NULL:
                return validateDoubleOrNull(value, diagnostics, context);
            case Gml311Package.DOUBLE_OR_NULL_LIST:
                return validateDoubleOrNullList((List<?>)value, diagnostics, context);
            case Gml311Package.DRAWING_TYPE_TYPE_OBJECT:
                return validateDrawingTypeTypeObject((DrawingTypeType)value, diagnostics, context);
            case Gml311Package.FILE_VALUE_MODEL_TYPE_OBJECT:
                return validateFileValueModelTypeObject((FileValueModelType)value, diagnostics, context);
            case Gml311Package.GRAPH_TYPE_TYPE_OBJECT:
                return validateGraphTypeTypeObject((GraphTypeType)value, diagnostics, context);
            case Gml311Package.INCREMENT_ORDER_OBJECT:
                return validateIncrementOrderObject((IncrementOrder)value, diagnostics, context);
            case Gml311Package.INTEGER_LIST:
                return validateIntegerList((List<?>)value, diagnostics, context);
            case Gml311Package.INTEGER_OR_NULL:
                return validateIntegerOrNull(value, diagnostics, context);
            case Gml311Package.INTEGER_OR_NULL_LIST:
                return validateIntegerOrNullList((List<?>)value, diagnostics, context);
            case Gml311Package.IS_SPHERE_TYPE_OBJECT:
                return validateIsSphereTypeObject((IsSphereType)value, diagnostics, context);
            case Gml311Package.KNOT_TYPES_TYPE_OBJECT:
                return validateKnotTypesTypeObject((KnotTypesType)value, diagnostics, context);
            case Gml311Package.LINE_TYPE_TYPE_OBJECT:
                return validateLineTypeTypeObject((LineTypeType)value, diagnostics, context);
            case Gml311Package.NAME_LIST:
                return validateNameList((List<?>)value, diagnostics, context);
            case Gml311Package.NAME_OR_NULL:
                return validateNameOrNull(value, diagnostics, context);
            case Gml311Package.NAME_OR_NULL_LIST:
                return validateNameOrNullList((List<?>)value, diagnostics, context);
            case Gml311Package.NC_NAME_LIST:
                return validateNCNameList((List<?>)value, diagnostics, context);
            case Gml311Package.NULL_ENUMERATION:
                return validateNullEnumeration(value, diagnostics, context);
            case Gml311Package.NULL_ENUMERATION_MEMBER0_OBJECT:
                return validateNullEnumerationMember0Object((NullEnumerationMember0)value, diagnostics, context);
            case Gml311Package.NULL_ENUMERATION_MEMBER1:
                return validateNullEnumerationMember1((String)value, diagnostics, context);
            case Gml311Package.NULL_TYPE:
                return validateNullType(value, diagnostics, context);
            case Gml311Package.QNAME_LIST:
                return validateQNameList((List<?>)value, diagnostics, context);
            case Gml311Package.QUERY_GRAMMAR_ENUMERATION_OBJECT:
                return validateQueryGrammarEnumerationObject((QueryGrammarEnumeration)value, diagnostics, context);
            case Gml311Package.RELATIVE_POSITION_TYPE_OBJECT:
                return validateRelativePositionTypeObject((RelativePositionType)value, diagnostics, context);
            case Gml311Package.SEQUENCE_RULE_NAMES_OBJECT:
                return validateSequenceRuleNamesObject((SequenceRuleNames)value, diagnostics, context);
            case Gml311Package.SIGN_TYPE_OBJECT:
                return validateSignTypeObject((SignType)value, diagnostics, context);
            case Gml311Package.STRING_OR_NULL:
                return validateStringOrNull(value, diagnostics, context);
            case Gml311Package.SUCCESSION_TYPE_OBJECT:
                return validateSuccessionTypeObject((SuccessionType)value, diagnostics, context);
            case Gml311Package.SURFACE_INTERPOLATION_TYPE_OBJECT:
                return validateSurfaceInterpolationTypeObject((SurfaceInterpolationType)value, diagnostics, context);
            case Gml311Package.SYMBOL_TYPE_ENUMERATION_OBJECT:
                return validateSymbolTypeEnumerationObject((SymbolTypeEnumeration)value, diagnostics, context);
            case Gml311Package.TIME_INDETERMINATE_VALUE_TYPE_OBJECT:
                return validateTimeIndeterminateValueTypeObject((TimeIndeterminateValueType)value, diagnostics, context);
            case Gml311Package.TIME_POSITION_UNION:
                return validateTimePositionUnion(value, diagnostics, context);
            case Gml311Package.TIME_UNIT_TYPE:
                return validateTimeUnitType(value, diagnostics, context);
            case Gml311Package.TIME_UNIT_TYPE_MEMBER0_OBJECT:
                return validateTimeUnitTypeMember0Object((TimeUnitTypeMember0)value, diagnostics, context);
            case Gml311Package.TIME_UNIT_TYPE_MEMBER1:
                return validateTimeUnitTypeMember1((String)value, diagnostics, context);
            default:
                return true;
        }
    }

