    /**
     * Validates the MemberTypes constraint of '<em>Name Or Null</em>'.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public boolean validateNameOrNull_MemberTypes(Object nameOrNull, DiagnosticChain diagnostics, Map<Object, Object> context) {
        if (diagnostics != null) {
            BasicDiagnostic tempDiagnostics = new BasicDiagnostic();
            if (Gml311Package.eINSTANCE.getNullEnumeration().isInstance(nameOrNull)) {
                if (validateNullEnumeration(nameOrNull, tempDiagnostics, context)) return true;
            }
            if (XMLTypePackage.Literals.NAME.isInstance(nameOrNull)) {
                if (xmlTypeValidator.validateName((String)nameOrNull, tempDiagnostics, context)) return true;
            }
            if (XMLTypePackage.Literals.ANY_URI.isInstance(nameOrNull)) {
                if (xmlTypeValidator.validateAnyURI((String)nameOrNull, tempDiagnostics, context)) return true;
            }
            for (Diagnostic diagnostic : tempDiagnostics.getChildren()) {
                diagnostics.add(diagnostic);
            }
        }
        else {
            if (Gml311Package.eINSTANCE.getNullEnumeration().isInstance(nameOrNull)) {
                if (validateNullEnumeration(nameOrNull, null, context)) return true;
            }
            if (XMLTypePackage.Literals.NAME.isInstance(nameOrNull)) {
                if (xmlTypeValidator.validateName((String)nameOrNull, null, context)) return true;
            }
            if (XMLTypePackage.Literals.ANY_URI.isInstance(nameOrNull)) {
                if (xmlTypeValidator.validateAnyURI((String)nameOrNull, null, context)) return true;
            }
        }
        return false;
    }

