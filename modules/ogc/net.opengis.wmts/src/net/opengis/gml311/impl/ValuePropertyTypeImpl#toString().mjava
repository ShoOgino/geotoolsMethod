    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public String toString() {
        if (eIsProxy()) return super.toString();

        StringBuffer result = new StringBuffer(super.toString());
        result.append(" (boolean: ");
        if (booleanESet) result.append(boolean_); else result.append("<unset>");
        result.append(", count: ");
        result.append(count);
        result.append(", booleanList: ");
        result.append(booleanList);
        result.append(", countList: ");
        result.append(countList);
        result.append(", countExtent: ");
        result.append(countExtent);
        result.append(", compositeValueGroup: ");
        result.append(compositeValueGroup);
        result.append(", objectGroup: ");
        result.append(objectGroup);
        result.append(", null: ");
        result.append(null_);
        result.append(", actuate: ");
        if (actuateESet) result.append(actuate); else result.append("<unset>");
        result.append(", arcrole: ");
        result.append(arcrole);
        result.append(", href: ");
        result.append(href);
        result.append(", remoteSchema: ");
        result.append(remoteSchema);
        result.append(", role: ");
        result.append(role);
        result.append(", show: ");
        if (showESet) result.append(show); else result.append("<unset>");
        result.append(", title: ");
        result.append(title);
        result.append(", type: ");
        if (typeESet) result.append(type); else result.append("<unset>");
        result.append(')');
        return result.toString();
    }

