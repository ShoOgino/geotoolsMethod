    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @SuppressWarnings("unchecked")
    @Override
    public void eSet(int featureID, Object newValue) {
        switch (featureID) {
            case Gml311Package.ABSTRACT_COORDINATE_OPERATION_TYPE__COORDINATE_OPERATION_ID:
                getCoordinateOperationID().clear();
                getCoordinateOperationID().addAll((Collection<? extends IdentifierType>)newValue);
                return;
            case Gml311Package.ABSTRACT_COORDINATE_OPERATION_TYPE__REMARKS:
                setRemarks((StringOrRefType)newValue);
                return;
            case Gml311Package.ABSTRACT_COORDINATE_OPERATION_TYPE__OPERATION_VERSION:
                setOperationVersion((String)newValue);
                return;
            case Gml311Package.ABSTRACT_COORDINATE_OPERATION_TYPE__VALID_AREA:
                setValidArea((ExtentType)newValue);
                return;
            case Gml311Package.ABSTRACT_COORDINATE_OPERATION_TYPE__SCOPE:
                setScope((String)newValue);
                return;
            case Gml311Package.ABSTRACT_COORDINATE_OPERATION_TYPE__POSITIONAL_ACCURACY_GROUP:
                ((FeatureMap.Internal)getPositionalAccuracyGroup()).set(newValue);
                return;
            case Gml311Package.ABSTRACT_COORDINATE_OPERATION_TYPE__SOURCE_CRS:
                setSourceCRS((CRSRefType)newValue);
                return;
            case Gml311Package.ABSTRACT_COORDINATE_OPERATION_TYPE__TARGET_CRS:
                setTargetCRS((CRSRefType)newValue);
                return;
        }
        super.eSet(featureID, newValue);
    }

