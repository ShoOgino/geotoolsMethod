    /**
     * Calls <code>validateXXX</code> for the corresponding classifier of the model.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    protected boolean validate(int classifierID, Object value, DiagnosticChain diagnostics, Map<Object, Object> context) {
        switch (classifierID) {
            case wmtsv_1Package.BINARY_PAYLOAD_TYPE:
                return validateBinaryPayloadType((BinaryPayloadType)value, diagnostics, context);
            case wmtsv_1Package.CAPABILITIES_TYPE:
                return validateCapabilitiesType((CapabilitiesType)value, diagnostics, context);
            case wmtsv_1Package.CONTENTS_TYPE:
                return validateContentsType((ContentsType)value, diagnostics, context);
            case wmtsv_1Package.DIMENSION_NAME_VALUE_TYPE:
                return validateDimensionNameValueType((DimensionNameValueType)value, diagnostics, context);
            case wmtsv_1Package.DIMENSION_TYPE:
                return validateDimensionType((DimensionType)value, diagnostics, context);
            case wmtsv_1Package.DOCUMENT_ROOT:
                return validateDocumentRoot((DocumentRoot)value, diagnostics, context);
            case wmtsv_1Package.FEATURE_INFO_RESPONSE_TYPE:
                return validateFeatureInfoResponseType((FeatureInfoResponseType)value, diagnostics, context);
            case wmtsv_1Package.GET_CAPABILITIES_TYPE:
                return validateGetCapabilitiesType((GetCapabilitiesType)value, diagnostics, context);
            case wmtsv_1Package.GET_FEATURE_INFO_TYPE:
                return validateGetFeatureInfoType((GetFeatureInfoType)value, diagnostics, context);
            case wmtsv_1Package.GET_TILE_TYPE:
                return validateGetTileType((GetTileType)value, diagnostics, context);
            case wmtsv_1Package.LAYER_TYPE:
                return validateLayerType((LayerType)value, diagnostics, context);
            case wmtsv_1Package.LEGEND_URL_TYPE:
                return validateLegendURLType((LegendURLType)value, diagnostics, context);
            case wmtsv_1Package.STYLE_TYPE:
                return validateStyleType((StyleType)value, diagnostics, context);
            case wmtsv_1Package.TEXT_PAYLOAD_TYPE:
                return validateTextPayloadType((TextPayloadType)value, diagnostics, context);
            case wmtsv_1Package.THEMES_TYPE:
                return validateThemesType((ThemesType)value, diagnostics, context);
            case wmtsv_1Package.THEME_TYPE:
                return validateThemeType((ThemeType)value, diagnostics, context);
            case wmtsv_1Package.TILE_MATRIX_LIMITS_TYPE:
                return validateTileMatrixLimitsType((TileMatrixLimitsType)value, diagnostics, context);
            case wmtsv_1Package.TILE_MATRIX_SET_LIMITS_TYPE:
                return validateTileMatrixSetLimitsType((TileMatrixSetLimitsType)value, diagnostics, context);
            case wmtsv_1Package.TILE_MATRIX_SET_LINK_TYPE:
                return validateTileMatrixSetLinkType((TileMatrixSetLinkType)value, diagnostics, context);
            case wmtsv_1Package.TILE_MATRIX_SET_TYPE:
                return validateTileMatrixSetType((TileMatrixSetType)value, diagnostics, context);
            case wmtsv_1Package.TILE_MATRIX_TYPE:
                return validateTileMatrixType((TileMatrixType)value, diagnostics, context);
            case wmtsv_1Package.URL_TEMPLATE_TYPE:
                return validateURLTemplateType((URLTemplateType)value, diagnostics, context);
            case wmtsv_1Package.GET_CAPABILITIES_VALUE_TYPE:
                return validateGetCapabilitiesValueType((GetCapabilitiesValueType)value, diagnostics, context);
            case wmtsv_1Package.GET_FEATURE_INFO_VALUE_TYPE:
                return validateGetFeatureInfoValueType((GetFeatureInfoValueType)value, diagnostics, context);
            case wmtsv_1Package.GET_TILE_VALUE_TYPE:
                return validateGetTileValueType((GetTileValueType)value, diagnostics, context);
            case wmtsv_1Package.REQUEST_SERVICE_TYPE:
                return validateRequestServiceType((RequestServiceType)value, diagnostics, context);
            case wmtsv_1Package.RESOURCE_TYPE_TYPE:
                return validateResourceTypeType((ResourceTypeType)value, diagnostics, context);
            case wmtsv_1Package.VERSION_TYPE:
                return validateVersionType((VersionType)value, diagnostics, context);
            case wmtsv_1Package.ACCEPTED_FORMATS_TYPE:
                return validateAcceptedFormatsType((String)value, diagnostics, context);
            case wmtsv_1Package.GET_CAPABILITIES_VALUE_TYPE_OBJECT:
                return validateGetCapabilitiesValueTypeObject((GetCapabilitiesValueType)value, diagnostics, context);
            case wmtsv_1Package.GET_FEATURE_INFO_VALUE_TYPE_OBJECT:
                return validateGetFeatureInfoValueTypeObject((GetFeatureInfoValueType)value, diagnostics, context);
            case wmtsv_1Package.GET_TILE_VALUE_TYPE_OBJECT:
                return validateGetTileValueTypeObject((GetTileValueType)value, diagnostics, context);
            case wmtsv_1Package.REQUEST_SERVICE_TYPE_OBJECT:
                return validateRequestServiceTypeObject((RequestServiceType)value, diagnostics, context);
            case wmtsv_1Package.RESOURCE_TYPE_TYPE_OBJECT:
                return validateResourceTypeTypeObject((ResourceTypeType)value, diagnostics, context);
            case wmtsv_1Package.SECTIONS_TYPE:
                return validateSectionsType((String)value, diagnostics, context);
            case wmtsv_1Package.TEMPLATE_TYPE:
                return validateTemplateType((String)value, diagnostics, context);
            case wmtsv_1Package.VERSION_TYPE_OBJECT:
                return validateVersionTypeObject((VersionType)value, diagnostics, context);
            default:
                return true;
        }
    }

