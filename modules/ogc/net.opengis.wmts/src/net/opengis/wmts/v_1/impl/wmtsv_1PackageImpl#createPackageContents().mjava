    /**
     * Creates the meta-model objects for the package.  This method is
     * guarded to have no affect on any invocation but its first.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void createPackageContents() {
        if (isCreated) return;
        isCreated = true;

        // Create classes and their features
        binaryPayloadTypeEClass = createEClass(BINARY_PAYLOAD_TYPE);
        createEAttribute(binaryPayloadTypeEClass, BINARY_PAYLOAD_TYPE__FORMAT);
        createEAttribute(binaryPayloadTypeEClass, BINARY_PAYLOAD_TYPE__BINARY_CONTENT);

        capabilitiesTypeEClass = createEClass(CAPABILITIES_TYPE);
        createEReference(capabilitiesTypeEClass, CAPABILITIES_TYPE__CONTENTS);
        createEReference(capabilitiesTypeEClass, CAPABILITIES_TYPE__THEMES);
        createEReference(capabilitiesTypeEClass, CAPABILITIES_TYPE__WSDL);
        createEReference(capabilitiesTypeEClass, CAPABILITIES_TYPE__SERVICE_METADATA_URL);

        contentsTypeEClass = createEClass(CONTENTS_TYPE);
        createEReference(contentsTypeEClass, CONTENTS_TYPE__TILE_MATRIX_SET);

        dimensionNameValueTypeEClass = createEClass(DIMENSION_NAME_VALUE_TYPE);
        createEAttribute(dimensionNameValueTypeEClass, DIMENSION_NAME_VALUE_TYPE__VALUE);
        createEAttribute(dimensionNameValueTypeEClass, DIMENSION_NAME_VALUE_TYPE__NAME);

        dimensionTypeEClass = createEClass(DIMENSION_TYPE);
        createEReference(dimensionTypeEClass, DIMENSION_TYPE__IDENTIFIER);
        createEReference(dimensionTypeEClass, DIMENSION_TYPE__UOM);
        createEAttribute(dimensionTypeEClass, DIMENSION_TYPE__UNIT_SYMBOL);
        createEAttribute(dimensionTypeEClass, DIMENSION_TYPE__DEFAULT);
        createEAttribute(dimensionTypeEClass, DIMENSION_TYPE__CURRENT);
        createEAttribute(dimensionTypeEClass, DIMENSION_TYPE__VALUE);

        documentRootEClass = createEClass(DOCUMENT_ROOT);
        createEAttribute(documentRootEClass, DOCUMENT_ROOT__MIXED);
        createEReference(documentRootEClass, DOCUMENT_ROOT__XMLNS_PREFIX_MAP);
        createEReference(documentRootEClass, DOCUMENT_ROOT__XSI_SCHEMA_LOCATION);
        createEReference(documentRootEClass, DOCUMENT_ROOT__BINARY_PAYLOAD);
        createEReference(documentRootEClass, DOCUMENT_ROOT__CAPABILITIES);
        createEReference(documentRootEClass, DOCUMENT_ROOT__DIMENSION);
        createEReference(documentRootEClass, DOCUMENT_ROOT__DIMENSION_NAME_VALUE);
        createEReference(documentRootEClass, DOCUMENT_ROOT__FEATURE_INFO_RESPONSE);
        createEReference(documentRootEClass, DOCUMENT_ROOT__GET_CAPABILITIES);
        createEReference(documentRootEClass, DOCUMENT_ROOT__GET_FEATURE_INFO);
        createEReference(documentRootEClass, DOCUMENT_ROOT__GET_TILE);
        createEReference(documentRootEClass, DOCUMENT_ROOT__LAYER);
        createEReference(documentRootEClass, DOCUMENT_ROOT__LEGEND_URL);
        createEReference(documentRootEClass, DOCUMENT_ROOT__STYLE);
        createEReference(documentRootEClass, DOCUMENT_ROOT__TEXT_PAYLOAD);
        createEReference(documentRootEClass, DOCUMENT_ROOT__THEME);
        createEReference(documentRootEClass, DOCUMENT_ROOT__THEMES);
        createEReference(documentRootEClass, DOCUMENT_ROOT__TILE_MATRIX);
        createEReference(documentRootEClass, DOCUMENT_ROOT__TILE_MATRIX_LIMITS);
        createEReference(documentRootEClass, DOCUMENT_ROOT__TILE_MATRIX_SET);
        createEReference(documentRootEClass, DOCUMENT_ROOT__TILE_MATRIX_SET_LIMITS);
        createEReference(documentRootEClass, DOCUMENT_ROOT__TILE_MATRIX_SET_LINK);

        featureInfoResponseTypeEClass = createEClass(FEATURE_INFO_RESPONSE_TYPE);
        createEAttribute(featureInfoResponseTypeEClass, FEATURE_INFO_RESPONSE_TYPE__FEATURE_COLLECTION_GROUP);
        createEReference(featureInfoResponseTypeEClass, FEATURE_INFO_RESPONSE_TYPE__FEATURE_COLLECTION);
        createEReference(featureInfoResponseTypeEClass, FEATURE_INFO_RESPONSE_TYPE__TEXT_PAYLOAD);
        createEReference(featureInfoResponseTypeEClass, FEATURE_INFO_RESPONSE_TYPE__BINARY_PAYLOAD);
        createEReference(featureInfoResponseTypeEClass, FEATURE_INFO_RESPONSE_TYPE__ANY_CONTENT);

        getCapabilitiesTypeEClass = createEClass(GET_CAPABILITIES_TYPE);
        createEAttribute(getCapabilitiesTypeEClass, GET_CAPABILITIES_TYPE__SERVICE);

        getFeatureInfoTypeEClass = createEClass(GET_FEATURE_INFO_TYPE);
        createEReference(getFeatureInfoTypeEClass, GET_FEATURE_INFO_TYPE__GET_TILE);
        createEAttribute(getFeatureInfoTypeEClass, GET_FEATURE_INFO_TYPE__J);
        createEAttribute(getFeatureInfoTypeEClass, GET_FEATURE_INFO_TYPE__I);
        createEAttribute(getFeatureInfoTypeEClass, GET_FEATURE_INFO_TYPE__INFO_FORMAT);
        createEAttribute(getFeatureInfoTypeEClass, GET_FEATURE_INFO_TYPE__SERVICE);
        createEAttribute(getFeatureInfoTypeEClass, GET_FEATURE_INFO_TYPE__VERSION);

        getTileTypeEClass = createEClass(GET_TILE_TYPE);
        createEAttribute(getTileTypeEClass, GET_TILE_TYPE__LAYER);
        createEAttribute(getTileTypeEClass, GET_TILE_TYPE__STYLE);
        createEAttribute(getTileTypeEClass, GET_TILE_TYPE__FORMAT);
        createEReference(getTileTypeEClass, GET_TILE_TYPE__DIMENSION_NAME_VALUE);
        createEAttribute(getTileTypeEClass, GET_TILE_TYPE__TILE_MATRIX_SET);
        createEAttribute(getTileTypeEClass, GET_TILE_TYPE__TILE_MATRIX);
        createEAttribute(getTileTypeEClass, GET_TILE_TYPE__TILE_ROW);
        createEAttribute(getTileTypeEClass, GET_TILE_TYPE__TILE_COL);
        createEAttribute(getTileTypeEClass, GET_TILE_TYPE__SERVICE);
        createEAttribute(getTileTypeEClass, GET_TILE_TYPE__VERSION);

        layerTypeEClass = createEClass(LAYER_TYPE);
        createEReference(layerTypeEClass, LAYER_TYPE__STYLE);
        createEAttribute(layerTypeEClass, LAYER_TYPE__FORMAT);
        createEAttribute(layerTypeEClass, LAYER_TYPE__INFO_FORMAT);
        createEReference(layerTypeEClass, LAYER_TYPE__DIMENSION);
        createEReference(layerTypeEClass, LAYER_TYPE__TILE_MATRIX_SET_LINK);
        createEReference(layerTypeEClass, LAYER_TYPE__RESOURCE_URL);

        legendURLTypeEClass = createEClass(LEGEND_URL_TYPE);
        createEAttribute(legendURLTypeEClass, LEGEND_URL_TYPE__FORMAT);
        createEAttribute(legendURLTypeEClass, LEGEND_URL_TYPE__HEIGHT);
        createEAttribute(legendURLTypeEClass, LEGEND_URL_TYPE__MAX_SCALE_DENOMINATOR);
        createEAttribute(legendURLTypeEClass, LEGEND_URL_TYPE__MIN_SCALE_DENOMINATOR);
        createEAttribute(legendURLTypeEClass, LEGEND_URL_TYPE__WIDTH);

        styleTypeEClass = createEClass(STYLE_TYPE);
        createEReference(styleTypeEClass, STYLE_TYPE__IDENTIFIER);
        createEReference(styleTypeEClass, STYLE_TYPE__LEGEND_URL);
        createEAttribute(styleTypeEClass, STYLE_TYPE__IS_DEFAULT);

        textPayloadTypeEClass = createEClass(TEXT_PAYLOAD_TYPE);
        createEAttribute(textPayloadTypeEClass, TEXT_PAYLOAD_TYPE__FORMAT);
        createEAttribute(textPayloadTypeEClass, TEXT_PAYLOAD_TYPE__TEXT_CONTENT);

        themesTypeEClass = createEClass(THEMES_TYPE);
        createEReference(themesTypeEClass, THEMES_TYPE__THEME);

        themeTypeEClass = createEClass(THEME_TYPE);
        createEReference(themeTypeEClass, THEME_TYPE__IDENTIFIER);
        createEReference(themeTypeEClass, THEME_TYPE__THEME);
        createEAttribute(themeTypeEClass, THEME_TYPE__LAYER_REF);

        tileMatrixLimitsTypeEClass = createEClass(TILE_MATRIX_LIMITS_TYPE);
        createEAttribute(tileMatrixLimitsTypeEClass, TILE_MATRIX_LIMITS_TYPE__TILE_MATRIX);
        createEAttribute(tileMatrixLimitsTypeEClass, TILE_MATRIX_LIMITS_TYPE__MIN_TILE_ROW);
        createEAttribute(tileMatrixLimitsTypeEClass, TILE_MATRIX_LIMITS_TYPE__MAX_TILE_ROW);
        createEAttribute(tileMatrixLimitsTypeEClass, TILE_MATRIX_LIMITS_TYPE__MIN_TILE_COL);
        createEAttribute(tileMatrixLimitsTypeEClass, TILE_MATRIX_LIMITS_TYPE__MAX_TILE_COL);

        tileMatrixSetLimitsTypeEClass = createEClass(TILE_MATRIX_SET_LIMITS_TYPE);
        createEReference(tileMatrixSetLimitsTypeEClass, TILE_MATRIX_SET_LIMITS_TYPE__TILE_MATRIX_LIMITS);

        tileMatrixSetLinkTypeEClass = createEClass(TILE_MATRIX_SET_LINK_TYPE);
        createEAttribute(tileMatrixSetLinkTypeEClass, TILE_MATRIX_SET_LINK_TYPE__TILE_MATRIX_SET);
        createEReference(tileMatrixSetLinkTypeEClass, TILE_MATRIX_SET_LINK_TYPE__TILE_MATRIX_SET_LIMITS);

        tileMatrixSetTypeEClass = createEClass(TILE_MATRIX_SET_TYPE);
        createEReference(tileMatrixSetTypeEClass, TILE_MATRIX_SET_TYPE__IDENTIFIER);
        createEAttribute(tileMatrixSetTypeEClass, TILE_MATRIX_SET_TYPE__BOUNDING_BOX_GROUP);
        createEReference(tileMatrixSetTypeEClass, TILE_MATRIX_SET_TYPE__BOUNDING_BOX);
        createEAttribute(tileMatrixSetTypeEClass, TILE_MATRIX_SET_TYPE__SUPPORTED_CRS);
        createEAttribute(tileMatrixSetTypeEClass, TILE_MATRIX_SET_TYPE__WELL_KNOWN_SCALE_SET);
        createEReference(tileMatrixSetTypeEClass, TILE_MATRIX_SET_TYPE__TILE_MATRIX);

        tileMatrixTypeEClass = createEClass(TILE_MATRIX_TYPE);
        createEReference(tileMatrixTypeEClass, TILE_MATRIX_TYPE__IDENTIFIER);
        createEAttribute(tileMatrixTypeEClass, TILE_MATRIX_TYPE__SCALE_DENOMINATOR);
        createEAttribute(tileMatrixTypeEClass, TILE_MATRIX_TYPE__TOP_LEFT_CORNER);
        createEAttribute(tileMatrixTypeEClass, TILE_MATRIX_TYPE__TILE_WIDTH);
        createEAttribute(tileMatrixTypeEClass, TILE_MATRIX_TYPE__TILE_HEIGHT);
        createEAttribute(tileMatrixTypeEClass, TILE_MATRIX_TYPE__MATRIX_WIDTH);
        createEAttribute(tileMatrixTypeEClass, TILE_MATRIX_TYPE__MATRIX_HEIGHT);

        urlTemplateTypeEClass = createEClass(URL_TEMPLATE_TYPE);
        createEAttribute(urlTemplateTypeEClass, URL_TEMPLATE_TYPE__FORMAT);
        createEAttribute(urlTemplateTypeEClass, URL_TEMPLATE_TYPE__RESOURCE_TYPE);
        createEAttribute(urlTemplateTypeEClass, URL_TEMPLATE_TYPE__TEMPLATE);

        // Create enums
        getCapabilitiesValueTypeEEnum = createEEnum(GET_CAPABILITIES_VALUE_TYPE);
        getFeatureInfoValueTypeEEnum = createEEnum(GET_FEATURE_INFO_VALUE_TYPE);
        getTileValueTypeEEnum = createEEnum(GET_TILE_VALUE_TYPE);
        requestServiceTypeEEnum = createEEnum(REQUEST_SERVICE_TYPE);
        resourceTypeTypeEEnum = createEEnum(RESOURCE_TYPE_TYPE);
        versionTypeEEnum = createEEnum(VERSION_TYPE);

        // Create data types
        acceptedFormatsTypeEDataType = createEDataType(ACCEPTED_FORMATS_TYPE);
        getCapabilitiesValueTypeObjectEDataType = createEDataType(GET_CAPABILITIES_VALUE_TYPE_OBJECT);
        getFeatureInfoValueTypeObjectEDataType = createEDataType(GET_FEATURE_INFO_VALUE_TYPE_OBJECT);
        getTileValueTypeObjectEDataType = createEDataType(GET_TILE_VALUE_TYPE_OBJECT);
        requestServiceTypeObjectEDataType = createEDataType(REQUEST_SERVICE_TYPE_OBJECT);
        resourceTypeTypeObjectEDataType = createEDataType(RESOURCE_TYPE_TYPE_OBJECT);
        sectionsTypeEDataType = createEDataType(SECTIONS_TYPE);
        templateTypeEDataType = createEDataType(TEMPLATE_TYPE);
        versionTypeObjectEDataType = createEDataType(VERSION_TYPE_OBJECT);
    }

