    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public EObject create(EClass eClass) {
        switch (eClass.getClassifierID()) {
            case wmtsv_1Package.BINARY_PAYLOAD_TYPE: return createBinaryPayloadType();
            case wmtsv_1Package.CAPABILITIES_TYPE: return createCapabilitiesType();
            case wmtsv_1Package.CONTENTS_TYPE: return createContentsType();
            case wmtsv_1Package.DIMENSION_NAME_VALUE_TYPE: return createDimensionNameValueType();
            case wmtsv_1Package.DIMENSION_TYPE: return createDimensionType();
            case wmtsv_1Package.DOCUMENT_ROOT: return createDocumentRoot();
            case wmtsv_1Package.FEATURE_INFO_RESPONSE_TYPE: return createFeatureInfoResponseType();
            case wmtsv_1Package.GET_CAPABILITIES_TYPE: return createGetCapabilitiesType();
            case wmtsv_1Package.GET_FEATURE_INFO_TYPE: return createGetFeatureInfoType();
            case wmtsv_1Package.GET_TILE_TYPE: return createGetTileType();
            case wmtsv_1Package.LAYER_TYPE: return createLayerType();
            case wmtsv_1Package.LEGEND_URL_TYPE: return createLegendURLType();
            case wmtsv_1Package.STYLE_TYPE: return createStyleType();
            case wmtsv_1Package.TEXT_PAYLOAD_TYPE: return createTextPayloadType();
            case wmtsv_1Package.THEMES_TYPE: return createThemesType();
            case wmtsv_1Package.THEME_TYPE: return createThemeType();
            case wmtsv_1Package.TILE_MATRIX_LIMITS_TYPE: return createTileMatrixLimitsType();
            case wmtsv_1Package.TILE_MATRIX_SET_LIMITS_TYPE: return createTileMatrixSetLimitsType();
            case wmtsv_1Package.TILE_MATRIX_SET_LINK_TYPE: return createTileMatrixSetLinkType();
            case wmtsv_1Package.TILE_MATRIX_SET_TYPE: return createTileMatrixSetType();
            case wmtsv_1Package.TILE_MATRIX_TYPE: return createTileMatrixType();
            case wmtsv_1Package.URL_TEMPLATE_TYPE: return createURLTemplateType();
            default:
                throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
        }
    }

