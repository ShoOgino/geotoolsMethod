    @Test
    public void testGetFeatureWithEastNorthAxisOrderFilter() throws Exception {

        TestHttpResponse httpResponse =
                new TestHttpResponse(
                        "text/xml; subtype=gml/3.1.1",
                        "UTF-8",
                        stream("axisorder/GetFeaturesByBBox.xml"));
        TestWFSClient wfs =
                createTestProtocol(
                        "axisorder/GetCapabilities.xml", new MockHTTPClient(httpResponse));

        // override the describe feature type url so it loads from the test resource
        wfs.setDescribeFeatureTypeURLOverride(url("axisorder/DescribeFeatureType.xsd"));

        WFSDataStore ds = new WFSDataStore(wfs);

        // axis order used will be EAST / NORTH
        wfs.setAxisOrderOverride(
                WFSDataStoreFactory.AXIS_ORDER_COMPLIANT,
                WFSDataStoreFactory.AXIS_ORDER_EAST_NORTH);

        FilterFactory2 ff = CommonFactoryFinder.getFilterFactory2();
        Set<FeatureId> fids = new HashSet<FeatureId>();
        fids.add(new FeatureIdImpl("comuni11.2671"));
        Query query =
                new Query(
                        typeName,
                        ff.bbox("the_geom", 4623055.0, 815134.0, 4629904.0, 820740.0, "EPSG:3857"));

        SimpleFeatureSource source = ds.getFeatureSource(typeName);
        source.getFeatures(query).features();
        BBOX filter = (BBOX) wfs.getRequest().getFilter();

        // filter coordinates are NOT inverted
        assertTrue(
                JTS.equals(
                        new ReferencedEnvelope(
                                4623055.0, 4629904.0, 815134.0, 820740.0, CRS.decode("EPSG:3857")),
                        filter.getBounds(),
                        1e-6));
    }

