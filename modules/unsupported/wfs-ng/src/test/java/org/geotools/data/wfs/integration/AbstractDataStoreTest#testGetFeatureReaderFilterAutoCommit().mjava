    @Test
    public void testGetFeatureReaderFilterAutoCommit() throws Exception {
        SimpleFeatureType type = data.getSchema(getRoadTypeName());
        FeatureReader<SimpleFeatureType, SimpleFeature> reader;

        Query query = new Query(getRoadTypeName());
        reader = data.getFeatureReader(query, Transaction.AUTO_COMMIT);
        assertFalse(reader instanceof FilteringFeatureReader);
        assertEquals(type, reader.getFeatureType());
        assertEquals(roadFeatures.length, count(reader));

        reader = data.getFeatureReader(new Query(getRoadTypeName(), Filter.EXCLUDE),
                Transaction.AUTO_COMMIT);

        // TODO: This assert sucks since it EXPECTS an emptyFeatureWriter...well, we got A writer...
        // and it was empty; that's good enough dammit! Even more, the very next assert fails since
        // an emptyFeatureReader looks to not contain the featureType anyways!
        // asserting that the count is 0 just below accomplishes the same thing!
        // assertTrue(reader instanceof EmptyFeatureReader);
        assertEquals(type, reader.getFeatureType());
        assertEquals(0, count(reader));

        reader = data.getFeatureReader(new Query(getRoadTypeName(), rd1Filter),
                Transaction.AUTO_COMMIT);

        assertEquals(type, reader.getFeatureType());
        assertEquals(1, count(reader));
    }

