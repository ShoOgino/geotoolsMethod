	@Test
    public void testParseCubeWerx_GML_Level1_FeatureType() throws IOException {
        final QName featureTypeName = DataTestSupport.CUBEWERX_GOVUNITCE.TYPENAME;
        final String schemaFileName = DataTestSupport.CUBEWERX_GOVUNITCE.SCHEMA;
        final URL schemaLocation = TestData.getResource(this, schemaFileName);
        // Expect only the subset of simple attributes:
        // {typeAbbreviation:String,instanceName:String,officialDescription:String,
        // instanceCode:String,codingSystemReference:String,geometry:"gml:SurfacePropertyType",
        // typeDefinition:String}.
        // Plus, the following ones are being assigned multiplicity 0:1 by the
        // parser when they're not:
        // {instanceAlternateName:String[0..*],codingSystemReference:String[0..*]}
        // And the last one: governmentalUnitType has a complex type, yet it
        // gets parsed as String
        // and I can't find out why (would be happier if it were bound to Object.class)
        // 2008-06-05 update: governmentalUnitType no longer gets parsed by the gtxml parser 
        // at all, so reducing expectedAttributeCount from 10 to 9
        final int expectedAttributeCount = 9;

        SimpleFeatureType ftype = testParseDescribeSimpleFeatureType(featureTypeName,
                schemaLocation, expectedAttributeCount);
        for (AttributeDescriptor descriptor : ftype.getAttributeDescriptors()) {
            System.out.print(descriptor.getName().getNamespaceURI());
            System.out.print("#");
            System.out.print(descriptor.getName().getLocalPart());
            System.out.print("[" + descriptor.getMinOccurs() + ":" + descriptor.getMaxOccurs()
                    + "]");
            System.out.print(" (" + descriptor.getType().getName() + ": "
                    + descriptor.getType().getBinding() + ")");
            System.out.println("");
        }
    }

