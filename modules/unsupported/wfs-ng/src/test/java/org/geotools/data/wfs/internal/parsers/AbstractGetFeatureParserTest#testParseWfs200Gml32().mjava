    /**
     * Tests parsing of a typical WFS 2.0.0/GML 3.2 GetFeature response containing a
     * "wfs:boundedyBy" element nested into "wfs:FeatureCollection".
     *
     * @throws Exception
     */
    @Test
    public void testParseWfs200Gml32() throws Exception {
        final String[] properties = {"the_geom", "cat", "label"};
        final QName featureName = WFSTestData.GEOS_ROADS_20.TYPENAME;
        final URL schemaLocation = WFSTestData.GEOS_ROADS_20.SCHEMA;
        final Configuration wfsConfiguration = new org.geotools.wfs.v2_0.WFSConfiguration();

        final SimpleFeatureType featureType =
                getTypeView(
                        featureName,
                        schemaLocation,
                        WFSTestData.GEOS_ROADS_20.CRS,
                        properties,
                        wfsConfiguration);

        // usually the parser loads the schema using the schemaLocation given in the XML
        // in this case the schemaLocation is not resolvable by the parser; it's a local file
        // (relative to the XML)
        // workaround: Provide a configuration pointing to the local XSD
        XSD sfRoadsSchema =
                new XSD() {
                    @Override
                    public String getNamespaceURI() {
                        return featureType.getName().getNamespaceURI();
                    }

                    @Override
                    public String getSchemaLocation() {
                        return schemaLocation.toExternalForm();
                    }
                };

        Configuration sfRoadsWithWfs200Config =
                new Configuration(sfRoadsSchema) {
                    {
                        addDependency(wfsConfiguration);
                    }
                };

        final GetParser<SimpleFeature> parser =
                getParser(
                        featureName,
                        schemaLocation,
                        featureType,
                        WFSTestData.GEOS_ROADS_20.DATA,
                        null,
                        sfRoadsWithWfs200Config);

        int nof = parser.getNumberOfFeatures();
        assertEquals(-1, nof);

        FeatureVisitor assertor = new FeatureAssertor(featureType);
        testParseGetFeatures(featureName, featureType, parser, assertor, 3);
    }

