    /**
     * Test method for {@link StrictWFS_1_1_Strategy#getSupportedCRSIdentifiers(java.lang.String)} .
     * 
     * @throws IOException
     */
    @Test
    public void testGetSupportedCRSIdentifiers() throws IOException {
        StrictWFS_1_1_Strategy strategy = createTestProtocol(GEOS_ARCHSITES_11.CAPABILITIES,
                new StrictWFS_1_1_Strategy());
        try {
            strategy.getSupportedCRSIdentifiers("nonExistentTypeName");
            fail("Expected IAE");
        } catch (IllegalArgumentException e) {
            assertTrue(true);
        }

        Set<String> supportedCRSs;
        supportedCRSs = strategy.getSupportedCRSIdentifiers(GEOS_ARCHSITES_11.FEATURETYPENAME);

        // capabilities doesn't set other crs's for this feature type than the default one...
        assertNotNull(supportedCRSs);
        assertEquals(1, supportedCRSs.size());
        assertTrue(supportedCRSs.contains("EPSG:26713"));

        strategy = createTestProtocol(CUBEWERX_GOVUNITCE.CAPABILITIES, new StrictWFS_1_1_Strategy());
        supportedCRSs = strategy.getSupportedCRSIdentifiers(CUBEWERX_GOVUNITCE.FEATURETYPENAME);
        // capabilities defines more crs's for this ftype
        assertNotNull(supportedCRSs);
        assertEquals(2, supportedCRSs.size());
        assertTrue(supportedCRSs.contains("EPSG:4269"));
        assertTrue(supportedCRSs.contains("EPSG:4326"));
    }

