    /**
     * Performs a FeatureSource.getCount(Query) with the constructor provided fid filter if the
     * filter is not null.
     */
    @Test
    public void testFeatureSourceGetCountFilter() throws IOException {
        if (Boolean.FALSE.equals(serviceAvailable)) {
            return;
        }

        if (featureCount >= 0) { // server doesn't support feature count anyway, skip
            if (fidFilter == null) {
                LOGGER.info(
                        "Ignoring testFeatureSourceGetCountFilter "
                                + "since the subclass didn't provide a fid filter");
                return;
            }

            SimpleFeatureSource featureSource = wfs.getFeatureSource(testType.FEATURETYPENAME);
            assertNotNull(featureSource);

            Query query = new Query(featureSource.getInfo().getName());
            query.setFilter(fidFilter);

            assertEquals(1, featureSource.getCount(query));
        }
    }

