    @Test
    public void testGetFeatureReaderFilterTransaction() throws Exception {
        SimpleFeatureType type = data.getSchema(first.typeName);
        try (Transaction t = new DefaultTransaction()) {

            try (FeatureReader<SimpleFeatureType, SimpleFeature> reader =
                    data.getFeatureReader(new Query(first.typeName, Filter.EXCLUDE), t)) {

                assertEquals(type, reader.getFeatureType());
                assertEquals(0, count(reader));
            }

            try (FeatureReader<SimpleFeatureType, SimpleFeature> reader =
                    data.getFeatureReader(new Query(first.typeName), t)) {
                assertTrue(reader instanceof DiffFeatureReader);
                assertEquals(type, reader.getFeatureType());
                assertEquals(first.features.length, count(reader));
            }

            try (FeatureReader<SimpleFeatureType, SimpleFeature> reader =
                    data.getFeatureReader(new Query(first.typeName, first.feat1Filter), t)) {

                // assertTrue(reader instanceof DiffFeatureReader);//Currently wrapped by a
                // filtering
                // feature reader
                assertEquals(type, reader.getFeatureType());
                assertEquals(1, count(reader));

                SimpleFeatureStore store =
                        (SimpleFeatureStore) data.getFeatureSource(first.typeName);
                store.setTransaction(t);
                store.removeFeatures(first.feat1Filter);
            }

            try (FeatureReader<SimpleFeatureType, SimpleFeature> reader =
                    data.getFeatureReader(new Query(first.typeName, Filter.EXCLUDE), t)) {
                assertEquals(0, count(reader));
            }

            try (FeatureReader<SimpleFeatureType, SimpleFeature> reader =
                    data.getFeatureReader(new Query(first.typeName), t)) {
                assertEquals(first.features.length - 1, count(reader));
            }

            try (FeatureReader<SimpleFeatureType, SimpleFeature> reader =
                    data.getFeatureReader(new Query(first.typeName, first.feat1Filter), t)) {
                assertEquals(0, count(reader));
            }

            t.rollback();
            try (FeatureReader<SimpleFeatureType, SimpleFeature> reader =
                    data.getFeatureReader(new Query(first.typeName, Filter.EXCLUDE), t)) {
                assertEquals(0, count(reader));
            }

            try (FeatureReader<SimpleFeatureType, SimpleFeature> reader =
                    data.getFeatureReader(new Query(first.typeName), t)) {
                assertEquals(first.features.length, count(reader));
            }

            try (FeatureReader<SimpleFeatureType, SimpleFeature> reader =
                    data.getFeatureReader(new Query(first.typeName, first.feat1Filter), t)) {
                assertEquals(1, count(reader));
            }
        }
    }

