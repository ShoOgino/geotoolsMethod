    /**
     * Test method for {@link WFS_1_1_0_Protocol#getSupportedCRSIdentifiers(java.lang.String)} .
     * 
     * @throws IOException
     */
    @Test
    public void testGetSupportedCRSIdentifiers() throws IOException {
        createTestProtocol(GEOS_ARCHSITES.CAPABILITIES);
        try {
            wfs.getSupportedCRSIdentifiers("nonExistentTypeName");
            fail("Expected IAE");
        } catch (IllegalArgumentException e) {
            assertTrue(true);
        }

        Set<String> supportedCRSs;
        supportedCRSs = wfs.getSupportedCRSIdentifiers(GEOS_ARCHSITES.FEATURETYPENAME);

        // capabilities doesn't set other crs's for this feature type than the default one...
        assertNotNull(supportedCRSs);
        assertEquals(1, supportedCRSs.size());
        assertTrue(supportedCRSs.contains("EPSG:26713"));

        createTestProtocol(CUBEWERX_GOVUNITCE.CAPABILITIES);
        supportedCRSs = wfs.getSupportedCRSIdentifiers(CUBEWERX_GOVUNITCE.FEATURETYPENAME);
        // capabilities defines more crs's for this ftype
        assertNotNull(supportedCRSs);
        assertEquals(2, supportedCRSs.size());
        assertTrue(supportedCRSs.contains("EPSG:4269"));
        assertTrue(supportedCRSs.contains("EPSG:4326"));
    }

