    @Test
    public void testFeatureSourceGetFeatures() throws IOException {
        if (Boolean.FALSE.equals(serviceAvailable)) {
            return;
        }
        if (fidFilter == null) {
            LOGGER.info(
                    "Ignoring testFeatureSourceGetCountFilter "
                            + "since the subclass didn't provide a fid filter");
            return;
        }

        SimpleFeatureSource featureSource = wfs.getFeatureSource(testType.FEATURETYPENAME);
        assertNotNull(featureSource);

        SimpleFeatureCollection features = featureSource.getFeatures();
        assertNotNull(features);

        SimpleFeatureType schema = features.getSchema();
        assertNotNull(schema);

        try (SimpleFeatureIterator iterator = features.features()) {
            assertNotNull(iterator);

            assertTrue(iterator.hasNext());
            SimpleFeature next = iterator.next();
            assertNotNull(next);
            assertNotNull(next.getDefaultGeometry());
        }
    }

