    /**
     * Test method for {@link WFS_1_1_0_Protocol#getFeatureTypeNames()}.
     * 
     * @throws IOException
     */
    @Test
    public void testGetFeatureTypeNames() throws IOException {

        // test against a geoserver capabilities
        createTestProtocol(GEOS_ARCHSITES.CAPABILITIES);
        Set<QName> featureTypeNames = wfs.getFeatureTypeNames();
        assertEquals(6, featureTypeNames.size());

        for (QName name : featureTypeNames) {
            assertFalse(name.toString(), XMLConstants.DEFAULT_NS_PREFIX.equals(name.getPrefix()));
        }
        assertTrue(featureTypeNames.contains(GEOS_ARCHSITES.TYPENAME));
        assertTrue(featureTypeNames.contains(GEOS_POI.TYPENAME));
        assertTrue(featureTypeNames.contains(GEOS_ROADS.TYPENAME));
        assertTrue(featureTypeNames.contains(GEOS_STATES.TYPENAME));
        assertTrue(featureTypeNames.contains(GEOS_TASMANIA_CITIES.TYPENAME));
        assertTrue(featureTypeNames.contains(GEOS_TIGER_ROADS.TYPENAME));

        // test against a cubewerx capabilities
        createTestProtocol(CUBEWERX_GOVUNITCE.CAPABILITIES);
        featureTypeNames = wfs.getFeatureTypeNames();
        // there are 14 featuretypes in the capabilities document
        assertEquals(14, featureTypeNames.size());

        for (QName name : featureTypeNames) {
            assertFalse(name.toString(), XMLConstants.DEFAULT_NS_PREFIX.equals(name.getPrefix()));
        }
        assertTrue(featureTypeNames.contains(CUBEWERX_GOVUNITCE.TYPENAME));
        assertTrue(featureTypeNames.contains(CUBEWERX_ROADSEG.TYPENAME));
    }

