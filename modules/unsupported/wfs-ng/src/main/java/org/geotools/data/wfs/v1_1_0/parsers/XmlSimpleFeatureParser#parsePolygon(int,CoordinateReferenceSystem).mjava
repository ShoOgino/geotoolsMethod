    /**
     * Parses a polygon.
     * <p>
     * Precondition: parser positioned at a {@link GML#Polygon Polygon} start tag
     * </p>
     * <p>
     * Postcondition: parser positioned at the {@link GML#Polygon Polygon} end tag of the starting
     * tag
     * </p>
     * 
     * @param dimension
     * @param crs
     * @return
     * @throws XmlPullParserException
     * @throws IOException
     * @throws NoSuchAuthorityCodeException
     * @throws FactoryException
     */
    private Polygon parsePolygon(int dimension, CoordinateReferenceSystem crs)
            throws XmlPullParserException, IOException, NoSuchAuthorityCodeException,
            FactoryException {
        Polygon geom;
        LinearRing shell;
        List<LinearRing> holes = null;

        parser.nextTag();
        parser.require(XmlPullParser.START_TAG, GML.NAMESPACE, GML.exterior.getLocalPart());
        parser.nextTag();
        shell = parseLinearRing(dimension, crs);
        parser.nextTag();
        parser.require(XmlPullParser.END_TAG, GML.NAMESPACE, GML.exterior.getLocalPart());
        parser.nextTag();

        if (GML.NAMESPACE.equals(parser.getNamespace())
                && GML.interior.getLocalPart().equals(parser.getName())) {
            // parse interior rings
            holes = new ArrayList<LinearRing>(2);
            while (true) {
                parser.nextTag();
                LinearRing hole = parseLinearRing(dimension, crs);
                holes.add(hole);
                parser.nextTag();
                parser.require(XmlPullParser.END_TAG, GML.NAMESPACE, GML.interior.getLocalPart());
                parser.nextTag();
                if (XmlPullParser.END_TAG == parser.getEventType()) {
                    // we're done
                    parser
                            .require(XmlPullParser.END_TAG, GML.NAMESPACE, GML.Polygon
                                    .getLocalPart());
                    break;
                }
            }
        }

        parser.require(XmlPullParser.END_TAG, GML.NAMESPACE, GML.Polygon.getLocalPart());

        LinearRing[] holesArray = null;
        if (holes != null) {
            holesArray = holes.toArray(new LinearRing[holes.size()]);
        }
        geom = geomFac.createPolygon(shell, holesArray);
        geom.setUserData(crs);
        return geom;
    }

