    @Override
    protected SimpleFeatureType buildFeatureType() throws IOException {       
        WFSNGDataStore datastore=(WFSNGDataStore) getDataStore();
        WFSProtocol wfs= datastore.getWFSProtocol();

        //make the prefixedTypeName
        String prefixedTypeName=null;
        Set<QName> names=wfs.getFeatureTypeNames();
        Iterator<QName> it=names.iterator();
        while(it.hasNext()&& prefixedTypeName==null){
            QName name=it.next();
            if (entry.getName().getLocalPart().equals(name.getLocalPart()) &&
                    entry.getName().getNamespaceURI().equals(name.getNamespaceURI())){
                prefixedTypeName=name.getPrefix()+entry.getName().getSeparator()+name.getLocalPart();
            }
        }
        /*Parser not working (yet)
        WFSResponse response;
        String outputFormat=wfs.getDefaultOutputFormat(WFSOperationType.GET_FEATURE);
        if(datastore.isPreferPostOverGet()){
            response = wfs.describeFeatureTypePOST(getCapTypeName, outputFormat);
        }else{
            response = wfs.describeFeatureTypeGET(getCapTypeName, outputFormat);
        }
        Object result = WFSExtensions.process(datastore, response);
        */
        final SimpleFeatureType fType;
        //CoordinateReferenceSystem crs = getFeatureTypeCRS(prefixedTypeName);
        CoordinateReferenceSystem crs;
        try {
            crs = CRS.decode(wfs.getDefaultCRS(prefixedTypeName));
        } catch (NoSuchAuthorityCodeException ex) {
            IOException exception = new IOException("can't decode default CRS for featureType "+prefixedTypeName);
            exception.initCause(ex);
            throw exception;
        } catch (FactoryException ex) {
            IOException exception = new IOException("can't decode default CRS for featureType "+prefixedTypeName);
            exception.initCause(ex);
            throw exception;
        }
        final URL describeUrl = wfs.getDescribeFeatureTypeURLGet(prefixedTypeName);
        QName featureDescriptorName = wfs.getFeatureTypeName(prefixedTypeName);
        fType = EmfAppSchemaParser.parseSimpleFeatureType(featureDescriptorName,
                describeUrl, crs);
        
        SimpleFeatureTypeBuilder tb = new SimpleFeatureTypeBuilder();
        //tb.setFeatureTypeFactory( getDataStore().getFeatureTypeFactory() );

        tb.init(fType);
        //set name
        tb.setName(entry.getName());
        GeometryDescriptor defaultGeometry = fType.getGeometryDescriptor();
        if (defaultGeometry != null) {
            tb.setDefaultGeometry(defaultGeometry.getLocalName());
            tb.setCRS(defaultGeometry.getCoordinateReferenceSystem());
        }
        try{
            featureType = tb.buildFeatureType();
        }catch(Exception e){
            e.printStackTrace();
        }
        return featureType;    
    }

