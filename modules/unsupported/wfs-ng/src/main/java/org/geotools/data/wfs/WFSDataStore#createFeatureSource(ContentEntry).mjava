    /**
     * @see WFSFeatureSource
     * @see WFSFeatureStore
     * @see WFSClient#supportsTransaction(QName)
     * @see
     *     org.geotools.data.store.ContentDataStore#createFeatureSource(org.geotools.data.store.ContentEntry)
     */
    @Override
    protected ContentFeatureSource createFeatureSource(final ContentEntry entry)
            throws IOException {
        ContentFeatureSource source;

        if (!isStoredQuery(entry.getName())) {
            final QName remoteTypeName = getRemoteTypeName(entry.getName());

            source = new WFSFeatureSource(entry, client);

            if (client.supportsTransaction(remoteTypeName)) {
                source = new WFSFeatureStore((WFSFeatureSource) source);
            }

        } else {
            String storedQueryId = configuredStoredQueries.get(entry.getName().getLocalPart());
            StoredQueryDescriptionType desc = getStoredQueryDescriptionType(storedQueryId);

            source = new WFSStoredQueryFeatureSource(entry, client, desc);
        }

        return source;
    }

