    /**
     * Parses a MultiPoint.
     *
     * <p>Precondition: parser positioned at a {@link GML#MultiPoint MultiPoint} start tag
     *
     * <p>Postcondition: parser positioned at the {@link GML#MultiPoint MultiPoint} end tag of the
     * starting tag
     */
    private Geometry parseMultiPoint(int dimension, CoordinateReferenceSystem crs)
            throws XMLStreamException, IOException, NoSuchAuthorityCodeException, FactoryException {
        parser.nextTag();
        final QName memberTag = parser.getName();
        List<Point> points = new ArrayList<>(4);
        if (GML.pointMembers.equals(memberTag)) {
            while (true) {
                parser.nextTag();
                if (END_ELEMENT == parser.getEventType()
                        && GML.pointMembers.getLocalPart().equals(parser.getLocalName())) {
                    // we're done
                    break;
                }
                Point p = parsePoint(dimension, crs);
                points.add(p);
            }
            parser.nextTag();
        } else if (GML.pointMember.equals(memberTag)) {
            while (true) {
                parser.nextTag();
                parser.require(START_ELEMENT, GML.NAMESPACE, GML.Point.getLocalPart());

                Point p = parsePoint(dimension, crs);
                points.add(p);
                parser.nextTag();
                parser.require(END_ELEMENT, GML.NAMESPACE, GML.pointMember.getLocalPart());
                parser.nextTag();
                if (END_ELEMENT == parser.getEventType()
                        && GML.MultiPoint.getLocalPart().equals(parser.getLocalName())) {
                    // we're done
                    break;
                }
            }
        }
        parser.require(END_ELEMENT, GML.NAMESPACE, GML.MultiPoint.getLocalPart());

        Geometry geom = geomFac.createMultiPoint(points.toArray(new Point[points.size()]));
        return geom;
    }

