    private Coordinate[] parseLineStringInternal(int dimension, CoordinateReferenceSystem crs)
            throws XMLStreamException, IOException {

        final QName lineElementName = parser.getName();

        parser.nextTag();
        Coordinate[] lineCoords;

        final QName coordsName = parser.getName();
        String tagName = coordsName.getLocalPart();
        if (GML.pos.equals(coordsName)) {
            Coordinate[] point;
            List<Coordinate> coords = new ArrayList<>();
            int eventType;
            do {
                point = parseCoordList(dimension);
                coords.add(point[0]);
                parser.nextTag();
                tagName = parser.getLocalName();
                eventType = parser.getEventType();
            } while (eventType == START_ELEMENT && tagName == GML.pos.getLocalPart());

            lineCoords = coords.toArray(new Coordinate[coords.size()]);
        } else if (GML.posList.equals(coordsName)) {
            // parser.require(START_ELEMENT, GML.NAMESPACE,
            // GML.posList.getLocalPart());
            lineCoords = parseCoordList(dimension);
            parser.nextTag();
        } else if (GML.coordinates.equals(coordsName)) {
            lineCoords = parseCoordinates(dimension);
            parser.nextTag();
        } else if (GML.coord.equals(coordsName)) {
            Coordinate point;
            List<Coordinate> coords = new ArrayList<>();
            int eventType;
            do {
                point = parseCoord();
                coords.add(point);
                parser.nextTag();
                tagName = parser.getLocalName();
                eventType = parser.getEventType();
            } while (eventType == START_ELEMENT && GML.coord.getLocalPart().equals(tagName));

            lineCoords = coords.toArray(new Coordinate[coords.size()]);
        } else {
            throw new IllegalStateException(
                    "Expected posList or pos inside LinearRing: " + tagName);
        }
        parser.require(
                END_ELEMENT, lineElementName.getNamespaceURI(), lineElementName.getLocalPart());
        return lineCoords;
    }

