    private void applySingleUpdate(
            QName remoteTypeName, SimpleFeature feature, TransactionRequest transactionRequest)
            throws IOException {

        // so bad, this is going to update a lot of unnecessary properties. We'd need to make
        // DiffContentFeatureWriter's live and current attributes protected and extend write so that
        // it records the truly modified attributes instead

        Collection<Property> properties = feature.getProperties();

        List<QName> propertyNames = new ArrayList<>();
        List<Object> newValues = new ArrayList<>();

        for (Property p : properties) {
            QName attName = new QName(remoteTypeName.getNamespaceURI(), p.getName().getLocalPart());
            Object attValue = p.getValue();
            propertyNames.add(attName);
            newValues.add(attValue);
        }

        Filter updateFilter =
                dataStore.getFilterFactory().id(Collections.singleton(feature.getIdentifier()));

        Update update =
                transactionRequest.createUpdate(
                        remoteTypeName, propertyNames, newValues, updateFilter);
        transactionRequest.add(update);
    }

