    public static WFSConfig fromParams(Map<?, ?> params) throws IOException {

        WFSConfig config = new WFSConfig();

        Boolean preferPost = PROTOCOL.lookUp(params);

        if (preferPost == null) {
            config.preferredMethod = PreferredHttpMethod.AUTO;
        } else {
            config.preferredMethod =
                    preferPost.booleanValue()
                            ? PreferredHttpMethod.HTTP_POST
                            : PreferredHttpMethod.HTTP_GET;
        }

        config.user = USERNAME.lookUp(params);
        config.pass = PASSWORD.lookUp(params);
        config.timeoutMillis = TIMEOUT.lookUp(params);
        config.buffer = BUFFER_SIZE.lookUp(params);
        config.tryGZIP = TRY_GZIP.lookUp(params);
        config.lenient = LENIENT.lookUp(params);

        String encoding = ENCODING.lookUp(params);
        config.defaultEncoding = Charset.forName(encoding);

        config.maxFeatures = MAXFEATURES.lookUp(params);
        config.wfsStrategy = WFS_STRATEGY.lookUp(params);
        config.filterCompliance = FILTER_COMPLIANCE.lookUp(params);
        config.namespaceOverride = NAMESPACE.lookUp(params);
        config.outputformatOverride = OUTPUTFORMAT.lookUp(params);
        config.axisOrder = AXIS_ORDER.lookUp(params);
        config.axisOrderFilter =
                AXIS_ORDER_FILTER.lookUp(params) == null
                        ? AXIS_ORDER.lookUp(params)
                        : AXIS_ORDER_FILTER.lookUp(params);

        config.gmlCompatibleTypenames =
                GML_COMPATIBLE_TYPENAMES.lookUp(params) == null
                        ? (Boolean) GML_COMPATIBLE_TYPENAMES.getDefaultValue()
                        : GML_COMPATIBLE_TYPENAMES.lookUp(params);
        config.entityResolver = ENTITY_RESOLVER.lookUp(params);
        config.useHttpConnectionPooling = USE_HTTP_CONNECTION_POOLING.lookUp(params);
        config.maxConnectionPoolSize = MAX_CONNECTION_POOL_SIZE.lookUp(params);
        return config;
    }

