    private String printBBoxGet(GeometryFilter gf, String typename) throws IOException {
        Envelope e = null;

        if (gf.getLeftGeometry().getType() == ExpressionType.LITERAL_GEOMETRY) {
            e = ((Geometry) ((LiteralExpression) gf.getLeftGeometry()).getLiteral())
                    .getEnvelopeInternal();
        } else {
            if (gf.getRightGeometry().getType() == ExpressionType.LITERAL_GEOMETRY) {
                LiteralExpression literal = (LiteralExpression) gf.getRightGeometry();
                Geometry geometry = (Geometry) literal.getLiteral();
                e = geometry.getEnvelopeInternal();
            } else {
                throw new IOException("Cannot encode BBOX:" + gf);
            }
        }

        if (e == null || e.isNull())
            return null;

        // Cannot check against layer bbounding box because they may be in
        // different CRS
        // We could insert ReferencedEnvelope fun here - note a check is already
        // performed
        // as part clipping the request bounding box.

        /*
         * // find layer's bbox Envelope lbb = null; if(capabilities != null &&
         * capabilities.getFeatureTypes() != null && typename!=null && !"".equals(typename)){ List
         * fts = capabilities.getFeatureTypes(); if(!fts.isEmpty()){ for(Iterator
         * i=fts.iterator();i.hasNext() && lbb == null;){ FeatureSetDescription fsd =
         * (FeatureSetDescription)i.next(); if(fsd!=null && typename.equals(fsd.getName())){ lbb =
         * fsd.getLatLongBoundingBox(); } } } } if(lbb == null || lbb.contains(e))
         */
        return e.getMinX() + "," + e.getMinY() + "," + e.getMaxX() + "," + e.getMaxY();
        // return null;
    }

