    /**
     * 
     * @param httpRequest
     *            either a {@link HttpMethod} or {@link PostMethod} set up with the request to be
     *            sent
     * @return
     * @throws IOException
     */
    private HTTPResponse issueRequest(final HttpMethodBase httpRequest) throws IOException {
        if (LOGGER.isLoggable(Level.FINE)) {
            LOGGER.fine("Executing HTTP request: " + httpRequest.getURI());
        }
        if (client == null) {
            client = new HttpClient();
            client.getParams().setParameter("http.useragent",
                    "GeoTools " + GeoTools.getVersion() + " WFS DataStore");
        }
        if (timeoutMillis > 0) {
            client.getParams().setSoTimeout(timeoutMillis);
        }

        // TODO: remove this
        System.err.println("Executing HTTP request: " + httpRequest);

        if (isTryGzip()) {
            LOGGER.finest("Adding 'Accept-Encoding=gzip' header to request");
            httpRequest.addRequestHeader("Accept-Encoding", "gzip");
        }

        int statusCode;
        try {
            statusCode = client.executeMethod(httpRequest);
        } catch (IOException e) {
            httpRequest.releaseConnection();
            throw e;
        }

        if (statusCode != HttpStatus.SC_OK) {
            httpRequest.releaseConnection();
            String statusText = HttpStatus.getStatusText(statusCode);
            throw new IOException("Request failed with status code " + statusCode + "("
                    + statusText + "): " + httpRequest.getURI());
        }

        HTTPResponse httpResponse = new HTTPClientResponse(httpRequest);
        if (LOGGER.isLoggable(Level.FINE)) {
            LOGGER.fine("Got " + httpResponse);
        }
        return httpResponse;
    }

