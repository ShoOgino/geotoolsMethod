    /**
     * Returns a single-line string containing the xml representation of the given filter, as
     * appropriate for the {@code FILTER} parameter in a GetFeature request.
     */
    protected String encodeGetFeatureGetFilter(final Filter filter) throws IOException {

        final Configuration filterConfig = getFilterConfiguration();
        final QName encName;

        if (filterConfig instanceof org.geotools.filter.v1_0.OGCConfiguration
                || filterConfig instanceof org.geotools.filter.v1_1.OGCConfiguration) {
            encName = org.geotools.filter.v1_0.OGC.Filter;
        } else {
            encName = org.geotools.filter.v2_0.FES.Filter;
        }

        Encoder encoder = new Encoder(filterConfig);
        // do not write the xml declaration
        encoder.setOmitXMLDeclaration(true);
        encoder.setEncoding(Charset.forName("UTF-8"));

        String encoded = encoder.encodeAsString(filter, encName);

        encoded = encoded.replaceAll("\n", "");
        return encoded;
    }

