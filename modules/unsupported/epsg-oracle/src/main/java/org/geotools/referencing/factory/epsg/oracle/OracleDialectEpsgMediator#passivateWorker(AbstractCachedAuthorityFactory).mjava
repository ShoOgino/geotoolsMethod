    /** Uninitialized an instance to be returned to the pool. */
    protected void passivateWorker(AbstractCachedAuthorityFactory obj) throws Exception {
        // Each implementation has the choice of closing connections when they
        // are returned to the worker pool, or when the objects are destroyed.
        // In this implementation, we have chosen to keep connections open
        // during their idle time and close the connection when the worker is
        // evicted. If we wanted to change this, we would move the disconnect
        // statement to this method. Alternatively, we could also keep track
        // of the idle time, and configure the pool to validate idle workers
        // frequently. We would then do a check in the validateWorker method
        // to close the connection when a connection close threshold is hit,
        // prior to worker destruction.
    }

