    /**
     * Resolves to the <b>execute</b> method for the provided java bean.
     *
     * @return the "execute" method of the indicated java bean.
     */
    @Override
    protected Method method(String className) {
        Class<?> c = classMap.get(className);
        if (c != null) {

            List<Method> candidates = new ArrayList<>();
            for (Method m : c.getMethods()) {
                if ("execute".equals(m.getName())) {
                    candidates.add(m);
                }
            }

            if (candidates.size() == 1) {
                return candidates.get(0);
            } else if (candidates.size() > 1) {
                // uh, we have various methods in overload, we'll prefer the one
                // that has annotations and exposes most params
                Method selection = null;
                for (Method m : candidates) {
                    if (hasProcessAnnotations(m)) {
                        if (selection != null) {
                            throw new IllegalArgumentException(
                                    "Invalid process bean "
                                            + className
                                            + ", has two annotated execute methods");
                        } else {
                            selection = m;
                        }
                    }
                }

                return selection;
            }
        }

        return null;
    }

