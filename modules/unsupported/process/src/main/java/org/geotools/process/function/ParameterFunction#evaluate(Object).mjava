    public Object evaluate(Object object) {
        if (parameters.isEmpty()) {
            throw new IllegalArgumentException(
                    "The parameter function requires at "
                            + "least one parameter, the argument name");
        }

        // get the param name
        String name = parameters.get(0).evaluate(object, String.class);
        if (name == null) {
            throw new IllegalArgumentException(
                    "The first function parameter should be a string, "
                            + "the name of a process argument");
        }

        // get the other values
        Object value;
        if (parameters.size() == 1) {
            // we return the evaluation context itself
            value = object;
        } else if (parameters.size() == 2) {
            // a single value
            value = parameters.get(1).evaluate(object);
        } else {
            // a collection
            List<Object> values = new ArrayList<>();
            for (int i = 1; i < parameters.size(); i++) {
                Object o = parameters.get(i).evaluate(object);
                values.add(o);
            }

            value = values;
        }

        return Collections.singletonMap(name, value);
    }

