    @Override
    @SuppressWarnings("unchecked")
    public Map<String, Parameter<?>> getResultInfo(Name name, Map<String, Object> parameters)
            throws IllegalArgumentException {
        Method method = method(name.getLocalPart());
        // look for the DescribeResult annotations (the result could be a
        // key/value
        // map holding multiple results)
        Map<String, Parameter<?>> result = new LinkedHashMap<>();
        for (Annotation annotation : method.getAnnotations()) {
            if (annotation instanceof DescribeResult) {
                DescribeResult info = (DescribeResult) annotation;
                // see if a type has been declared, otherwise use the annotation
                addResult(method, result, info);
            } else if (annotation instanceof DescribeResults) {
                DescribeResults info = (DescribeResults) annotation;
                for (DescribeResult dr : info.value()) {
                    addResult(method, result, dr);
                }
            }
        }
        // if annotation is not found, return a generic description using
        // the method return type
        if (result.isEmpty()) {
            if (!Void.class.equals(method.getReturnType())) {
                Parameter<?> VALUE =
                        new Parameter(
                                "result",
                                method.getReturnType(),
                                "Process result",
                                "No description is available");
                result.put(VALUE.key, VALUE);
            }
        }
        return result;
    }

