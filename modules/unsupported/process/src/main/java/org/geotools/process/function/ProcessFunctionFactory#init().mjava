    private synchronized void init() {
        if(functionNames == null || functionToProcess == null) {
            // collect and sort the factories to have a reproducable list of function names
            List<ProcessFactory> factories = new ArrayList<ProcessFactory>(Processors
                    .getProcessFactories());
            Collections.sort(factories, FACTORY_COMPARATOR);
            
            // collect name and params of all processes resulting in a single output
            functionToProcess = new HashMap<String, Name>();
            functionNames = new ArrayList<FunctionName>();
            for (ProcessFactory factory : factories) {
                for (Name processName : factory.getNames()) {
                    String functionName = processName.getURI();
                    Map<String, Parameter<?>> resultInfo = factory.getResultInfo(processName, null);
                    
                    // check there is a single output
                    if(getPrimary(resultInfo) != null) {
                        Map<String, Parameter<?>> parameterInfo = factory.getParameterInfo(processName);
                        List<String> argumentNames = new ArrayList<String>(parameterInfo.keySet());
                        functionNames.add(new FunctionNameImpl(functionName, argumentNames));
                        functionToProcess.put(functionName, processName);
                    }
                }
            }
            
            // add the parameter function
            functionNames.add(new FunctionNameImpl(ParameterFunction.NAME, -1));
        }
    }

