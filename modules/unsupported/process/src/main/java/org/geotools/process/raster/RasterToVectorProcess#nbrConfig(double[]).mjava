    /**
     * Examine the values in the 2x2 kernel and match to one of
     * the cases in the table below:
     * <pre>
     *  0) AB   1) AA   2) AA   3) AA
     *     AB      AB      BB      BA
     *
     *  4) AB   5) AB   6) AB   7) AA
     *     BB      AA      CC      BC
     *
     *  8) AB   9) AB  10) AB  11) AA
     *     CB      AC      CD      AA
     * </pre>
     * These patterns are those used in the GRASS raster to vector routine.
     * @param curData array of current data window values
     * @return integer id of the matching configuration
     */
    private int nbrConfig(double[] curData) {
        if (isDifferent(curData[TL], curData[TR])) { // 0, 4, 5, 6, 8, 9, 10
            if (isDifferent(curData[TL], curData[BL])) { // 4, 6, 8, 10
                if (isDifferent(curData[BL], curData[BR])) { // 8, 10
                    if (isDifferent(curData[TR], curData[BR])) {
                        return 10;
                    } else {
                        return 8;
                    }
                } else { // 4, 6
                    if (isDifferent(curData[TR], curData[BR])) {
                        return 6;
                    } else {
                        return 4;
                    }
                }
            } else { // 0, 5, 9
                if (isDifferent(curData[BL], curData[BR])) { // 0, 9
                    if (isDifferent(curData[TR], curData[BR])) {
                        return 9;
                    } else {
                        return 0;
                    }
                } else {
                    return 5;
                }
            }
        } else { // 1, 2, 3, 7, 11
            if (isDifferent(curData[TL], curData[BL])) { // 2, 3, 7
                if (isDifferent(curData[BL], curData[BR])) { // 3, 7
                    if (isDifferent(curData[TR], curData[BR])) {
                        return 7;
                    } else {
                        return 3;
                    }
                } else {
                    return 2;
                }
            } else { // 1, 11
                if (isDifferent(curData[TR], curData[BR])) {
                    return 1;
                } else {
                    return 11;
                }
            }
        }
    }

