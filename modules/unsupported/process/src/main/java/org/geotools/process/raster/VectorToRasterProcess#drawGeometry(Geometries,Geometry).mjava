    private void drawGeometry(Geometries geomType, Geometry geometry) {

        Coordinate[] coords = geometry.getCoordinates();

        // enlarge if needed
        if (coords.length > coordGridX.length) {
            int n = coords.length / COORD_GRID_CHUNK_SIZE + 1;
            coordGridX = new int[n * COORD_GRID_CHUNK_SIZE];
            coordGridY = new int[n * COORD_GRID_CHUNK_SIZE];
        }

        // Go through coordinate array in order received
        DirectPosition2D worldPos = new DirectPosition2D();
        try {
            for (int n = 0; n < coords.length; n++) {
                worldPos.setLocation(coords[n].x, coords[n].y);
                GridCoordinates2D gridPos = gridGeom.worldToGrid(worldPos);
                coordGridX[n] = gridPos.x;
                coordGridY[n] = gridPos.y;
            }
            
        } catch (TransformException ex) {
            throw new RuntimeException(ex);
        }

        switch (geomType) {
            case POLYGON:
                graphics.fillPolygon(coordGridX, coordGridY, coords.length);
                break;
                
            case LINESTRING:  // includes LinearRing
                graphics.drawPolyline(coordGridX, coordGridY, coords.length);
                break;
                
            case POINT:
                graphics.fillRect(coordGridX[0], coordGridY[0], 1, 1);
                break;
                
            default:
                throw new IllegalArgumentException(
                        "Invalid geometry type: " + geomType.getName());
        }
    }

