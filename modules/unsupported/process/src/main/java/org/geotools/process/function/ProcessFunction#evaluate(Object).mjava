    public Object evaluate(Object object) {
        Map<String, Object> processInputs = evaluateInputs(object);

        // execute the process
        try {
            ExceptionProgressListener listener = new ExceptionProgressListener();
            Map<String, Object> results = process.execute(processInputs, listener);
            
            // some processes have the bad habit of not throwing exceptions, but to
            // report them to the listener
            if(listener.getExceptions().size() > 0) {
                // uh oh, an exception occurred during processing
                Throwable t = listener.getExceptions().get(0);
                throw new RuntimeException("Failed to evaluate process function, error is: " 
                        + t.getMessage(), t);
            }
            
            return getResult(results, processInputs);
        } catch (ProcessException e) {
            throw new RuntimeException("Failed to evaluate the process function, error is: "
                    + e.getMessage(), e);
        }
    }

