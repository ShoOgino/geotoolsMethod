    /**
     *
     * @param env
     * @throws org.geotools.process.raster.VectorToRasterException
     */
    private void setBounds( SimpleFeatureCollection features,
            Envelope bounds, Dimension gridDim ) throws VectorToRasterException {

        ReferencedEnvelope featureBounds = features.getBounds();

        if (bounds != null) {
            ReferencedEnvelope inputBounds = new ReferencedEnvelope(bounds);
            CoordinateReferenceSystem featuresCRS = featureBounds.getCoordinateReferenceSystem();
            CoordinateReferenceSystem envCRS = bounds.getCoordinateReferenceSystem();

            ReferencedEnvelope trEnv;
            if (!CRS.equalsIgnoreMetadata(envCRS, featuresCRS)) {
                try {
                    trEnv = inputBounds.transform(featuresCRS, true);
                } catch (Exception tex) {
                    throw new VectorToRasterException(tex);
                }

            } else {
                trEnv = inputBounds;
            }

            // If the provided bounds cover the feature bounds, use them
            if (trEnv.covers(features.getBounds())) {
                extent = trEnv;
                
            } else {
                // If the provided bounds partially overlap the feature bounds
                // use the intersection
                com.vividsolutions.jts.geom.Envelope common = trEnv.intersection(features.getBounds());
                if (common == null || common.isNull()) {
                    throw new VectorToRasterException(
                            "Features do not lie within the requested rasterizing bounds");
                }
                extent = new ReferencedEnvelope(common, featuresCRS);
            }

        } else {
            // No bounds provided - use feature bounds
            extent = featureBounds;
        }

        GeometryFactory gf = new GeometryFactory();
        extentGeometry = gf.toGeometry(extent);
    }

