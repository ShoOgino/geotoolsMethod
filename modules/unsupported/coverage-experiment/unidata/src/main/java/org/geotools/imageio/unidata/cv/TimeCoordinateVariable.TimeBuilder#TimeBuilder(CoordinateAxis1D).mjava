        public TimeBuilder(CoordinateAxis1D axis) {
            axis1D = axis;
            units = axis.getUnitsString();       
            /*
             * Gets the axis origin. In the particular case of time axis, units are typically written in the form "days since 1990-01-01
             * 00:00:00". We extract the part before "since" as the units and the part after "since" as the date.
             */
            origin = null;
            final String[] unitsParts = units.split("(?i)\\s+since\\s+");
            if (unitsParts.length == 2) {
                units = unitsParts[0].trim();
                origin = unitsParts[1].trim();
            } else {
                final Attribute attribute = axis.findAttribute("time_origin");
                if (attribute != null) {
                    origin = attribute.getStringValue();
                }
            }

            baseTimeUnits  = UnidataTimeUtilities.getTimeUnits(units, null);     
            if (baseTimeUnits == -1) {
            	throw new IllegalArgumentException("Couldn't determine time units from unit string '" + units + "'");
            }
            if (origin != null) {
                origin = UnidataTimeUtilities.trimFractionalPart(origin);
                // add 0 digits if absent
                origin = UnidataTimeUtilities.checkDateDigits(origin);
    
                try {
                    epoch = (Date) UnidataUtilities.getAxisFormat(AxisType.Time, origin)
                            .parseObject(origin);
                } catch (ParseException e) {
                    LOGGER.warning("Error while parsing time Axis. Skip setting the TemporalExtent from coordinateAxis");
                }
            }
        }

