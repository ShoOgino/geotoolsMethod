    public static CoverageAccess connect(Map<String, Serializable> params,Hints hints, final ProgressListener listener)throws IOException{
        for (Driver driver : getAvailableDrivers()) {

            boolean canProcess = false;
            try {
                canProcess = driver.canProcess(DriverOperation.CONNECT,params);
            } catch (Throwable t) {
                LOGGER.log(Level.WARNING, "Error asking " + driver.getTitle()
                        + " if it can process request", t);
                // Protect against DataStores that don't carefully code
                // canProcess
                continue;
            }
            if (canProcess) {
                boolean isAvailable = false;
                try {
                    isAvailable = driver.isAvailable();
                } catch (Throwable t) {
                    LOGGER.log(Level.WARNING, "Error when checking if " + driver.getTitle()
                            + " is available" , t);
                    // Protect against Drivers that don't carefully code
                    // isAvailable
                    continue;
                }
                if (isAvailable) {
                    try {
                        return driver.process(DriverOperation.CONNECT,params, hints, listener);
                    } catch (IOException couldNotConnect) {
                        LOGGER.log(Level.WARNING, driver.getTitle()
                                + " could not connect", couldNotConnect);
                    }
                } 
            }
        }
        return null;
    }

