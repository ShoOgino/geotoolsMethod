    /**
     * Finds all available implementations of {@link Driver} which have registered using the
     * services mechanism, and that have the appropriate libraries on the class-path.
     * 
     * @return An unmodifiable {@link Set} of all discovered drivers which have registered
     *         factories, and whose available method returns true.
     */
    public static synchronized Set<Driver> getAvailableDrivers() {
        // get all Driver implementations
        scanForPlugins();
        final Iterator<Driver> it = getServiceRegistry().getServiceProviders(Driver.class, true);
        final Set<Driver> drivers = new HashSet<Driver>();
        while (it.hasNext()) {
            final Driver spi = (Driver) it.next();
            if (spi.isAvailable())
                drivers.add(spi);
        }
        return Collections.unmodifiableSet(drivers);
    }

