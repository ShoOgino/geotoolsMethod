    private Node createNativeTree() {
        final IIOMetadataNode root = new IIOMetadataNode(GRIB1ImageMetadata.nativeMetadataFormatName);

        
            // ////////////////////////////////////////////////////////////////////
            //
            // GridDefinitionSection
            //
            // ////////////////////////////////////////////////////////////////////
            IIOMetadataNode gdsNode = new IIOMetadataNode(GDS);
            GRIB1ImageReader directReader = (GRIB1ImageReader) imageReader;
            final int imageIndex = getImageIndex();
            final GribVariableWrapper wrapper = (GribVariableWrapper) directReader.getVariableWrapper(imageIndex);
            List<KeyValuePair> coordsAttribute = directReader.getCoordinateAttributes();
            for (KeyValuePair pair : coordsAttribute){
            	gdsNode.setAttribute(pair.getKey(),pair.getValue());
            }
//                final int gridType = directReader.getGridType(imageIndex);
//                gdsNode.setAttribute(GRID_TYPE, Integer.toString(gridType));
//
//                gdsNode.setAttribute(GRID_DELTA_X, Double.toString(directReader.getGridDeltaX(imageIndex)));
//                gdsNode.setAttribute(GRID_DELTA_Y, Double.toString(directReader.getGridDeltaY(imageIndex)));
//                gdsNode.setAttribute(GRID_N_X, Double.toString(directReader.getWidth(imageIndex)));
//                gdsNode.setAttribute(GRID_N_Y, Double.toString(directReader.getHeight(imageIndex)));
//                gdsNode.setAttribute(GRID_LON_1, Double.toString(directReader.getGridLon1(imageIndex)));
//                gdsNode.setAttribute(GRID_LAT_1, Double.toString(directReader.getGridLat1(imageIndex)));
//                gdsNode.setAttribute(GRID_LON_2, Double.toString(directReader.getGridLon2(imageIndex)));
//                gdsNode.setAttribute(GRID_LAT_2, Double.toString(directReader.getGridLat2(imageIndex)));
//                gdsNode.setAttribute(GRID_LON_SP, Double.toString(directReader.getGridLonSP(imageIndex)));
//                gdsNode.setAttribute(GRID_LAT_SP, Double.toString(directReader.getGridLatSP(imageIndex)));
//                gdsNode.setAttribute(GRID_ROTATION_ANGLE, Double.toString(directReader.getGridRotationAngle(imageIndex)));
//
//                switch (gridType) {
//                case 3:
//                    gdsNode.setAttribute(GRID_STARTX, Double.toString(directReader.getGridStartX(imageIndex)));
//                    gdsNode.setAttribute(GRID_STARTY, Double.toString(directReader.getGridStartY(imageIndex)));
//                    gdsNode.setAttribute(GRID_LATIN_1, Double.toString(directReader.getGridLatin1(imageIndex)));
//                    gdsNode.setAttribute(GRID_LATIN_2, Double.toString(directReader.getGridLatin2(imageIndex)));
//                    gdsNode.setAttribute(GRID_LOV, Double.toString(directReader.getGridLov(imageIndex)));
//
//                    break;
//                case 10:
//                    gdsNode.setAttribute(GRID_LON_SPST, Double.toString(directReader.getGridLonSPST(imageIndex)));
//                    gdsNode.setAttribute(GRID_LAT_SPST, Double.toString(directReader.getGridLatSPST(imageIndex)));
//                }
//
                root.appendChild(gdsNode);
                // ////////////////////////////////////////////////////////////////////
                //
                // ProductDefinitionSection
                //
                // ////////////////////////////////////////////////////////////////////
                IIOMetadataNode pdsNode = new IIOMetadataNode(PDS);
//
//                pdsNode.setAttribute(PROD_TIME, wrapper.getTime(imageIndex));
//                pdsNode.setAttribute(PROD_TIME_RANGE_INDICATOR, Integer.toString(directReader.getTimeRangeIndicator(imageIndex)));
                
                pdsNode.setAttribute(PROD_DEFINITION_TYPE,wrapper.getProductDefinitionType());
                pdsNode.setAttribute(PROD_TIME_NAME, wrapper.getTimeName());
                pdsNode.setAttribute(PROD_TIME_UNITS, wrapper.getTimeUnits());
                pdsNode.setAttribute(PROD_TIME_VALUES, wrapper.getTimeValues(imageIndex));
                
                pdsNode.setAttribute(PROD_PARAMETER_NAME, wrapper.getParameterName());
                pdsNode.setAttribute(PROD_PARAMTABLE_CENTERID, Integer.toString(wrapper.getParameterCenterID()));
//                    pdsNode.setAttribute(PROD_PARAMTABLE_SUBCENTERID, Integer.toString(params[1]));
                pdsNode.setAttribute(PROD_PARAMTABLE_TABLEVERSION, Integer.toString(wrapper.getParameterTableVersion()));
                pdsNode.setAttribute(PROD_PARAMTABLE_PARAMETERNUMBER,Integer.toString(wrapper.getParameterNumber()));
                pdsNode.setAttribute(PROD_PARAMETER_UNIT, wrapper.getParameterUnit());
                
                root.appendChild(pdsNode);
                IIOMetadataNode pdsLevelNode = new IIOMetadataNode(PDS_LEVEL);
                VerticalLevel level = wrapper.getVerticalLevel();
                pdsLevelNode.setAttribute(PDSL_ID, Integer.toString(level.getLevelType()));
                pdsLevelNode.setAttribute(PDSL_NAME, level.getLevelName());
                pdsLevelNode.setAttribute(PDSL_DESCRIPTION, level.getLevelDescription());
                pdsLevelNode.setAttribute(PDSL_UNITS, level.getLevelUnits());
                pdsLevelNode.setAttribute(PDSL_ISNUMERIC, Boolean.toString(level.isHasExplicitVerticalAxis()));
                pdsLevelNode.setAttribute(PDSL_VALUES, wrapper.getLevelValues(imageIndex));
                pdsLevelNode.setAttribute(PDSL_POSITIVE, level.getPositive());
                pdsLevelNode.setAttribute(PDSL_AXISTYPE, level.getAxisType());
                root.appendChild(pdsLevelNode);

        return root;
    }

