    /**
     * Creates a {@link GridCoverage} for the provided {@link PlanarImage} using
     * the {@link #raster2Model} that was provided for this coverage.
     * 
     * <p>
     * This method is vital when working with coverages that have a raster to
     * model transformation that is not a simple scale and translate.
     * 
     * @param imageIndex
     * 
     * @param image
     *                contains the data for the coverage to create.
     * @param raster2Model
     *                is the {@link MathTransform} that maps from the raster
     *                space to the model space.
     * @return a {@link GridCoverage}
     * @throws IOException
     */
    public static GridCoverage createCoverageFromImage(
            final GridCoverageFactory coverageFactory,
            final String coverageName, int imageIndex, PlanarImage image,
            MathTransform raster2Model,
            final CoordinateReferenceSystem spatialReferenceSystem2D,
            GeneralEnvelope coverageEnvelope2D,
            final GridSampleDimension[] sampleDimensions,
            final boolean getGeophysics) throws IOException {
        final GridSampleDimension[] bands = sampleDimensions;

        GridCoverage2D gridCoverage;
        // creating coverage
        if (raster2Model != null) {
            gridCoverage = coverageFactory.create(coverageName, image, 
            		spatialReferenceSystem2D, raster2Model, bands, null, null);
        } else
            gridCoverage = coverageFactory.create(coverageName, image, coverageEnvelope2D, bands, null, null);

        if (getGeophysics)
            return gridCoverage.view(ViewType.GEOPHYSICS);
        else
            return gridCoverage;
    }

