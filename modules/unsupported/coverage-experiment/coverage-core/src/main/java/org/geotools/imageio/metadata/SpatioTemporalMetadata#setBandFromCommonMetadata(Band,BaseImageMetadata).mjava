    /**
     * Utility method which allows to fill Bands attributes using a
     * {@link BaseImageMetadata} instance obtained from the underlying flat
     * reader.
     * 
     * @param band
     *                the {@link Band} metadata object to be set.
     * @param baseMetadata
     *                a {@link BaseImageMetadata} instance containing the
     *                required values.
     */
    protected static void setBandFromCommonMetadata(Band band, BaseImageMetadata baseMetadata) {
        if (band == null)
            throw new IllegalArgumentException("Provided sample dimension to be set is null");

        if (baseMetadata != null) {
            String name = "";
            double scale = 1.0;
            double offset = 0.0;
            double[] validRange = null;
            double[] noDataValues = null;
            try {
                scale = baseMetadata.getScale(0);
                offset = baseMetadata.getOffset(0);
            } catch (IllegalArgumentException iae) {
                // TODO: no scale and offset are available
                if (LOGGER.isLoggable(Level.FINE)) {
                    LOGGER.fine("Using default scale and offset values");
                }
            }
            band.setScale(scale);
            band.setOffset(offset);
            try {
                double max = baseMetadata.getMaximum(0);
                double min = baseMetadata.getMinimum(0);
                validRange = new double[] { min, max };
            } catch (IllegalArgumentException iae) {
                if (LOGGER.isLoggable(Level.FINE)) {
                    LOGGER.fine("ValidRange values not found");
                }
            }
            if (validRange != null) {
                band.setValidRange(validRange[0], validRange[1]);
            }
            try {
                double noData = baseMetadata.getNoDataValue(0);
                noDataValues = new double[] { noData };
            } catch (IllegalArgumentException iae) {
                if (LOGGER.isLoggable(Level.FINE)) {
                    LOGGER.fine("NoData values not found");
                }
            }
            if (noDataValues != null) {
                band.setNoDataValues(noDataValues);
            }
            name = baseMetadata.getDatasetName();
            band.setName(name);
        } else
            throw new IllegalArgumentException("Provided metadata object is null");
    }

