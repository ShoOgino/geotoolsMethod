    /**
     * Sets the {@linkplain IIOMetadataNode#setUserObject user object}
     * associated with the {@linkplain #selectChild selected element}. This is
     * the only {@code set} method that doesn't invoke {@link #setString} with a
     * formatted value.
     * <p>
     * If the specified value is formattable (i.e. is a
     * {@linkplain CharSequence character sequence}, a
     * {@linkplain Number number} or an array of the above), then this method
     * also {@linkplain IIOMetadataNode#setNodeValue sets the node value} as a
     * string. This is mostly a convenience for formatting purpose since
     * {@link IIOMetadataNode} don't use the node value. But it may help some
     * libraries that are not designed to work with with user objects, since
     * they are particular to Image I/O metadata.
     * 
     * @param value
     *                The user object, or {@code null} if none.
     * @throws UnsupportedOperationException
     *                 if the selected element is not an instance of
     *                 {@link IIOMetadataNode}.
     * 
     * @see #getUserObject()
     */
    protected void setUserObject(final Object value) throws UnsupportedOperationException {
        final Element element = currentElement();
        final String asText;
        if (isFormattable(value)) {
            asText = value.toString();
        } else if (value != null && isFormattable(value.getClass().getComponentType())) {
            asText = formatSequence(value);
        } else {
            asText = null;
        }
        if (element instanceof IIOMetadataNode) {
            ((IIOMetadataNode) element).setUserObject(value);
        } else if (value != null && asText == null) {
            throw new UnsupportedOperationException("Illegal object. It should be an IIOMetadataNode instance");
        }
        element.setNodeValue(asText);
    }

