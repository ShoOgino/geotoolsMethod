    @Override
    protected void setBoundedByElement(SpatioTemporalImageReader reader) {
        checkReader(reader);
        final BoundedBy bb = getBoundedBy();
        double[] boundingBox = null;
        TemporalObject time = null;
        double verticalValue = Double.NaN;
        double[] envelope = null;

        final NetCDFSpatioTemporalImageReader geoNetCDFReader = ((NetCDFSpatioTemporalImageReader) reader);
        final int imageIndex = getImageIndex();
        final Range range = geoNetCDFReader.getRange(imageIndex);
        final Variable variable = geoNetCDFReader.getVariable(range);
        final CoordinateSystem cs = getCoordinateSystem(variable);

        if (cs != null) {
            envelope = NetCDFSliceUtilities.getEnvelope(cs);
            time = NetCDFSliceUtilities.getTimeValue(geoNetCDFReader, variable, range, imageIndex, cs);
            verticalValue = NetCDFSliceUtilities.getVerticalValue(geoNetCDFReader, variable,
                    range, imageIndex, cs);
        }
        if (envelope == null) {
            // TODO: Use an alternative way for setting envelope
            throw new IllegalArgumentException("Provided Envelope is null");
        }

        if (time == null) {
            // TODO: Use an alternative way for setting time extent
        }

        if (Double.isNaN(verticalValue)) {
            // TODO: Use an alternative way for setting vertical extent
        }

        // //
        //
        // Looking for a Geographic3D/Projected3D case vs VerticalCRS
        //
        // //
        if (!Double.isNaN(verticalValue)) {
            if (!isHasVerticalCRS()) {
                boundingBox = new double[] { envelope[0], envelope[1],
                        verticalValue, envelope[2], envelope[3], verticalValue };
            } else {
                setVerticalExtentNode(bb, verticalValue);
            }
        }
        if (boundingBox == null)
            boundingBox = envelope;

        setBoundingBoxNode(bb, boundingBox);
        if (isHasTemporalCRS())
            setTimeExtentNode(bb, time);
    }

