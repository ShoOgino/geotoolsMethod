    /**
     * Finish up building the URL, and return it as a string.
     *
     * @param builder StringBuilder that contains the base URL from which to start adding URL
     *     properties.
     * @param hasProperties Does the given URL already contains other properties?
     * @return Returns the URL with the newly added properties for filtering.
     */
    public String finish(StringBuilder builder, boolean hasProperties) {
        this.hasProperties = hasProperties;
        List<String> props = new ArrayList<String>(properties.keySet());
        if (sortProperties) {
            Collections.sort(queryable);
            Collections.sort(props);
        }

        // Add all properties to the URL:
        for (String property : props) {
            builder.append(getGlueChar());
            builder.append(property);
            builder.append("=");
            builder.append(properties.get(property));
        }

        // Add queryable properties to the URL if needed:
        if (queryable != null && queryable.size() > 0) {
            builder.append(getGlueChar());
            builder.append("queryable=");
            for (int i = 0; i < queryable.size(); i++) {
                builder.append(queryable.get(i));
                if (i < queryable.size() - 1) {
                    builder.append(",");
                }
            }
        }

        // Cleanup:
        properties.clear();
        queryable.clear();
        return builder.toString();
    }

