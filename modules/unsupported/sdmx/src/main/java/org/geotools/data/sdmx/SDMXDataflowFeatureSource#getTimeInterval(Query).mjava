    /**
     * Returns the the time portion of the GeoTools query.
     *
     * @param query GeoTools query to transform into SDMX constraints
     * @return The start and end periods of the time interval
     */
    public ArrayList<String> getTimeInterval(Query query) throws SdmxException {

        Map<String, String> expressions;
        ArrayList<String> constraints = new ArrayList<String>();

        expressions =
                (Map<String, String>)
                        query.getFilter()
                                .accept(
                                        new SDMXDataflowFeatureSource.VisitFilter(),
                                        new HashMap<String, String>());
        expressions.forEach(
                (k, v) -> {
                    if (k.equals(SDMXDataStore.TIME_KEY)) {
                        constraints.addAll(Arrays.asList(v.split("\\" + SDMXDataStore.OR_EXP)));
                    }
                });

        Collections.sort(constraints);

        if (constraints.size() > 0) {
            return new ArrayList<String>(
                    Arrays.asList(constraints.get(0), constraints.get(constraints.size() - 1)));
        } else {
            return constraints;
        }
    }

