    protected SimpleFeatureTypeBuilder buildBuilder() throws IOException {

        // Sets the information about the resource
        this.resInfo = new DefaultResourceInfo();
        try {
            this.resInfo.setSchema(new URI(this.dataStore.getNamespace().toExternalForm()));
        } catch (URISyntaxException e) {
            // Re-packages the exception to be compatible with method signature
            throw new IOException(e.getMessage(), e.fillInStackTrace());
        }

        this.resInfo.setCRS(this.crs);
        this.resInfo.setKeywords(new HashSet());

        // FIXME: the abstract of the feature type is not set
        this.resInfo.setDescription(this.dataflow.getDescription());

        this.resInfo.setTitle(this.dataflow.getName());
        this.resInfo.setName(this.dataflow.getId());
        this.resInfo.setCRS(this.crs);
        ReferencedEnvelope geoBbox =
                new ReferencedEnvelope(-180, 180, -90, 90, this.resInfo.getCRS());
        this.resInfo.setBounds(geoBbox);

        // Builds the feature type
        SimpleFeatureTypeBuilder builder = new SimpleFeatureTypeBuilder();
        builder.setCRS(this.resInfo.getCRS()); // NOTE: this has ot be done before
        // other settings, lest the SRS is
        // not set
        builder.setName(this.entry.getName());
        // FIXME: the abstract of the feature type is not set
        builder.setDescription(new SimpleInternationalString(this.resInfo.getDescription()));

        this.dataflowStructure =
                this.dataStore.getDataFlowStructure(this.entry.getName().getLocalPart());

        builder.add("the_geom", Point.class);
        builder.setDefaultGeometry(SDMXDataStore.GEOMETRY_ATTR);

        return builder;
    }

