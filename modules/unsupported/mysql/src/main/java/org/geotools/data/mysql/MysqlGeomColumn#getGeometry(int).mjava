    /**
     * Returns a jts Geometry when queried with a geometry ID.
     *
     * @param geomID the ID of the feature geometry.
     *
     * @return a jts geometry represention of the stored data, returns null is
     *         it is not found.
     *
     * @throws DataSourceException if there is trouble with the Database.
     */
    public Geometry getGeometry(int geomID) throws DataSourceException {
        String wellKnownText;
        Geometry returnGeometry = null;
        wellKnownText = (String) gidMap.get(new Integer(geomID));
        LOGGER.finer("about to create geometry for " + wellKnownText);

        if (wellKnownText == null) {
            return null;
        } else {
            try {
                returnGeometry = geometryReader.read(wellKnownText);
            } catch (ParseException e) {
                LOGGER.finer("Failed to parse the geometry from Mysql: " + e.getMessage());
            }

            return returnGeometry;
        }
    }

