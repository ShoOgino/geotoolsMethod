    /**
     * Produces the select information required.
     *
     * <p>
     * The featureType, if known, is always requested.
     * </p>
     *
     * <p>
     * sql: <code>featureID (,attributeColumn)</code>
     * </p>
     *
     * <p>
     * We may need to provide AttributeReaders with a hook so they can request
     * a wrapper function.
     * </p>
     *
     * @param sql
     * @param mapper
     * @param attributes
     */
    public void sqlColumns(StringBuffer sql, FIDMapper mapper, AttributeDescriptor[] attributes) {
        for (int i = 0; i < mapper.getColumnCount(); i++) {
            sql.append(mapper.getColumnName(i));

            if ((attributes.length > 0) || (i < (mapper.getColumnCount() - 1))) {
                sql.append(", ");
            }
        }

        for (int i = 0; i < attributes.length; i++) {
            String colName = attributes[i].getLocalName();

            if (attributes[i] instanceof GeometryDescriptor) {
                if(wkbEnabled)
                    sql.append("AsBinary(");
                else
                    sql.append("AsText(");
                sql.append(attributes[i].getLocalName() + ") AS "
                        + attributes[i].getLocalName());
            } else {
                sql.append(colName);
            }

            if (i < (attributes.length - 1)) {
                sql.append(", ");
            }
        }
    }

