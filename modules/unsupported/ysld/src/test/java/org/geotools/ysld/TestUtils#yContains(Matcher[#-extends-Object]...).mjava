    /**
     * Matches a YamlSeq
     * @param matchers
     * @return
     */
    @SafeVarargs
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static Matcher<? extends Object> yContains(final Matcher<? extends Object>... matchers) {
        return new BaseMatcher() {
            
            @Override
            public boolean matches(Object obj) {
                YamlSeq seq;
                if(obj instanceof YamlSeq) {
                    seq = (YamlSeq) obj;
                } else {
                    return false;
                }
                
                if(seq.raw().size()!=matchers.length) {
                    return false;
                }
                
                for(int i=0; i<matchers.length; i++) {
                    if(!matchers[i].matches(seq.get(i))) {
                        return false;
                    }
                }
                
                return true;
            }
    
            @Override
            public void describeTo(Description desc) {
                desc.appendList("Yaml Sequence with values [", ", ", "]", Arrays.asList(matchers));
            }
            
        };
    }

