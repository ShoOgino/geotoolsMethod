    @Test
    public void testPointWithRotatedLabel() throws Exception {
        // <UserStyle>
        //   <Title>GeoServer SLD Cook Book: Point with rotated label</Title>
        //   <FeatureTypeStyle>
        //     <Rule>
        //       <PointSymbolizer>
        //         <Graphic>
        //           <Mark>
        //             <WellKnownName>circle</WellKnownName>
        //             <Fill>
        //               <CssParameter name="fill">#FF0000</CssParameter>
        //             </Fill>
        //           </Mark>
        //           <Size>6</Size>
        //         </Graphic>
        //       </PointSymbolizer>
        //       <TextSymbolizer>
        //         <Label>
        //           <ogc:PropertyName>name</ogc:PropertyName>
        //         </Label>
        //         <Font>
        //           <CssParameter name="font-family">Arial</CssParameter>
        //           <CssParameter name="font-size">12</CssParameter>
        //           <CssParameter name="font-style">normal</CssParameter>
        //           <CssParameter name="font-weight">bold</CssParameter>
        //         </Font>
        //         <LabelPlacement>
        //           <PointPlacement>
        //             <AnchorPoint>
        //               <AnchorPointX>0.5</AnchorPointX>
        //               <AnchorPointY>0.0</AnchorPointY>
        //             </AnchorPoint>
        //             <Displacement>
        //               <DisplacementX>0</DisplacementX>
        //               <DisplacementY>25</DisplacementY>
        //             </Displacement>
        //             <Rotation>-45</Rotation>
        //           </PointPlacement>
        //         </LabelPlacement>
        //         <Fill>
        //           <CssParameter name="fill">#990099</CssParameter>
        //         </Fill>
        //       </TextSymbolizer>
        //     </Rule>
        //   </FeatureTypeStyle>
        // </UserStyle>
        Style style = parse("point", "rotated-label.sld");

        TextSymbolizer text = SLD.textSymbolizer(style);
        assertEquals("name", SLD.textLabelString(text));
        assertEquals(color("990099"), SLD.textFontFill(text));

        Font font = SLD.font(text);
        assertEquals("Arial", Filters.asString(font.getFamily().get(0)));
        assertEquals(12, Filters.asInt(font.getSize()));
        assertEquals("bold", Filters.asString(font.getWeight()));
        assertEquals("normal", Filters.asString(font.getStyle()));

        PointPlacement placement = (PointPlacement) text.getLabelPlacement();
        assertEquals(0.5, Filters.asDouble(placement.getAnchorPoint().getAnchorPointX()), 0.1);
        assertEquals(0.0, Filters.asDouble(placement.getAnchorPoint().getAnchorPointY()), 0.1);
        assertEquals(0, Filters.asInt(placement.getDisplacement().getDisplacementX()));
        assertEquals(25, Filters.asInt(placement.getDisplacement().getDisplacementY()));
        assertEquals(-45, Filters.asInt(placement.getRotation()));
    }

