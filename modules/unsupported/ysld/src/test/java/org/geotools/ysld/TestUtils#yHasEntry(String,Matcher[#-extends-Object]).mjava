    /**
     * Matches a YamlMap with an entry as named that has a value which matches the given matcher
     * 
     * @param key
     * @param m
     * @return
     */
    @SuppressWarnings({ "rawtypes", "unchecked" })
    public static Matcher<Object> yHasEntry(final String key, final Matcher<? extends Object> m) {
        return new BaseMatcher() {

            @Override
            public boolean matches(Object obj) {
                if (!(obj instanceof YamlMap))
                    return false;
                YamlMap map = (YamlMap) obj;

                if (!map.has(key))
                    return false;
                Object value = null;
                try {
                    value = map.map(key);
                } catch (IllegalArgumentException ex1) {
                    try {
                        value = map.seq(key);
                    } catch (IllegalArgumentException ex2) {
                        value = map.get(key);
                    }
                }
                return (m.matches(value));
            }

            @Override
            public void describeTo(Description desc) {
                desc.appendText("YamlMap with entry ").appendValue(key).appendText(" and value ")
                        .appendDescriptionOf(m);
            }

        };
    }

