    /**
     * parse a single test case
     *
     * From looking at various JTS test cases and seeing how their
     * testbuilder program works, I think its safe to assume that
     * there will always be just one or two objects, named a and
     * b.
     *
     * @param testCaseNode
     * @return GeometryTestCase
     */
    private GeometryTestCase readTestCase(Node testCaseNode) throws ParseException {
        Node child = testCaseNode.getFirstChild();
        GeometryTestCase testCase = new GeometryTestCase();

        while (child != null) {
            if (child.getNodeType() == Node.ELEMENT_NODE) {
                String name = child.getNodeName();
                if (name.equalsIgnoreCase("test")) {
                    GeometryTestOperation op = loadTestOperation(child);
                    testCase.addTestOperation(op);
                } else if (name.equalsIgnoreCase("a")) {
                    testCase.setGeometryA(loadTestGeometry(child));
                } else if (name.equalsIgnoreCase("b")) {
                    testCase.setGeometryB(loadTestGeometry(child));
                } else if (name.equalsIgnoreCase("desc")) {
                    testCase.setDescription(getNodeText(child));
                } else {
                    throw new ParseException("Unexpected: " + name, 0);
                }
            }
            child = child.getNextSibling();
        }

        return testCase;
    }

