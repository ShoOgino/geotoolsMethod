    public Surface _testSurface2(GeometryBuilder builder) {

        GeometryFactoryImpl tCoordFactory = (GeometryFactoryImpl) builder.getGeometryFactory();
        PrimitiveFactoryImpl tPrimFactory = (PrimitiveFactoryImpl) builder.getPrimitiveFactory();
        PositionFactory pf = builder.getPositionFactory();

        List<DirectPosition> directPositionList = new ArrayList<DirectPosition>();
        directPositionList.add(pf.createDirectPosition(new double[] {20, 10}));
        directPositionList.add(pf.createDirectPosition(new double[] {40, 10}));
        directPositionList.add(pf.createDirectPosition(new double[] {50, 40}));
        directPositionList.add(pf.createDirectPosition(new double[] {30, 50}));
        directPositionList.add(pf.createDirectPosition(new double[] {10, 30}));
        directPositionList.add(pf.createDirectPosition(new double[] {20, 10}));

        Ring exteriorRing = (Ring) tPrimFactory.createRingByDirectPositions(directPositionList);
        List<Ring> interiors = new ArrayList<Ring>();

        SurfaceBoundaryImpl surfaceBoundary1 =
                tPrimFactory.createSurfaceBoundary(exteriorRing, interiors);

        Surface surface2 = tPrimFactory.createSurface(surfaceBoundary1);

        // System.out.print("\n******************* SURFACE GENERATED BY SURFACEBOUNDARY");

        this.testSurfaces((SurfaceImpl) surface2);

        // ***** clone()
        SurfaceImpl surface3 = null;
        try {
            surface3 = (SurfaceImpl) surface2.clone();
        } catch (CloneNotSupportedException e) {
            java.util.logging.Logger.getGlobal().log(java.util.logging.Level.INFO, "", e);
        }
        assertTrue(surface2 != surface3);
        this.testSurfaces((SurfaceImpl) surface3);

        // ***** getRepresentativePoint()
        double[] dp = surface2.getRepresentativePoint().getCoordinate();
        assertTrue(dp[0] == 20);
        assertTrue(dp[1] == 10);

        return surface2;
    }

