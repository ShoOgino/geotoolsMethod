    private void _testPoint(GeometryBuilder builder) {

        GeometryFactoryImpl tCoordFactory = (GeometryFactoryImpl) builder.getGeometryFactory();
        PositionFactory pf = builder.getPositionFactory();
        PrimitiveFactoryImpl tPrimFactory = (PrimitiveFactoryImpl) builder.getPrimitiveFactory();

        double[] coord = new double[] {10, 32000};
        Point p1 = tPrimFactory.createPoint(coord);

        // ***** getRepresentativePoint()
        double[] dp = p1.getRepresentativePoint().getCoordinate();
        assertTrue(dp[0] == 10);
        assertTrue(dp[1] == 32000);

        DirectPosition dp1 = pf.createDirectPosition(coord);

        Point p2 = tPrimFactory.createPoint(dp1);

        // System.out.println("P1: " + p1);
        // System.out.println("P2: " + p2);
        assertTrue(p1.equals(p2));

        // System.out.println("Dimension is " + p1.getDimension(null));
        assertTrue(p1.getDimension(null) == 0);

        // System.out.println("Coordinate dimension is " + p1.getCoordinateDimension());
        assertTrue(p1.getCoordinateDimension() == 2);

        Complex cp1 = p1.getClosure();
        // System.out.println("Class of p1.closure() is " + cp1.getClass());
        assertTrue(cp1 instanceof CompositePoint);
        // System.out.println("p1.closure() is " + cp1);

        assertTrue(p1.isCycle() == true);

        double[] coord2 = new double[] {5, 20};
        dp1 = pf.createDirectPosition(coord2);
        p1.setDirectPosition(dp1);
        // System.out.println("P1: " + p1);
        // System.out.println("P2: " + p2);
        assertTrue(!p1.equals(p2));
    }

