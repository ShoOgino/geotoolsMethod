    public void testCreateCurveWithClosedParam() {
        GeometryBuilder builder = new GeometryBuilder(DefaultGeographicCRS.WGS84);

        // creating a curve which guarantees to be a closed curve.
        double[] pts = { 1.0, 1.0, 0.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 0.0 };
        PointArray parr = builder.createPointArray(pts);
        Curve c = builder.createCurve(parr, true);
        assertTrue(c.getStartPoint().equals(c.getEndPoint()));
        assertTrue(c.isCycle());

        // creating a curve which guarantees to be a closed curve and it doesn't add a end point again.
        double[] pts2 = { 1.0, 1.0, 0.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 0.0, 1.0, 1.0 };
        PointArray parr2 = builder.createPointArray(pts2);

        Curve c2 = builder.createCurve(parr2, true);
        assertTrue(c2.getStartPoint().equals(c2.getEndPoint()));
        assertTrue(c2.isSimple());

        // creating a curve and it doesn't add a same coordinate with the start point to make a closed curve.
        double[] pts3 = { 1.0, 1.0, 0.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 0.0 };
        PointArray parr3 = builder.createPointArray(pts3);
        Curve c3 = builder.createCurve(parr3, false);
        assertFalse(c3.getStartPoint().equals(c3.getEndPoint()));

        double[] pts4 = { 1.0, 1.0, 0.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 0.0, 1.0, 1.0 };
        PointArray parr4 = builder.createPointArray(pts4);
        Curve c4 = builder.createCurve(parr4, false);
        assertTrue(c4.getStartPoint().equals(c4.getEndPoint()));
        assertTrue(c.isCycle());
    }

