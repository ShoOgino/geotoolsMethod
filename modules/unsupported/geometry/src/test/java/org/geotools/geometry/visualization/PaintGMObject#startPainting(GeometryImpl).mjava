    public void startPainting(GeometryImpl object) {

        int object_x[] = null;
        int object_y[] = null;
        int object_type = 0;
        int scale = 3;
        
        /***** GM_Curve *****/
        if (object instanceof CurveImpl) {
            Coords coordArray = getCoordsFromCurve((CurveImpl) object);
            object_x = coordArray.getXArray();
            object_y = coordArray.getYArray();
            object_type = PaintGMObject.TYPE_LINESTRING;

        /***** GM_Point *****/
        } else if (object instanceof PointImpl) {
            object_x = new int[1];
            object_y = new int[1];
            DirectPositionImpl pos = ((PointImpl) object).getPosition();
            object_x[0] = (int) pos.getX();
            object_y[0] = (int) pos.getY();

            object_type = PaintGMObject.TYPE_POINT;
            
        } else if (object instanceof SurfaceImpl) {
        	
            object_type = PaintGMObject.TYPE_LINES;

            SurfaceBoundary sb = ((SurfaceImpl) object).getBoundary();
            Ring exterior = sb.getExterior();
            
            LineList coords = new LineList();
            
            coords.addRingToCoords((RingImplUnsafe)exterior);
            
        	List<Ring> interiors = sb.getInteriors();

        	for (int i=0; i<interiors.size(); i++) {
                coords.addRingToCoords((RingImplUnsafe) interiors.get(i));
        	}
        	
        	object_x = new int[coords.size()*2];
        	object_y = new int[coords.size()*2];

        	int z = 0;
        	for (int i=0; i<coords.size(); i++) {
        		object_x[z] = coords.getXFrom(i);
        		object_y[z] = coords.getYFrom(i);
        		z++;
        		object_x[z] = coords.getXTo(i);
        		object_y[z] = coords.getYTo(i);
        		z++;
        	}
            
        } else if (object instanceof MultiSurfaceImpl) {

            object_type = PaintGMObject.TYPE_LINES;
            
            Iterator surfaces = ((MultiSurfaceImpl)object).getElements().iterator();

            LineList coords = new LineList();
            
            while (surfaces.hasNext()) {
            	
                SurfaceBoundary sb = ((SurfaceImpl)surfaces.next()).getBoundary();
                Ring exterior = sb.getExterior();
                
                coords.addRingToCoords((RingImplUnsafe) exterior);
                
            	List<Ring> interiors = sb.getInteriors();

            	for (int i=0; i<interiors.size(); i++) {
                    coords.addRingToCoords((RingImplUnsafe) interiors.get(i));
            	}
            }
        	
        	object_x = new int[coords.size()*2];
        	object_y = new int[coords.size()*2];

        	int z = 0;
        	for (int i=0; i<coords.size(); i++) {
        		object_x[z] = coords.getXFrom(i);
        		object_y[z] = coords.getYFrom(i);
        		z++;
        		object_x[z] = coords.getXTo(i);
        		object_y[z] = coords.getYTo(i);
        		z++;
        	}

            
        }
        
        	
//        /***** GM_Ring *****/
//        else if (object instanceof RingImpl) {
//        	ArrayList<OrientableCurve> curves = ((RingImpl) object).getGenerators();
//            Coords coordArray[] = new Coords[curves.size()];
//            int numberPoints = 0;
//            /* Create Array with all Coords, each representing a Curve */
//            for (int i=0; i<curves.size(); i++) {
//                coordArray[i] = getCoordsFromCurve((CurveImpl) curves.get(i));
//                numberPoints += coordArray[i].length();
//            }
//            /* Copying all Points from the Coords into one cummulative Array */
//            object_x = new int[numberPoints];
//            object_y = new int[numberPoints];
//            int index=0;
//            for (int j=0; j<coordArray.length; j++) {
//                int tmpX[] = coordArray[j].getXArray();
//                int tmpY[] = coordArray[j].getYArray();
//                for (int k=0; k<coordArray[j].length(); k++) {
//                    object_x[index] = tmpX[k]; 
//                    object_y[index] = tmpY[k];
//                    index++;
//                }
//            }
//            
//            object_type = PaintGMObject.TYPE_LINESTRING;
//
//        /***** GM_Tin *****/
//        } else if (object instanceof TinImpl) {
//        	ArrayList<Triangle> triangles = ((TinImpl)object).getTriangles();
//            object_x = new int[6*triangles.size()];
//            object_y = new int[6*triangles.size()];
//            int index=0;
//            for (int j=0; j<triangles.size(); j++) {
//                PositionImpl c[] = triangles.get(j).getCorners();
//                /* First line */
//                object_x[index] = (int)((DirectPositionImpl)c[0].getDirectPosition()).getX();
//                object_y[index] = (int)((DirectPositionImpl)c[0].getDirectPosition()).getY();
//                index++;
//                object_x[index] = (int)((DirectPositionImpl)c[1].getDirectPosition()).getX();
//                object_y[index] = (int)((DirectPositionImpl)c[1].getDirectPosition()).getY();
//                index++;
//
//                /* Second line */
//                object_x[index] = (int)((DirectPosition)c[1].getDirectPosition()).getX();
//                object_y[index] = (int)((DirectPosition)c[1].getDirectPosition()).getY();
//                index++;
//                object_x[index] = (int)((DirectPosition)c[2].getDirectPosition()).getX();
//                object_y[index] = (int)((DirectPosition)c[2].getDirectPosition()).getY();
//                index++;
//
//                /* Third line */
//                object_x[index] = (int)((DirectPosition)c[2].getDirectPosition()).getX();
//                object_y[index] = (int)((DirectPosition)c[2].getDirectPosition()).getY();
//                index++;
//                object_x[index] = (int)((DirectPosition)c[0].getDirectPosition()).getX();
//                object_y[index] = (int)((DirectPosition)c[0].getDirectPosition()).getY();
//                index++;
//            
//            }
//            object_type = PaintGMObject.TYPE_LINES;
//            
//        }
        
        
        Envelope objEnvelope = object.getEnvelope();
        int height = (int)((DirectPositionImpl)objEnvelope.getUpperCorner()).getY();
        int width  = (int)((DirectPositionImpl)objEnvelope.getUpperCorner()).getX();
        
        /* Displaying Screen */
        ObjectScreen app1 =  new ObjectScreen();
        app1.pack();
        
        app1.paintObject(object_x, object_y, object_type, scale);
        app1.setSize(width*scale+15*scale+20,height*scale+35*scale+20);
        app1.setVisible(true);

        
    }

