    private int locate(Coordinate p, SurfaceImpl aSurface) {

        // if (poly.isEmpty())
        // return Location.EXTERIOR;
        List<Ring> rings = aSurface.getBoundaryRings();
        Ring shell = rings.get(0);

        int shellLoc = locateInPolygonRing(p, shell);
        if (shellLoc == Location.EXTERIOR) return Location.EXTERIOR;
        if (shellLoc == Location.BOUNDARY) return Location.BOUNDARY;
        // now test if the point lies in or on the holes
        for (int i = 1; i < rings.size(); i++) {
            Ring hole = rings.get(i);
            int holeLoc = locateInPolygonRing(p, hole);
            if (holeLoc == Location.INTERIOR) return Location.EXTERIOR;
            if (holeLoc == Location.BOUNDARY) return Location.BOUNDARY;
        }
        return Location.INTERIOR;

        // OLD CODE:
        // if (poly.isEmpty())
        // return Location.EXTERIOR;
        // LinearRing shell = (LinearRing) poly.getExteriorRing();
        //
        // int shellLoc = locateInPolygonRing(p, shell);
        // if (shellLoc == Location.EXTERIOR)
        // return Location.EXTERIOR;
        // if (shellLoc == Location.BOUNDARY)
        // return Location.BOUNDARY;
        // // now test if the point lies in or on the holes
        // for (int i = 0; i < poly.getNumInteriorRing(); i++) {
        // LinearRing hole = (LinearRing) poly.getInteriorRingN(i);
        // int holeLoc = locateInPolygonRing(p, hole);
        // if (holeLoc == Location.INTERIOR)
        // return Location.EXTERIOR;
        // if (holeLoc == Location.BOUNDARY)
        // return Location.BOUNDARY;
        // }
        // return Location.INTERIOR;

    }

