    public DirectedEdge getRightmostEdge() {
        List edges = getEdges();
        int size = edges.size();
        if (size < 1) return null;
        DirectedEdge de0 = (DirectedEdge) edges.get(0);
        if (size == 1) return de0;
        DirectedEdge deLast = (DirectedEdge) edges.get(size - 1);

        int quad0 = de0.getQuadrant();
        int quad1 = deLast.getQuadrant();
        if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) return de0;
        else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) return deLast;
        else {
            // edges are in different hemispheres - make sure we return one that
            // is non-horizontal
            // Assert.isTrue(de0.getDy() != 0, "should never return horizontal
            // edge!");
            if (de0.getDy() != 0) return de0;
            else if (deLast.getDy() != 0) return deLast;
        }
        Assert.shouldNeverReachHere("found two horizontal edges incident on node");
        return null;
    }

