    /**
     * The association role Composition::generator associates this CompositeCurve to the primitive
     * Curves and OrientableCurves in its generating set, the curves that form the core of this
     * complex. CompositeCurve::generator : Sequence<OrientableCurve> -- the start point of each
     * orientable curve in the generator is the -- end point of the previous one CompositeCurve:
     * forAll (1 < j < generator.count - 1)? generator[j].endPoint = generator[j+1].startPoint;
     *
     * <p>NOTE To get a full representation of the elements in the Complex, the Points on the
     * boundary of the generator set of Curve would be added to the curves in the generator list.
     *
     * <p>The generator elements will be passed through the super constructor. The plausibility of
     * the Curves will be checked within the constructor of the CompositeCurve
     *
     * <p>Constructs a Composite Curve
     */
    public CompositeCurveImpl(List<OrientableCurve> generator) {
        /* Pass elements to super constructor */
        super(generator);
        this.checkConsistency();
    }

