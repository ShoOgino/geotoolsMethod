    /**
     * Merges this LineString with another LineString, forming a new LineString The input
     * LineStrings will not be modified by this operation. The used Lists of the pointArray will be
     * cloned. The Positions which represents the control points will not be cloned.
     *
     * @param other LineString
     */
    public LineStringImpl merge(LineStringImpl other) {
        // Test ok (SJ)

        LineStringImpl result;

        if (other.getEndPoint().equals(this.getStartPoint())) {
            LinkedList<Position> posToAdd = new LinkedList<Position>(other.getControlPoints());
            posToAdd.removeLast();
            posToAdd.addAll(getControlPoints());
            result = new LineStringImpl(posToAdd);

        } else if (this.getEndPoint().equals(other.getStartPoint())) {
            LinkedList<Position> posToAdd = new LinkedList<Position>(getControlPoints());
            posToAdd.removeLast();
            posToAdd.addAll(other.getControlPoints());
            result = new LineStringImpl(posToAdd);
        } else {
            throw new IllegalArgumentException(
                    "The LineString do not agree in a start and end point");
        }
        return result;
    }

