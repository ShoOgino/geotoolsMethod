    /**
     * Collect edges from Area inputs which should be in the result but which have not been included
     * in a result area. This happens ONLY:
     *
     * <ul>
     *   <li>during an intersection when the boundaries of two areas touch in a line segment
     *   <li>OR as a result of a dimensional collapse.
     * </ul>
     */
    private void collectBoundaryTouchEdge(DirectedEdge de, int opCode, List edges) {
        Label label = de.getLabel();
        if (de.isLineEdge()) return; // only interested in area edges
        if (de.isVisited()) return; // already processed
        if (de.isInteriorAreaEdge()) return; // added to handle dimensional collapses
        if (de.getEdge().isInResult())
            return; // if the edge linework is already included, don't include
        // it again

        // sanity check for labelling of result edgerings
        Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());

        // include the linework if it's in the result of the operation
        if (OverlayOp.isResultOfOp(label, opCode) && opCode == OverlayOp.INTERSECTION) {
            edges.add(de.getEdge());
            de.setVisitedEdge(true);
        }
    }

