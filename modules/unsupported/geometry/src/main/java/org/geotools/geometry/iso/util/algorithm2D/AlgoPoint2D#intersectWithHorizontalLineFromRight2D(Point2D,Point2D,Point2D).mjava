    public static boolean intersectWithHorizontalLineFromRight2D(
            Point2D p, Point2D p0, Point2D p1) {
        // returns true when a horizontal line passing at ME:
        // 1) intersects the line with origin p0 and and p1 and
        // 2) when ME is on the right side of the line
        double x0 = p0.getX(); // line endpoint 2D coords
        double y0 = p0.getY(); // line endpoint 2D coords
        double x1 = p1.getX(); // line endpoint 2D coords
        double y1 = p1.getY(); // line endpoint 2D coords
        double xa = x0; // swap coordinates
        double ya = y0; // swap coordinates
        double xb = x1; // swap coordinates
        double yb = y1; // swap coordinates
        double max_x = Math.max(x0, x1); // maximum x coordinate
        double min_x = Math.min(x0, x1); // minimum x coordinate
        double max_y = Math.max(y0, y1); // maximum y coordinate
        double min_y = Math.min(y0, y1); // minimum y coordinate

        // the horizontal line does not intersect the line to the
        // left of location pt if:
        // [1] if line is horizontal
        if (y0 == y1) return false;
        // (2) if the y coordinate of node is outside the range
        // max_y and min_y (but not including min_y)
        if (((p.getY() < min_y) || (p.getY() >= max_y))) return false;
        // (3) if given line is vertical and y coordinate of node is
        // smaller than that of line
        if (((x0 == x1) && (p.getX() < x0))) return false;
        // (4) if inclined line is located to the right of given node
        // (first reduce the problem to a case where yb >ya, always)
        if ((x0 != x1)) {
            if (!(((x1 > x0) && (y1 > y0)) || ((x1 < x0) && (y1 > y0)))) {
                xa = x1;
                ya = y1;
                xb = x0;
                yb = y0;
            }
            if ((((p.getY() - ya) * (xb - xa)) > ((p.getX() - xa) * (yb - ya)))) {
                return false;
            }
        }
        // if we get here that is because the horizontal line passing
        // at the location this intersects the given line to the left of the pt
        return true;
    }

