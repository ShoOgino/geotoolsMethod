    /**
     * As a set of primitives, a Complex may be contained as a set in another larger Complex,
     * referred to as a "super complex" of the original. A Complex is maximal if there is no such
     * larger super complex. The operation "maximalComplex" shall return the set of maximal
     * Complexes within which this Object is contained.
     *
     * <p>Object::maximalComplex() : Set<Complex>
     *
     * <p>If the application schema used does not include Complex, then this operation shall return
     * a NULL value.
     *
     * <p>NOTE The usual semantics of maximal complexes does not allow any Primitive to be in more
     * than one maximal complex, making it a strong aggregation. This is not an absolute, and
     * depending on the semantics of the implementation, the association between Primitives and
     * maximal Complexes could be many to many. From a programming point of view, this would be a
     * difficult (but not impossible) dynamic structure to maintain, but as a static query-only
     * structure, it could be quite useful in minimizing redundant data inherent in two
     * representations of the same primitive geometric object.
     *
     * @return the set containing only this object if it is a maximal complex or its maximum
     *     complexes
     */
    /* (non-Javadoc)
     * @see org.opengis.geometry.coordinate.root.Geometry#getMaximalComplex()
     */
    public Set<Complex> getMaximalComplex() {
        HashSet<Complex> result = new HashSet<Complex>();
        if (this.isMaximal()) {
            result.add(this);
        } else {
            for (Complex c : this.superComplex) {
                result.addAll(c.getMaximalComplex());
            }
        }
        return result;
    }

