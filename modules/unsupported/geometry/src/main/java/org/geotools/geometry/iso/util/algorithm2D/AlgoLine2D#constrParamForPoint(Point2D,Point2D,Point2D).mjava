    public static double constrParamForPoint(Point2D p0, Point2D p1, Point2D dp) {
        // return the construction parametric coordinate (0.0 <= result <= 1.0) of
        // dp on the line (p0,p1)
        // if p0.equals(p1) then: if dp.equals(p0) return 0.0, else Double.NaN
        // if dp is close to p0 then result = 0.0
        // if dp is close to p1 then result = 1.0
        // if the line (p0,p1) does not contain dp then return Double.NaN
        double eps = AlgoPoint2D.EPSILON;
        double result = java.lang.Double.NaN;
        // return nothing if dp is not on the same line as (p0,p1): colinear
        if (!AlgoLine2D.isParallel(p0, p1, p0, dp)) return java.lang.Double.NaN;
        if (p0.equals(p1)) {
            if (AlgoPoint2D.equals(p0, dp, eps)) return 0.0;
            else return java.lang.Double.NaN;
        }
        if (Math.abs(p0.getX() - p1.getX()) > Math.abs(p0.getY() - p1.getY()))
            result = (dp.getX() - p0.getX()) / (p1.getX() - p0.getX());
        else result = (dp.getY() - p0.getY()) / (p1.getY() - p0.getY());
        if (Math.abs(result) <= eps) result = 0.0;
        if (Math.abs(1.0 - result) <= eps) result = 1.0;
        if (result < 0.0 || result > 1.0) return java.lang.Double.NaN;
        return result;
    }

