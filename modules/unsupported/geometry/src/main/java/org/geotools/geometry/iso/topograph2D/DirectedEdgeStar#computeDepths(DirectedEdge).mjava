	public void computeDepths(DirectedEdge de) {
		int edgeIndex = findIndex(de);
		Label label = de.getLabel();
		int startDepth = de.getDepth(Position.LEFT);
		int targetLastDepth = de.getDepth(Position.RIGHT);
		// compute the depths from this edge up to the end of the edge array
		int nextDepth = computeDepths(edgeIndex + 1, edgeList.size(),
				startDepth);
		// compute the depths for the initial part of the array
		int lastDepth = computeDepths(0, edgeIndex, nextDepth);
		// Debug.print(lastDepth != targetLastDepth, this);
		// Debug.print(lastDepth != targetLastDepth, "mismatch: " + lastDepth +
		// " / " + targetLastDepth);
		if (lastDepth != targetLastDepth)
			throw new TopologyException("depth mismatch at "
					+ de.getCoordinate());
		// Assert.isTrue(lastDepth == targetLastDepth, "depth mismatch at " +
		// de.getCoordinate());
	}

