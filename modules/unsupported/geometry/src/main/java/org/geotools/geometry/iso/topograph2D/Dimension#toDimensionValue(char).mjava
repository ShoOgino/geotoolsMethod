    /**
     * Converts the dimension symbol to a dimension value, for example, <code>'*' => DONTCARE</code>
     * .
     *
     * @param dimensionSymbol a character for use in the string representation of an <code>
     *     IntersectionMatrix</code>. Possible values are <code>{T, F, * , 0, 1, 2}</code> .
     * @return a number that can be stored in the <code>IntersectionMatrix</code> . Possible values
     *     are <code>{TRUE, FALSE, DONTCARE, 0, 1, 2}</code>.
     */
    public static int toDimensionValue(char dimensionSymbol) {
        switch (Character.toUpperCase(dimensionSymbol)) {
            case 'F':
                return FALSE;
            case 'T':
                return TRUE;
            case '*':
                return DONTCARE;
            case '0':
                return P;
            case '1':
                return L;
            case '2':
                return A;
        }
        throw new IllegalArgumentException("Unknown dimension symbol: " + dimensionSymbol);
    }

