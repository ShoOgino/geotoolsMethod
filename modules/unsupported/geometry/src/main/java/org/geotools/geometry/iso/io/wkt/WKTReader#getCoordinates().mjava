    /**
     * Returns the next array of <code>Coordinate</code>s in the stream.
     *
     * @param tokenizer tokenizer over a stream of text in Well-known Text format. The next element
     *     returned by the stream should be L_PAREN (the beginning of "(x1 y1, x2 y2, ..., xn yn)")
     *     or EMPTY.
     * @return the next array of <code>Coordinate</code>s in the stream, or an empty array if EMPTY
     *     is the next element returned by the stream.
     * @throws IOException if an I/O error occurs
     * @throws ParseException if an unexpected token was encountered
     */
    private Coordinate[] getCoordinates() throws IOException, ParseException {
        String nextToken = getNextEmptyOrOpener();
        if (nextToken.equals(EMPTY)) {
            return new Coordinate[] {};
        }
        ArrayList coordinates = new ArrayList();
        coordinates.add(getPreciseCoordinate());
        nextToken = getNextCloserOrComma();
        while (nextToken.equals(COMMA)) {
            coordinates.add(getPreciseCoordinate());
            nextToken = getNextCloserOrComma();
        }
        Coordinate[] array = new Coordinate[coordinates.size()];
        return (Coordinate[]) coordinates.toArray(array);
    }

