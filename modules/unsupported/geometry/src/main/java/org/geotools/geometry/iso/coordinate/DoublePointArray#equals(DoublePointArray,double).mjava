    /**
     * Compares coodinates of DoublePointArray and allows a tolerance value in the comparison.
     *
     * @param dpArray Direct Position to compare with
     * @param tol Epsilon tolerance value
     * @return TRUE, if coordinates accord concording to the tolerance value, FALSE if they dont.
     */
    public boolean equals(DoublePointArray dpArray, double tol) {
        int D = dpArray.getDimension();
        if (D != getDimension()) return false;

        if (dpArray.length() != length()) return false;

        // only compare the positions within the start/end of the larger array
        for (int x = 0; x < dpArray.length(); x++) {
            DirectPosition ddPos = dpArray.get(x);
            DirectPosition thisddPos = get(x);
            for (int i = 0; i < D; ++i) {
                if (Math.abs(
                                DoubleOperation.subtract(
                                        ddPos.getOrdinate(i), thisddPos.getOrdinate(i)))
                        > tol) return false;
            }
        }
        return true;
    }

