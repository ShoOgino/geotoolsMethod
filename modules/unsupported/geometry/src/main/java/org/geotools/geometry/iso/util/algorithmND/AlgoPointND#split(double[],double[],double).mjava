    /**
     * @param c0
     * @param c1
     * @param maxSpacingSquare is the square of the max. allowed spacing
     * @return only the intermediate coordinates
     */
    public static double[][] split(double[] c0, double[] c1, double maxSpacingSquare) {
        // TODO Test
        // TODO Documentation
        double distSquare = getDistanceSquare(c0, c1);
        if (distSquare > maxSpacingSquare) {
            int n = (int) Math.ceil(Math.sqrt(distSquare / maxSpacingSquare));
            double r = 1.0 / n;
            double[][] result = new double[n - 1][];
            for (int i = 1; i < n; ++i) {
                result[i - 1] = evaluate(c0, c1, i * r);
                // result[i] =  evaluate(c0, c1, i*r);
            }
            return result;
        }
        return null;
    }

