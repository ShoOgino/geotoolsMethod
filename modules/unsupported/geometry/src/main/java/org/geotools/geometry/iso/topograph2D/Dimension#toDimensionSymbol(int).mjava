    /**
     * Converts the dimension value to a dimension symbol, for example, <code>TRUE => 'T'</code> .
     *
     * @param dimensionValue a number that can be stored in the <code>IntersectionMatrix</code> .
     *     Possible values are <code>{TRUE, FALSE, DONTCARE, 0, 1, 2}</code>.
     * @return a character for use in the string representation of an <code>IntersectionMatrix
     *     </code>. Possible values are <code>{T, F, * , 0, 1, 2}</code> .
     */
    public static char toDimensionSymbol(int dimensionValue) {
        switch (dimensionValue) {
            case FALSE:
                return 'F';
            case TRUE:
                return 'T';
            case DONTCARE:
                return '*';
            case P:
                return '0';
            case L:
                return '1';
            case A:
                return '2';
        }
        throw new IllegalArgumentException("Unknown dimension value: " + dimensionValue);
    }

