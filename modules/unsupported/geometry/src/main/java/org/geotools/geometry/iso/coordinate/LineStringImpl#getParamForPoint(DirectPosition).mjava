    /*
     * (non-Javadoc)
     * 
     * @see org.opengis.geometry.coordinate.GenericCurve#getParamForPoint(org.opengis.geometry.coordinate.DirectPosition)
     */
    public ParamForPoint getParamForPoint( DirectPosition p ) {
        // TODO semantic SJ, JR
        // TODO implementation
        // TODO test
        // TODO documentation

        // TO DO JR: check with a discussion in geotools/codehaus about the
        // return parameters.
    	throw new UnsupportedOperationException("not implemented yet.");
        //assert false;
        //return null;
        // /* Receive LineString as LineSegments */
        // List<LineSegmentImpl> segments = this.asLineSegments();
        //		
        // /* ArrayList for storing all found minimum distance positions */
        // ArrayList<DirectPositionImpl> rPositions = new
        // ArrayList<DirectPositionImpl>();
        //
        // ParamForPointImpl rParams = new ParamForPointImpl(this);
        //
        // /* Get closest Point on first Segment */
        // DirectPositionImpl actPos = segments.get(0).closestPoint(p);
        // /* Add to List of all minimum distance positions */
        // rPositions.add(actPos);
        // // JR: Sanjay, das entspricht rParams.add(segments[0].startParam() +
        // d), mit d aus closestPoint
        // double dist =
        // DirectPositionImpl.distance(segments.get(0).getStartPoint(),actPos);
        // rParams.add(segments.get(0).getStartParam() + dist);
        // /* Calculate distance between those two points */
        // double minDistance = DirectPositionImpl.distance(p,actPos);
        //		
        // /* Loop all other segments and compare minimum distance */
        // for (int i=1, n=segments.size(); i<n; i++) {
        //			
        // /* Check distance to next segment */
        // actPos = segments.get(i).closestPoint(p);
        // double actDistance = actDistance =
        // DirectPositionImpl.distance(p,actPos);
        //			
        // /* If distance smaller or equal than previous minDistance, then safe
        // this as new minDistance */
        // if (actDistance <= minDistance) {
        // /* If actual distance is smaller than previous, clear list of all
        // minimum distance positions, because a new minium distance was found
        // */
        // if (actDistance < minDistance) {
        // rPositions.clear();
        // rParams.clear();
        // }
        // minDistance = actDistance;
        // rPositions.add(actPos);
        // rParams.add(segments.get(i).getStartParam()
        // + DirectPositionImpl.distance(segments.get(i).getStartPoint(),
        // actPos));
        // }
        //			
        // }
        // assert false;
        // return rParams;
    }

