	/**
	 * Returns true if the dimension value satisfies the dimension symbol.
	 * 
	 * @param actualDimensionValue
	 *            a number that can be stored in the
	 *            <code>IntersectionMatrix</code> . Possible values are
	 *            <code>{TRUE, FALSE, DONTCARE, 0, 1, 2}</code>.
	 * @param requiredDimensionSymbol
	 *            a character used in the string representation of an
	 *            <code>IntersectionMatrix</code>. Possible values are
	 *            <code>{T, F, * , 0, 1, 2}</code>.
	 * @return true if the dimension symbol encompasses the dimension value
	 */
	public static boolean matches(int actualDimensionValue,
			char requiredDimensionSymbol) {
		if (requiredDimensionSymbol == '*') {
			return true;
		}
		if (requiredDimensionSymbol == 'T'
				&& (actualDimensionValue >= 0 || actualDimensionValue == Dimension.TRUE)) {
			return true;
		}
		if (requiredDimensionSymbol == 'F'
				&& actualDimensionValue == Dimension.FALSE) {
			return true;
		}
		if (requiredDimensionSymbol == '0'
				&& actualDimensionValue == Dimension.P) {
			return true;
		}
		if (requiredDimensionSymbol == '1'
				&& actualDimensionValue == Dimension.L) {
			return true;
		}
		if (requiredDimensionSymbol == '2'
				&& actualDimensionValue == Dimension.A) {
			return true;
		}
		return false;
	}

