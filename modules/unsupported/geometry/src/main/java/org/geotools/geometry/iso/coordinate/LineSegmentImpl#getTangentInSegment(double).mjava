    /**
     * The operation "tangent" shall return the tangent vector along this GenericCurve at the passed
     * parameter value. This vector approximates the derivative of the parameterization of the
     * curve. The tangent shall be a unit vector (have length 1.0), which is consistent with the
     * parameterization by arc length.
     *
     * <p>This function will build the tangent vector at the position defined by the distance. The
     * vector will have his origin at the specified position, and his vectorPosition in direction of
     * the curve If the position, which is defined by the distance, lays on a control point, this
     * control point will be the originPosition of the Vector
     *
     * @param distance a <code>double</code> value
     * @return a <code>Vector</code> value
     */
    public double[] getTangentInSegment(double distance) {
        // Works for n dimensional coordinates

        // Calculate the normative vector from origin
        double[] startpoint = this.getStartPoint().getCoordinate();
        double[] endpoint = this.getEndPoint().getCoordinate();
        double[] newEndPoint = AlgoPointND.subtract(startpoint, endpoint);
        newEndPoint = AlgoPointND.normalize(newEndPoint);

        // TODO this part depends from forParam() - implement this method!
        // Add the coordinate at distance to the normative vector
        double[] posAtDistance = this.forParamInSegment(distance).getCoordinate();
        newEndPoint = AlgoPointND.add(newEndPoint, posAtDistance);
        return newEndPoint;
    }

