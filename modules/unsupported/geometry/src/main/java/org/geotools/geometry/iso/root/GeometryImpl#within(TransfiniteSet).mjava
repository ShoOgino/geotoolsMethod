    /**
     * This operator tests, whether an object is spatially within this Geometry object
     *
     * @param pointSet Another Object
     * @return TRUE, if the other object is spatially within this object
     */
    public boolean within(TransfiniteSet pointSet) {
        GeometryImpl geom = GeometryImpl.castToGeometryImpl(pointSet);

        // Return false, if the envelopes doesnÂ´t intersect
        if (!((EnvelopeImpl) this.getEnvelope()).intersects(geom.getEnvelope())) return false;

        IntersectionMatrix tIM = null;
        try {
            tIM = RelateOp.relate(this, geom);
        } catch (UnsupportedDimensionException e) {
            java.util.logging.Logger.getGlobal().log(java.util.logging.Level.INFO, "", e);
            return false;
        }

        boolean rValue = false;
        rValue = tIM.matches("T*F**F***");

        //		if (this instanceof PrimitiveImpl) {
        //			if (geom instanceof PrimitiveImpl) {
        //				// Primitive / Primitive
        //				rValue = tIM.matches("TFF******");
        //			} else
        //			if (geom instanceof ComplexImpl) {
        //				// Primitive / Complex
        //				rValue = tIM.matches("T*F******");
        //			} else {
        //				Assert.isTrue(false);
        //			}
        //		} else
        //		if (this instanceof ComplexImpl) {
        //			if (geom instanceof PrimitiveImpl) {
        //				// Complex / Primitive
        //				rValue = tIM.matches("T***F****");
        //			} else
        //			if (geom instanceof ComplexImpl) {
        //				// Complex / Complex
        //				rValue = tIM.matches("T*F**F***");
        //			} else {
        //				Assert.isTrue(false);
        //			}
        //		}

        return rValue;
    }

