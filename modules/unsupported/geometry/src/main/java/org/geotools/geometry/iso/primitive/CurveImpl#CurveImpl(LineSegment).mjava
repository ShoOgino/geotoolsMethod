	/**
	 * The Curve constructor takes an abstract sequential list of CurveSegments
	 * with the appropriate end-to-start relationships and creates a Curve.
	 * 
	 * Curve::Curve(segment[1..n] : CurveSegment) : Curve
	 * 
	 * The start position of the first segment and the end position of the last
	 * segment must be associated to a PointImpl. If they are associated instead
	 * of that to a direct position, then this direct position will be used to
	 * construct a new Point.
	 * 
	 * Contained primitives must be curve segments or points. If it is a curve
	 * 
	 * @param factory
	 * @param segments
	 * @param containedPrimitive
	 * @param containingPrimitive
	 * @param complex
	 * @throws IllegalArgumentException
	 */
	// TODO Selbe frage auch hier: brauchen wir diesen constructor?
	// public CurveImpl(FeatGeomFactoryImpl factory, List<CurveSegmentImpl>
	// segments,
	// Set<Primitive> containedPrimitive,
	// Set<Primitive> containingPrimitive, Set<Complex> complex)
	// throws IllegalArgumentException {
	// super(factory, containedPrimitive, containingPrimitive, complex);
	// this.initialize(segments);
	// }

	public CurveImpl(LineSegment edge) {
		this( edge.getControlPoints().getCoordinateReferenceSystem(), Collections.singletonList( edge ) );
	}

