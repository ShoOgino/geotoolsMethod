    public static boolean containsPointInPolygon(Coordinate p, SurfaceImpl aSurface) {

        // TODO auskommentiert; checken!
        // if (poly.isEmpty())
        // return false;

        List<Ring> rings = aSurface.getBoundaryRings();
        Ring shell = rings.get(0);

        // The point lies in the ring defined by the coordinatearray
        // representation of the exterior ring?
        // if not, return false
        if (!CGAlgorithms.isPointInRing(
                p,
                CoordinateArrays.toCoordinateArray(((RingImplUnsafe) shell).asDirectPositions()))) {
            return false;
        }

        // The point lies in the ring defined by the coordinatearray
        // representation of the exterior ring?
        for (int i = 1; i < rings.size(); i++) {
            RingImplUnsafe hole = (RingImplUnsafe) rings.get(i);
            // if so, return false
            if (CGAlgorithms.isPointInRing(
                    p, CoordinateArrays.toCoordinateArray(hole.asDirectPositions()))) {
                return false;
            }
        }

        // the point lies inside the exterior ring, and outside the holes, so
        // its on the polygon
        return true;

        // OLD CODE:
        // if (poly.isEmpty())
        // return false;
        // LinearRing shell = (LinearRing) poly.getExteriorRing();
        // if (!CGAlgorithms.isPointInRing(p, shell.getCoordinates()))
        // return false;
        // // now test if the point lies in or on the holes
        // for (int i = 0; i < poly.getNumInteriorRing(); i++) {
        // LinearRing hole = (LinearRing) poly.getInteriorRingN(i);
        // if (CGAlgorithms.isPointInRing(p, hole.getCoordinates()))
        // return false;
        // }
        // return true;

    }

