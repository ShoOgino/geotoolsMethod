    /**
     * Creates a <code>Point</code> using the next token in the stream.
     *
     * @param tokenizer tokenizer over a stream of text in Well-known Text format. The next tokens
     *     must form a &lt;Point Text&gt;.
     * @return a <code>Point</code> specified by the next token in the stream
     * @throws IOException if an I/O error occurs
     * @throws ParseException if an unexpected token was encountered
     */
    private Point readPointText() throws IOException, ParseException {
        String nextToken = getNextEmptyOrOpener();
        if (nextToken.equals(EMPTY)) {
            return null;
        }
        Point point =
                new PointImpl(
                        positionFactory.createDirectPosition(
                                this.getPreciseCoordinate()
                                        .getCoordinates())); // primitiveFactory.createPoint(this.getPreciseCoordinate().getCoordinates());
        getNextCloser();
        return point;
    }

