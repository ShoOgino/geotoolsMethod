    /*
     * (non-Javadoc)
     *
     * @see org.opengis.geometry.primitive.PrimitiveFactory#createRing(java.util.List)
     */
    public Ring createRing(List<OrientableCurve> orientableCurves)
            throws MismatchedReferenceSystemException, MismatchedDimensionException {
        /**
         * Creates a Ring from triple Array of DirectPositions (Array of arrays, which each
         * represent a future Curve. Each array contain an array of positions, which each represent
         * a future lineString)
         */
        // TODO semantic JR
        // test OK
        for (OrientableCurve orientableCurve : orientableCurves) {
            // Comment by Sanjay
            // TODO JR: Zur Kenntnisnahme und Berücksichtigung in Sourcen: Für
            // alle
            // Primitives gilt, dass getDimension die Dimension des Objektes,
            // und getCoordinateDimension die Dimension des Koordinatensystems,
            // in welchem das Objekt instanziert wurde, wiedergibt
            // if (this.getDimension() != orientableCurve.getDimension(null)) {
            if (this.getDimension() != orientableCurve.getCoordinateDimension()) {
                throw new MismatchedDimensionException();
            }
            if (!CRS.equalsIgnoreMetadata(
                    this.getCoordinateReferenceSystem(),
                    orientableCurve.getCoordinateReferenceSystem())) {
                throw new MismatchedReferenceSystemException();
            }
        }

        // if we don't want to validate the ring upon creation (for faster creation) use
        // RingImplUnsafe instead of RingImpl
        if (geomValidate) {
            return new RingImpl(orientableCurves);
        } else {
            return new RingImplUnsafe(orientableCurves);
        }
    }

