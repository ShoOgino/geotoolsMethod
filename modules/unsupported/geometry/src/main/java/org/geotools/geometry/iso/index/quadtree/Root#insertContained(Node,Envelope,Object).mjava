    /**
     * insert an item which is known to be contained in the tree rooted at the given QuadNode root.
     * Lower levels of the tree will be created if necessary to hold the item.
     */
    private void insertContained(Node tree, Envelope itemEnv, Object item) {
        Assert.isTrue(tree.getEnvelope().contains(itemEnv));
        /**
         * Do NOT create a new quad for zero-area envelopes - this would lead to infinite recursion.
         * Instead, use a heuristic of simply returning the smallest existing quad containing the
         * query
         */
        boolean isZeroX = IntervalSize.isZeroWidth(itemEnv.getMinX(), itemEnv.getMaxX());
        boolean isZeroY = IntervalSize.isZeroWidth(itemEnv.getMinX(), itemEnv.getMaxX());
        NodeBase node;
        if (isZeroX || isZeroY) node = tree.find(itemEnv);
        else node = tree.getNode(itemEnv);
        node.add(item);
    }

