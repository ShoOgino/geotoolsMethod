	/**
	 * This operator tests, whether an object touches this object in an edge or point
	 * 
	 * @param pointSet The other object
	 * 
	 * @return TRUE, if the other object touches this object
	 */
	public boolean touches(TransfiniteSet pointSet) {
		GeometryImpl geom = GeometryImpl.castToGeometryImpl(pointSet);

		// Return false, if the envelopes doesnÂ´t intersect
		if (!((EnvelopeImpl)this.getEnvelope()).intersects(geom.getEnvelope()))
			return false;

		IntersectionMatrix tIM = null;
		try {
			tIM = RelateOp.relate(this, geom);
		} catch (UnsupportedDimensionException e) {
			e.printStackTrace();
			return false;
		}
		
		boolean rValue = false;
		rValue = tIM.matches("F***T****")
	  	  || tIM.matches("FT*******")
	  	  || tIM.matches("F**T*****");
		
//		if (this instanceof PrimitiveImpl) {
//			if (geom instanceof PrimitiveImpl) {
//				// Primitive / Primitive
//				rValue = tIM.matches("FT*******")
//					  || tIM.matches("F**T*****");
//			} else
//			if (geom instanceof ComplexImpl) {
//				// Primitive / Complex
//				rValue = tIM.matches("F***T****")
//					  || tIM.matches("FT*******")
//					  || tIM.matches("F**T*****");
//			} else {
//				Assert.isTrue(false);
//			}
//		} else
//		if (this instanceof ComplexImpl) {
//			if (geom instanceof PrimitiveImpl) {
//				// Complex / Primitive
//				rValue = tIM.matches("F***T****")
//				  	  || tIM.matches("FT*******")
//				  	  || tIM.matches("F**T*****");
//			} else
//			if (geom instanceof ComplexImpl) {
//				// Complex / Complex
//				rValue = tIM.matches("F***T****")
//			  	  	  || tIM.matches("FT*******")
//			  	  	  || tIM.matches("F**T*****");
//			} else {
//				Assert.isTrue(false);
//			}
//		}
		
		return rValue;	
	}

