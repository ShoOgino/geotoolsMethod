    /**
     * Add a {@link GeometryImpl} to this {@link GeometryGraph}
     *
     * @param g
     */
    private void add(GeometryImpl g) {

        // TODO auskommentiert; checken!
        // if (g.isEmpty()) return;

        // TODO auskommentiert; checken!
        // check if this Geometry should obey the Boundary Determination Rule
        // all collections except MultiSurfaces obey the rule
        if (g instanceof MultiSurface) useBoundaryDeterminationRule = false;

        /*
         * The following classes shall be considered for building a geometry graph in 2d/2.5d:
         * CompositeCurve
         * CompositeSurface
         * Curve
         * CurveBoundary
         * Point
         * Ring
         * Surface
         * SurfaceBoundary
         * MultiPrimitive
         * MultiPoint
         * MultiCurve
         * MultiSurface
         */
        if (g instanceof PointImpl) this.addPoint((PointImpl) g);
        else if (g instanceof CurveImpl) this.addCurve((CurveImpl) g);
        else if (g instanceof CurveBoundaryImpl) this.addCurveBoundary((CurveBoundaryImpl) g);
        else if (g instanceof RingImplUnsafe) {
            this.addRing((RingImplUnsafe) g);
        } else if (g instanceof RingImpl) {
            this.addRing((RingImpl) g);
        } else if (g instanceof SurfaceImpl) this.addSurface((SurfaceImpl) g);
        else if (g instanceof SurfaceBoundaryImpl) this.addSurfaceBoundary((SurfaceBoundaryImpl) g);
        else if (g instanceof CompositePointImpl) this.addCompositePoint((CompositePointImpl) g);
        else if (g instanceof CompositeCurveImpl) this.addCompositeCurve((CompositeCurveImpl) g);
        else if (g instanceof CompositeSurfaceImpl)
            this.addCompositeSurface((CompositeSurfaceImpl) g);
        else if (g instanceof MultiPrimitiveImpl) this.addMultiPrimitive((MultiPrimitiveImpl) g);
        else throw new UnsupportedOperationException(g.getClass().getName());
    }

