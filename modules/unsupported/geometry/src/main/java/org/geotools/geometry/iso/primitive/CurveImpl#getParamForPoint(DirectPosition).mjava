	/**
	 * The operation "paramForPoint" shall return the parameter for this
	 * GenericCurve at the passed DirectPosition. If the DirectPosition is not
	 * on the curve, the nearest point on the curve shall be used.
	 * 
	 * GenericCurve::paramForPoint(p : DirectPosition2D) : Set<Distance>,
	 * DirectPosition2D
	 * 
	 * The DirectPosition closest is the actual value for the "p" used, that is,
	 * it shall be the point on the GenericCurve closest to the coordinate
	 * passed in as "p". The return set will contain only one distance, unless
	 * the curve is not simple. If there is more than one DirectPosition on the
	 * GenericCurve at the same minimal distance from the passed "p", the return
	 * value may be an arbitrary choice of one of the possible answers.
	 * 
	 * @param p
	 *            an <code>DirectPosition2D</code> value
	 * @return Array of parameters for the Position
	 */
	/*
	 * (non-Javadoc)
	 * 
	 * @see org.opengis.geometry.coordinate.GenericCurve#getParamForPoint(org.opengis.geometry.coordinate.DirectPosition)
	 */
	public ParamForPoint getParamForPoint(DirectPosition p) {
		// TODO semantic SJ, JR
		// TODO implementation
		// TODO test
		// TODO documentation
		/* Initialise paramForPoints with set of first Segment */
		ParamForPoint paramForPoints = this.curveSegments.get(0)
				.getParamForPoint(p);

		double minDistanceSquare = AlgoPointND.getDistanceSquare(p.getCoordinates(), paramForPoints.getPosition().getCoordinates());
		//double minDistanceSquare = ((DirectPositionImpl) p).distanceSquare(paramForPoints.getPosition());
		double actDistanceSquare = 0.0;

		/* Loop all other segments and check if the distance of them is smaller */
		for (int i = 1; i < this.curveSegments.size(); i++) {
			ParamForPoint paramForPoints1 = this.curveSegments.get(i)
					.getParamForPoint(p);
			
			actDistanceSquare = AlgoPointND.getDistanceSquare(p.getCoordinates(), paramForPoints1.getPosition().getCoordinates());
			//actDistanceSquare = ((DirectPositionImpl) p).distanceSquare(paramForPoints1.getPosition());
			
			if (actDistanceSquare <= minDistanceSquare) {
				// TODO
				// /* If other params are closer, clear list of params */
				// if (actDistanceSquare < minDistanceSquare) {
				// ((ParamForPoint)paramForPoints).clear();
				// }
				// /* Add new minimal distances to list of params */
				// for (int j = 0; j < obj.length; j++) {
				// paramForPoints.add((Double) obj[j]);
				// }
				// minDistanceSquare = actDistanceSquare;
			}
		}

		return paramForPoints;
	}

