    /**
     * Constructor
     *
     * @param wms WMS server
     * @param layer Layer containing map
     * @param dimensionX Map width
     * @param dimensionY map height
     * @param bounds Bounding box
     */
    public FXMap(
            WebMapServer wms,
            Layer layer,
            int dimensionX,
            int dimensionY,
            org.opengis.geometry.Envelope bounds)
            throws NoSuchAuthorityCodeException, FactoryException {

        System.setProperty("org.geotools.referencing.forceXY", "true");
        mapCanvas = new Canvas(dimensionX, dimensionY);
        gc = mapCanvas.getGraphicsContext2D();
        zoomLevel = 0;
        lastZoomLevel = 0;
        GeneralEnvelope layerBounds = null;
        this.crs = CRS.decode(this.INIT_SPACIAL_REF_SYS);
        layerBounds = layer.getEnvelope(crs);

        this.layerBBox = new GeneralEnvelope(bounds);
        this.layerBBox.setCoordinateReferenceSystem(this.crs);
        this.maxBBox = layerBBox;

        this.vBox = new VBox();
        this.wms = wms;
        this.displayLayer = layer;
        this.dimensionX = dimensionX;
        this.dimensionY = dimensionY;

        layers = new ArrayList<Layer>(0);
        layers.add(layer);

        WMSLayer wmsLayer = new WMSLayer(wms, displayLayer);
        this.mapContent = new MapContent();
        this.mapContent.addLayer(wmsLayer);
        this.mapContent.getViewport().setCoordinateReferenceSystem(crs);
        this.mapContent.getViewport().setBounds(new ReferencedEnvelope(layerBBox));

        this.getChildren().add(vBox);
        mapPane = new ScrollPane();
        mapPane.setMaxSize(dimensionX, dimensionY);
        mapPane.setPrefSize(dimensionX, dimensionY);
        mapPane.setContent(mapCanvas);
        mapPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);
        mapPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);

        this.vBox.getChildren().add(mapPane);

        this.mapCanvas.addEventHandler(MouseEvent.MOUSE_RELEASED, new OnMouseReleasedEvent());
        this.mapCanvas.addEventHandler(MouseEvent.MOUSE_CLICKED, new OnMousePressedEvent());
        this.mapCanvas.addEventHandler(MouseEvent.MOUSE_PRESSED, new OnMousePressedEvent());
        this.mapCanvas.addEventHandler(MouseEvent.MOUSE_DRAGGED, new OnMouseDraggedEvent());
        this.mapCanvas.addEventHandler(ScrollEvent.SCROLL, new OnMouseScrollEvent());

        zoomTimer = new Timer(true);
        try {
            repaint();
            refreshViewport();
        } catch (Exception ex) {
            log.log(Level.SEVERE, ex.getMessage());
        }
    }

