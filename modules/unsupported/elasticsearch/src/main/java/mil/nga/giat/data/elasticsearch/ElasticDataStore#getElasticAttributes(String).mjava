    public List<ElasticAttribute> getElasticAttributes(String layerName) throws IOException {
        if (elasticConfigurations.get(layerName) == null) {
            elasticAttributes = new ArrayList<ElasticAttribute>();

            final ClusterStateRequest clusterStateRequest;
            clusterStateRequest = Requests.clusterStateRequest()
                    .routingTable(true)
                    .nodes(true)
                    .indices(indexName);

            final ClusterState state;
            state = client.admin().cluster()
                    .state(clusterStateRequest).actionGet().getState();
            final MappingMetaData metadata;
            metadata = state.metaData().index(indexName)
                    .mapping(layerName);

            final byte[] mappingSource = metadata.source().uncompressed();
            final XContentParser parser;
            parser = XContentFactory.xContent(mappingSource)
                    .createParser(mappingSource);

            Map<String, Object> mapping = parser.map();
            if (mapping.size() == 1 && mapping.containsKey(layerName)) {
                // the type name is the root value, reduce it
                mapping = (Map<String, Object>) mapping.get(layerName);
            }

            add("_id", "string", mapping);
            add("_index", "string", mapping);
            add("_type", "string", mapping);
            add("_score", "float", mapping);
            add("_relative_score", "float", mapping);

            walk(mapping, "", false);

            // add default geometry and short name and count duplicate short names
            final Map<String,Integer> counts = new HashMap<>();
            boolean foundGeometry = false;
            for (final ElasticAttribute attribute : elasticAttributes) {
                if (!foundGeometry && Geometry.class.isAssignableFrom(attribute.getType())) {
                    attribute.setDefaultGeometry(true);
                    foundGeometry = true;
                }
                final String[] parts = attribute.getName().split("\\.");
                attribute.setShortName(parts[parts.length-1]);
                final int count;
                if (counts.containsKey(attribute.getShortName())) {
                    count = counts.get(attribute.getShortName())+1;
                } else {
                    count = 1;
                }
                counts.put(attribute.getShortName(), count);
            }
            // use full name if short name has duplicates
            for (final ElasticAttribute attribute : elasticAttributes) {
                if (counts.get(attribute.getShortName()) > 1) {
                    attribute.setShortName(attribute.getName());
                }
            }
        } else {
            elasticAttributes = elasticConfigurations.get(layerName).getAttributes();
        }
        return elasticAttributes;
    }

