	private void setIncludes(final SearchRequestBuilder searchRequest) throws IOException {
		final ElasticDataStore dataStore = getDataStore();
		final List<ElasticAttribute> attributes = dataStore.getElasticAttributes(entry.getName());
		List<String> sourceIncludes = new ArrayList<>();
		for (final ElasticAttribute attribute : attributes) {
			if (attribute.isUse() && attribute.isStored()) {
				searchRequest.addField(attribute.getName());
			} else if (attribute.isUse()) {
				sourceIncludes.add(attribute.getName());
			}
		}
		if (sourceIncludes.size() == 1) {
			searchRequest.setFetchSource(sourceIncludes.get(0), null);
		} else if (!sourceIncludes.isEmpty()) {
			final String[] includes;
			includes = sourceIncludes.toArray(new String[sourceIncludes.size()]);
			searchRequest.setFetchSource(includes, null);
		}
	}

