    void visitGeoShapeBinarySpatialOperator(BinarySpatialOperator filter, Expression e1, Expression e2, boolean swapped,
            Object extraData) throws IOException {

        final ShapeRelation shapeRelation;
        if (filter instanceof Disjoint) {
            shapeRelation = ShapeRelation.DISJOINT;
        } else if ((!swapped && filter instanceof Within) || (swapped && filter instanceof Contains)) {
            shapeRelation = ShapeRelation.WITHIN;
        } else if (filter instanceof Intersects || filter instanceof BBOX) {
            shapeRelation = ShapeRelation.INTERSECTS;
        } else {
            FilterToElastic.LOGGER.fine(filter.getClass().getSimpleName() + " is unsupported for geo_shape types");
            shapeRelation = null;
            delegate.fullySupported = false;
        }

        if (shapeRelation != null) {
            e1.accept(delegate, extraData);
            final String key = (String) delegate.field;
            e2.accept(delegate, extraData);
            final ShapeBuilder shapeBuilder = delegate.currentShapeBuilder;

            delegate.filterBuilder = QueryBuilders.geoShapeQuery(key, shapeBuilder, shapeRelation);
            // delegate.filterBuilder = FilterBuilders.geoShapeFilter(key,
            // shapeBuilder, shapeRelation);
        } else {
            delegate.filterBuilder = QueryBuilders.matchAllQuery();
            // delegate.filterBuilder = FilterBuilders.matchAllFilter();
        }
    }

