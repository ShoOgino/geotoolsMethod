    @Before
    public void setUp() {
        ff = CommonFactoryFinder.getFilterFactory2();

        SimpleFeatureTypeBuilder typeBuilder = new SimpleFeatureTypeBuilder();
        typeBuilder.setName("test");
        typeBuilder.add("stringAttr", String.class);
        typeBuilder.add("integerAttr", Integer.class);
        typeBuilder.add("longAttr", Long.class);
        typeBuilder.add("booleanAttr", Boolean.class);
        typeBuilder.add("doubleAttr", Double.class);
        typeBuilder.add("floatAttr", Float.class);
        typeBuilder.add("dateAttr", Date.class);

        AttributeDescriptor geoPointAtt;
        AttributeTypeBuilder geoPointAttBuilder = new AttributeTypeBuilder();
        geoPointAttBuilder.setName("geo_point");
        geoPointAttBuilder.setBinding(Point.class);
        geoPointAtt =
                geoPointAttBuilder.buildDescriptor("geo_point", geoPointAttBuilder.buildType());
        geoPointAtt
                .getUserData()
                .put(
                        ElasticConstants.GEOMETRY_TYPE,
                        ElasticAttribute.ElasticGeometryType.GEO_POINT);
        typeBuilder.add(geoPointAtt);

        AttributeDescriptor geoShapeAtt;
        AttributeTypeBuilder geoShapeAttBuilder = new AttributeTypeBuilder();
        geoShapeAttBuilder.setName("geom");
        geoShapeAttBuilder.setBinding(Geometry.class);
        geoShapeAtt = geoShapeAttBuilder.buildDescriptor("geom", geoShapeAttBuilder.buildType());
        geoShapeAtt
                .getUserData()
                .put(
                        ElasticConstants.GEOMETRY_TYPE,
                        ElasticAttribute.ElasticGeometryType.GEO_SHAPE);
        typeBuilder.add(geoShapeAtt);

        AttributeDescriptor analyzedAtt;
        AttributeTypeBuilder analyzedAttBuilder = new AttributeTypeBuilder();
        analyzedAttBuilder.setName("analyzed");
        analyzedAttBuilder.setBinding(String.class);
        analyzedAtt =
                analyzedAttBuilder.buildDescriptor("analyzed", analyzedAttBuilder.buildType());
        analyzedAtt.getUserData().put(ElasticConstants.ANALYZED, true);
        typeBuilder.add(analyzedAtt);

        AttributeDescriptor netsedAtt;
        AttributeTypeBuilder nestedAttBuilder = new AttributeTypeBuilder();
        nestedAttBuilder.setName("nested.hej");
        nestedAttBuilder.setBinding(String.class);
        netsedAtt = nestedAttBuilder.buildDescriptor("nested.hej", nestedAttBuilder.buildType());
        netsedAtt.getUserData().put(ElasticConstants.NESTED, true);
        netsedAtt.getUserData().put(ElasticConstants.ANALYZED, true);
        typeBuilder.add(netsedAtt);

        AttributeDescriptor netsedDateAtt;
        AttributeTypeBuilder nestedDateAttBuilder = new AttributeTypeBuilder();
        nestedDateAttBuilder.setName("nested.datehej");
        nestedDateAttBuilder.setBinding(Date.class);
        netsedDateAtt =
                nestedDateAttBuilder.buildDescriptor(
                        "nested.datehej", nestedDateAttBuilder.buildType());
        netsedDateAtt.getUserData().put(ElasticConstants.NESTED, true);
        typeBuilder.add(netsedDateAtt);

        featureType = typeBuilder.buildFeatureType();
        setFilterBuilder();

        parameters = new HashMap<>();
        final Hints hints = new Hints();
        hints.put(Hints.VIRTUAL_TABLE_PARAMETERS, parameters);
        query = new Query();
        query.setHints(hints);

        dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");
        dateFormat.setTimeZone(TimeZone.getTimeZone("UTC"));

        gf = new GeometryFactory();
    }

