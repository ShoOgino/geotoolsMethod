    private static void connect() throws Exception {
        Path baseDir = Paths.get("target/elasticsearch");
        baseDir.toFile().mkdirs();
        dataPath = Files.createTempDirectory(baseDir, null).toAbsolutePath().toString();
        
        LOGGER.info("Creating local test Elasticsearch cluster (path.home=" + dataPath + ")");
        Settings build = ImmutableSettings.builder()
                .put("path.data", dataPath)
                .put("http.enabled", false)
                .build();
        node = nodeBuilder()
                .settings(build)
                .local(true)
                .clusterName(clusterName)
                .node();
        Client client = node.client();

        // create index and add mappings
        Settings indexSettings = ImmutableSettings.settingsBuilder()
                .put("number_of_shards", numShards)
                .build();
        CreateIndexRequestBuilder builder = client.admin().indices().prepareCreate(indexName);
        builder.setSettings(indexSettings);
        try (Scanner s = new Scanner(ClassLoader.getSystemResourceAsStream(ACTIVE_MAPPINGS_FILE))) {
            s.useDelimiter("\\A");
            builder.addMapping("active", s.next());
        }
        try (Scanner s = new Scanner(ClassLoader.getSystemResourceAsStream(INACTIVE_MAPPINGS_FILE))) {
            s.useDelimiter("\\A");
            builder.addMapping("not-active", s.next());
        }
        builder.execute().actionGet();

        // index documents
        InputStream inputStream = ClassLoader.getSystemResourceAsStream(TEST_FILE);
        try (Scanner scanner = new Scanner(inputStream)) {
            scanner.useDelimiter("\\n");
            while (scanner.hasNext()) {
                final String line = scanner.next();
                if (!line.startsWith("#")) {
                    final Matcher idMatcher = ID_PATTERN.matcher(line);
                    final String id;
                    if (idMatcher.matches()) {
                        id = idMatcher.group(1);
                    } else {
                        id = null;
                    }
                    final String layerName;
                    final Matcher statusMatcher = STATUS_PATTERN.matcher(line);
                    if (statusMatcher.matches()) {
                        layerName = statusMatcher.group(1);
                    } else {
                        layerName = null;
                    }

                    client.prepareIndex(indexName, layerName)
                    .setSource(line)
                    .setId(id)
                    .execute().actionGet();
                }
            }
        }
        LOGGER.info("Done setting up Elasticsearch");
    }

