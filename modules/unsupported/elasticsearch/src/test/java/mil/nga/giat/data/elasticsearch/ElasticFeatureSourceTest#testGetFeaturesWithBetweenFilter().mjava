    @Test
    public void testGetFeaturesWithBetweenFilter() throws Exception {
        init();
        FilterFactory ff = dataStore.getFilterFactory();
        PropertyIsBetween between = ff.between(ff.property("speed_is"), ff.literal(0),
                ff.literal(150));
        SimpleFeatureCollection features = featureSource.getFeatures(between);
        assertEquals(9, features.size());
        SimpleFeatureIterator iterator = features.features();
        while (iterator.hasNext()) {
            SimpleFeature f = iterator.next();
            boolean found = false;
            if (f.getAttribute("speed_is") instanceof List) {
                for (Object obj : (List<?>) f.getAttribute("speed_is")) {
                    int v = (Integer) obj;
                    if (v >= 0 && v <= 150) {
                        found = true;
                        break;
                    }
                }
            } else {
                int v = (Integer) f.getAttribute("speed_is");
                found = (v >= 0 && v <= 150);
            }
            assertTrue(found);
        }
        between = ff.between(ff.property("speed_is"), ff.literal(160), ff.literal(300));
        features = featureSource.getFeatures(between);
        assertEquals(5, features.size());
        iterator = features.features();
        while (iterator.hasNext()) {
            SimpleFeature f = iterator.next();
            boolean found = false;
            if (f.getAttribute("speed_is") instanceof List) {
                for (Object obj : (List<?>) f.getAttribute("speed_is")) {
                    int v = (Integer) obj;
                    if (v >= 160 && v <= 300) {
                        found = true;
                        break;
                    }
                }
            } else {
                int v = (Integer) f.getAttribute("speed_is");
                found = (v >= 160 && v <= 300);
            }
            assertTrue(found);
        }
    }

