    @Test
    public void testRemoveMapping() {
        Map<String,Object> data = createMap("key", "value");
        RestElasticClient.removeMapping(null, "key", data, null);
        assertTrue(data.isEmpty());

        data = createMap("key", "value", "parent", ImmutableMap.of("key", "value"));
        RestElasticClient.removeMapping(null, "key", data, null);
        assertEquals(data, ImmutableMap.of("parent", ImmutableMap.of("key", "value")));

        data = ImmutableMap.of("key", "value", "parent", createMap("key", 10));
        RestElasticClient.removeMapping("parent", "key", data, null);
        assertEquals(data, ImmutableMap.of("key", "value", "parent", new HashMap<>()));

        data = new HashMap<>();
        RestElasticClient.removeMapping(null, "key", data, null);
        assertTrue(data.isEmpty());

        data = ImmutableMap.of("parent", new HashMap<>());
        RestElasticClient.removeMapping("parent", "key", data, null);
        assertEquals(data, ImmutableMap.of("parent", new HashMap<>()));

        data = createMap("key", ImmutableList.of(ImmutableMap.of("key", "value"),
                ImmutableMap.of("key","value","parent", createMap("key","value","key2","value2"))));
        RestElasticClient.removeMapping("parent", "key", data, null);
        assertEquals(data, createMap("key", ImmutableList.of(ImmutableMap.of("key", "value"),
                ImmutableMap.of("key","value","parent", createMap("key2","value2")))));
    }

