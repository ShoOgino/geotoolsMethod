    private HeaderMeta getHeaderMeta(SimpleFeatureType featureType) throws IOException {
        if (this.headerMeta == null) {
            List<AttributeDescriptor> types = featureType.getAttributeDescriptors();
            List<ColumnMeta> columns = new ArrayList<ColumnMeta>();

            for (int i = 0; i < types.size(); i++) {
                AttributeDescriptor ad = types.get(i);
                if (!(ad instanceof GeometryDescriptor)) {
                    String key = ad.getLocalName();
                    Class<?> binding = ad.getType().getBinding();
                    ColumnMeta column = new ColumnMeta();
                    column.name = key;
                    if (binding.isAssignableFrom(Boolean.class)) column.type = ColumnType.Bool;
                    else if (binding.isAssignableFrom(Integer.class)) column.type = ColumnType.Int;
                    else if (binding.isAssignableFrom(Long.class)) column.type = ColumnType.Long;
                    else if (binding.isAssignableFrom(Double.class))
                        column.type = ColumnType.Double;
                    else if (binding.isAssignableFrom(String.class))
                        column.type = ColumnType.String;
                    else throw new IOException("Unknown type");
                    columns.add(column);
                }
            }

            byte geometryType =
                    toGeometryType(featureType.getGeometryDescriptor().getType().getBinding());

            this.headerMeta = new HeaderMeta();
            headerMeta.featuresCount = 0;
            headerMeta.geometryType = geometryType;
            headerMeta.columns = columns;
        }
        return this.headerMeta;
    }

