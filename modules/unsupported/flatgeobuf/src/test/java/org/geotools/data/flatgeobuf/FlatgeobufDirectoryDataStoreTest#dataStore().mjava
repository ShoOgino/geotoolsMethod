    @Test
    public void dataStore() throws Exception {

        // Create a directory
        File directory = temporaryFolder.newFolder();

        // Copy over some FGB files
        String[] fgbNames = {"lines", "points", "polygons"};
        for (String name : fgbNames) {
            File file =
                    URLs.urlToFile(
                            getClass()
                                    .getClassLoader()
                                    .getResource("org/geotools/data/flatgeobuf/" + name + ".fgb"));
            Files.copy(
                    file.toPath(),
                    new File(directory, file.getName()).toPath(),
                    StandardCopyOption.REPLACE_EXISTING);
        }

        // Get a DataStore
        Map<String, Serializable> params = new HashMap<>();
        params.put("file", directory);
        DataStore store = DataStoreFinder.getDataStore(params);

        // Get layers
        List<String> names = Arrays.asList(store.getTypeNames());
        for (String name : fgbNames) {
            assertTrue(names.contains(name));
        }

        // Make sure we can get layers
        for (String name : names) {
            SimpleFeatureSource fs = store.getFeatureSource(name);
            assertNotNull(fs.getBounds());
            assertNotNull(fs.getSchema());
            assertTrue(fs.getCount(Query.ALL) > 0);
        }

        // Write a new Layer
        SimpleFeatureType featureType =
                DataUtilities.createType("locations", "geom:Point,name:String,id:int");
        store.createSchema(featureType);
        SimpleFeatureStore featureStore = (SimpleFeatureStore) store.getFeatureSource("locations");
        GeometryFactory gf = JTSFactoryFinder.getGeometryFactory();
        SimpleFeature feature1 =
                SimpleFeatureBuilder.build(
                        featureType,
                        new Object[] {
                            gf.createPoint(new Coordinate(-8.349609375, 14.349547837185362)),
                            "ABC",
                            1
                        },
                        "location.1");
        SimpleFeature feature2 =
                SimpleFeatureBuilder.build(
                        featureType,
                        new Object[] {
                            gf.createPoint(new Coordinate(-18.349609375, 24.349547837185362)),
                            "DEF",
                            2
                        },
                        "location.2");
        SimpleFeatureCollection collection =
                DataUtilities.collection(new SimpleFeature[] {feature1, feature2});
        featureStore.addFeatures(collection);
        assertEquals(2, featureStore.getCount(Query.ALL));
    }

