    /**
     * Creates a default rainbow color table given a data range.
     * 
     * @param dataRange the data range for which the color table is created
     * @return the list of color rules as <code>value1:r:g:b value2:r:g:b alpha</code>
     */
    @SuppressWarnings("nls")
    public static List<String> createDefaultColorTable( double[] dataRange, int alpha ) {
        List<String> rules = new ArrayList<String>();
        // calculate the color increment
        float rinc = (float) (dataRange[1] - dataRange[0]) / 5;
        for( int i = 0; i < 5; i++ ) {
            StringBuffer rule = new StringBuffer();
            rule.append((dataRange[0] + (i * rinc)) + ":");
            rule.append(rainbow[i][0] + ":" + rainbow[i][1] + ":" + rainbow[i][2] + " ");
            rule.append((dataRange[0] + ((i + 1) * rinc)) + ":");
            rule.append(rainbow[i + 1][0] + ":" + rainbow[i + 1][1] + ":" + rainbow[i + 1][2] + " " + alpha);
            rules.add(rule.toString());
        }
        return rules;
    }

