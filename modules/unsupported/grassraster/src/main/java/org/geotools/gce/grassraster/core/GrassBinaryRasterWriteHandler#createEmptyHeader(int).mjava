    /**
     * Creates the binary header for the raster file.
     * <p>
     * The space for the header of the rasterfile is created, filling the spaces with zeros. After
     * the compression the values will be rewritten
     * </p>
     * 
     * @param rows number of rows that will be written.
     * @throws IOException if an error occurs while trying to write the header.
     */
    private void createEmptyHeader( int rows ) throws IOException {
        addressesOfRows = new long[rows + 1];
        // the size of a long in C?
        imageOS.write(4);
        // write the addresses of the row begins. Since we don't know how
        // much
        // they will be compressed, they will be filled after the
        // compression
        for( int i = 0; i < rows + 1; i++ ) {
            imageOS.writeInt(0);
        }
        pointerInFilePosition = imageOS.getStreamPosition();
        addressesOfRows[0] = pointerInFilePosition;
    }

