    /**
     * Create a new instance of TransparencyFillOpImage in the rendered layer. This method satisfies
     * the implementation of RIF.
     *
     * @param paramBlock The source image and the dilation kernel.
     */
    public RenderedImage create(ParameterBlock paramBlock, RenderingHints renderHints) {
        // Get ImageLayout from renderHints if any.
        ImageLayout layout = RIFUtil.getImageLayoutHint(renderHints);

        // Get BorderExtender from renderHints if any.
        BorderExtender extender = RIFUtil.getBorderExtenderHint(renderHints);
        if (extender == null) {
            extender = BorderExtender.createInstance(BorderExtender.BORDER_COPY);
        }
        FillType type = TransparencyFillDescriptor.FILL_AVERAGE;
        Object param0 = paramBlock.getObjectParameter(TYPE_ARG);
        if (param0 != null && param0 instanceof FillType) {
            type = (FillType) param0;
        }
        Object param1 = paramBlock.getObjectParameter(NODATA_ARG);
        Number noData = null;
        if (param1 != null && param1 instanceof Number) noData = (Number) param1;

        Integer width = null;
        Integer param2 = paramBlock.getIntParameter(WIDTH_ARG);
        if (param2 != null) width = param2;

        RenderedImage source = paramBlock.getRenderedSource(0);
        return new TransparencyFillOpImage(
                source, extender, type, renderHints, layout, noData, width);
    }

