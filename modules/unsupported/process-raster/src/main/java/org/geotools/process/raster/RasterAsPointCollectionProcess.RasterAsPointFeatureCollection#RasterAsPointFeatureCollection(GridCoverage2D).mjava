		public RasterAsPointFeatureCollection(final GridCoverage2D gc2d) throws IOException {
        	super(CoverageUtilities.createFeatureType(gc2d, Point.class));
            this.gc2d=gc2d;
            
            //
            // get various elements from this coverage
            //
            // SIZE
            final RenderedImage raster=gc2d.getRenderedImage();
            size=raster.getWidth()*raster.getHeight();
            
            // GRID TO WORLD
            mt2D= gc2d.getGridGeometry().getGridToCRS2D(PixelOrientation.UPPER_LEFT);
            
            // BOUNDS take into account that we want to map center coordinates
            rasterBounds = PlanarImage.wrapRenderedImage(raster).getBounds();
            final XRectangle2D rasterBounds_=new XRectangle2D(raster.getMinX()+0.5, raster.getMinY()+0.5, raster.getWidth()-1,  raster.getHeight()-1);
            try {
				bounds = new ReferencedEnvelope(CRS.transform(mt2D, rasterBounds_, null),gc2d.getCoordinateReferenceSystem2D());
			} catch (MismatchedDimensionException e) {
				final IOException ioe= new IOException();
				ioe.initCause(e);
				throw ioe;
			} catch (TransformException e) {
				final IOException ioe= new IOException();
				ioe.initCause(e);
				throw ioe;
			}
			
			// BANDS
			numBands = gc2d.getNumSampleDimensions();
            
        }

