    /**
     * Compute the footprint.
     *
     * @param geometriesList the List of all the geometries found across the dataset
     */
    private void computeFootprint(List<Polygon> geometriesList, MathTransform transform)
            throws MismatchedDimensionException, TransformException, FactoryException {
        // Creating the final multipolygon
        Polygon[] polArray = new Polygon[geometriesList.size()];
        Polygon[] polygons = geometriesList.toArray(polArray);
        final Geometry innerGeometry = new MultiPolygon(polygons, GF);

        if (footprintCoordinates == FootprintCoordinates.MODEL_SPACE) {
            this.footprint = JTS.transform(innerGeometry, transform);
        } else {
            this.footprint = innerGeometry;
            innerGeometry.setSRID(NO_SRID);
        }
        // Compute the ROIShape
        if (!innerGeometry.isEmpty()) {
            LiteShape2 shape = new LiteShape2(innerGeometry, TRANSLATED_TX, null, false);
            roiShape = new ROIShape(shape);
        }
    }

