    /**
     * Computes the estimated values for a regular grid of cells. The area covered by the grid is specified by an {@link Envelope}. The size of the
     * grid is specified by the cell count for the grid width (X) and height (Y).
     * 
     * @param srcEnv the area covered by the grid
     * @param xSize the width of the grid
     * @param ySize the height of the grid
     * 
     * @return the computed grid of estimated data values (in row-major order)
     */
    public float[][] computeSurface(Envelope srcEnv, int xSize, int ySize) {
        // not currently used
        // effectiveRadius = effectiveRadius(minimumWeight, influenceRadius);

        useObservationMask = minObservationCount > 0 && maxObservationDistance > 0.0;

        float[][] grid = new float[xSize][ySize];
        GridTransform trans = new GridTransform(srcEnv, xSize, ySize);

        estimateGrid(grid, trans);

        if (passCount > 1) {
            /**
             * First refinement pass requires observation points to be estimated as well
             */
            estimatedObs = computeEstimatedObservations();
            refineGrid(grid, trans);
            
            /**
             * For subsequent refinement passes, refine observations then recompute
             */
            for (int i = 3; i <= passCount; i++) {
                refineEstimatedObservations(estimatedObs);
                refineGrid(grid, trans);              
            }
        }
        return grid;
    }

