    @Test
    public void testQuantileBreaksHistogram() throws Exception {
        GridCoverage2D coverage = CoverageClassStatsTest.createCoverage();
        RenderedImage image = coverage.getRenderedImage();

        ParameterBlockJAI pb = new ParameterBlockJAI(new ClassBreaksDescriptor());
        pb.addSource(image);
        pb.setParameter("method", ClassificationMethod.QUANTILE);
        pb.setParameter("numClasses", 4);
        pb.setParameter("extrema", getExtrema(image));
        pb.setParameter("histogram", true);
        pb.setParameter("histogramBins", 100);
        // raw creation like in CoverageClassStats, otherwise the issue gets masked by JAI wrappers
        RenderedImage op = new ClassBreaksRIF().create(pb, null);
        Classification classification =
                (Classification) op.getProperty(ClassBreaksDescriptor.CLASSIFICATION_PROPERTY);
        assertNotNull(classification);
        Number[] breaks = classification.getBreaks()[0];
        System.out.println(Arrays.asList(breaks));

        // 4 classes, 5 breaks (not the same as the exact count, slightly different approach,
        // but still correct)
        // 1, 1, 2, 3, 3,
        // 8, 8, 9,
        // 11, 14, 16, 24,
        // 26, 26, 45, 53
        assertEquals(5, breaks.length);
        assertEquals(1, breaks[0].doubleValue(), EPS);
        assertEquals(8, breaks[1].doubleValue(), EPS);
        assertEquals(11, breaks[2].doubleValue(), EPS);
        assertEquals(26, breaks[3].doubleValue(), EPS);
        assertEquals(53, breaks[4].doubleValue(), EPS);
    }

