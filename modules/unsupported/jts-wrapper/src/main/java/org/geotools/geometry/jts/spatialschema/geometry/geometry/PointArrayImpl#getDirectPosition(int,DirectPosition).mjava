    /**
     * Gets the {@code DirectPosition} at the particular location in this 
     * {@code PointArray}. If the {@code dest} argument is non-null,
     * that object will be populated with the value from the list.
     *
     * @param  column The location in the array, from 0 inclusive
     *                to the array's {@linkplain #size} exclusive.
     * @param  dest An optionnaly pre-allocated direct position.
     * @return The {@code dest} argument, or a new object if {@code dest} was null.
     * @throws IndexOutOfBoundsException if the index is out of bounds.
     *
     * @see #get(int)
     */
    public DirectPosition getDirectPosition(int column, DirectPosition dest) throws IndexOutOfBoundsException {
        DirectPosition position = (DirectPosition) get(column);
        if (dest == null) {
            dest = new DirectPositionImpl(position.getCoordinateReferenceSystem());
        }
        for (int i = 0; i < position.getDimension(); i++) {
            dest.setOrdinate(i, position.getOrdinate(i));
        }
        return dest;
    }

