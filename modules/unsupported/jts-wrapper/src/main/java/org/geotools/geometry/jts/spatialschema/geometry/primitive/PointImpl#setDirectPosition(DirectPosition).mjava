    /**
     * Makes a copy of the given point and keeps that copy around. If the given point is not in the
     * same coordinate reference system as this primitive, then we attempt to convert it.
     */
    public void setDirectPosition(final DirectPosition position)
            throws UnmodifiableGeometryException {
        if (isMutable()) {
            CoordinateReferenceSystem myCRS = getCoordinateReferenceSystem();
            CoordinateReferenceSystem pointCRS = position.getCoordinateReferenceSystem();
            DirectPosition copy = new DirectPositionImpl(position);
            if ((myCRS != null) && (pointCRS != null) && (!myCRS.equals(pointCRS))) {
                // Do the conversion.
                try {
                    BasicFactories commonFactory = BasicFactories.getDefault();
                    CoordinateOperationFactory cof = commonFactory.getCoordinateOperationFactory();
                    CoordinateOperation coordOp = cof.createOperation(pointCRS, myCRS);
                    MathTransform mt = coordOp.getMathTransform();
                    mt.transform(position, copy);
                } catch (OperationNotFoundException e) {
                    throw new RuntimeException("Unable to find an operation", e);
                } catch (FactoryException e) {
                    throw new RuntimeException("Factory exception", e);
                } catch (TransformException e) {
                    throw new RuntimeException("Error transforming", e);
                }
            }
            // Copy the position into our member.
            this.position = copy;
            // Let our cache know that something has changed so we can recompute.
            invalidateCachedJTSPeer();
        } else {
            throw new UnmodifiableGeometryException();
        }
    }

