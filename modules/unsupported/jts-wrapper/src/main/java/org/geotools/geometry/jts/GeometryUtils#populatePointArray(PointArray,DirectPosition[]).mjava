    /**
     * Populates the specified PointArray with the specified points.  Any and all preexisting
     * points in the PointArray will be overwritten.
     * @param pointArray The PointArray to be populated.  This must not be null.
     * @param newPts The list of new points
     * /
    public static void populatePointArray(PointArray pointArray, List newPts) {
    	List pts = pointArray.positions();
    	pts.clear();
    	// PENDING(NL): Verify points are really DirectPositions --
    	// convert from Positions if not
    	// Probably should save this method for when we can use 1.5
    	pts.addAll(newPts);
    }
*/    
    /**
     * Populates the specified PointArray with the specified points.  Any and all preexisting
     * points in the PointArray will be overwritten.
     * @param pointArray The PointArray to be populated.  This must not be null.
     * @param dps The new array of points
     */
    public static void populatePointArray(PointArray pointArray, DirectPosition[] dps) {
    	List pts = pointArray.positions();
    	pts.clear();
    	int count = dps.length;
    	for (int i = 0; i < count; i++) {
    		pts.add(dps[i]);
    	}
    }

