	/**
	 * Returns the "SELECT" part of the SQL query definition for FeatureType
	 * <code>fType</code>, without the column names. This allows to maintain
	 * DB specific keywords, for example, <code>SELECT TOP 100 ...</code> in
	 * SQLServer.
	 * 
	 * @param sqlQueryDefinition
	 * @param fType
	 * @return
	 * @throws SQLEncoderException
	 */
	private String getSelect(String sqlQueryDefinition, SimpleFeatureType fType)
			throws SQLEncoderException {
		AttributeDescriptor firstAtt = fType.getDescriptor(0);
		String firstAttName = firstAtt.getLocalName().toLowerCase();

		int index = sqlQueryDefinition.indexOf(firstAttName);
		if (index == -1) {
			throw new SQLEncoderException(
					"attribute "
							+ firstAttName
							+ " not found in sql query definition. It should be the first one!: "
							+ sqlQueryDefinition);
		}

		String select = sqlQueryDefinition.substring(0, index);
		return select;
	}

