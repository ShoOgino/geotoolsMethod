    /**
     * Get back from the imageManager cache the {@link ImageManager} instance related to the 
     * dataset referred by the specified filePath.
     * 
     * @param filePath the absolute path referring to a specific dataset.
     * @return the ImageManager related to the specified dataset.
     * @throws DataSourceException
     */
    synchronized ImageManager getDatasetManager(String filePath) throws DataSourceException {
        if (filePath == null){
            throw new IllegalArgumentException("Must specify a valid filePath whilst NULL have been provided");
        }
        if (filePath.equalsIgnoreCase(Utils.DEFAULT_IMAGE_PATH)){
            return new ImageManager(new ImageProperty());
        }
        ImageManager imageManager = null;
        boolean isValid = false;
        if (datasetManagerCache.containsKey(filePath)) {
            imageManager = datasetManagerCache.get(filePath);
            if (imageManager != null) {
                // the dataset manager is already available on cache
                // check for updates.
                final long now = System.currentTimeMillis();
                if((now - imageManager.property.lastCheckTime) > CHECK_INTERVAL) {
                   imageManager.property.lastCheckTime = now;
                   final File file = new File(filePath);
                   if (Utils.checkFileReadable(file)){
                       final long modTime = file.lastModified();
                       if (modTime == imageManager.property.lastModifiedTime){
                           // The lastModifiedTime of the file isn't changed.
                           // it is still valid.
                           isValid = true;
                       }
                   } else {
                       // The file no more exists. Remove it from cache
                       datasetManagerCache.remove(filePath);
                   }
                } else {
                    // The file is still recent. No need to check it yet
                    isValid = true;
                }
            }
        }
        if (isValid){
            return imageManager;
        }
        
        // There isn't any valid object in cache or the cached object needs to be updated.
        imageManager = initDatasetManager(filePath);
        datasetManagerCache.put(filePath, imageManager);
        return imageManager;
    }

