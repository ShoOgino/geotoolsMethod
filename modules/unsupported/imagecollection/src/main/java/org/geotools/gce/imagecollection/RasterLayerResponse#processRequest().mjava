    /**
     * This method creates the GridCoverage2D from the underlying file given a
     * specified envelope, and a requested dimension.
     * 
     * @param iUseJAI
     *            specify if the underlying read process should leverage on a
     *            JAI ImageRead operation or a simple direct call to the
     *            {@code read} method of a proper {@code ImageReader}.
     * @param overviewPolicy
     *            the overview policy which need to be adopted
     * @return a {@code GridCoverage}
     * 
     * @throws java.io.IOException
     */
    private void processRequest() throws IOException {

        if (request.isEmpty()) {
            throw new DataSourceException("Empty request: " + request.toString());
        } else if (request.imageManager.property.path.equalsIgnoreCase(Utils.DEFAULT_IMAGE_PATH)){
            finalGridToWorldCorner = rasterManager.parent.epsgCode == 404001 ? Utils.IDENTITY_2D : Utils.IDENTITY_2D_FLIP ;
//            finalGridToWorldCorner = Utils.IDENTITY_HALFPIXEL_2D;
            gridCoverage = prepareCoverage(Utils.DEFAULT_IMAGE);
            return;
        }

        // assemble granules
        final RenderedImage image = prepareResponse();

//        RenderedImage finalRaster = postProcessRaster(image);

        // create the coverage
        gridCoverage = prepareCoverage(image);

    }

