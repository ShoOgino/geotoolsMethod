    /**
     * Retrieves a {@link ImageCollectionReader} in case the provided <code>source</code> can be
     * accepted as a valid source for an image collection coverage. The method returns null
     * otherwise.
     *
     * @param source The source object to read an ImageCollection from
     * @param hints {@link Hints} to control the provided {@link ImageCollectionReader}.
     * @return a new WorldImageReader for the source
     */
    @Override
    public ImageCollectionReader getReader(Object source, Hints hints) {
        try {
            return new ImageCollectionReader(source, hints);
        } catch (DataSourceException e) {
            if (LOGGER.isLoggable(Level.WARNING))
                LOGGER.log(Level.WARNING, e.getLocalizedMessage(), e);
            return null;
        }
    }

