    /**
     * Extract a PATH from the specified filter. Filter should be an IsEqualsToImpl in order to
     * support Filtering like CQL_FILTER=PATH='folder2/subfolder1/sample.tif'
     *
     * @param filter
     * @return
     */
    private String parsePath(Filter filter) {
        if (filter == null) {
            throw new IllegalArgumentException("The provided filter is null");
        }
        // Workaround to deal with the case of Filter.INCLUDE
        // being saved when creating the store
        if (filter instanceof IncludeFilter) {
            if (LOGGER.isLoggable(Level.FINE)) {
                LOGGER.fine("Using DEFAULT Path");
            }
            return rasterManager.parent.defaultValues.path;
        }
        if (!(filter instanceof IsEqualsToImpl)) {
            throw new IllegalArgumentException(
                    "The provided filter should be an \"equals to\" filter: \""
                            + PATH_KEY
                            + "=value\"");
        }

        IsEqualsToImpl pathEqualTo = (IsEqualsToImpl) filter;
        AttributeExpressionImpl pathKey = (AttributeExpressionImpl) pathEqualTo.getExpression1();
        String pathK = (String) pathKey.getPropertyName();
        if (!pathK.equalsIgnoreCase(PATH_KEY)) {
            throw new IllegalArgumentException(
                    "Invalid filter specified. It should be like this: \""
                            + PATH_KEY
                            + "=value\" whilst the first expression is "
                            + pathK);
        }

        Literal pathValue = (Literal) pathEqualTo.getExpression2();
        String pathV = (String) pathValue.getValue();

        return pathV;
    }

