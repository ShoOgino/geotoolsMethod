    /**
     * Creates a new instance of GeoTiffReader
     * 
     * @param input
     *            the GeoTiff file
     * @param uHints
     *            user-supplied hints TODO currently are unused
     * @throws DataSourceException
     */
    public ImageCollectionReader(Object input, Hints uHints)
            throws DataSourceException {
        super(input, uHints);

//        //
//        // Forcing longitude first 
//        //
//        if (uHints != null) {
//            // prevent the use from reordering axes
//            this.hints.remove(Hints.FORCE_LONGITUDE_FIRST_AXIS_ORDER);
//            this.hints.add(new Hints(Hints.FORCE_LONGITUDE_FIRST_AXIS_ORDER,
//                    Boolean.TRUE));
//
//        }

        //
        // Set the source being careful in case it is an URL pointing to a file
        //
        File file = null;
        try {
//            // /////////////////////////////////////////////////////////////////////
//            //
//            // Get a stream in order to read from it for getting the basic
//            // information for this coverage
//            //
//            // /////////////////////////////////////////////////////////////////////
//            if ((source instanceof InputStream)
//                    || (source instanceof ImageInputStream))
//                closeMe = false;
//            if (source instanceof ImageInputStream)
//                inStream = (ImageInputStream) source;
//            else
//                inStream = ImageIO.createImageInputStream(source);
//            if (inStream == null)
//                throw new IllegalArgumentException(
//                        "No input stream for the provided source");

            this.sourceURL = Utils.checkSource(source);
            source = DataUtilities.urlToFile(sourceURL);
            if (source instanceof File){
                file = (File) source;
                parentPath = FilenameUtils.getFullPath(FilenameUtils.normalizeNoEndSeparator(file.getAbsolutePath())+Utils.SEPARATOR);
            }
            
            // /////////////////////////////////////////////////////////////////////
            //
            // Informations about multiple levels and such
            //
            // /////////////////////////////////////////////////////////////////////
//            getHRInfo(this.hints);
            originalGridRange = new GridEnvelope2D(0, 0, Integer.MAX_VALUE, Integer.MAX_VALUE);
            originalEnvelope = new GeneralEnvelope(new Rectangle2D.Double(0, 0, Integer.MAX_VALUE, Integer.MAX_VALUE));
            originalEnvelope.setCoordinateReferenceSystem(Utils.DEFAULT_IMAGE_CRS);
            crs = Utils.DEFAULT_IMAGE_CRS;
            
            // /////////////////////////////////////////////////////////////////////
            //
            // Coverage name
            //
            // /////////////////////////////////////////////////////////////////////
            //TODO: FIXME
            highestRes = new double[]{1.0, 1.0};
            coverageName = "sample_coverage"; //Take some naming from folders id
//            hrLayout = new RasterLayout(0, 0, Integer.MAX_VALUE, Integer.MAX_VALUE);
            
        } catch (IOException e) {
            throw new DataSourceException(e);
        }

        rasterManager = new RasterManager(this);
    }

