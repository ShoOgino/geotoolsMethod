    /**
     * Writes SQL for a function expression.
     * 
     * @see org.geotools.filter.SQLEncoder#visit(org.geotools.filter.FunctionExpression)
     */
    // @Override
    public void visit(FunctionExpression expression) {
        try {
            String name = expression.getName();
            /*
             * SECURITY: protect against SQL injection attacks. SQL identifiers are similar to Java,
             * and testing for Java form should give sufficient protection as quotes and whitespace
             * are excluded.
             */
            if (!name.matches("\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*")) {
                throw new RuntimeException("Function expression name \"" + name
                        + "\" is not a valid SQL identifier");
            }
            out.write(escapeName(name) + "(");
            boolean isFirstParameter = true;
            for (Iterator parameterIterator = expression.getParameters().iterator(); parameterIterator
                    .hasNext();) {
                Expression parameter = (Expression) parameterIterator.next();
                if (isFirstParameter) {
                    isFirstParameter = false;
                } else {
                    out.write(", ");
                }
                parameter.accept(this);
            }
            out.write(")");
        } catch (IOException e) {
            throw new RuntimeException("IO problems writing function expression", e);
        }
    }

