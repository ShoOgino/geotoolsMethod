    /**
     * @see org.geotools.data.DataStore#getFeatureReader(org.geotools.data.Query,
     *      org.geotools.data.Transaction)
     */
    public XmlResponse getXmlReader(Query query) throws IOException {

        if (Filter.EXCLUDE.equals(query.getFilter())) {
            return null; //empty response
        }

        Query callQuery = new DefaultQuery(query);

        Filter[] filters = wsProtocol.splitFilters(query.getFilter());
        Filter supportedFilter = filters[0];
        Filter postFilter = filters[1];
        LOGGER.fine("Supported filter:  " + supportedFilter);        
        LOGGER.fine("Unupported filter: " + postFilter);
        ((DefaultQuery) callQuery).setFilter(supportedFilter);
        int maxFeatures = getMaxFeatures(query);
        
        //Only set maxFeatures if the back end can handle the filter.
        //If it cannot, we don't want to limit the number of responses 
        //before filtering on the server. However a hard limit may have been specified.        
        if (Filter.INCLUDE.equals(postFilter)) {
            ((DefaultQuery) callQuery).setMaxFeatures(maxFeatures);
        } else {
            ((DefaultQuery) callQuery).setMaxFeatures(maxFeaturesHardLimit);
        }

        WSResponse response = wsProtocol.issueGetFeature(callQuery);
        Document doc = getXmlResponse(response); 
        
        List<Integer> validFeatureIndex = determineValidFeatures(postFilter, doc, maxFeatures);
        return new XmlResponse(doc, validFeatureIndex);
    }

