    public void testFeatureCounting() throws Exception {
        Filter inputFilter = ff.like(ff.property("gml:name"), "*description name*");
        
        FeatureCollection features = getFeatures(Query.DEFAULT_MAX, inputFilter);
        assertEquals(3, DataUtilities.count(features));
        
        // check feature ids
        FeatureIterator iterator = features.features();
        Feature f = iterator.next();
        assertEquals(f.getIdentifier().toString(), "lithostratigraphic.unit.1679161021439131319");
        assertTrue(iterator.hasNext());
        f = iterator.next();            
        assertEquals(f.getIdentifier().toString(), "lithostratigraphic.unit.1679161041155866313");  
        assertTrue(iterator.hasNext());
        f = iterator.next();      
        assertEquals(f.getIdentifier().toString(), "lithostratigraphic.unit.1679161021439938381");
        
        iterator.close();        
        
        // now with maxFeatures = 1, it should only return the first one
        features = getFeatures(MAX_FEATURES, inputFilter);
        assertEquals(MAX_FEATURES, DataUtilities.count(features));
        
        iterator = features.features();
        f = iterator.next();
        assertEquals(f.getIdentifier().toString(), "lithostratigraphic.unit.1679161021439131319");
        
        iterator.close();    
    }

