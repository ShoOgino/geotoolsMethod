    /**
     * Resolve an absolute URL to a local file or jar URL.
     * 
     * @param location
     *            an absolute URL
     * @return the string representation of a file or jar URL
     * @throws RuntimeException
     *             if a local resource could not be found
     */
    public String resolve(String location) {
        String resolvedLocation = null;
        // Already resolved?
        if (location.startsWith("file:") || location.startsWith("jar:file:")) {
            resolvedLocation = location;
        }
        // Use catalog if one supplied.
        if (resolvedLocation == null && catalog != null) {
            resolvedLocation = catalog.resolveLocation(location);
        }
        // Look on classpath.
        if (resolvedLocation == null) {
            resolvedLocation = resolveClasspathLocation(location);
        }
        // Use download cache.
        if (resolvedLocation == null && cache != null) {
            resolvedLocation = cache.resolveLocation(location);
        }
        // Fail if still not resolved.
        if (resolvedLocation == null) {
            throw new RuntimeException(String.format("Failed to resolve %s", location));
        }
        resolvedLocationToOriginalLocationMap.put(resolvedLocation, location);
        LOGGER.fine(String.format("Resolved %s -> %s", location, resolvedLocation));
        return resolvedLocation;
    }

