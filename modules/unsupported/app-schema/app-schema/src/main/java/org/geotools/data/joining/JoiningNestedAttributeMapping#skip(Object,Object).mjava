    /**
     * If we have decided not to build the parent feature, we need to skip all rows that
     * were returned to build it
     *
     * @param caller
     * @param foreignKeyValue
     * @throws IOException
     */
    public void skip (Object caller, Object foreignKeyValue) throws IOException {
        Instance instance = instances.get(caller);
        if (instance == null) {
            throw new IllegalArgumentException ("Trying to read Joining Nested Attribute Mapping that is not open.");
        }

        //skip all
        for ( Name name : instance.featureIterators.keySet()) {
            DataAccessMappingFeatureIterator fIt = instance.featureIterators.get(name);
            while (fIt.hasNext() && fIt.peekNextValue(instance.nestedSourceExpressions.get(name)).equals(foreignKeyValue)) {
                fIt.skip();
            }
        }

        instance.skipped.add(foreignKeyValue);

    }

