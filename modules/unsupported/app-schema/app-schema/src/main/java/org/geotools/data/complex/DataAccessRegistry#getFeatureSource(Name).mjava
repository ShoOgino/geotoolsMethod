    /**
     * Get a feature source for built features with supplied feature type name.
     * 
     * @param featureTypeName
     * @return feature source
     * @throws IOException
     */
    public static FeatureSource<FeatureType, Feature> getFeatureSource(Name featureTypeName)
            throws IOException {
        if (registry == null) {
            throw new UnsupportedOperationException(
                    "This method is only for registered data access. "
                            + "You need to register the data access that has mapping for: "
                            + featureTypeName.toString());
        }
        for (DataAccess<FeatureType, Feature> dataAccess : registry) {
            if (dataAccess.getNames().contains(featureTypeName)) {
                if (dataAccess instanceof AppSchemaDataAccess) {
                    return ((AppSchemaDataAccess) dataAccess)
                            .getFeatureSourceByName(featureTypeName);
                } else {
                    return dataAccess.getFeatureSource(featureTypeName);
                }
            }
        }
        throwDataSourceException(featureTypeName);

        return null;
    }

