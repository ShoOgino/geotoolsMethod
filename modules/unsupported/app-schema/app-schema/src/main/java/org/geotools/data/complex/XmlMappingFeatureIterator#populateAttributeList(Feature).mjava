    private PathAttributeList populateAttributeList(Feature target) {
        PathAttributeList elements = new PathAttributeList();
        elements.put(rootAttribute.getLabel(), createIndexedItemXpathString(), target);

        // iterator returns the attribute mappings starting from the root of the tree.
        // parents are always returned before children elements.
        Iterator<TreeAttributeMapping> it = attOrderedTypeList.iterator();
        while (it.hasNext()) {
            TreeAttributeMapping attMapping = it.next();
            final Expression sourceExpression = attMapping.getIdentifierExpression();

            List<Pair> ls = elements.get(attMapping.getParentLabel());
            if (ls != null) {
                for (int i = 0; i < ls.size(); i++) {
                    Pair parentAttribute = ls.get(i);
                    int count = 1;
                    String countXpath = null;
                    // if instance path not set, then element exists, with one instance
                    if (attMapping.getInstanceXpath() != null) {
                        countXpath = parentAttribute.getXpath() + XPATH_SEPARATOR
                                + attMapping.getInstanceXpath();
                        count = XmlXpathUtilites.countXPathNodes(mapping.getNamespaces(),
                                countXpath, xmlResponse.getDoc());
                    }
                    createSubFeaturesAndAddToAttributeList(elements, attMapping, sourceExpression,
                            parentAttribute, count, countXpath);
                }
            }
        }
        return elements;
    }

