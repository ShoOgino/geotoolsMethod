    /**
     * Helper method for getSurrogatePropertyNames to match a requested x-path property
     * with a target x-path
     * 
     * @param requestedProperty requested property x-path
     * @param targetXPath target x-path
     * @return whether they match, i.e. when one of them is completely contained in the other
     */
    protected static boolean matchProperty(StepList requestedProperty, StepList target) {
        // NC - the requested property may or may not be given as an x-path
        // if it wasn't, the namespace given by the XPath.steps method might be wrong, so it will be ignored
        // with property selection, requested Properties are top level nodes, 
        // so get all mappings inside node
        // i.e.: requested "measurement", found mapping of "measurement/result". 
        // "result" must be included to create "measurement"
        // in other cases, requested property is a nested x-path, 
        // so get all mappings that could be needed
        // i.e.: requested "measurement/result", found mapping of "measurement". 
        // "measurement" must be included to create "result"      
        
        int minSize = Math.min(requestedProperty.size(), target.size());

        for (int i = 0; i < minSize; i++) {
            if (!target.get(i).getName().equals(requestedProperty.get(i).getName())) {
                return false;
            }
        }
        return true;        
    }

