    /**
     * Get matching input features that are stored in this mapping using a supplied link value.
     * 
     * @param foreignKeyValue
     * @return The matching input feature
     * @throws IOException
     * @throws IOException
     */
    public List<Feature> getInputFeatures(Object foreignKeyValue, FeatureTypeMapping fMapping)
            throws IOException {
        if (isSameSource()) {
            // if linkField is null, this method shouldn't be called because the mapping
            // should use the same table, and handles it differently
            throw new UnsupportedOperationException(
                    "Link field is missing from feature chaining mapping!");
        }
        if (source == null || !(nestedFeatureType instanceof AttributeExpressionImpl)) {
            assert fMapping != null;

			source = fMapping.getSource();
			if (source == null) {
				LOGGER.info("Feature source for '"
						+ fMapping.getTargetFeature().getName()
						+ "' not found when evaluating filter");
				return Collections.EMPTY_LIST;
			}
			
			nestedIdExpression = fMapping.getFeatureIdExpression();

            // find source expression on nested features side
            List<AttributeMapping> mappings = fMapping
                    .getAttributeMappingsIgnoreIndex(this.nestedTargetXPath);
            if (mappings.size() < 1) {
                throw new IllegalArgumentException("Mapping is missing for: '"
                        + this.nestedTargetXPath + "'!");
            }
            nestedSourceExpression = mappings.get(0).getSourceExpression();
        }

        return getFilteredFeatures(foreignKeyValue);     
    }

