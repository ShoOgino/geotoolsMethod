    /**
     * Looks up for attribute mappings matching the xpath expression <code>propertyName</code>.
     * <p>
     * If any step in <code>propertyName</code> has index greater than 1, any mapping for the same
     * property applies, regardless of the mapping. For example, if there are mappings for
     * <code>gml:name[1]</code>, <code>gml:name[2]</code> and <code>gml:name[3]</code>, but
     * propertyName is just <code>gml:name</code>, all three mappings apply.
     * </p>
     * 
     * @param mappings
     *            Feature type mapping to search for
     * @param simplifiedSteps
     * @return
     */
    @Override
    protected List<Expression> findMappingsFor(FeatureTypeMapping mappings,
            final StepList propertyName) {
        XmlFeatureTypeMapping xmlMapping = (XmlFeatureTypeMapping) mappings;
        // collect all the mappings for the given property
        List<String> candidates;

        // get all matching mappings if index is not specified, otherwise
        // get the specified mapping
        if (!propertyName.toString().contains("[")) {
            candidates = xmlMapping.getStringMappingsIgnoreIndex(propertyName);
        } else {
            candidates = new ArrayList<String>();
            String mapping = xmlMapping.getStringMapping(propertyName);
            if (mapping != null) {
                candidates.add(mapping);
            }
        }
        List<Expression> expressions = getExpressions(candidates);

        return expressions;
    }

