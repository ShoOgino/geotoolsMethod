        public DataAccess<? extends FeatureType, ? extends Feature> createDataStore(
                Map<String, Serializable> params) throws IOException {
            URL schemaURL = getClass().getResource(schemaBase);
            File dir;
            try {
                dir = new File(schemaURL.toURI());
            } catch (URISyntaxException e) {
                throw new RuntimeException(e);
            }
            // get geologic unit properties file
            PropertyDataStore dataStore = new PropertyDataStore(dir);
            SimpleFeatureSource simpleFeatureSource = dataStore
                    .getFeatureSource(GEOLOGIC_UNIT);
            SimpleFeatureCollection fCollection = simpleFeatureSource
                    .getFeatures();
            reader = EmfAppSchemaReader.newInstance();
            // set schema URI
            SchemaIndex schemaIndex = reader.parse(new URL(
                    "http://www.geosciml.org/geosciml/2.0/xsd/geosciml.xsd"));
            typeRegistry = new FeatureTypeRegistry();
            typeRegistry.addSchemas(schemaIndex);

            // get simple features
            FeatureType simpleType = (FeatureType) typeRegistry
                    .getAttributeType(GEOLOGIC_UNIT_TYPE);
            inputFeatures = getInputFeatures(fCollection, simpleType);
            // create complex feature type
            FeatureType guSchema = new FeatureTypeImpl(GEOLOGIC_UNIT, simpleType.getDescriptors(),
                    null, true, simpleType.getRestrictions(), GMLSchema.ABSTRACTFEATURETYPE_TYPE,
                    null);
            return new InputDataAccess(inputFeatures, guSchema,                    
                    FeatureChainingTest.GEOLOGIC_UNIT_NAME);
        }

