    // signed distance from point to polygon outline (negative if point is
    // outside)
    private double pointToPolygonDist(Point point, MultiPolygon polygon) {

        boolean inside = false;
        double minDistSq = Double.POSITIVE_INFINITY;

        for (int k = 0; k < polygon.getNumGeometries(); k++) {
            Coordinate[] ring = polygon.getGeometryN(k).getCoordinates();
            for (int i = 0, len = ring.length, j = len - 1; i < len; j = i++) {
                Coordinate a = ring[i];
                Coordinate b = ring[j];
                if ((a.y > y != b.y > y) && (x < (b.x - a.x) * (y - a.y) / (b.y - a.y) + a.x))
                    inside = !inside;
                minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));
            }
        }

        // Points outside has a negative distance and thus will be weighted down later.
        return (inside ? 1 : -1) * Math.sqrt(minDistSq);
    }

