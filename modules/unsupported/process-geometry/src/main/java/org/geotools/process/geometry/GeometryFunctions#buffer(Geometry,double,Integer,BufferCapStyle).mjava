    @DescribeProcess(
        title = "Buffer",
        description =
                "Returns a polygonal geometry representing the input geometry enlarged by a given distance around its exterior."
    )
    @DescribeResult(description = "Buffered geometry")
    public static Geometry buffer(
            @DescribeParameter(name = "geom", description = "Input geometry") Geometry geom,
            @DescribeParameter(
                        name = "distance",
                        description =
                                "Distance to buffer the input geometry, in the units of the geometry"
                    )
                    double distance,
            @DescribeParameter(
                        name = "quadrantSegments",
                        description =
                                "Number determining the style and smoothness of buffer corners. Positive numbers create round corners with that number of segments per quarter-circle, 0 creates flat corners.",
                        min = 0
                    )
                    Integer quadrantSegments,
            @DescribeParameter(
                        name = "capStyle",
                        description =
                                "Style for the buffer end caps. Values are: Round - rounded ends (default), Flat - flat ends; Square - square ends.",
                        min = 0
                    )
                    BufferCapStyle capStyle) {
        if (quadrantSegments == null) quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;
        if (capStyle == null) capStyle = BufferCapStyle.Round;
        return geom.buffer(distance, quadrantSegments, capStyle.value);
    }

