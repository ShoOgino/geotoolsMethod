    /**
     * Check that a result set contains a stacked point in the right cell with expected attribute
     * values. Because it's not known in advance what the actual location of a stacked point will
     * be, a nearest-point strategy is used.
     * 
     * @param result
     * @param coordinate
     * @param i
     * @param j
     */
    private void checkResultPoint(SimpleFeatureCollection result, Coordinate testPt,
            int expectedCount, int expectedCountUnique, Double expectedProportion, Double expectedProportionUnique) {
        
        SimpleFeature f = getResultPoint(result, testPt);
        assertNotNull(f);
        
        /**
         * Find closest point to loc pt, then check that the attributes match
         */
        int count = (Integer) f.getAttribute(PointStackerProcess.ATTR_COUNT);
        int countunique = (Integer) f.getAttribute(PointStackerProcess.ATTR_COUNT_UNIQUE);
        double normCount = Double.NaN;
        double normCountUnique = Double.NaN;
        if(expectedProportion!=null){
            normCount = (Double) f.getAttribute(PointStackerProcess.ATTR_NORM_COUNT);
            normCountUnique = (Double) f.getAttribute(PointStackerProcess.ATTR_NORM_COUNT_UNIQUE);
        }
                
        assertEquals(expectedCount, count);
        assertEquals(expectedCountUnique, countunique);
        if(expectedProportion!=null) assertEquals(expectedProportion, normCount, 0.0001);
        if(expectedProportionUnique!=null) assertEquals(expectedProportionUnique, normCountUnique, 0.0001);
    }

