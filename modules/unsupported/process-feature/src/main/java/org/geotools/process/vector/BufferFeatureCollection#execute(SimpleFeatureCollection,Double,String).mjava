    @DescribeResult(description = "Buffered feature collection")
    public SimpleFeatureCollection execute(
            @DescribeParameter(name = "features", description = "Input feature collection")
                    SimpleFeatureCollection features,
            @DescribeParameter(
                        name = "distance",
                        description = "Fixed value to use for the buffer distance"
                    )
                    Double distance,
            @DescribeParameter(
                        name = "attributeName",
                        description = "Attribute containing the buffer distance value",
                        min = 0
                    )
                    String attribute) {

        if (distance == null && (attribute == null || attribute == "")) {
            throw new IllegalArgumentException("Buffer distance was not specified");
        }

        if (attribute != null && !"".equals(attribute)) {
            if (features.getSchema().getDescriptor(attribute) == null) {
                boolean found = false;
                // case insensitive search
                for (AttributeDescriptor ad : features.getSchema().getAttributeDescriptors()) {
                    if (ad.getLocalName().equals(attribute)) {
                        attribute = ad.getLocalName();
                        found = true;
                        break;
                    }
                }
                if (!found) {
                    throw new IllegalArgumentException(
                            "Attribute not found among the source collection ones: " + attribute);
                }
            }
        } else {
            attribute = null;
        }
        return new BufferedFeatureCollection(features, attribute, distance);
    }

