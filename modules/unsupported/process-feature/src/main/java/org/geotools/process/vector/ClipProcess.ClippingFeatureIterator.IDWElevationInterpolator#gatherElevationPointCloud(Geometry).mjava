            List<PointDistance> gatherElevationPointCloud(Geometry geom) {
                final List<PointDistance> results = new ArrayList<>();
                geom.apply(
                        new CoordinateSequenceFilter() {

                            @Override
                            public boolean isGeometryChanged() {
                                return false;
                            }

                            @Override
                            public boolean isDone() {
                                return false;
                            }

                            @Override
                            public void filter(CoordinateSequence seq, int i) {
                                // we do all the collecting when called for the first ordinate
                                if (i > 0) {
                                    return;
                                }
                                // collects only points with a Z
                                if (hasElevations(seq)) {
                                    Coordinate[] coords = seq.toCoordinateArray();
                                    for (int j = 0; j < coords.length; j++) {
                                        Coordinate c = coords[j];
                                        // avoid adding the last element of a ring to avoid
                                        // un-balancing the
                                        // weights (the fist/last coordinate would be counted twice)
                                        if ((j < coords.length - 1 || !c.equals(coords[0]))
                                                && !Double.isNaN(c.getZ())) {
                                            results.add(new PointDistance(c));
                                        }
                                    }
                                }
                            }
                        });

                if (results.size() == 0) {
                    return null;
                } else {
                    return results;
                }
            }

