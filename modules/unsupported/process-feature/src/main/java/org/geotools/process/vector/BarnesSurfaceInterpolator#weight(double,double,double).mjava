    private double weight(double dist, double lengthScale, double convergenceFactor) {
        /**
         * MD - using an effective radius is problematic.
         *
         * <p>The effective radius grows as a log function of the cutoff weight, so even for very
         * small cutoff weight values, the effective radius is only a few times the size of the
         * influence radius.
         *
         * <p>Also, dropping observation terms from the estimate results in very drastic
         * (discontinuous) changes at distances around the effective radius. (Probably because
         * beyond that distance there are very few terms (maybe only 2) contributing to the
         * estimate, so there is no smoothing effect from incorporating many estimates)
         *
         * <p>So - don't use effectiveRadius.
         *
         * <p>Or, maybe it's ok as long as a observation mask is used as well, since the effect only
         * occurs at large distances from observation points?
         */
        /*
         * if (dist > effectiveRadius) return INTERNAL_NO_DATA; //
         */
        double dr = dist / lengthScale;
        double w = Math.exp(-(dr * dr / convergenceFactor));
        // if (dist > cutoffRadius) System.out.println(w);
        return w;
    }

