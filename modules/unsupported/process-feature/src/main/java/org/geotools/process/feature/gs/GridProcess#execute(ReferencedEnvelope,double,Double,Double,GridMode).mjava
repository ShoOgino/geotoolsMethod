    @DescribeResult(name = "result", description = "The grid")
    public SimpleFeatureCollection execute(
            @DescribeParameter(name = "features", description = "The grid bounds") ReferencedEnvelope bounds,
            @DescribeParameter(name = "width", description = "Cell width (in the same uom as the bounds referencing system)") double width,
            @DescribeParameter(name = "height", description = "Cell height (optional, used only for rectangular grids, "
                    + "if not provided it is assumed equals to the width)", min = 0) Double height,
            @DescribeParameter(name = "vertexSpacing", description = "Distance between vertices (used to create densified " +
            		"sides suitable for reprojection)", min = 0) Double vertexSpacing,
            @DescribeParameter(name = "mode", description = "The type of grid to be generated", min = 0) GridMode mode)
            throws ProcessException {
        final GridFeatureBuilder builder = new GridFeatureBuilderImpl(bounds
                .getCoordinateReferenceSystem());
        double h = height != null ? height : width;

        SimpleFeatureSource source;
        if (mode == null || mode == GridMode.Rectangular) {
            source = Oblongs.createGrid(bounds, width, h, builder);
        } else if (mode == GridMode.HexagonFlat) {
            source = Hexagons.createGrid(bounds, width, HexagonOrientation.FLAT, builder);
        } else {
            source = Hexagons.createGrid(bounds, width, HexagonOrientation.ANGLED, builder);
        }

        try {
            return source.getFeatures();
        } catch (IOException e) {
            throw new ProcessException("Unexpected exception while grabbing features", e);
        }
    }

