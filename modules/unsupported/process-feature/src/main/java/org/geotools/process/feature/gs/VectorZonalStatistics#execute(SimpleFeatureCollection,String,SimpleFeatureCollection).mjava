    @DescribeResult(name = "statistics", description = "A feature collection with all the attributes "
            + "of the zoning layer (prefixed by 'z_'), "
            + "and the statistics fields count/min/max/sum/avg/stddev")
    public SimpleFeatureCollection execute(
            @DescribeParameter(name = "data", description = "The point layer containing "
                    + "the data to be used in the statistics") SimpleFeatureCollection data,
            @DescribeParameter(name = "dataAttribute", description = "The attribute to be used for "
                    + "the computation of the statistics") String dataAttribute,
            @DescribeParameter(name = "zones", description = "The various zones in which the statistics will be computed. "
                    + "Must be a polygon layer, each polygon will be used to generate a separate statistic") SimpleFeatureCollection zones) {

        AttributeDescriptor dataDescriptor = data.getSchema().getDescriptor(dataAttribute);
        if (dataDescriptor == null) {
            throw new IllegalArgumentException("Attribute " + dataAttribute + " not found in "
                    + data.getSchema());
        }

        return new ZonalStatisticsCollection(data, dataAttribute, zones);
    }

