    @DescribeResult(description = "feature collection containg the intersections between the two feature " +
    		"collections and the attributes from both of them")
    public SimpleFeatureCollection execute(
            @DescribeParameter(name = "first feature collection", description = "First feature collection") SimpleFeatureCollection firstFeatures,
            @DescribeParameter(name = "second feature collection", description = "Second feature collection") SimpleFeatureCollection secondFeatures) {
        if (!(firstFeatures.features().next().getDefaultGeometry() instanceof MultiPolygon)
                && !(firstFeatures.features().next().getDefaultGeometry() instanceof Polygon)
                && !(firstFeatures.features().next().getDefaultGeometry() instanceof MultiLineString)
                && !(firstFeatures.features().next().getDefaultGeometry() instanceof LineString)) {
            throw new IllegalArgumentException("First feature collection must be polygonal or linear");
        } else {
            return new IntersectedFeatureCollection(firstFeatures, secondFeatures);
        }
    }

