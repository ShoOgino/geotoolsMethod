    /**
     * Computes a refinement delta, which is added to a grid point estimated value to refine the
     * estimate.
     *
     * @param x the x ordinate of the grid point location
     * @param y the y ordinate of the grid point location
     * @param convergenceFactor the convergence factor
     * @return the refinement delta value, or INTERNAL_NO_DATA if the grid cell is not supported
     */
    private double refinedDelta(double x, double y, double convergenceFactor) {
        Coordinate p = new Coordinate(x, y);

        double sumWgtVal = 0;
        double sumWgt = 0;
        int dataCount = 0;
        for (int i = 0; i < inputObs.length; i++) {
            double wgt = weight(p, inputObs[i], lengthScale, convergenceFactor);
            /** Check if observation is unusable (e.g. due to too great a distance) */
            if (Double.isNaN(wgt)) continue;

            sumWgtVal += wgt * (inputObs[i].getZ() - estimatedObs[i]);
            sumWgt += wgt;
            dataCount++;
        }
        /** If grid point is not supported, return NO_DATA */
        if (dataCount < minObservationCount) return INTERNAL_NO_DATA;
        return sumWgtVal / sumWgt;
    }

