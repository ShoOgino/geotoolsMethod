    /**
     * Computes an interpolated value across a grid cell which has a single NO_DATA value in the NE
     * corner (<tt>v11</tt>), and valid data values in the three other corners. The interpolated
     * value is computed using linear interpolation across the 3D triangle defined by the three
     * valid corners.
     *
     * @param xfrac the fractional x location of the interpolation point within the cell
     * @param yfrac the fractional y location of the interpolation point within the cell
     * @param v00 the lower left value
     * @param v10 the lower right value
     * @param v01 the upper left value
     * @return the interpolated value
     */
    private float interpolateBoundaryCellNorm(
            float xfrac, float yfrac, float v00, float v10, float v01) {
        // if point is in NE triangle, value is NO_DATA
        if (xfrac + yfrac > 1) return noDataValue;

        // interpolate across plane defined by SW triangle and values
        float dx = v10 - v00;
        float dy = v01 - v00;
        float v = v00 + (xfrac * dx) + (yfrac * dy);
        return v;
    }

