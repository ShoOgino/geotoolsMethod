    /**
     * Sets the output coverage bounds and checks whether features need to be transformed into the
     * output CRS.
     *
     * @throws org.geotools.process.raster.VectorToRasterException
     */
    private void setBounds(SimpleFeatureCollection features, Envelope bounds)
            throws TransformException {

        ReferencedEnvelope featureBounds = features.getBounds();

        if (bounds == null) {
            extent = featureBounds;

        } else {
            extent = new ReferencedEnvelope(bounds);
        }

        extentGeometry = (new GeometryFactory()).toGeometry(extent);

        // Compare the CRS of faetures and requested output bounds. If they
        // are different (and both non-null) flag that we need to transform
        // features to the output CRS prior to rasterizing them.

        CoordinateReferenceSystem featuresCRS = featureBounds.getCoordinateReferenceSystem();
        CoordinateReferenceSystem boundsCRS = extent.getCoordinateReferenceSystem();

        transformFeatures = false;
        if (featuresCRS != null
                && boundsCRS != null
                && !CRS.equalsIgnoreMetadata(boundsCRS, featuresCRS)) {

            try {
                featureToRasterTransform = CRS.findMathTransform(featuresCRS, boundsCRS, true);

            } catch (Exception ex) {
                throw new TransformException(
                        "Unable to transform features into output coordinate reference system", ex);
            }

            transformFeatures = true;
        }
    }

