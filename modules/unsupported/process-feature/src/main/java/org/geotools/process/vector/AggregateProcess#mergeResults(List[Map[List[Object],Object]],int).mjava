    /**
     * Helper method that merge all group by visitors results in a tabular format. Each line of the
     * table is composed of the group by attributes values and the aggregation functions results.
     */
    private List<Object[]> mergeResults(
            List<Map<List<Object>, Object>> results, int groupByAttributesNumber) {
        List<Object[]> mergedResults = new ArrayList<>();
        if (results.isEmpty()) {
            // no results so nothing to do
            return mergedResults;
        }
        // the size of each line is the number of the group by attributes plus the number of
        // aggregation functions
        int resultSize = groupByAttributesNumber + results.size();
        // the group by attributes values are equal for all the visitors so we use the first visitor
        // result to grab all the group by values
        for (List<Object> groupByAttributes : results.get(0).keySet()) {
            // we create the table line that will contains all the results
            Object[] mergedResult = Arrays.copyOf(groupByAttributes.toArray(), resultSize);
            // we extract from each group by visitor result the aggregation function result and add
            // it to out table line
            for (int i = 0; i < results.size(); i++) {
                mergedResult[groupByAttributesNumber + i] = results.get(i).get(groupByAttributes);
            }
            // we add the current line to the table
            mergedResults.add(mergedResult);
        }
        return mergedResults;
    }

