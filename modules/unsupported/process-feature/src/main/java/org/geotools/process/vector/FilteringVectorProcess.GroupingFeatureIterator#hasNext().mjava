        @Override
        public boolean hasNext() {
            List<Object> groupingValues = new ArrayList<>(groupByAttributes.size());
            Map<Object, Feature> beingFiltered = new HashMap<>();
            List<Double> valuesToCompare = new ArrayList<>();
            while (super.hasNext()) {
                Feature f = super.next();
                if (beingFiltered.size() == 0) {
                    // no features in the list this is the first of the group
                    // takes the values to check the following features if belong to the same group
                    // features with null values are skipped
                    if (addGroupingValues(groupingValues, f))
                        addDoubleValueFromFeature(f, valuesToCompare, beingFiltered);
                } else {
                    // is the feature in the group?
                    if (featureComparison(groupingValues, f)) {
                        addDoubleValueFromFeature(f, valuesToCompare, beingFiltered);
                    } else {
                        ((PushBackFeatureIterator) delegate).pushBack();
                        break;
                    }
                }
            }
            next = doFiltering(beingFiltered, valuesToCompare);
            return next != null;
        }

