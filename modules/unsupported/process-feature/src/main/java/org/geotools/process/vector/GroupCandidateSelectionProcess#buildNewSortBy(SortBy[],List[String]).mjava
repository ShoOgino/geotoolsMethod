    private SortBy[] buildNewSortBy(SortBy[] sorts, List<String> groupingAttributes) {
        // eventually creates new SortBy and add them to the array
        List<SortBy> newSorts = new ArrayList<>(groupingAttributes.size());
        List<PropertyName> properties =
                groupingAttributes.stream().map(s -> ff.property(s)).collect(Collectors.toList());
        for (int i = 0; i < properties.size(); i++) {
            PropertyName pn = properties.get(i);
            if (!sortByAlreadyExists(sorts, pn))
                newSorts.add(new SortByImpl(pn, SortOrder.ASCENDING));
        }
        if (newSorts.size() > 0) {
            if (sorts == null) return newSorts.toArray(new SortBy[newSorts.size()]);
            else return ArrayUtils.addAll(sorts, newSorts.toArray(new SortBy[newSorts.size()]));
        }
        return sorts;
    }

