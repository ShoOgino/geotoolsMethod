    public static SimpleFeatureType toReShapeFeatureType(
            SimpleFeatureCollection delegate, List<Definition> definitionList) {

        SimpleFeature sample = null;
        try (SimpleFeatureIterator iterator = delegate.features()) {
            if (iterator.hasNext()) {
                sample = iterator.next();
            }
        }

        SimpleFeatureTypeBuilder build = new SimpleFeatureTypeBuilder();
        SimpleFeatureType origional = delegate.getSchema();

        for (Definition def : definitionList) {
            String name = def.name;
            Expression expression = def.expression;

            Object value = null;
            if (sample != null) {
                value = expression.evaluate(sample);
            }
            Class<?> binding = def.binding; // make use of any default binding hint provided by user
            if (value == null) {
                if (expression instanceof PropertyName) {
                    AttributeDescriptor descriptor = origional.getDescriptor(name);
                    AttributeType attributeType = descriptor.getType();
                    binding = attributeType.getBinding();
                }
            } else {
                binding = value.getClass();
            }

            if (binding == null) {
                // note we could consider scanning through additional samples until we get a non
                // null hit
                throw new IllegalArgumentException("Unable to determine type for " + name);
            }

            if (Geometry.class.isAssignableFrom(binding)) {
                CoordinateReferenceSystem crs;
                AttributeType originalAttributeType = origional.getType(name);
                if (originalAttributeType != null
                        && originalAttributeType instanceof GeometryType) {
                    GeometryType geometryType = (GeometryType) originalAttributeType;
                    crs = geometryType.getCoordinateReferenceSystem();
                } else {
                    crs = origional.getCoordinateReferenceSystem();
                }
                build.crs(crs);
                build.add(name, binding);
            } else {
                build.add(name, binding);
            }
        }
        build.setName(origional.getTypeName());
        return build.buildFeatureType();
    }

