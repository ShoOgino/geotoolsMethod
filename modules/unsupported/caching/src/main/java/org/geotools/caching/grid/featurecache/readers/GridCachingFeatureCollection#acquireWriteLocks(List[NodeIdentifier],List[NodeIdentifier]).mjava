    /**
     * This function acquire write locks for everything in the missing array. Once the write lock is
     * acquired if the node is valid it is converted to a read lock.
     *
     * @param missing
     * @param found
     * @throws Exception
     */
    private void acquireWriteLocks(List<NodeIdentifier> missing, List<NodeIdentifier> found)
            throws Exception {
        for (Iterator<NodeIdentifier> iterator = missing.iterator(); iterator.hasNext(); ) {
            NodeIdentifier nodeid = (NodeIdentifier) iterator.next();
            try {
                nodeid.writeLock();
            } catch (Exception ex) {
                // error occurred; remove from list
                iterator.remove();
                logger.log(Level.SEVERE, "Could not acquire necessary write locks.", ex);
                continue;
            }
            if (nodeid.isValid()) {
                // might have been validated by previous thread; so lets make sure we have the
                // correct queue
                nodeid.readLock();
                found.add(nodeid);
                nodeid.writeUnLock();
                iterator.remove();
            }
        }
    }

