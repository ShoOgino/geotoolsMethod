    /**
     * Registers a collection of nodes as valid.
     * @param nodes
     */
    public void register(Collection<NodeIdentifier> nodes) {
        lock.writeLock().lock();
        try {
            
            //we don't want to track access while we register; this will ensure that just because a node touches another node it
            //isn't considered an access; it might be better to improve the way containment query is done.
            boolean recordaccess = this.tracker.getDoRecordAccess();
            try{
                this.tracker.setDoRecordAccess(false);
                for( Iterator<NodeIdentifier> iterator = nodes.iterator(); iterator.hasNext(); ) {
                    NodeIdentifier nodeIdentifier = (NodeIdentifier) iterator.next();
                    nodeIdentifier.setValid(true);
                }
            }finally{
                this.tracker.setDoRecordAccess(recordaccess);
            }
        } finally {
            lock.writeLock().unlock();
        }
    }

