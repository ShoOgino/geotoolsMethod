    /** Common algorithm used by both intersection and containment queries.
    *
    * @param type
    * @param query
    * @param v
    *
    */
    @Override
   protected void rangeQuery(int type, Shape query, Visitor v) {
       GridRootNode tmpRoot = (GridRootNode)this.rootNode;
       
       //first we visit the root node
       v.visitNode(tmpRoot);
       if (v.isDataVisitor()){
    	   visitData(tmpRoot, v, query, type);
       }
       
       //here we need to visit just the children that may intersect
        List<Integer> childrenindex = tmpRoot.getChildren(query);
        for( Iterator<Integer> iterator = childrenindex.iterator(); iterator.hasNext(); ) {
            Integer childid = (Integer) iterator.next();
            NodeIdentifier child = tmpRoot.getChildIdentifier(childid);
            Node childNode = readNode(child);
            v.visitNode(childNode);
            if (v.isDataVisitor()) {
                visitData(childNode, v, query, type);
            }
        }
   }

