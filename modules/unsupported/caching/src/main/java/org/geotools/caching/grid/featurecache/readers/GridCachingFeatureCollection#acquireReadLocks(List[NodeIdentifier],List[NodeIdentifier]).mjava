    /**
     * This function acquires reads locks for everything in the missing array. Once the read lock is
     * acquired if the node is not valid it is added to the missing array (write locks are not
     * acquired here).
     *
     * @param missing
     * @param found
     */
    private void acquireReadLocks(List<NodeIdentifier> missing, List<NodeIdentifier> found) {
        for (Iterator<NodeIdentifier> iterator = found.iterator(); iterator.hasNext(); ) {
            NodeIdentifier nodeid = (NodeIdentifier) iterator.next();
            try {
                nodeid.readLock();
            } catch (Exception ex) {
                // remove from list
                logger.log(Level.SEVERE, "Could not acquire necessary read locks.", ex);
                iterator.remove();
                continue;
            }
            if (!nodeid.isValid()) {
                // this node is no longer valid add to missing list
                nodeid.readUnLock();
                missing.add(nodeid);
                iterator.remove();
            }
        }
    }

