    /** Read attribute values from a stream.
     *
     * @param s the stream to read from
     * @return a list of attribute values, possibly a singleton, if attribute's multiplicity is 1
     * @throws IOException
     * @throws ClassNotFoundException
     * @throws IllegalAttributeException
     */
    protected Object unmarshallSimpleAttribute(ObjectInput s)
        throws IOException, ClassNotFoundException, IllegalAttributeException {
        int m = s.readInt();
        Object att = null;

        if (m == SIMPLEATTRIBUTE) {
            att = s.readObject();
        } else if (m == FEATURE) {
            SimpleFeature f = unmarshall(s);
            att = f;
        } else { // this should never happen
            throw new IllegalAttributeException(null, null, "Found complex attribute which is not legal for SimpleFeature.");
        }

        return att;
    }

