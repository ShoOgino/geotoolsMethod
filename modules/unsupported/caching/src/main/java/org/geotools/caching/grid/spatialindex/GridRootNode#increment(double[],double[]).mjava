	/**
	 * Computes sequentially the corner position of each tile in the grid.
	 * 
	 * @param pos
	 * @param nextpos
	 * @return false if the upperright corner of the grid has been reached, true
	 *         otherwise
	 */
	boolean increment(double[] pos, double[] nextpos) {
		Region mbr = (Region) getShape();
		int dims = pos.length;

		if ((dims != tiles_number.length)
				|| (nextpos.length != tiles_number.length)) {
			throw new IllegalArgumentException(
					"Cursor has not the same dimension as grid.");
		}

		for (int i = 0; i < dims; i++) {
			if (((nextpos[i] - mbr.getHigh(i)) > 0)
					|| (Math.abs(nextpos[i] - mbr.getHigh(i)) < AbstractSpatialIndex.EPSILON)) {
				pos[i] = mbr.getLow(i);
				nextpos[i] = pos[i] + tiles_size;

				if (i == (dims - 1)) {
					return false;
				}
			} else {
				pos[i] = nextpos[i];
				nextpos[i] = pos[i] + tiles_size;

				break;
			}
		}

		return true;
	}

