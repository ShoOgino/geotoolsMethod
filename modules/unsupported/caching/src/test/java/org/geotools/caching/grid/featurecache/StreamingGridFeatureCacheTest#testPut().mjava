    public void testPut() throws Exception {
        resetDatasets();

        double x_min = 450;
        double x_max = 500;
        double y_min = 450;
        double y_max = 500;

        FilterFactory filterFactory = new FilterFactoryImpl();
        FeatureType ft = rawDataset.getFeatureSource("mycollection").getSchema();
        String localname = ft.getGeometryDescriptor().getLocalName();
        String srs = ft.getGeometryDescriptor().getCoordinateReferenceSystem().toString();

        Filter bb = filterFactory.bbox(localname, x_min, y_min, x_max, y_max, srs);
        assertEquals(numFeatures, rawDataset.getFeatureSource("mycollection").getFeatures().size());

        // cacheFS.resetDidRead();
        assertEquals(numFeatures, cacheDataset.getFeatures().size());
        // assertTrue(cacheFS.didRead());

        int size = rawDataset.getFeatureSource("mycollection").getFeatures(bb).size();
        // cacheFS.resetDidRead();
        assertEquals(size, cacheDataset.getFeatures(bb).size());
        // assertTrue(cacheFS.didRead()); // features aren't cached if all features
        // are requested??

        SimpleFeature newFeature =
                makeFeature(rawDataset.getFeatureSource("mycollection").getSchema(), 450, 500);
        DefaultFeatureCollection dfc =
                new DefaultFeatureCollection(
                        "mycollection", rawDataset.getFeatureSource("mycollection").getSchema());
        dfc.add(newFeature);

        // put features which is okay but doesn't not add it back to the raw
        // dataset
        try {
            cacheDataset.put(dfc);
        } catch (Exception ex) {
            assertTrue(true);
        }
        // cacheFS.resetDidRead();
        // assertEquals(size + 1, cacheDataset.getFeatures(bb).size());
        // assertTrue(!cacheFS.didRead());
    }

