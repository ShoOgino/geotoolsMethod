    private List<Expression> functionArgsToExpressions(List<FunctionObjectArgument> arguments)
            throws ParseException {
        List<Expression> expressions = new ArrayList<>();
        for (FunctionObjectArgument functionObjectArgument : arguments) {
            if (functionObjectArgument.getAdd() != null) {
                expressions.add(
                        filterFactory.add(
                                filterFactory.literal(
                                        functionObjectArgument.getAdd().getProperty()),
                                filterFactory.literal(functionObjectArgument.getAdd().getValue())));
            }
            if (functionObjectArgument.getSub() != null) {
                expressions.add(
                        filterFactory.subtract(
                                filterFactory.literal(
                                        functionObjectArgument.getAdd().getProperty()),
                                filterFactory.literal(functionObjectArgument.getAdd().getValue())));
            }
            if (functionObjectArgument.getMul() != null) {
                expressions.add(
                        filterFactory.multiply(
                                filterFactory.literal(
                                        functionObjectArgument.getAdd().getProperty()),
                                filterFactory.literal(functionObjectArgument.getAdd().getValue())));
            }
            if (functionObjectArgument.getDiv() != null) {
                expressions.add(
                        filterFactory.divide(
                                filterFactory.literal(
                                        functionObjectArgument.getAdd().getProperty()),
                                filterFactory.literal(functionObjectArgument.getAdd().getValue())));
            }
            if (functionObjectArgument.getBbox() != null) {
                Geometry geo = toGeometry((Map<String, Object>) functionObjectArgument.getBbox());
                double minx = geo.getEnvelope().getLowerCorner().getCoordinate()[0];
                double miny = geo.getEnvelope().getLowerCorner().getCoordinate()[1];
                double maxx = geo.getEnvelope().getUpperCorner().getCoordinate()[0];
                double maxy = geo.getEnvelope().getUpperCorner().getCoordinate()[1];
                expressions.add(
                        filterFactory
                                .bbox(
                                        functionObjectArgument.getProperty(),
                                        minx,
                                        miny,
                                        maxx,
                                        maxy,
                                        geo.getCoordinateReferenceSystem().toString())
                                .getExpression1());
            }
            if (functionObjectArgument.getGeometry() != null) {
                Geometry geo = toGeometry((Map<String, Object>) functionObjectArgument.getBbox());
                double minx = geo.getEnvelope().getLowerCorner().getCoordinate()[0];
                double miny = geo.getEnvelope().getLowerCorner().getCoordinate()[1];
                double maxx = geo.getEnvelope().getUpperCorner().getCoordinate()[0];
                double maxy = geo.getEnvelope().getUpperCorner().getCoordinate()[1];
                expressions.add(
                        filterFactory
                                .bbox(
                                        functionObjectArgument.getProperty(),
                                        minx,
                                        miny,
                                        maxx,
                                        maxy,
                                        geo.getCoordinateReferenceSystem().toString())
                                .getExpression1());
            }

            if (functionObjectArgument.getTemporalValue() != null) {
                expressions.add(filterFactory.literal(functionObjectArgument.getTemporalValue()));
            }

            if (functionObjectArgument.getFunction() != null) {
                expressions.add(convertFunction(functionObjectArgument.getFunction()));
            }
            if (functionObjectArgument.getProperty() != null) {
                expressions.add(filterFactory.property(functionObjectArgument.getProperty()));
            }
        }
        return expressions;
    }

