    /**
     * Jackson returns embedded geojson as a map so we use this method to create opengis.Geometry
     * for filter creation
     *
     * @param geoJsonAsMap GeoJSON Map
     * @return Geometry for filter creation
     * @throws ParseException
     */
    public static Geometry parseMapToGeometry(Map<String, Object> geoJsonAsMap)
            throws ParseException {
        String type = "Bbox";
        List<Double> coordinatesSingle = null;
        List<List<Double>> coordinatesMulti = null;
        if (geoJsonAsMap.get("bbox") != null) {
            coordinatesSingle = convertToArrayList(geoJsonAsMap.get("bbox"));
            return parseSingleDimensionGeometry(type, coordinatesSingle);
        } else {
            type = (String) geoJsonAsMap.get("type");
            Object coordinates = geoJsonAsMap.get("coordinates");
            if (type.equals("Point")) {
                coordinatesSingle = convertToArrayList(coordinates);
                return parseSingleDimensionGeometry(type, coordinatesSingle);
            } else if (type.equals("Polygon") || type.equals("MultiLineString")) {
                List<List<List<Double>>> coordinatesThree =
                        convertToArrayListArrayListArrayList(coordinates);
                return parseThreeDimensionGeometry(type, coordinatesThree);
            } else if (type.equals("MultiPolygon")) {
                List<List<List<List<Double>>>> coordinatesFour =
                        convertToArrayListArrayListArrayListArrayList(coordinates);
                return parseFourDimensionGeometry(type, coordinatesFour);
            } else {
                coordinatesMulti = convertToArrayListArrayList(coordinates);
                return parseTwoDimensionGeometry(type, coordinatesMulti);
            }
        }
    }

