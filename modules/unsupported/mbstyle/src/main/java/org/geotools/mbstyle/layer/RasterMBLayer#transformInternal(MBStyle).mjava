    /**
     * Transform {@link RasterMBLayer} to GeoTools FeatureTypeStyle.
     * <p>
     * Notes:
     * </p>
     * <ul>
     * <li>Assumes 3-band RGB</li>
     * </ul>
     *
     * @param styleContext The MBStyle to which this layer belongs, used as a context for things like resolving sprite and glyph names to full urls.
     * @return FeatureTypeStyle
     */
    public List<FeatureTypeStyle> transformInternal(MBStyle styleContext) {
        ContrastEnhancement ce = sf.contrastEnhancement(ff.literal(1.0), ContrastMethod.NONE);

        // Use of builder is easier for code examples; but fills in SLD defaults
        // Currently only applies the opacity.
        RasterSymbolizer symbolizer = sf.rasterSymbolizer(getId(), null,
                sf.description(Text.text("raster"), null), NonSI.PIXEL, opacity(), null,
                null, null, ce, null, null);

        List<Rule> rules = new ArrayList<>();
        MBFilter filter = getFilter();
        org.geotools.styling.Rule rule = sf.rule(getId(), null, null, 0.0, Double.MAX_VALUE,
                Arrays.asList(symbolizer), filter.filter());
        rules.add(rule);
        rule.setLegendGraphic(new Graphic[0]);

        return Collections.singletonList(sf.featureTypeStyle(getId(),
                sf.description(Text.text("MBStyle " + getId()),
                        Text.text("Generated for " + getSourceLayer())),
                null,
                Collections.emptySet(),
                filter.semanticTypeIdentifiers(),
                rules));
    }

