    @Override
    public <T> T evaluate(Object object, Class<T> context) {
        List<Expression> parameters = getParameters();

        Expression input = parameters.get(0);
        Expression fallback = parameters.get(1);

        T fallbackEvaluated = fallback.evaluate(object, context);
        T inputEvaluated;
        try {
            inputEvaluated = input.evaluate(object, context);
        } catch (Exception e) {
            inputEvaluated = null;
            LOGGER.warning(
                    "Exception evaluating expression, falling back to default value. Exception was: "
                            + e.getClass().getSimpleName() + " (message: " + e.getMessage() + ")");
        }

        if (inputEvaluated != null) {
            return inputEvaluated;
        } else {
            return fallbackEvaluated;
        }
    }

