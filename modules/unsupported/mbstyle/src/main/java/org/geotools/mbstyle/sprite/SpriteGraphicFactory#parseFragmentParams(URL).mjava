    /**
     * Parse the parameters from the URL fragment in the provided URL (interpreting the fragment
     * like a query string). The "name" parameter is required and will cause an {@link
     * MBFormatException} if missing. The "size" parameter is optional and defaults to "1".
     *
     * @param url
     * @return
     */
    protected static Map<String, String> parseFragmentParams(URL url) {
        String urlStr = url.toExternalForm();
        int fragmentIdx = urlStr.indexOf(ICON_NAME_DELIMITER);

        if (fragmentIdx == -1) {
            throw new IllegalArgumentException(
                    "Sprite external graphics must have url with fragment of the form #icon=test&size=1.5. URL was: "
                            + urlStr);
        }

        String fragment = urlStr.substring(fragmentIdx + 1);

        if (fragment.trim().length() == 0) {
            throw new IllegalArgumentException(
                    "Sprite external graphics must have url with non-empty fragment of the form #icon=test&size=1.5. URL was: "
                            + urlStr);
        }

        String[] nvps = fragment.split("&");

        Map<String, String> paramsMap = new HashMap<>();
        for (int i = 0; i < nvps.length; i++) {
            try {
                String[] nvp = nvps[i].split("=");
                if (nvp.length == 1 && nvps.length == 1) {
                    // Allow the simple case url#iconName (omitting name=iconName)
                    paramsMap.put("icon", URLDecoder.decode(nvp[0], "utf-8"));
                } else {
                    String k = URLDecoder.decode(nvp[0], "utf-8").trim().toLowerCase();
                    String v = URLDecoder.decode(nvp[1], "utf-8");
                    paramsMap.put(k, v);
                }

            } catch (UnsupportedEncodingException uee) {
                throw new MBSpriteException(
                        "Exception decoding URL fragment for external graphic URL. URL was: "
                                + urlStr,
                        uee);
            }
        }

        if (paramsMap.get("icon") == null || paramsMap.get("icon").trim().isEmpty()) {
            throw new IllegalArgumentException(
                    "Sprite external graphics must provide an icon name using a URL fragment of the form #icon=test&size=1.5 . URL was: "
                            + urlStr);
        }

        return paramsMap;
    }

