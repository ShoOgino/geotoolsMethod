    /**
     * Retrieve an object of the provided type in the JSONArray at this index, throwing an {@link MBFormatException} if 
     * no object of that type is found at that index of the array.
     * 
     * @param type The type of the object to retrieve.
     * @param json The JSONArray in which to retrieve the object.
     * @param index The index in the JSONArray at which to retrieve the object.
     * @return The object of the required type in the array at index.
     */
    public <T> T require(Class<T> type, JSONArray json, int index) {
        if (json == null) {
            throw new IllegalArgumentException("json required");
        }
        if (index >= 0 && index <= json.size() && type.isInstance(json.get(index))) {
            return type.cast(json.get(index));
        } else {
            throw new MBFormatException(context.getSimpleName() + " requires [" + index + "] "+type.getSimpleName());
        }
    }

