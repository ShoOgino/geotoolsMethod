    public static MBExpression create(JSONArray json) {
        String name;
        if (json.get(0) instanceof String) {
            name = (String) json.get(0);

            if (colors.contains(name)) {
                return new MBColor(json);
            } else if (decisions.contains(name)) {
                return new MBDecision(json);
            } else if (featureData.contains(name)) {
                return new MBFeatureData(json);
            } else if (heatMap.contains(name)) {
                return new MBHeatmap(json);
            } else if (lookUp.contains(name)) {
                return new MBLookup(json);
            } else if (math.contains(name)) {
                return new MBMath(json);
            } else if (ramps.contains(name)) {
                return new MBRampsScalesCurves(json);
            } else if (string.contains(name)) {
                return new MBString(json);
            } else if (types.contains(name)) {
                return new MBTypes(json);
            } else if (variableBindings.contains(name)) {
                return new MBVariableBinding(json);
            } else if (zoom.contains(name)) {
                return new MBZoom(json);
            } else {
                throw new MBFormatException("Expression \"" + name + "\" invalid.");
            }
        }
        throw new MBFormatException("Requires a string name of the expression at position 0");
    }

