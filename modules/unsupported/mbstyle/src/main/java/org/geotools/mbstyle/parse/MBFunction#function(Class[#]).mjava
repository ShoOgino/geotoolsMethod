    //
    // General Purpose
    //
    /**
     * GeoTools {@link Expression} from json definition.
     * <p>
     * Delegates handling of Color, Number and Enum - for generic values (such as String) the following are available:
     * <ul>
     * <li>{@link FunctionType#IDENTITY}: input is directly converted to a literal</li>
     * <li>{@link FunctionType#CATEGORICAL}: selects stop equal to input, and returns stop value as a literal</li>
     * <li>{@link FunctionType#INTERVAL}: selects stop less than numeric input, and returns stop value a literal</li>
     * </ul>
     * If type is unspecified interval is used as a default.
     * 
     * @return {@link Function} (or identity {@link Expression} for the provided json)
     */
    @SuppressWarnings("unchecked")
    public Expression function(Class<?> clazz){
        // check for special cases
        if (clazz.isAssignableFrom(Color.class)) {
            return color();
        } else if (clazz.isAssignableFrom(Number.class)) {
            return numeric();
        } else if (clazz.isAssignableFrom(Enum.class)) {
            return enumeration((Class<? extends Enum<?>>) clazz);
        }
        
        Expression input = value();
        FunctionType type = getType();
        if( type == null || type == FunctionType.INTERVAL){
            return generateCategorize(input);
        }
        else if( type == FunctionType.CATEGORICAL){
            return generateRecode(input);
        }
        else if( type == FunctionType.IDENTITY){
            return input;
        }
        throw new UnsupportedOperationException("Function unavailable for '"+type+"' function with "+clazz.getSimpleName());
    }

