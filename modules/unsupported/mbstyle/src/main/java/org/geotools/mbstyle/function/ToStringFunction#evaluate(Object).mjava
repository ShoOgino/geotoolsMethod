    @Override
    public Object evaluate(Object feature) {
        Object arg0;

        try { // attempt to get value and perform conversion
            arg0 = getExpression(0).evaluate(feature);
        } catch (Exception e) { // probably a type error
            throw new IllegalArgumentException(
                    "Filter Function problem for function mbToString argument #0 - expected type Object");
        }
        if (arg0 == null){
            return NULL;
        }
        if (arg0 instanceof Boolean){
            if (arg0 == Boolean.TRUE) {
                return TRUE;
            }
            if (arg0 == Boolean.FALSE) {
                return FALSE;
            }
        }
        if (arg0 instanceof Number){
            return String.valueOf(arg0);
        }
        if (arg0 instanceof Color){
            Color c = (Color) arg0;
            return "rgba(" + c.getRed() + "," + c.getGreen() + "," + c.getBlue() + "," + Double.valueOf(c.getAlpha() / 255) + ")";
        }
        if (arg0 instanceof String){
            return String.valueOf(arg0);
        }
        else {
            return arg0.toString();
        }
    }

