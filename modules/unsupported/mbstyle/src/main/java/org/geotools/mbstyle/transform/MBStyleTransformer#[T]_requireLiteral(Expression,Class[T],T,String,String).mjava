    /**
     * Utility method for getting a concrete value out of an expression, used by transformer methods when GeoTools is unable to accept an expression.
     * <ul>
     * <li>If the provided {@link Expression} is a {@link Literal}, evaluates it and returns the value.</li>
     * <li>Otherwise, returns the provided fallback value and logs a warning that dynamic styling is not yet supported for this property.</li>
     * </ul>
     * 
     * @param expression The expression
     * @param clazz The type to provide as the context for the expression's evaluation.
     * @param fallback The value to return if the expression is not a literal
     * @param propertyName The name of the property that the expression corresponds to, for logging purposes.
     * @param layerId The ID of the layer that the expression corresponds to, for logging purposes.
     * @return The evaluated value of the provided {@link Expression}, or the provided fallback value.
     */
    public static <T> T requireLiteral(Expression expression, Class<T> clazz, T fallback,
                                       String propertyName, String layerId) {
        if (expression instanceof Literal) {
            T value = expression.evaluate(null, clazz);
            if (value != null) {
                return value;
            } else {
                return fallback;
            }
        } else {
            LOGGER.warning("Mapbox '" + propertyName
                    + "' property: functions not yet supported for this property, falling back to default value."
                    + " (layerId = '" + layerId + "')");
            return fallback;
        }
    }

