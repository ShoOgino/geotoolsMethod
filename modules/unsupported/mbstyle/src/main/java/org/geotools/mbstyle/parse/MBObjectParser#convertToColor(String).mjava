    /**
     * Converts color definitions supplied as a string to Color objects:
     *
     * <ul>
     *   <li>
     *       <pre>{"line-color": "yellow"</pre>
     *       named: a few have been put in pass test cases, prnding: plan to use {@link
     *       Hints#COLOR_DEFINITION} to allow for web colors.
     *   <li>
     *       <pre>{"line-color": "#ffff00"}</pre>
     *       hex: hex color conversion are supplied by {@link ColorConverterFactory}
     *   <li>
     *       <pre>{"line-color": "#ff0"}</pre>
     *       hex: we will need to special case this
     *   <li>
     *       <pre>{"line-color": "rgb(255, 255, 0)"}</pre>
     *       - we will need to special case this
     *   <li>
     *       <pre>{"line-color": "rgba(255, 255, 0, 1)"}</pre>
     *       - we will need to special case this
     *   <li>
     *       <pre>{"line-color": "hsl(100, 50%, 50%)"}</pre>
     *       - we will need to special case this
     *   <li>
     *       <pre>{"line-color": "hsla(100, 50%, 50%, 1)"}</pre>
     *       - we will need to special case this
     *   <li>
     * </ul>
     *
     * This method uses {@link Hints#COLOR_DEFINITION} "CSS" to support the use of web colors names.
     *
     * @param color name of color (CSS or "web" colors)
     * @return appropriate java color, or null if not available.
     */
    public Color convertToColor(String color) {
        if (color == null) {
            return null;
        }
        // quick examples to pass test case (while we work on color converter)
        if ("red".equalsIgnoreCase(color)) {
            return Color.RED;
        } else if ("blue".equalsIgnoreCase(color)) {
            return Color.BLUE;
        }
        if (color.startsWith("#") && color.length() == 4) {
            String[] split = color.split("");
            StringBuilder builder = new StringBuilder();
            builder.append(split[0]);
            for (Integer j = 1; j < split.length; j++) {
                builder.append(split[j]).append(split[j]);
            }
            String cstring = builder.toString();
            return Color.decode(cstring);
        }
        Hints h = new Hints(Hints.COLOR_DEFINITION, "CSS");
        return Converters.convert(color, Color.class, h);
    }

