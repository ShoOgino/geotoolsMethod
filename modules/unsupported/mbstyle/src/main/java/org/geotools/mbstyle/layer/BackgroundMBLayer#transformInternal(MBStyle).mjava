    /**
     * Transform {@link BackgroundMBLayer} to GeoTools FeatureTypeStyle.
     * <p>
     * Notes:
     * </p>
     * <ul>
     * </ul>
     *
     * @param styleContext The MBStyle to which this layer belongs, used as a context for things like resolving sprite and glyph names to full urls.
     * @return FeatureTypeStyle
     */
    public FeatureTypeStyle transformInternal(MBStyle styleContext) {
        MBStyleTransformer transformer = new MBStyleTransformer(parse);
        Fill fill;
        if (hasBackgroundPattern()) {
            ExternalGraphic eg = transformer.createExternalGraphicForSprite(backgroundPattern(), styleContext);
            GraphicFill gf = sf.graphicFill(Arrays.asList(eg), backgroundOpacity(), null, null, null, null);
            fill = sf.fill(gf, backgroundColor(), backgroundOpacity());
        } else {
            fill = sf.fill(null, backgroundColor(), backgroundOpacity());
        }

        Symbolizer symbolizer = sf.polygonSymbolizer(getId(),
                ff.property((String) null), sf.description(Text.text("fill"), null), NonSI.PIXEL,
                null, // stroke
                fill, null, ff.literal(0));
        List<Symbolizer> symbolizers = new ArrayList<Symbolizer>();
        symbolizers.add(symbolizer);

        // List of opengis rules here (needed for constructor)
        MBFilter filter = getFilter();
        List<org.opengis.style.Rule> rules = new ArrayList<>();
        Rule rule = sf.rule(
                getId(),
                null,
                null,
                0.0,
                Double.POSITIVE_INFINITY,
                symbolizers,
                filter.filter());
        rule.setLegendGraphic(new Graphic[0]);

        rules.add(rule);
        return sf.featureTypeStyle(getId(),
                sf.description(Text.text("MBStyle " + getId()),
                        Text.text("Generated for " + getSourceLayer())),
                null, // (unused)
                Collections.emptySet(), filter.semanticTypeIdentifiers(),
                rules);
    }

