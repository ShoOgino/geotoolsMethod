    /**
     * Optional enum. One of map, viewport, auto. Defaults to auto. Requires text-field. In
     * combination with symbol-placement, determines the rotation behavior of the individual glyphs
     * forming the text.
     *
     * <p>Possible values:
     *
     * <p>{@link Alignment#MAP} When symbol-placement is set to point, aligns text east-west. When
     * symbol-placement is set to line, aligns text x-axes with the line.
     *
     * <p>{@link Alignment#VIEWPORT} Produces glyphs whose x-axes are aligned with the x-axis of the
     * viewport, regardless of the value of symbol-placement.
     *
     * <p>{@link Alignment#AUTO} When symbol-placement is set to point, this is equivalent to
     * viewport. When symbol-placement is set to line, this is equivalent to map.
     *
     * @return Text alignment when the map is rotated.
     */
    public Alignment getTextRotationAlignment() {
        Object value = layout.get("text-rotation-alignment");
        if (value != null && "map".equalsIgnoreCase((String) value)) {
            return Alignment.MAP;
        } else if (value != null && "viewport".equalsIgnoreCase((String) value)) {
            return Alignment.VIEWPORT;
        } else {
            return Alignment.AUTO;
        }
    }

