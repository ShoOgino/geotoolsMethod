    /**
     * Converts {@link #getLineDasharray()} to a List of Expressions
     *
     * <p>(Optional) Specifies the lengths of the alternating dashes and gaps that form the dash
     * pattern. The lengths are later scaled by the line width. To convert a dash length to pixels,
     * multiply the length by the current line width.
     *
     * <p>Units in line widths. Disabled by line-pattern.
     *
     * @return A list of dash and gap lengths defining the pattern for a dashed line.
     */
    public List<Expression> lineDasharray() {
        Object defn = paint.get("line-dasharray");

        if (defn == null) {
            return null;
        } else if (defn instanceof JSONArray) {
            JSONArray array = (JSONArray) defn;
            List<Expression> expressionList = new ArrayList<>();
            for (int i = 0; i < array.size(); i++) {
                expressionList.add(parse.number(array, i, 0));
            }
            return expressionList;
        } else if (defn instanceof JSONObject) {
            throw new MBFormatException("\"line-dasharray\": Functions not supported yet.");
        } else {
            throw new MBFormatException(
                    "\"line-dasharray\": Expected array or function, but was "
                            + defn.getClass().getSimpleName());
        }
    }

