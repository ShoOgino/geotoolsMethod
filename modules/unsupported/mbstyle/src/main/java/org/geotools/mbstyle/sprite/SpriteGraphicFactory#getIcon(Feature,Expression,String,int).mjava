    @Override
    public Icon getIcon(Feature feature, Expression url, String format, int size) throws Exception {

        // Only handle the correct format
        if (!FORMAT.equalsIgnoreCase(format.trim())) {
            return null;
        }

        URL loc = url.evaluate(feature, URL.class);
        URL baseUrl = parseBaseUrl(loc);

        Map<String, String> paramsMap = parseFragmentParams(loc);
        String iconName = paramsMap.get("icon");
        String sizeStr = paramsMap.get("size");
        sizeStr = sizeStr == null ? "1.0" : sizeStr;

        Double sizeMultiplier = null;
        try {
            sizeMultiplier = Double.parseDouble(sizeStr);
            if (sizeMultiplier < 0) {
                sizeMultiplier = 1.0;
            }
        } catch (NumberFormatException e) {
            throw new MBSpriteException(
                    "Exception parsing size parameter from Sprite External Graphic URL. URL was: "
                            + loc,
                    e);
        }

        // Retrieve and parse the sprite index file.
        SpriteIndex spriteIndex = getSpriteIndex(baseUrl);

        SpriteIndex.IconInfo iconInfo = spriteIndex.getIcon(iconName);

        // Retrieve the sprite sheet and get the icon as a sub image
        BufferedImage spriteImg = getSpriteSheet(baseUrl);
        BufferedImage iconSubImg =
                spriteImg.getSubimage(
                        iconInfo.getX(),
                        iconInfo.getY(),
                        iconInfo.getWidth(),
                        iconInfo.getHeight());

        // Use "size" to scale the image, if > 0
        if (size > 0 && iconSubImg.getHeight() != size) {
            double scaleY = ((double) size) / iconSubImg.getHeight(); // >1 if you're magnifying
            double scaleX = scaleY; // keep aspect ratio!

            AffineTransform scaleTx = AffineTransform.getScaleInstance(scaleX, scaleY);
            AffineTransformOp ato = new AffineTransformOp(scaleTx, AffineTransformOp.TYPE_BILINEAR);
            iconSubImg = ato.filter(iconSubImg, null);
        }

        // Use the size multiplier, if any, to scale the image
        if (sizeMultiplier != null && sizeMultiplier != 1.0) {
            AffineTransform scaleTx =
                    AffineTransform.getScaleInstance(sizeMultiplier, sizeMultiplier);
            AffineTransformOp ato = new AffineTransformOp(scaleTx, AffineTransformOp.TYPE_BILINEAR);
            iconSubImg = ato.filter(iconSubImg, null);
        }

        return new ImageIcon(iconSubImg);
    }

