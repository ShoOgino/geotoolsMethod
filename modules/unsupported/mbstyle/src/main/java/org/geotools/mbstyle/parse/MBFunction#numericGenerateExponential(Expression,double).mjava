    /**
     * Used to calculate a numeric value.
     * <p>
     * Example adjusts circle size between 2 and 180 pixels when zooming between levels 12 and 22.
     * <pre><code>'circle-radius': {
     *   'base': 1.75,
     *   'stops': [[12, 2], [22, 180]]
     * }</pre></code>
     * 
     * @param value
     * @return Exponential function
     */
    private Expression numericGenerateExponential(Expression input, double base){
        List<Expression> parameters = new ArrayList<>();
        parameters.add(input);
        parameters.add(ff.literal(base));
        for (Object obj : getStops()) {
            JSONArray entry = parse.jsonArray(obj);
            Object stop = entry.get(0);
            Object value = entry.get(1);
            if (value == null || !(value instanceof Number)) {
                throw new MBFormatException(
                        "Could not convert stop " + stop + " color " + value + " into a numeric");
            }
            parameters.add(ff.literal(stop));
            parameters.add(ff.literal(value));
        }
        return ff.function("Exponential", parameters.toArray(new Expression[parameters.size()]));
    }

