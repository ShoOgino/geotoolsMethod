    /**
     * Transform MBFillLayer to GeoTools FeatureTypeStyle.
     * <p>
     * Notes:</p>
     * <ul>
     * <li>stroke-width is assumed to be 1 (not specified by MapBox style)
     * </ul>
     * @param layer Describing polygon fill styling
     * @param styleContext The MBStyle to which this layer belongs, used as a context for things like resolving sprite and glyph names to full urls.
     * @return FeatureTypeStyle 
     */
    public FeatureTypeStyle transform(FillMBLayer layer, MBStyle styleContext) {
        PolygonSymbolizer symbolizer;
        // use factory to avoid defaults values        
        Stroke stroke = sf.stroke(
                layer.fillOutlineColor(),
                ff.literal(1),
                ff.literal(1),
                ff.literal("miter"),
                ff.literal("butt"),
                null,
                null);
        
        // from fill pattern or fill color
        Fill fill;
        if (layer.hasFillPattern()) {
            
            // If the fill-pattern is a literal string (not a function), then
            // we need to support Mapbox {token} replacement.
            Expression fillPatternExpr = layer.fillPattern();
            if (fillPatternExpr instanceof Literal) {
                String text = fillPatternExpr.evaluate(null, String.class);
                if (text.trim().isEmpty()) {
                    fillPatternExpr = ff.literal(" ");
                } else {
                    fillPatternExpr = cqlExpressionFromTokens(text);
                }
            }
            
            ExternalGraphic eg = createExternalGraphicForSprite(fillPatternExpr, styleContext);
            GraphicFill gf = sf.graphicFill(Arrays.asList(eg), layer.fillOpacity(), null, null, null, layer.toDisplacement());            
            fill = sf.fill(gf, null, null);                
        } else {
            fill = sf.fill(null, layer.fillColor(), layer.fillOpacity());
        }

        // TODO: Is there a better way to select the first geometry?
        symbolizer = sf.polygonSymbolizer(
                 layer.getId(),
                 ff.property((String)null),
                 sf.description(Text.text("fill"),null),
                 NonSI.PIXEL,
                 stroke,
                 fill,
                 layer.toDisplacement(),
                 ff.literal(0));
        
        Rule rule = sf.rule(
                layer.getId(),
                null, 
                null,
                0.0,
                Double.POSITIVE_INFINITY,
                Arrays.asList(symbolizer),
                layer.filter());

        // Set legend graphic to null.
        //TODO: How do other style transformers set a null legend? SLD/SE difference - fix setLegend(null) to empty list.
        rule.setLegendGraphic(new Graphic[0]);
        
        
        return sf.featureTypeStyle(
                layer.getId(),
                sf.description(
                        Text.text("MBStyle "+layer.getId()),
                        Text.text("Generated for "+layer.getSourceLayer())),
                null, // (unused)
                Collections.emptySet(),
                Collections.singleton(SemanticType.POLYGON), // we only expect this to be applied to polygons 
                Arrays.asList(rule)
                );
    }

