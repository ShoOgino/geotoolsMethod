    /**
     * Transform MBFillLayer to GeoTools FeatureTypeStyle.
     * <p>
     * Notes:</p>
     * <ul>
     * <li>stroke-width is assumed to be 1 (not specified by MapBox style)
     * </ul>
     * @param layer Describing polygon fill styling
     * @return FeatureTypeStyle 
     */
    FeatureTypeStyle transform(MBFillLayer layer) {
        PolygonSymbolizer symbolizer;
        // use of factory is more verbose, but we supply every value (no defaults)
        
        // stroke from fill outline color and opacity
        Stroke stroke = sf.stroke(
                layer.getFillOutlineColor(),
                ff.literal(1),
                ff.literal(1),
                ff.literal("miter"),
                ff.literal("butt"),
                null,
                null);

        // from fill pattern or fill color
        Fill fill; 
        if( layer.getFillPattern() != null ){
            fill = sf.fill(null,null, layer.getFillOpacity());
        }
        else {
            fill = sf.fill(null,  layer.getFillColor(),  layer.getFillOpacity());
        }
        // String name, Expression geometry,
        symbolizer = sf.polygonSymbolizer(
                 layer.getId(),
                 ff.property("."),
                 sf.description(Text.text("fill"),null),
                 NonSI.PIXEL,
                 stroke,
                 fill,
                 layer.toDisplacement(),
                 ff.literal(0));
        List<Symbolizer> symbolizers = new ArrayList<Symbolizer>();
        symbolizers.add(symbolizer);
        List<Rule> rules = new ArrayList<>();
        Rule rule = sf.rule(layer.getId(), null,  null, 0.0, Double.MAX_VALUE,symbolizers, Filter.INCLUDE);
        rules.add(rule);
        return sf.featureTypeStyle(
                layer.getId(),
                sf.description(
                        Text.text("MBStil "+layer.getId()),
                        Text.text("Generated for "+layer.getSourceLayer())),
                null, // (unused)
                Collections.emptySet(),
                Collections.singleton(SemanticType.POLYGON), // we only expect this to be applied to polygons 
                rules
                );
    }

