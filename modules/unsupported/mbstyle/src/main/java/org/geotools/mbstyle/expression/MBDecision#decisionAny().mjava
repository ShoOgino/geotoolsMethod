    /**
     * Returns true if any of the inputs are true, false otherwise. The inputs are evaluated in order,
     * and evaluation is short-circuiting: once an input expression evaluates to true, the result is true and no
     * further input expressions are evaluated.
     * Example: [""any"", boolean, boolean]: boolean
     *          [""any"", boolean, boolean, ...]: boolean
     * @return
     */
    private Expression decisionAny() {
        // validate the arg list
        if (json.size() < 2) {
            throwInsufficientArgumentCount(ALL, 1);
        }
        Expression[] expressions = new Expression[json.size()-1];
        for (int i = 1; i < json.size(); ++i) {
            Expression expression = parse.string(json, i);
            expressions[i-1] = expression;
        }
        return ff.function("any", expressions);
    }

