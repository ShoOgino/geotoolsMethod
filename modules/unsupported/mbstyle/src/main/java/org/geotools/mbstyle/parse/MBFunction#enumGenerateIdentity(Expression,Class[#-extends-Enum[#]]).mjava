    /**
     * Generates an expression (based on a mapbox enumeration property) for the output of this {@link MBFunction} (as a {@link MBFunction.FunctionType#IDENTITY} function), based on the provided input Expression.
     * 
     * @param input The expression for the function input
     * @param enumeration The type of the enumeration for the mapbox style property
     * @return The expression for the output of this function (as a {@link MBFunction.FunctionType#IDENTITY} function)
     */
    private Expression enumGenerateIdentity(Expression input, Class<? extends Enum<?>> enumeration) {
        // this is an interesting challenge, we need to generate a recode mapping
        // mapbox constants defined by the enum, to appropriate geotools literals
        List<Expression> parameters = new ArrayList<>();
        parameters.add(input);
        for (Enum<?> constant : enumeration.getEnumConstants()) {
            Object value = constant.name().toLowerCase();
            parameters.add(ff.literal(value));
            parameters.add(parse.constant(value, enumeration));
        }
        return withFallback(ff.function("Recode", parameters.toArray(new Expression[parameters.size()])));
    }

