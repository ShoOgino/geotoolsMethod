    /**
     * Selects the output whose label value matches the input value, or the fallback value if no
     * match is found. The input can be any string or number expression (e.g. ["get",
     * "building_type"]). Each label can either be a single literal value or an array of values.
     * Example: ["match", input: InputType (number or string), label_1: InputType | [InputType,
     * InputType, ...], output_1: OutputType, label_n: InputType | [InputType, InputType, ...],
     * output_n: OutputType, ..., default: OutputType]: OutputType
     *
     * @return
     */
    private Expression decisionMatch() {
        // validate the arg list
        if (json.size() < 4) {
            throwInsufficientArgumentCount(COALESCE, 3);
        }
        Expression[] expressions = new Expression[json.size() - 1];
        for (int i = 1; i < json.size(); ++i) {
            Expression expression = parse.string(json, i);
            expressions[i - 1] = expression;
        }
        return ff.function("match", expressions);
    }

