    /**
     * Access JSONObject for the indicated tag, with the provided fallback if the the json does not
     * contain a JSONObject for that tag.
     *
     * @param json The JSONObject in which to lookup the provided tag and return a JSONObject
     * @param tag The tag to look up in the provided JSONObject
     * @param fallback The JSONObject to return if the provided json does not contain a JSONObject
     *     for that tag.
     * @return The JSONObject at the provided tag, or the fallback object.
     */
    public JSONObject getJSONObject(JSONObject json, String tag, JSONObject fallback) {
        if (json == null) {
            throw new IllegalArgumentException("json required");
        }
        if (tag == null) {
            throw new IllegalArgumentException("tag required for json access");
        }
        if (json.containsKey(tag) && json.get(tag) instanceof JSONObject) {
            return (JSONObject) json.get(tag);
        } else {
            return fallback;
        }
    }

