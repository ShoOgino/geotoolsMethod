    /**
     * Look up a Boolean in the provided {@link JSONObject} at the provided 'tag', or thrown an {@link MBFormatException},
     * with a fallback if the json is null or contains no such 'tag'.
     *
     * @param json The object in which to look up the Boolean
     * @param tag  The tag at which to look up the Boolean
     * @param fallback The value to return if the json is null or contains no such 'tag'.
     * @return The Boolean from the object at 'tag', or the fallback value
     */
    public Boolean getBoolean(JSONObject json, String tag, Boolean fallback) {
        if (json == null) {
            throw new IllegalArgumentException("json required");
        } else if (tag == null) {
            throw new IllegalArgumentException("tag required for json access");
        } else if (!json.containsKey(tag) || json.get(tag)==null){
            return fallback;
        } else if (json.get(tag) instanceof Boolean) {
            return (Boolean) json.get(tag);
        } else {
            throw new MBFormatException(context.getSimpleName() + " requires \"" + tag + "\" boolean field");
        }
    }

