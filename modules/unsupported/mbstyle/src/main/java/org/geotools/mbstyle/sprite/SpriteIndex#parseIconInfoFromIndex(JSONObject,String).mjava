    /**
     * Parse the {@link IconInfo} for the provided iconName in the provided icon index.
     *
     * @param iconIndex The icon index file.
     * @param iconName The name of the icon in the index file.
     * @return An {@link IconInfo} for the icon.
     */
    protected static IconInfo parseIconInfoFromIndex(JSONObject iconIndex, String iconName) {
        if (!iconIndex.containsKey(iconName)) {
            throw new MBSpriteException(
                    "Sprite index file does not contain entry for icon with name: " + iconName);
        }

        Object o = iconIndex.get(iconName);
        if (!(o instanceof JSONObject)) {
            throw new MBSpriteException("Error parsing sprite index for \"" + iconName
                    + "\": Expected JSONObject, but is " + o.getClass().getSimpleName());
        }
        return new IconInfo(iconName, (JSONObject) o);
    }

