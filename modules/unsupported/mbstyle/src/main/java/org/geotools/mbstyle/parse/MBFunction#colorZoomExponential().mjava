    /**
     * Used to covert a zoom level function that has been reduced to two stops.
     * @param expression
     * @return
     */
    private Expression colorZoomExponential() {
        Expression zoomLevel = ff.function("zoomLevel",
                ff.function("env", ff.literal("wms_scale_denominator")),
                ff.literal("EPSG:3857")
        );
        List<Expression> parameters = new ArrayList<>();
        
        // See FilterFunction_pow: pow( base, exponent ): power
        Expression base = parse.number(json, "base", null);
        if( base == null ){
            base = ff.literal(1.0);
        }
//        JSONArray stops = getStops();
//        Object stop1 = entry.get(0);
//        Expression color1 = parse.color(entry.get(1));
//        Object stop2 = entry.get(2);
//        Expression color2 = parse.color(entry.get(3));
        
        for (Object obj : getStops()) {
            JSONArray entry = parse.jsonArray(obj);
            Object stop = entry.get(0);
            Object value = entry.get(1);
            Expression color = parse.color((String)value); // handles web colors
            if( color == null ){
                throw new MBFormatException("Could not convert stop "+stop+" color "+value+" into a color");
            }
            parameters.add(ff.literal(stop));
            parameters.add(color);
        }
        parameters.add(ff.literal("color"));
        return ff.function("Interpolate", parameters.toArray(new Expression[parameters.size()]));
    }

