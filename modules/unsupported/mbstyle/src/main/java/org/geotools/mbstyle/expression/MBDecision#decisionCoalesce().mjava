    /**
     * Evaluates each expression in turn until the first non-null value is obtained, and returns that value.
     * Example: ["coalesce", OutputType, OutputType, ...]: OutputType
     * @return
     */
    private Expression decisionCoalesce() {
        // validate the arg list
        if (json.size() < 2) {
            throwInsufficientArgumentCount(COALESCE, 1);
        }
        Expression[] expressions = new Expression[json.size()-1];
        for (int i = 1; i < json.size(); ++i) {
            Expression expression = parse.string(json, i);
            expressions[i-1] = expression;
        }
        return ff.function("mbCoalesce", expressions);
    }

