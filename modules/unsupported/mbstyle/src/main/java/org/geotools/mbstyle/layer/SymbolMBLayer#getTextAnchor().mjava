    /**
     * Part of the text placed closest to the anchor (requires text-field).
     *
     * <p>Optional enum. One of center, left, right, top, bottom, top-left, top-right, bottom-left,
     * bottom-right. Defaults to center. Requires text-field. Part of the text placed closest to the
     * anchor.
     *
     * <p>{@link TextAnchor#CENTER} The center of the text is placed closest to the anchor.
     *
     * <p>{@link TextAnchor#LEFT} The left side of the text is placed closest to the anchor.
     *
     * <p>{@link TextAnchor#RIGHT} The right side of the text is placed closest to the anchor.
     *
     * <p>{@link TextAnchor#TOP} The top of the text is placed closest to the anchor.
     *
     * <p>{@link TextAnchor#BOTTOM} The bottom of the text is placed closest to the anchor.
     *
     * <p>{@link TextAnchor#TOP_LEFT} The top left corner of the text is placed closest to the
     * anchor.
     *
     * <p>{@link TextAnchor#TOP_RIGHT} The top right corner of the text is placed closest to the
     * anchor.
     *
     * <p>{@link TextAnchor#BOTTOM_LEFT} The bottom left corner of the text is placed closest to the
     * anchor.
     *
     * <p>{@link TextAnchor#BOTTOM_RIGHT} The bottom right corner of the text is placed closest to
     * the anchor.
     *
     * @return part of the text placed closest to the anchor.
     */
    public TextAnchor getTextAnchor() {
        String json = parse.get(layout, "text-anchor", "center");
        if (json == null) {
            return null;
        }
        return TextAnchor.parse(json);
    }

