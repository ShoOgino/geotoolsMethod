    /**
     * Validate ability to read json, and parse each layer.
     * @param reader
     * @return 
     * @throws IOException
     * @throws ParseException
     */
    static List<Exception> validate(Reader reader) {
        List<Exception> problems = new ArrayList<Exception>();
        MBStyleParser parser = new MBStyleParser();
        MBStyle style;
        try {
            style = parser.parse(reader);
        }
        catch (Exception invalid){
            problems.add( invalid );
            return problems;
        }
        MBStyleTransformer transform = new MBStyleTransformer();
        
        for (MBLayer layer : style.layers()) {
            try {
                FeatureTypeStyle featureTypeStyle = transform.transform(layer);
            }
            catch (Exception invalid){
                problems.add((MBFormatException) new MBFormatException(
                        "Layer " + layer.getId() + ":" + invalid.getMessage()).initCause(invalid));
                return problems;
            }
        }
        return problems;
    }

