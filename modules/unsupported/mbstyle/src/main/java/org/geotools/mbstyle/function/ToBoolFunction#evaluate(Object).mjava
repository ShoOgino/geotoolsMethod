    @Override
    public Object evaluate(Object feature) {
        Object arg0;

        try { // attempt to get value and perform conversion
            arg0 = getExpression(0).evaluate(feature);
        } catch (Exception e) { // probably a type error
            throw new IllegalArgumentException(
                    "Filter Function problem for function mbToBool argument #0 - expected type Object");
        }
        if (arg0 == null) {
            return Boolean.FALSE;
        }
        if (arg0 instanceof Double && ((Double) arg0).isNaN()){
            return Boolean.FALSE;
        }
        if (Number.class.isAssignableFrom(arg0.getClass()) && ((Number)arg0).doubleValue() == 0d){
            return Boolean.FALSE;
        }
        if (arg0 instanceof Boolean && (Boolean) arg0 == false){
            return Boolean.FALSE;
        }
        if (arg0 instanceof String && ((String)arg0).isEmpty()){
            return Boolean.FALSE;
        }
        return Boolean.TRUE;
    }

