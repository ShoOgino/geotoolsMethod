    /**
     * Maps {@link #getLineCap()} to {@link Stroke#getLineCap()} values of "butt", "round", and "square" Literals. Defaults to butt.
     * <p>
     * Since piecewise constant functions is supported a {@link RecodeFunction} may be generated.
     * 
     * @return Expression for {@link Stroke#getLineCap()} use.
     */
    public Expression lineCap() {

        Object obj = layout.get("line-cap");

        if (obj == null) {
            return ff.literal("butt");
        } else if (obj instanceof String) {            
            return ff.literal(
                    parse.toEnum(layout, "line-cap", LineCap.class, LineCap.BUTT).name().toLowerCase());
        } else if (obj instanceof Number) {
            throw new UnsupportedOperationException("\"line-cap\": Number not supported");
        } else if (obj instanceof Boolean) {
            throw new UnsupportedOperationException("\"line-cap\": Boolean not supported");
        } else if (obj instanceof JSONObject) {
            throw new UnsupportedOperationException("\"line-cap\": Function not yet supported");
        } else if (obj instanceof JSONArray) {
            throw new MBFormatException("\"line-cap\": JSONArray not supported");
        } else {
            throw new IllegalArgumentException(
                    "json contents invalid: \"line-cap\" value limited to String or JSONObject but was "
                            + obj.getClass().getSimpleName());
        }

    }

