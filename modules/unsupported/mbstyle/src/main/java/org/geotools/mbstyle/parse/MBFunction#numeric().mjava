    /**
     * GeoTools {@link Expression} from json definition that evaluates to a numeric, used for
     * properties such as 'line-width' and 'opacity'.
     * <p>
     * This is the same as {@link #color()} except we can make some assumptions about the values
     * (converting "50%"  to 0.5).
     * </p>
     * <ul>
     * <li>{@link FunctionType#IDENTITY}: input is directly converted to a numeric output</li>
     * <li>{@link FunctionType#CATEGORICAL}: selects stop equal to input, and returns stop value as a number</li>
     * <li>{@link FunctionType#INTERVAL}: selects stop less than numeric input, and returns stop value as a number</li>
     * <li>{@link FunctionType#EXPONENTIAL}: interpolates a numeric output between two stops</li>  
     * </ul>
     * If type is unspecified exponential is used as a default.</li>
     * 
     * @return {@link Function} (or identity {@link Expression} for the provided json)
     */
    public Expression numeric() {
        Expression input = input();
        FunctionType type = getType();
        
        if( type == null || type == FunctionType.EXPONENTIAL){
            double base = parse.optional(Double.class, json, "base", 1.0 );
            if( base == 1.0){
                return numericGenerateInterpolation(input);
            }
            else {
                return numericGenerateExponential(input, base);
            }
        }
        if( type == null || type == FunctionType.CATEGORICAL){
            return generateRecode(input);
        }
        else if( type == FunctionType.INTERVAL){
            return generateCategorize(input);
        }
        else if( type == FunctionType.IDENTITY){
            return input;
        }
        throw new UnsupportedOperationException("Numeric unavailable for '"+type+"' function");
    }

