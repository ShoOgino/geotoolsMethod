    /**
     * Retrieve an object of the provided type in the JSONObject at this tag, throwing an {@link
     * MBFormatException} if no object of that type is found at that tag in the object.
     *
     * @param type The type of the object to retrieve.
     * @param json The JSONObject in which to retrieve the object.
     * @param tag The index in the JSONObject at which to retrieve the object.
     * @return The object of the required type in the JSONObject at the tag.
     */
    public <T> T require(Class<T> type, JSONObject json, String tag) {
        if (json == null) {
            throw new IllegalArgumentException("json required");
        }
        if (tag == null) {
            throw new IllegalArgumentException("tag required for json access");
        }
        if (json.containsKey(tag) && type.isInstance(json.get(tag))) {
            return type.cast(json.get(tag));
        } else {
            throw new MBFormatException(
                    context.getSimpleName()
                            + " requires \""
                            + tag
                            + "\" "
                            + type.getSimpleName()
                            + " field");
        }
    }

