    /**
     * Provides a literal array or object value.
     * Example:
     *   ["literal", [...] (JSON array literal)]: array<T, N>
     *   ["literal", {...} (JSON object literal)]: Object
     * @return
     */
    private Expression typesLiteral(){
        if (json.size() == 2) {
            if (json.get(1) instanceof JSONObject) {
                JSONObject object = (JSONObject) json.get(1);
                return ff.literal(object);
            } else if (json.get(1) instanceof JSONArray) {
                JSONArray arr = (JSONArray) json.get(1);
                return ff.literal(arr);
            } else {
                throw new MBFormatException("The \"literal\" expression requires a JSONObject or JSONArray but was " +
                        json.get(1).getClass());
            }
        }
        throw new MBFormatException("The \"literal\" expression requires exactly 1 argument");
    }

