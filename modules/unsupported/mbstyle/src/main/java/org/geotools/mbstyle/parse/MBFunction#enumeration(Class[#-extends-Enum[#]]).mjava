    //
    // Enumerations
    //
    /**
     * GeoTools {@link Expression} from json definition that evaluates to the provided Enum, used for
     * properties such as 'line-cap' and 'text-transform'.
     * <ul>
     * <li>{@link FunctionType#IDENTITY}: input is directly converted to an appropriate literal</li>
     * <li>{@link FunctionType#CATEGORICAL}: selects stop equal to input, and returns stop value as a literal</li>
     * <li>{@link FunctionType#INTERVAL}: selects stop less than numeric input, and returns stop value a literal</li>
     * </ul>
     * If type is unspecified internval is used as a default.</li>
     * 
     * @return {@link Function} (or identity {@link Expression} for the provided json)
     */
    public Expression enumeration( Class<? extends Enum<?>> enumeration){
        Expression input = input();
        FunctionType type = getTypeWithDefault(Enumeration.class);
        if (type == FunctionType.INTERVAL) {
            return enumGenerateCategorize(input,enumeration);
        }
        else if( type == FunctionType.CATEGORICAL){
            return enumGenerateRecode(input,enumeration);
        }
        else if( type == FunctionType.IDENTITY){
            return withFallback(enumGenerateIdentiy(input, enumeration));
        }
        throw new UnsupportedOperationException("Unable to support '"+type+"' function for "+enumeration.getSimpleName());
    }

