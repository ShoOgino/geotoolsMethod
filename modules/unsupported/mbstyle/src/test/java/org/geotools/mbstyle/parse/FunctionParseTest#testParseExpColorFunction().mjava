    /**
     * Verify that an exponential (color) zoom function can be parsed correctly.
     */
    @Test
    public void testParseExpColorFunction() throws IOException, ParseException {
        JSONObject layer = testLayersById.get("function2");
        Optional<JSONObject> o = traverse(layer, JSONObject.class, "paint", "line-color");
        JSONObject j = o.get();
        MBFunction fn = new MBFunction(j);
        
        // The function type is not specified in the JSON, so getType should return null.
        assertNull(fn.getType());
        // But the default fallback function type for color returns is 'exponential':
        assertEquals(MBFunction.FunctionType.EXPONENTIAL, fn.getTypeWithDefault(Color.class));
        
        assertEquals(EnumSet.of(MBFunction.FunctionCategory.ZOOM), fn.category());
        assertEquals(1.75, fn.getBase().doubleValue(), .00001);
        assertNull(fn.getProperty());
        assertNotNull(fn.getStops());
        assertEquals(3, fn.getStops().size());
    }

