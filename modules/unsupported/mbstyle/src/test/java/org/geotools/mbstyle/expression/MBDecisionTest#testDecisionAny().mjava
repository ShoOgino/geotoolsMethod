    @Test
    public void testDecisionAny() throws Exception {
        final JSONObject layer = testLayersById.get("decisionAny");
        final Optional<JSONObject> o = traverse(layer, JSONObject.class, "layout");
        final JSONObject j = o.get();
        // get the any-trueFalseFalse, which should evaluate to true
        assertTrue(getDecisionEvaluationAsBoolean(j, "any-trueFalseFalse"));
        // get the any-falseFalseTrue, which should evaluate to true
        assertTrue(getDecisionEvaluationAsBoolean(j, "any-falseFalseTrue"));
        // get the any-allFalse, which should evaluate to false
        assertFalse(getDecisionEvaluationAsBoolean(j, "any-allFalse"));
        // get the any-allTrue, which should evaluate to true
        assertTrue(getDecisionEvaluationAsBoolean(j, "any-allTrue"));
        // get the any-nullFalseFalse, which should evaluate to false
        assertFalse(getDecisionEvaluationAsBoolean(j, "any-nullFalseFalse"));
        // get the any-chainedFalseTrueFalse, which should evaluate to true
        assertTrue(getDecisionEvaluationAsBoolean(j, "any-chainedFalseTrueFalse"));
        // get the any-chainedAllFalse, which should evaluate to false
        assertFalse(getDecisionEvaluationAsBoolean(j, "any-chainedAllFalse"));
        // get the any-chainedAllTrue, which should evaluate to true
        assertTrue(getDecisionEvaluationAsBoolean(j, "any-chainedAllTrue"));
    }

