    /**
     * Verify that the "to-number" MBTypes expression can be parsed and evaluated correctly.
     */
    @Test
    public void testParseToColorExpression() {

        final JSONObject j = getObjectByLayerId("toColorExpression", "paint");

        Object rgb = getExpressionEvaluation(j, "rgb");
        assertEquals(new Color(111, 222, 121), rgb);

        Object rgba = getExpressionEvaluation(j, "rgba");
        assertEquals(new Color(111, 222, 121, 128), rgba);

        Object hex = getExpressionEvaluation(j, "hex");
        assertEquals(new Color(170, 255, 17), hex);

        Object threeHex = getExpressionEvaluation(j, "three-hex");
        assertEquals(new Color(170, 255, 17), threeHex);

        Object rgbArr = getExpressionEvaluation(j, "rgb-array");
        assertEquals(new Color(111, 222, 121), rgbArr);

        Object rgbaArr = getExpressionEvaluation(j, "rgba-array");
        assertEquals(new Color(111, 222, 121, 128), rgbaArr);

        Object nested = getExpressionEvaluation(j, "nest");
        assertEquals(new Color(111, 222, 121), nested);

        try {
            Object aTrue = getExpressionEvaluation(j, "true");
            fail("expected exception function \"mbToColor\" fails if argument can't be converted to a color");
        } catch (IllegalArgumentException e){
        }

        try {
            Object aFalse = getExpressionEvaluation(j, "false");
            fail("expected exception function \"mbToColor\" fails if argument can't be converted to a color");
        } catch (IllegalArgumentException e){
        }
    }

