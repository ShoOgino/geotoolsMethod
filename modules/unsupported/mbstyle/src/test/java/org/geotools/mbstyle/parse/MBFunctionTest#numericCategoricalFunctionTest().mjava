    /**
     * Test an {@link MBFunction} (type = categorical) that returns a numeric value.
     */
    @Test
    public void numericCategoricalFunctionTest() throws Exception {
        SimpleFeatureType SAMPLE = DataUtilities.createType("SAMPLE",
                "id:\"\",roadtype,location=4326");
        SimpleFeature feature = DataUtilities.createFeature(SAMPLE, "measure1=A|dirtroad|POINT(0,0)");
        
        String jsonStr = "{'property': 'roadtype', 'type': 'categorical', 'default': 1, 'stops': [['trail', 1], ['dirtroad', 2], ['road', 3], ['highway', 4]]}";
        MBFunction function = new MBFunction(object(jsonStr));
        assertTrue("Function category is \"property\"", EnumSet.of(MBFunction.FunctionCategory.PROPERTY).equals(function.category()));
        assertEquals("Function type is \"categorical\"", MBFunction.FunctionType.CATEGORICAL, function.getType());        
        

        Expression outputExpression = function.numeric();
        Number result = outputExpression.evaluate(feature, Number.class);
        
        assertEquals(2, result.intValue());     
    }

