    @Test
    public void booleanIntervalFunctionTest() throws Exception {
        String jsonStr = "{'property': 'temperature', 'default':'false', 'type': 'interval','stops': [[-1000, 'true'],[0, 'false'],[1000, 'true']]}";
        MBFunction function = new MBFunction(MapboxTestUtils.object(jsonStr));
        assertTrue("Function category is \"property\"", EnumSet.of(MBFunction.FunctionCategory.PROPERTY).equals(function.category()));
        assertEquals("Function type is \"interval\"", MBFunction.FunctionType.INTERVAL, function.getType());                

        Expression outputExpression = function.function(Boolean.class);
        
        // Test each interval
        SimpleFeatureType SAMPLE = DataUtilities.createType("SAMPLE",
                "id:\"\",temperature,location=4326");
        
        SimpleFeature feature = DataUtilities.createFeature(SAMPLE, "measure1=A|-500|POINT(0,0)");
        Boolean result = outputExpression.evaluate(feature, Boolean.class);        
        assertEquals(true, result);
        
        feature = DataUtilities.createFeature(SAMPLE, "measure1=A|0|POINT(0,0)");
        result = outputExpression.evaluate(feature, Boolean.class);        
        assertEquals(false, result);     
        
        feature = DataUtilities.createFeature(SAMPLE, "measure1=A|500|POINT(0,0)");
        result = outputExpression.evaluate(feature, Boolean.class);        
        assertEquals(false, result);    
        
        feature = DataUtilities.createFeature(SAMPLE, "measure1=A|1000|POINT(0,0)");
        result = outputExpression.evaluate(feature, Boolean.class);        
        assertEquals(true, result);  
        
        feature = DataUtilities.createFeature(SAMPLE, "measure1=A|9999|POINT(0,0)");
        result = outputExpression.evaluate(feature, Boolean.class);        
        assertEquals(true, result);  

        // Below lowest stop, the default should be returned.
        feature = DataUtilities.createFeature(SAMPLE, "measure1=A|-9999|POINT(0,0)");
        result = outputExpression.evaluate(feature, Boolean.class);
        assertEquals(false, result);
    }

