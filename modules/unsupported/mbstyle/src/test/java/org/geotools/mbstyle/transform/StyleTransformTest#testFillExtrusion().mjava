    /**
     * Test parsing and generating a MapBox fill extrusion
     */
    @Test
    public void testFillExtrusion() throws IOException, ParseException {
        JSONObject jsonObject = parseTestStyle("fillExtrusionTest.json");

        // Parse to MBStyle
        MBStyle mbStyle = new MBStyle(jsonObject);
        List<MBLayer> layers = mbStyle.layers("composite");

        assertEquals(2, layers.size());

        // Find the MBFillLayer and assert it contains the correct FeatureTypeStyle.
        assertTrue(layers.get(1) instanceof FillExtrusionMBLayer);
        FillExtrusionMBLayer mbFill = (FillExtrusionMBLayer) layers.get(1);
        FeatureTypeStyle fts = mbFill.transform(mbStyle);

        PolygonSymbolizer psym = SLD.polySymbolizer(fts);

        Expression expr =  psym.getFill().getColor();
        assertNotNull("fillColor set", expr);
        assertEquals( Color.decode("#FF595E"), expr.evaluate(null,Color.class) );
        assertEquals(Double.valueOf(.91),
                psym.getFill().getOpacity().evaluate(null, Double.class));


        assertNotNull("displacement not null", psym.getDisplacement());
        assertNotNull("displacementX not null",  psym.getDisplacement().getDisplacementX());
        assertNotNull("displacementY not null",  psym.getDisplacement().getDisplacementY());
        assertEquals(Integer.valueOf(0), psym.getDisplacement().getDisplacementX().evaluate(null, Integer.class));
        assertEquals(Integer.valueOf(30), psym.getDisplacement().getDisplacementY().evaluate(null, Integer.class));
    }

