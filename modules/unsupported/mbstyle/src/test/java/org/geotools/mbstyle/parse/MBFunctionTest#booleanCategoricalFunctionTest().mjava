    @Test
    public void booleanCategoricalFunctionTest() throws Exception {
        String jsonStr = "{'property': 'roadtype', 'type': 'categorical', 'default': 'false', 'stops': [['trail', 'true'], ['dirtroad', 'false'], ['road', 'true']]}";
        MBFunction function = new MBFunction(object(jsonStr));
        assertTrue("Function category is \"property\"",
                EnumSet.of(MBFunction.FunctionCategory.PROPERTY).equals(function.category()));
        assertEquals("Function type is \"categorical\"", MBFunction.FunctionType.CATEGORICAL,
                function.getType());

        Expression outputExpression = function.function(Boolean.class);

        SimpleFeatureType SAMPLE = DataUtilities.createType("SAMPLE",
                "id:\"\",roadtype,location=4326");

        // Test for each category
        SimpleFeature feature = DataUtilities.createFeature(SAMPLE, "measure1=A|trail|POINT(0,0)");
        Boolean result = outputExpression.evaluate(feature, Boolean.class);
        assertEquals(true, result);

        feature = DataUtilities.createFeature(SAMPLE, "measure1=A|dirtroad|POINT(0,0)");
        result = outputExpression.evaluate(feature, Boolean.class);
        assertEquals(false, result);

        feature = DataUtilities.createFeature(SAMPLE, "measure1=A|road|POINT(0,0)");
        result = outputExpression.evaluate(feature, Boolean.class);
        assertEquals(true, result);

        // feature = DataUtilities.createFeature(SAMPLE,Boolean"measure1=A|other|POINT(0,0)");
        // result = outputExpression.evaluate(feature, String.class);
        // assertEquals(false, result); // TODO default case.
    }

