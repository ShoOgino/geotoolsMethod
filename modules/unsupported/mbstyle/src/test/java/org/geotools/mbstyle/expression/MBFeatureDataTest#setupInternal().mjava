    @Override
    protected void setupInternal() throws Exception {
        // add some extra features as test structures
        final SimpleFeatureType lineStringType =
                DataUtilities.createType(
                        "mbfeaturedata.line",
                        "lineInt:int,anotherLineInt:int,lineDoubleField:double,lineGeom:LineString,lineName:String");
        final SimpleFeatureType polygonType =
                DataUtilities.createType(
                        "mbfeaturedata.polygon",
                        "polygonInt:int,anotherPolygonInt:int,polygonDouble:double,polygonGeom:Polygon,polygonName:String");
        final SimpleFeatureType multiLineStringType =
                DataUtilities.createType(
                        "mbfeaturedata.multiline",
                        "multiLineInt:int,anotherMultiLineInt:int,multiLineDoubleField:double,multiLineGeom:MultiLineString,multiLineName:String");
        final SimpleFeatureType multiPolygonType =
                DataUtilities.createType(
                        "mbfeaturedata.multipolygon",
                        "multiPolygonInt:int,anotherMultiPolygonInt:int,multiPolygonDouble:double,multiPolygonGeom:MultiPolygon,multiPolygonName:String");
        final SimpleFeatureType multiPointType =
                DataUtilities.createType(
                        "mbfeaturedata.multipoint",
                        "multiPointInt:int,anotherMultiPointInt:int,multiPointDoubleField:double,multiPointGeom:MultiPoint,multiPointName:String");
        // create the feature arrays
        lineStringFeatures = new SimpleFeature[intVals.length];
        polygonFeatures = new SimpleFeature[intVals.length];
        multiPointFeatures = new SimpleFeature[intVals.length];
        multiLineStringFeatures = new SimpleFeature[intVals.length];
        multiPolygonFeatures = new SimpleFeature[intVals.length];
        // build some features
        for (int i = 0; i < intVals.length; ++i) {
            // get the feature values
            final Integer anInt = Integer.valueOf(i);
            final Integer anotherInt = Integer.valueOf(intVals[i]);
            final Double aDouble = Double.valueOf(doubleVals[i]);
            final String aName = "name_" + intVals[i];
            // build the features
            final SimpleFeature multiPoint =
                    SimpleFeatureBuilder.build(
                            multiPointType,
                            new Object[] {anInt, anotherInt, aDouble, createMultiPoint(i), aName},
                            "mbmultipoint." + (i + 1));
            final SimpleFeature line =
                    SimpleFeatureBuilder.build(
                            lineStringType,
                            new Object[] {anInt, anotherInt, aDouble, createLineString(i), aName},
                            "mbline." + (i + 1));
            final SimpleFeature multiLine =
                    SimpleFeatureBuilder.build(
                            multiLineStringType,
                            new Object[] {
                                anInt, anotherInt, aDouble, createMultiLineString(i), aName
                            },
                            "mbmultiline." + (i + 1));
            final SimpleFeature polygon =
                    SimpleFeatureBuilder.build(
                            polygonType,
                            new Object[] {anInt, anotherInt, aDouble, createPolygon(i), aName},
                            "mbpolygon." + (i + 1));
            final SimpleFeature multiPolygon =
                    SimpleFeatureBuilder.build(
                            multiPolygonType,
                            new Object[] {anInt, anotherInt, aDouble, createMultiPolygon(i), aName},
                            "mbmultipolygon." + (i + 1));
            // add the features
            lineStringFeatures[i] = line;
            polygonFeatures[i] = polygon;
            multiPointFeatures[i] = multiPoint;
            multiLineStringFeatures[i] = multiLine;
            multiPolygonFeatures[i] = multiPolygon;
        }
    }

