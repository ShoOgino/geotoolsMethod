    /**
     * Test splitting an array function into an array of functions -- one for each dimension in the array. (Categorical function, with default).
     */
    @Test
    public void testArrayFunctionCategoricalWithDefault() throws Exception {
        JSONObject json = MapboxTestUtils.object("{'property':'character','type':'categorical', 'base':1.5, 'default': [-1,-2], 'stops':[ ['a',[0,5]], ['b',[2,10]] ]}");
        MBFunction function = new MBFunction(json);
                
        SimpleFeatureType SAMPLE = DataUtilities.createType("SAMPLE",
                "id:\"\",temperature:0.0,location=4326,color:java.awt.Color,character:String:");
        SimpleFeature featurea = DataUtilities.createFeature(SAMPLE, "measure1=A|0|POINT(0,0)|#FF0000|a");
        SimpleFeature featureb = DataUtilities.createFeature(SAMPLE, "measure1=A|100|POINT(0,0)|#FF0000|b");
        SimpleFeature featuredefault = DataUtilities.createFeature(SAMPLE, "measure1=A|100|POINT(0,0)|#FF0000|default");
        
        List<MBFunction> splitFunctions = function.splitArrayFunction();
        assertEquals(2, splitFunctions.size());
        
        MBFunction xFn = splitFunctions.get(0);
        MBFunction yFn = splitFunctions.get(1);
        
        assertEquals(0, xFn.numeric().evaluate(featurea, Integer.class).intValue());
        assertEquals(5, yFn.numeric().evaluate(featurea, Integer.class).intValue());
  
        assertEquals(2, xFn.numeric().evaluate(featureb, Integer.class).intValue());
        assertEquals(10, yFn.numeric().evaluate(featureb, Integer.class).intValue());     
        
        assertEquals(-1, xFn.numeric().evaluate(featuredefault, Integer.class).intValue());
        assertEquals(-2, yFn.numeric().evaluate(featuredefault, Integer.class).intValue()); 
    }

