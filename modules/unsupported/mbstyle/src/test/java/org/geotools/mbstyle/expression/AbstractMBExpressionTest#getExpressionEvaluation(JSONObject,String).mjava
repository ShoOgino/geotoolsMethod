    /**
     * Helper method to create an Expression object from a JSON text field and evaluate the Expression.
     *
     * @param json JSONObject to parse.
     * @param jsonTextField Name of the text field to retrieve.
     *
     * @return The Expression evaluation of the supplied tectField value.
     */
    protected Object getExpressionEvaluation(JSONObject json, String jsonTextField) {
        // get the Object from the supplied JSON
        final Object textFieldObj = json.get(jsonTextField);
        // assert the field is a JSONArray
        assertEquals(JSONArray.class, textFieldObj.getClass());
        // cast to a JSONArray
        final JSONArray arr = JSONArray.class.cast(textFieldObj);
        // create an Expression from the array
        final MBExpression mbExp = MBExpression.create(arr);
        // assert it to be of the MBExpression type this test handles
        assertEquals(getExpressionClassType(), mbExp.getClass());
        // transform the expression
        final Expression transformExpression = MBExpression.transformExpression(arr);
        // evaluate and return the result
        return transformExpression.evaluate(transformExpression);
    }

