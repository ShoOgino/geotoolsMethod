    public static <T> Matcher<Expression> evaluatesTo(Object object, Class<T> context, Matcher<? super T> resultMatcher) {
        return new BaseMatcher<Expression>() {
            
            @Override
            public boolean matches(Object item) {
                if(item instanceof Expression) {
                    return resultMatcher.matches(((Expression) item).evaluate(object, context));
                } else {
                    return false;
                }
            }
            
            @Override
            public void describeTo(Description description) {
                description
                    .appendText("expression evaluating ")
                    .appendValue(object)
                    .appendText(" to ")
                    .appendDescriptionOf(resultMatcher);
            }
            
            @Override
            public void describeMismatch(Object item, Description description) {
                if(item instanceof Expression) {
                    Object result = ((Expression) item).evaluate(object);
                    description
                        .appendValue(item)
                        .appendText(" evaluates to ")
                        .appendValue(result);
                } else {
                    description.appendText("was a ").appendValue(item.getClass().getName());
                }
            }
            
            
        };
    }

