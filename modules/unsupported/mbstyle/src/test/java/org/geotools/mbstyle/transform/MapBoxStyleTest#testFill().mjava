    @Test
    public void testFill() throws IOException, ParseException {
        assertTrue("hello world", true);
        
        InputStream is = this.getClass().getResourceAsStream("fillStyleTest.json");       
        String s = IOUtils.toString(is, "utf-8");
        
        JSONParser j = new JSONParser();
        JSONObject o = (JSONObject) j.parse(s);
        JSONArray array = (JSONArray) o.get("layers");        
        assertEquals(1, array.size());
        
        JSONObject fillLayer = (JSONObject) array.get(0);

        MBFillLayer mbFill = new MBFillLayer(fillLayer);
        FeatureTypeStyle fts = new MBStyleTransformer().transform(mbFill);
        
        
        assertEquals(1, fts.rules().size());
        for (Rule r : fts.rules()) {
            assertEquals(1, r.symbolizers().size());
            for (Symbolizer symbolizer : r.symbolizers()) {
                assertTrue(PolygonSymbolizer.class.isAssignableFrom(symbolizer.getClass()));
                PolygonSymbolizer psym = (PolygonSymbolizer) symbolizer;
                assertTrue("#ffff00".equalsIgnoreCase((String) psym.getFill().getColor().evaluate(null)));
                
                System.out.println("Fill Color: " + psym.getFill().getColor());
                System.out.println("Opacity: " + psym.getFill().getOpacity());                
            }
        }
        
    }

