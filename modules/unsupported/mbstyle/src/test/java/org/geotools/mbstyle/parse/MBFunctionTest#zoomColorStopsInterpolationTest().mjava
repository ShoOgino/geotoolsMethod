    /**
     * Tests that a MapBox linear zoom function (outputting a color) correctly interpolates color values
     * for zoom levels between stops.
     * 
     * @throws Exception
     */
    @Test
    public void zoomColorStopsInterpolationTest() throws Exception {
        SimpleFeatureType SAMPLE = DataUtilities.createType("SAMPLE",
                "id:\"\",temperature:0.0,location=4326");
        SimpleFeature feature = DataUtilities.createFeature(SAMPLE, "measure1=A|50.0|POINT(0,0)");
        
        EnvFunction.setGlobalValue("wms_scale_denominator", "69885282.993862");

        JSONObject json = object("{'type':'exponential', 'stops':[[0,'blue'],[6,'red'],[12, 'lime']]}");
        
        MBFunction function = new MBFunction(json);
        assertTrue("Is a zoom function", EnumSet.of(MBFunction.FunctionCategory.ZOOM).equals(function.category()));
        assertEquals(MBFunction.FunctionType.EXPONENTIAL, function.getType());
                
        Function fn = (Function) function.color();
        Expression zoomLevel = fn.getParameters().get(0);
        Number n = zoomLevel.evaluate(null, Number.class);   
        // This should be zoom level 3
        assertEquals(3.0, n.doubleValue(), .000001);        

        Color result = fn.evaluate(feature, Color.class);
        assertEquals(new Color(127, 0, 128), result);
        
        
        EnvFunction.setGlobalValue("wms_scale_denominator", "8735660.374233");
        n = zoomLevel.evaluate(null, Number.class);
        // This should be zoom level 6
        assertEquals(6.0, n.doubleValue(), .000001);                
        result = fn.evaluate(feature, Color.class);
        assertEquals(new Color(255, 0, 0), result);
        
        
        EnvFunction.setGlobalValue("wms_scale_denominator", "1091957.546779");
        n = zoomLevel.evaluate(null, Number.class);
        // This should be zoom level 9
        assertEquals(9.0, n.doubleValue(), .000001);                
        result = fn.evaluate(feature, Color.class);
        assertEquals(new Color(127, 128, 0), result);
        
        
        EnvFunction.setGlobalValue("wms_scale_denominator", "136494.693347");
        n = zoomLevel.evaluate(null, Number.class);
        // This should be zoom level 12
        assertEquals(12.0, n.doubleValue(), .000001);                
        result = fn.evaluate(feature, Color.class);
        assertEquals(new Color(0, 255, 0), result);        
    }

