    // ---- MAPBOX EXPRESSIONS BASE ---------------------------------------------------------
    /**
     * Verify that an expression can be parsed correctly from Layout, Paint, and Filter properties.
     */
    @Test
    public void testParseExpressions() throws IOException, ParseException {

        JSONObject layer = testLayersById.get("testExpressions");
        Optional<JSONObject> l = traverse(layer, JSONObject.class, "layout");
        JSONObject layout = l.get();
        Optional<JSONObject> p = traverse(layer, JSONObject.class, "paint");
        JSONObject paint = p.get();
        Optional<JSONArray> f = traverse(layer, JSONArray.class, "filter");
        JSONArray filter = f.get();

        // Testing parsing expression out of layer JSONObject
        assertEquals("TEST", parse.string(layout, "text-field", "fallback").toString());

        // Testing parsing expression out of filter JSONArray
        assertEquals("Point", parse.value(filter, 2).toString());

        // Testing parsing expression out of paint JSONObject
        assertEquals("red", parse.color(paint, "text-color", Color.RED).toString());


        // Testing exception thrown for unknown expression
        try {
            parse.string(layout, "text-size", "fallback");
            fail("expected format exception due to 'test' being an invalid MBExpression");
        }
        catch (MBFormatException expected){
        }

    }
    // ---- STRING EXPRESSIONS ---------------------------------------------------------

