    @Test
    public void comparisonFilters() throws ParseException {
        JSONParser parser = new JSONParser();
        JSONArray json = (JSONArray) parser.parse("[\"==\", \"key\", \"value\"]");
        
        MBFilter mbfilter = new MBFilter(json);
        
        // being really quick here, no need to check null / instanceof if we just cast
        PropertyIsEqualTo equal = (PropertyIsEqualTo) mbfilter.filter();
        assertEquals( "key", ((PropertyName)equal.getExpression1()).getPropertyName() );
        assertEquals( "value", ((Literal)equal.getExpression2()).getValue() );
        
        // okay that takes too long just check ECQL
        assertEquals("key = 'value'", ECQL.toCQL(equal));
        
        json = (JSONArray) parser.parse("[\"!=\", \"key\", \"value\"]");
        mbfilter = new MBFilter(json);
        Filter filter = mbfilter.filter();
        assertEquals("key <> 'value'", ECQL.toCQL(filter));

        json = (JSONArray) parser.parse("[\">\", \"key\", \"value\"]");
        mbfilter = new MBFilter(json);
        filter = mbfilter.filter();
        assertEquals("key > 'value'", ECQL.toCQL(filter));
        
        json = (JSONArray) parser.parse("[\"<\", \"key\", \"value\"]");
        mbfilter = new MBFilter(json);
        filter = mbfilter.filter();
        assertEquals("key < 'value'", ECQL.toCQL(filter));

        json = (JSONArray) parser.parse("[\">=\", \"key\", \"value\"]");
        mbfilter = new MBFilter(json);
        filter = mbfilter.filter();
        assertEquals("key >= 'value'", ECQL.toCQL(filter));
        
        json = (JSONArray) parser.parse("[\"<=\", \"key\", \"value\"]");
        mbfilter = new MBFilter(json);
        filter = mbfilter.filter();
        assertEquals("key <= 'value'", ECQL.toCQL(filter));
    }

