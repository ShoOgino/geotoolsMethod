    @Test
    public void comparisonFilters() throws ParseException {
        JSONArray json;
        MBFilter mbfilter;
        
        // being really quick here, no need to check null / instanceof if we just cast
        json = array("['==', 'key', 'value']");
        mbfilter = new MBFilter(json);
        PropertyIsEqualTo equal = (PropertyIsEqualTo) mbfilter.filter();
        assertEquals( "key", ((PropertyName)equal.getExpression1()).getPropertyName() );
        assertEquals( "value", ((Literal)equal.getExpression2()).getValue() );
        
        // okay that takes too long just check ECQL
        assertEquals("key = 'value'", ECQL.toCQL(equal));
        
        json = array("['!=', 'key', 'value']");
        mbfilter = new MBFilter(json);
        Filter filter = mbfilter.filter();
        assertEquals("key <> 'value'", ECQL.toCQL(filter));

        json = array("['>', 'key', 'value']");
        mbfilter = new MBFilter(json);
        filter = mbfilter.filter();
        assertEquals("key > 'value'", ECQL.toCQL(filter));
        
        json = array("['<', 'key', 'value']");
        mbfilter = new MBFilter(json);
        filter = mbfilter.filter();
        assertEquals("key < 'value'", ECQL.toCQL(filter));

        json = array("['>=', 'key', 'value']");
        mbfilter = new MBFilter(json);
        filter = mbfilter.filter();
        assertEquals("key >= 'value'", ECQL.toCQL(filter));
        
        json = array("['<=', 'key', 'value']");
        mbfilter = new MBFilter(json);
        filter = mbfilter.filter();
        assertEquals("key <= 'value'", ECQL.toCQL(filter));
    }

