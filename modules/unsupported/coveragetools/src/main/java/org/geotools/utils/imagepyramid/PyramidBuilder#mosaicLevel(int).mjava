	private double[] mosaicLevel(int level) {
	    
	        // prepare the configuration
	        final CatalogBuilderConfiguration configuration = new CatalogBuilderConfiguration();
                configuration.setRootMosaicDirectory(new File(outputLocation, String.valueOf(level)).getAbsolutePath());   
                configuration.setIndexName(name);
//	        configuration.setAbsolute(runner.absolute);
//	        configuration.setFootprintManagement(runner.footprintManagement);
//	        configuration.setCaching(runner.caching);
//	        configuration.setWildcard(runner.wildcardString);
//	        configuration.setLocationAttribute(runner.locationAttribute);
//	        
//
//	        final String directories = runner.indexingDirectoriesString;
//	        final String[] dirs_ = directories.split(",");
//	        final List<String> dirs = new ArrayList<String>();
//	        for (String dir : dirs_)
//	            dirs.add(dir);
//	        configuration.setIndexingDirectories(dirs);
                configuration.setIndexingDirectories(Arrays.asList(configuration.getRootMosaicDirectory()));

	        // prepare and run the index builder
	        final CatalogBuilder builder = new CatalogBuilder(configuration);
	        builder.run();	    
	        builder.addProcessingEventListener(new CatalogBuilder.ProcessingEventListener() {
                    
                    @Override
                    public void getNotification(
                            org.geotools.gce.imagemosaic.catalogbuilder.CatalogBuilder.ProcessingEvent event) {
                       slaveToolsListener.getNotification(
                               new ProcessingEvent(
                                       event.getSource(),
                                       event.getMessage(),
                                       event.getPercentage()));
                        
                    }
                    
                    @Override
                    public void exceptionOccurred(
                            org.geotools.gce.imagemosaic.catalogbuilder.CatalogBuilder.ExceptionEvent event) {
                        slaveToolsListener.exceptionOccurred(new ExceptionEvent(event.getSource(),event.getMessage(),event.getPercentage(),event.getException()));
                        
                    }
                });
		builder.removeAllProcessingEventListeners();
		return new double[] { builder.getMosaicConfiguration().getLevels()[0][0],builder.getMosaicConfiguration().getLevels()[0][1]};
	}

