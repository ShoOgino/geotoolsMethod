    @Test
    @Ignore
        public void filtered() throws Exception{
    //        JAI.getDefaultInstance().getTileCache().setMemoryCapacity(512*1024*1024);
    //        JAI.getDefaultInstance().getTileScheduler().setParallelism(10);
    //        JAI.getDefaultInstance().getTileScheduler().setPrefetchParallelism(10);
            
            final OverviewsEmbedder oe= new OverviewsEmbedder();
            oe.setDownsampleStep(2);
            oe.setNumSteps(5);
            oe.setScaleAlgorithm(OverviewsEmbedder.SubsampleAlgorithm.Filtered.toString());
            // use default 
            oe.setTileCache(JAI.getDefaultInstance().getTileCache());
            oe.setTileWidth(256);
            oe.setTileHeight(256);
            oe.setSourcePath(TestData.file(this, "DEM_.tiff").getAbsolutePath());
            final List<Throwable> exceptions = new ArrayList<Throwable>();
            oe.addProcessingEventListener(new ProcessingEventListener() {
                
                @Override
                public void getNotification(ProcessingEvent event) {
                    LOGGER.info(event.toString());
                    
                }
                
                @Override
                public void exceptionOccurred(ExceptionEvent event) {
                    LOGGER.warning(event.toString());
                    exceptions.add(event.getException());
                    event.getException().printStackTrace();
                }
                
            });
            oe.run();
            
            // fail if any exception was reported
            if(exceptions.size() > 0) {
                exceptions.get(0).printStackTrace();
                fail("Failed with " + exceptions.size() + " exceptions during overview embedding: ");
            }
            
            // now red it back and check that things are coherent
            final ImageReader reader= new TIFFImageReaderSpi().createReaderInstance();
            reader.setInput(ImageIO.createImageInputStream(org.geotools.test.TestData.file(this, "DEM_.tiff")));
            assertEquals(6, reader.getNumImages(true));
            reader.dispose();
        }

