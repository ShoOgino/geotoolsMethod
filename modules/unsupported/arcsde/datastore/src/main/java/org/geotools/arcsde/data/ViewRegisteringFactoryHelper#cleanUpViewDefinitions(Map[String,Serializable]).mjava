    /**
     * Looks up the set of "sqlView.N.typeName" and "sqlView.N.sqlQuery" keys in <code>params</code>
     * and returns a cleaned up map of typeName/query.
     *
     * @param params
     * @return
     */
    public static Map<String, Serializable> cleanUpViewDefinitions(
            Map<String, Serializable> params) {
        Map<String, Serializable> cleanedUpViews = new HashMap<String, Serializable>();
        for (Map.Entry<String, Serializable> entry : params.entrySet()) {
            String key = entry.getKey();
            if (!key.startsWith("sqlView.")) {
                continue;
            }
            if (!key.endsWith(".typeName")) {
                continue;
            }

            String typeName = (String) entry.getValue();

            String viewId = key.substring("sqlView.".length(), key.indexOf(".typeName"));

            String queryKey = "sqlView." + viewId + ".sqlQuery";

            String query = (String) params.get(queryKey);
            if (query == null) {
                throw new IllegalArgumentException(
                        "No SQL query definition provided for type name " + typeName);
            }
            cleanedUpViews.put(typeName, query);
        }
        return cleanedUpViews;
    }

