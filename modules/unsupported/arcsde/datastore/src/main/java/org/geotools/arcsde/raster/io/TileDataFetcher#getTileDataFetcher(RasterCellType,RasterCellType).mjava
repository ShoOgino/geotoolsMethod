    /**
     * Returns a {@code TileDataFetcher} that knows how to translate the raw pixel data from an
     * {@link SeRasterTile} with pixel type {@code nativeType} to a {@link TileInfo}'s internal
     * array with a pixel type determined by {@code targetCellType}.
     *
     * @param nativeType the arcsde raster's native pixel type
     * @param targetCellType the TileInfo's target pixel type
     */
    public static TileDataFetcher getTileDataFetcher(
            final RasterCellType nativeType, final RasterCellType targetCellType) {
        final TileDataFetcher tileDataFetcher;
        if (nativeType == targetCellType) {
            tileDataFetcher = tileDataSetters.get(nativeType);
        } else {
            if (nativeType == TYPE_1BIT && targetCellType == RasterCellType.TYPE_8BIT_U) {
                return new OneBitTileSetter();
            } else if (nativeType == TYPE_8BIT_U && targetCellType == TYPE_16BIT_U) {
                return new UcharToUshort();
            } else if (nativeType == TYPE_16BIT_S && targetCellType == TYPE_32BIT_S) {
                return new ShortToInt();
            } else if (nativeType == TYPE_8BIT_S && targetCellType == TYPE_16BIT_S) {
                return new ByteToShort();
            } else if (nativeType == TYPE_16BIT_U && targetCellType == TYPE_32BIT_U) {
                return new UShortToUInt();
            } else if (nativeType == TYPE_32BIT_U && targetCellType == TYPE_64BIT_REAL) {
                return new UIntToDouble();
            } else if (nativeType == TYPE_32BIT_S && targetCellType == TYPE_64BIT_REAL) {
                return new IntToDouble();
            }
            throw new IllegalArgumentException(
                    "No registered TileDataFetcher for pixel type "
                            + nativeType
                            + " and target type "
                            + targetCellType);
        }
        if (tileDataFetcher == null) {
            throw new IllegalArgumentException(
                    "No registered TileDataFetcher for pixel type " + nativeType);
        }
        return tileDataFetcher;
    }

