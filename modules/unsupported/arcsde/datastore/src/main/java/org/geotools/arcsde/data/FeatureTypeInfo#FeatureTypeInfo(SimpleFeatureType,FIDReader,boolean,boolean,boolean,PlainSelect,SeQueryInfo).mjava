    /** Private full constructor the public ones delegates to */
    private FeatureTypeInfo(
            final SimpleFeatureType featureType,
            final FIDReader fidStrategy,
            final boolean isWritable,
            final boolean isMultiVersion,
            final boolean isView,
            final PlainSelect definitionQuery,
            final SeQueryInfo sdeDefinitionQuery) {
        assert featureType != null;
        assert fidStrategy != null;

        if (definitionQuery != null || sdeDefinitionQuery != null) {
            if (definitionQuery == null || sdeDefinitionQuery == null) {
                throw new NullPointerException(
                        "both SeQueryInfo and PlainSelect are needed for an in-process view");
            }
            if (isWritable) {
                throw new IllegalArgumentException("In-process views can't be writable");
            }
        }

        this.featureType = featureType;
        this.fidStrategy = fidStrategy;
        this.versioned = isMultiVersion;
        this.isView = isView;
        this.definitionQuery = definitionQuery;
        this.sdeDefinitionQuery = sdeDefinitionQuery;

        if (isView && isWritable) {
            LOGGER.info(
                    "Asked to create a writable view feature type, "
                            + "which is not supported. Using it readonly");
            this.isWritable = false;
        } else {
            this.isWritable = isWritable;
        }
    }

