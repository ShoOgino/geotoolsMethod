    /**
     * Takes an ArcSDE's <code>SeShape</code> and builds a JTS Geometry. The geometry type
     * constructed depends on this <code>ArcSDEGeometryBuilder</code> specialized subclass
     *
     * @param shape the ESRI's ArcSDE java api shape upon wich to create the new JTS geometry
     * @param geometryFactory
     * @return the type of JTS Geometry this subclass instance is specialized for or an empty
     *     geometry of the same class if <code>shape.isNil()</code>
     * @throws SeException if it occurs fetching the coordinates array from <code>shape</code>
     * @throws DataSourceException if the <code>org.locationtech.jts.geom.GeometryFactory</code>
     *     this builder is backed by can't create the <code>org.locationtech.jts.geom.Geometry
     *     </code> with the <code>org.locationtech.jts.geom.Coordinate[]</code> provided by <code>
     *     newGeometry</code>
     */
    public Geometry construct(final SeShape shape, final GeometryFactory geometryFactory)
            throws SeException, DataSourceException {
        if (shape == null || shape.isNil()) {
            return getEmpty();
        }
        double[][][] allCoords = shape.getAllCoords();
        return newGeometry(allCoords, geometryFactory);
    }

