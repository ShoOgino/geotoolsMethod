        public void run() {
            LOGGER.finer("FeatureTypeCache background process running...");

            List<String> typeNames;
            try {
                typeNames = fetchRegistrations();
            } catch (Exception e) {
                LOGGER.log(Level.SEVERE, "Updating TypeNameCache failed.", e);
                return;
            }

            final Set<String> removed;
            { // just some logging..
                cacheLock.readLock().lock();
                Set<String> added = new TreeSet<>(typeNames);
                added.removeAll(availableLayerNames);
                if (!added.isEmpty()) {
                    LOGGER.finest("FeatureTypeCache: added the following layers: " + added);
                }
                removed = new TreeSet<>(availableLayerNames);
                removed.removeAll(typeNames);
                if (!removed.isEmpty()) {
                    LOGGER.finest(
                            "FeatureTypeCache: the following layers are no "
                                    + "longer available: "
                                    + removed);
                }
                cacheLock.readLock().unlock();
            }
            cacheLock.writeLock().lock();

            availableLayerNames.clear();
            availableLayerNames.addAll(typeNames);

            if (LOGGER.isLoggable(Level.FINEST)) {
                LOGGER.finest("FeatureTypeCache: updated server layer list: " + typeNames);
            }

            // discard any removed feature type
            for (String typeName : removed) {
                LOGGER.fine(
                        "Removing FeatureTypeInfo for layer "
                                + typeName
                                + " since it does no longer exist on the database");
                featureTypeInfos.remove(typeName);
            }

            LOGGER.finer("Finished updated type name cache");
            cacheLock.writeLock().unlock();
        }

