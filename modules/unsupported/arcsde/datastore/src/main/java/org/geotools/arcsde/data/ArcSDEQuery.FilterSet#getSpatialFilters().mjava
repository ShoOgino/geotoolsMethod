        /**
         * Lazily creates the array of <code>SeShapeFilter</code> objects that map the corresponding
         * geometry related filters included in the original <code>org.geotools.data.Query</code>
         * passed to the constructor.
         *
         * @return an array with the spatial filters to be applied to the SeQuery, or null if none.
         */
        public SeFilter[] getSpatialFilters() throws DataSourceException {
            if (this.sdeSpatialFilters == null) {
                GeometryEncoderSDE geometryEncoder =
                        new GeometryEncoderSDE(this.sdeLayer, featureType);

                try {
                    geometryEncoder.encode(getGeometryFilter());
                } catch (GeometryEncoderException e) {
                    throw new DataSourceException(
                            "Error parsing geometry filters: " + e.getMessage(), e);
                }

                this.sdeSpatialFilters = geometryEncoder.getSpatialFilters();
            }

            return this.sdeSpatialFilters;
        }

