    /**
     * Tests the creation of new feature types, with CRS and all.
     *
     * <p>This test also ensures that the arcsde datastore is able of creating schemas where the
     * geometry attribute is not the last one. This is important since to do so, the ArcSDE
     * datastore must break the usual way of creating schemas with the ArcSDE Java API, in which one
     * first creates the (non spatially enabled) "table" with all the non spatial attributes and
     * finally creates the "layer", adding the spatial attribute to the previously created table.
     * So, this test ensures the datastore correctly works arround this limitation.
     */
    @Test
    public void testCreateSchema()
            throws IOException, SchemaException, SeException, UnavailableConnectionException {
        final String typeName;
        {
            try (ISessionPool connectionPool = testData.getConnectionPool()) {
                ISession session = connectionPool.getSession();
                final String user;
                user = session.getUser();
                session.dispose();
                typeName = user + ".GT_TEST_CREATE";
            }
        }

        SimpleFeatureTypeBuilder b = new SimpleFeatureTypeBuilder();
        b.setName(typeName);

        b.add("FST_COL", String.class);
        b.add("SECOND_COL", String.class);
        b.add("GEOM", Point.class);
        b.add("FOURTH_COL", Integer.class);

        final SimpleFeatureType type = b.buildFeatureType();

        DataStore ds = testData.getDataStore();
        testData.deleteTable(typeName);

        Map<String, String> hints = new HashMap<>();
        hints.put("configuration.keyword", testData.getConfigKeyword());
        ((ArcSDEDataStore) ds).createSchema(type, hints);

        testData.deleteTable(typeName);
    }

