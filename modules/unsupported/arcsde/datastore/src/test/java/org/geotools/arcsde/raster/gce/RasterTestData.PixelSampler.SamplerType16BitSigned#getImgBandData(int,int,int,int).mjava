            @Override
            public byte[] getImgBandData(
                    int imgWidth, int imgHeight, final int bandN, final int numBands) {
                final int DATA_TYPE_DEPTH = 2;
                // luckily the byte-packed data format in MultiPixelPackedSampleModel is identical
                // to the one-bit-per-pixel format expected by ArcSDE.
                final int dataSize = DATA_TYPE_DEPTH * imgWidth * imgHeight;
                final ByteArrayOutputStream out = new ByteArrayOutputStream(dataSize);
                final DataOutputStream writer = new DataOutputStream(out);

                final int MIN = Short.MIN_VALUE;
                final int MAX = Short.MAX_VALUE;
                final float step = ((float) MAX - (float) MIN) / (float) imgWidth;
                int pixelValue = MIN;
                try {
                    for (int x = 0; x < imgWidth; x++) {
                        for (int y = 0; y < imgHeight; y++) {
                            writer.writeShort(pixelValue);
                        }
                        pixelValue += step;
                    }
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
                final byte[] imgBandData = out.toByteArray();
                return imgBandData;
            }

