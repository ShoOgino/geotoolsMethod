    /** Test that FID filters are correctly handled */
    @Test
    public void testFidFilters() throws Exception {
        final DataStore ds = testData.getDataStore();
        final String typeName = testData.getTempTableName();

        // grab some fids
        FeatureReader<SimpleFeatureType, SimpleFeature> reader =
                ds.getFeatureReader(new Query(typeName), Transaction.AUTO_COMMIT);
        List<FeatureId> fids = new ArrayList<>();

        while (reader.hasNext()) {
            fids.add(ff.featureId(reader.next().getID()));

            // skip one
            if (reader.hasNext()) {
                reader.next();
            }
        }

        reader.close();

        Id filter = ff.id(new HashSet<>(fids));

        SimpleFeatureSource source = ds.getFeatureSource(typeName);
        Query query = new Query(typeName, filter);
        SimpleFeatureCollection results = source.getFeatures(query);

        assertEquals(fids.size(), results.size());
        SimpleFeatureIterator iterator = results.features();
        try {
            while (iterator.hasNext()) {
                String fid = iterator.next().getID();
                assertTrue(
                        "a fid not included in query was returned: " + fid,
                        fids.contains(ff.featureId(fid)));
            }
        } finally {
            iterator.close();
        }
    }

