    /**
     * Tests that all the features that match a filter based on attribute only filters (aka non
     * spatial filters), are deleted correctly. This test assumes that there are no duplicate values
     * in the test data.
     */
    @Test
    public void testDeleteByAttOnlyFilter() throws Exception {
        testData.insertTestData();

        final DataStore ds = testData.getDataStore();
        final String typeName = testData.getTempTableName();

        // get 2 features and build an OR'ed PropertyIsEqualTo filter
        Filter or = CQL.toFilter("INT32_COL = 1 OR INT32_COL = 2");

        try (FeatureWriter<SimpleFeatureType, SimpleFeature> writer =
                ds.getFeatureWriter(typeName, or, Transaction.AUTO_COMMIT)) {
            assertTrue(writer.hasNext());

            SimpleFeature feature = writer.next();
            assertEquals(Integer.valueOf(1), feature.getAttribute("INT32_COL"));
            writer.remove();

            feature = writer.next();
            assertEquals(Integer.valueOf(2), feature.getAttribute("INT32_COL"));
            writer.remove();

            assertFalse(writer.hasNext());
        }

        // was it really removed?
        try (FeatureReader<SimpleFeatureType, SimpleFeature> read =
                ds.getFeatureReader(new Query(typeName, or), Transaction.AUTO_COMMIT)) {
            assertFalse(read.hasNext());
        }
    }

