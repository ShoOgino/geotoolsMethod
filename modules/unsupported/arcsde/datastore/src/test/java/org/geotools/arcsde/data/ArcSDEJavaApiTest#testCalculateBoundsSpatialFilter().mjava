    @Test
    public void testCalculateBoundsSpatialFilter() throws Exception {
        final String typeName = testData.getTempTableName();

        // String where = null;
        String[] cols = {"SHAPE"};
        final SeFilter[] spatFilters;
        try {
            SeExtent extent = new SeExtent(179, -1, 180, 0);
            SeLayer layer = session.getLayer(typeName);
            SeShape filterShape = new SeShape(layer.getCoordRef());
            filterShape.generateRectangle(extent);

            SeShapeFilter bboxFilter =
                    new SeShapeFilter(
                            typeName,
                            layer.getSpatialColumn(),
                            filterShape,
                            SeFilter.METHOD_ENVP,
                            true);
            spatFilters = new SeFilter[] {bboxFilter};
        } catch (SeException eek) {
            throw new ArcSdeException(eek);
        }
        SeSqlConstruct sqlCons = new SeSqlConstruct(typeName);
        // sqlCons.setWhere(where);

        final SeQueryInfo seQueryInfo = new SeQueryInfo();
        seQueryInfo.setColumns(cols);
        seQueryInfo.setConstruct(sqlCons);

        SeExtent extent =
                session.issue(
                        new Command<SeExtent>() {

                            @Override
                            public SeExtent execute(ISession session, SeConnection connection)
                                    throws SeException, IOException {
                                SeQuery spatialQuery = new SeQuery(connection);
                                spatialQuery.setSpatialConstraints(
                                        SeQuery.SE_SPATIAL_FIRST, false, spatFilters);

                                SeExtent extent = spatialQuery.calculateLayerExtent(seQueryInfo);
                                return extent;
                            }
                        });

        // just checking the extent were returned, which is something as I get
        // lots of
        // exceptions with trial and error approaches. checking the coordinate
        // results seems
        // hard as the test data or layer or crs is screwing things up and
        // getting somehing like
        // 9.223E18. I guess the may be a problem with the test layer accepting
        // any type of
        // geometry or the CRS definition used in TestData, not sure
        assertNotNull(extent);
    }

