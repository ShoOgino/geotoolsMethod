    /**
     * Release resources and flush the header information.
     * 
     * @throws IOException DOCUMENT ME!
     */
    public void close() throws IOException {
        if (featureReader == null) {
            throw new IOException("Writer closed");
        }

        // make sure to write the last feature...
        if (currentFeature != null) {
            write();
        }
        // make sure we also write whatever feature the reader might still have around
        if(featureReader.nextFeature != null) {
            currentFeature = featureReader.nextFeature ;
            write();
        }

        // if the attribute reader is here, that means we may have some
        // additional tail-end file flushing to do if the Writer was closed
        // before the end of the file
        if (featureReader != null) {
            shapeType = featureReader.shp.getHeader().getShapeType();
            handler = shapeType.getShapeHandler(gf);

            // handle the case where zero records have been written, but the
            // stream is closed and the headers are not there
            if (records == 0) {
                shpWriter.writeHeaders(bounds, shapeType, 0, 0);
            }

            // copy array for bounds
            double[] env = new double[4];

            while (featureReader.filesHaveMore()) {
                // transfer bytes from shapefile
                shapefileLength += featureReader.shp.transferTo(shpWriter, ++records, env);

                // bounds update
                bounds.expandToInclude(env[0], env[1]);
                bounds.expandToInclude(env[2], env[3]);

                // transfer dbf bytes
                featureReader.dbf.transferTo(dbfWriter);
            }
        }

        doClose();
        clean();
    }

