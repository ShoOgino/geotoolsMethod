    @Override
    public boolean hasNext() throws IOException {
        while (nextFeature == null && filesHaveMore()) {
            Record record = shp.nextRecord();

            // read the geometry, so that we can decide if this row is to be skipped or not
            Envelope envelope = record.envelope();
            boolean skip = false;
            Geometry geometry;
            // ... if geometry is out of the target bbox, skip both geom and row
            if (targetBBox != null && !targetBBox.isNull() && !targetBBox.intersects(envelope)) {
                geometry = null;
                skip = true;
                // ... if the geometry is awfully small avoid reading it (unless it's a point)
            } else if (simplificationDistance > 0 && envelope.getWidth() < simplificationDistance
                    && envelope.getHeight() < simplificationDistance) {
                try {
                    if (screenMap != null && screenMap.checkAndSet(envelope)) {
                        geometry = null;
                        skip = true;
                    } else {
                        // if we are using the screenmap better provide a slightly modified
                        // version of the geometry bounds or we'll end up with many holes
                        // in the rendering
                        geometry = (Geometry) record.getSimplifiedShape(screenMap);
                    }
                } catch (Exception e) {
                    geometry = (Geometry) record.getSimplifiedShape();
                }
                // ... otherwise business as usual
            } else {
                geometry = (Geometry) record.shape();
            }

            if (!skip) {
                // also grab the dbf row
                Row row;
                if (dbf != null) {
                    row = dbf.readRow();
                } else {
                    row = null;
                }

                nextFeature = buildFeature(record.number, geometry, row);
            } else {
                if (dbf != null) {
                    dbf.skip();
                }
            }
        }

        return nextFeature != null;
    }

