    public S3GeoTiffFormat() {
        writeParameters = null;
        mInfo = new HashMap<String, String>();
        mInfo.put("name", "S3GeoTiff");
        mInfo.put("description", "Tagged Image File Format with Geographic information hosted on S3");
        mInfo.put("vendor", "Boundless Geo");
        mInfo.put("version", "1.0");

        // reading parameters
        readParameters = new ParameterGroup(
                new DefaultParameterDescriptorGroup(
                        mInfo,
                        new GeneralParameterDescriptor[]{
                                READ_GRIDGEOMETRY2D,
                                INPUT_TRANSPARENT_COLOR,
                                SUGGESTED_TILE_SIZE,
                                AWS_REGION}));

        // writing parameters
        writeParameters = new ParameterGroup(
                new DefaultParameterDescriptorGroup(
                        mInfo,
                        new GeneralParameterDescriptor[]{
                                RETAIN_AXES_ORDER,
                                AbstractGridFormat.GEOTOOLS_WRITE_PARAMS,
                                AbstractGridFormat.PROGRESS_LISTENER}));
        try {
            if (prop == null) {
                prop = new Properties();
                String property = System.getProperty(S3Connector.S3_GEOTIFF_CONFIG_PATH);
                if (property != null) {
                    InputStream resourceAsStream = new FileInputStream(property);
                    prop.load(resourceAsStream);
                } else {
                    LOGGER.severe("Properties are missing! The system property 's3.properties.location' should be set "
                            + "and contain the path to the s3.properties file.");
                }
            }
        } catch (IOException e) {
            LOGGER.severe(e.getMessage());
        }
    }

