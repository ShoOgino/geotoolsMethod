    /**
     * Gets a DB2-specific feature source.
     *
     * @param typeName
     *
     * @return a DB2Feature Source, Store or Locking
     *
     * @throws IOException if the feature source could not be created.
     *
     * @see org.geotools.data.DataStore#getFeatureSource(java.lang.String)
     */
    public SimpleFeatureSource getFeatureSource(String typeName)
        throws IOException {
        if (!this.typeHandler.getFIDMapper(typeName).isVolatile()
                || this.allowWriteOnVolatileFIDs) {
            if (getLockingManager() != null) {
                // Use default JDBCFeatureLocking that delegates all locking
                // the getLockingManager
                //
                return new DB2FeatureLocking(this, getSchema(typeName));
            } else {
                // subclass should provide a FeatureLocking implementation
                // but for now we will simply forgo all locking
                return new DB2FeatureStore(this, getSchema(typeName));
            }
        } else {
            return new DB2FeatureSource(this, getSchema(typeName));
        }
    }

