	    protected Object visitBinarySpatialOperator(BinarySpatialOperator filter, Object extraData, String db2Predicate) {
	        LOGGER.finer("Generating GeometryFilter WHERE clause for " + filter);

	        DefaultExpression left = (DefaultExpression) filter.getExpression1();
	        DefaultExpression right = (DefaultExpression) filter.getExpression2();

	        // neither left nor right expression can be null
	        if ((null == left) || (null == right)) {
	            String msg = "Left or right expression is null - " + filter;
	            LOGGER.warning(msg);
	            throw new RuntimeException(msg);
	        }
try {
            this.out.write("db2gse." + db2Predicate + "(");
            left.accept(this, extraData);
            this.out.write(", ");
            right.accept(this, Geometry.class);
            this.out.write(") = 1");

            addSelectivity();  // add selectivity clause if needed
	    } catch (IOException e) {
	        throw new RuntimeException(e);
	    }

    LOGGER.fine(this.out.toString());
	    	return extraData;
	    }	

