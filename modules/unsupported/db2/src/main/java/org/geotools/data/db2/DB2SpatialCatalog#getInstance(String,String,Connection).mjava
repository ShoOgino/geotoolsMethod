    /**
     * Get an instance of the DB2SpatialCatalog for the specified datastore.
     * 
     * <p>
     * If it already exists, just return the current catalog for this database
     * identified by the database connection URL and table schema.
     * </p>
     * 
     * <p>
     * If it doesn't already exist and the connection parameter is null, return
     * null.
     * </p>
     * 
     * <p>
     * If not, read the DB2 Spatial Extender catalog tables and create an
     * in-memory representation for efficient access.
     * </p>
     *
     * @param dbURL the database URL
     * @param tableSchema the table schema name
     * @param conn an active database connection or null
     *
     * @return a DB2SpatialCatalog.
     *
     * @throws SQLException if there was a failure to create a catalog.
     */
    public static DB2SpatialCatalog getInstance(String dbURL,
        String tableSchema, Connection conn) throws SQLException {
        DB2SpatialCatalog catalog = (DB2SpatialCatalog) catalogs.get(dbURL
                + tableSchema);

        // Try to create and populate a new catalog if it wasn't found and we have a database connection.			
        if ((catalog == null) && (conn != null)) {
            catalog = new DB2SpatialCatalog(dbURL, tableSchema);
            catalog.loadCatalog(conn, tableSchema);
            catalogs.put(dbURL + tableSchema, catalog);
        }

        return catalog;
    }

