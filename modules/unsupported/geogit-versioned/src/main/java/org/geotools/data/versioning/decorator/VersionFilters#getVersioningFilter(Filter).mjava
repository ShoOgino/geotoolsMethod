    public static final Id getVersioningFilter(Filter filter) {

        if (filter == null || Filter.INCLUDE.equals(filter)
                || Filter.EXCLUDE.equals(filter)) {
            return null;
        }

        final FilterVisitor ridFinder = new AbstractFinderFilterVisitor() {
            @Override
            public Object visit(final Id filter, final Object data) {
                Set<ResourceId> resourceIds = new HashSet<ResourceId>();
                for (Identifier id : filter.getIdentifiers()) {
                    if (id instanceof ResourceId) {
                        // does it contain any actual versioning predicate?
                        ResourceId rid = (ResourceId) id;
                        if (rid.getFeatureVersion() != null
                                || rid.getEndTime() != null
                                || rid.getStartTime() != null
                                || rid.getVersion() != null) {
                            // yes, there's something to query in the version
                            // history
                            resourceIds.add((ResourceId) id);
                        }
                    } else if (id instanceof FeatureId) {
                        FeatureId fid = (FeatureId) id;
                        int idx = fid.getID().indexOf(
                                FeatureId.VERSION_SEPARATOR);
                        if (idx > 0) {
                            String featureId = fid.getID().substring(0, idx);
                            String versionId = fid.getID().substring(idx + 1);
                            resourceIds.add(new ResourceIdImpl(featureId,
                                    versionId));
                        }
                    }
                }
                if (resourceIds.size() > 0) {
                    found = true;
                    return CommonFactoryFinder.getFilterFactory2(null).id(
                            resourceIds);
                }
                return null;
            }
        };

        Object found = filter.accept(ridFinder, null);
        if (found instanceof Id) {
            return (Id) found;
        }

        return null;
    }

