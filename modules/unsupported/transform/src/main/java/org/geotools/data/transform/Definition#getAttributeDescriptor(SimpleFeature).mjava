    /**
     * Computes the output attribute descriptor for this {@link Definition} given a sample feature
     * of the original feature type. The code will first attempt a static analysis on the original
     * feature type, if that fails it will try to evaluate the expression on the sample feature.
     * 
     * @param originalFeature
     * @return
     */
    public AttributeDescriptor getAttributeDescriptor(SimpleFeature originalFeature) {
        AttributeTypeBuilder ab = new AttributeTypeBuilder();
        SimpleFeatureType original = originalFeature.getFeatureType();
        ExpressionTypeEvaluator typeEvaluator = new ExpressionTypeEvaluator(original);

        if (binding != null) {

            CoordinateReferenceSystem computedCRS = crs;
            if (Geometry.class.isAssignableFrom(binding) && computedCRS == null) {
                computedCRS = evaluateCRS(originalFeature);
            }

            ab.setBinding(binding);
            ab.setName(name);
            if (computedCRS != null) {
                ab.setCRS(computedCRS);
            }

            return ab.buildDescriptor(name);
        } else {
            // in case no evaluation succeeds
            Class computedBinding = Object.class;

            // see if we are just passing a property trough
            if (expression instanceof PropertyName) {
                PropertyName pn = (PropertyName) expression;
                AttributeDescriptor descriptor = original.getDescriptor(pn.getPropertyName());

                if (descriptor == null) {
                    throw new IllegalArgumentException(
                            "Original feature type does not have a property named " + name);
                } else {
                    ab.init(descriptor);
                    ab.setName(name);
                    return ab.buildDescriptor(name);
                }
            } else {
                // try static analysis
                computedBinding = (Class) expression.accept(typeEvaluator, null);

                if (computedBinding == null) {
                    // all right, let's try the sample feature then
                    Object result = expression.evaluate(originalFeature);
                    if (result != null) {
                        computedBinding = result.getClass();
                    }
                }

                CoordinateReferenceSystem computedCRS = crs;
                if (Geometry.class.isAssignableFrom(computedBinding) && computedCRS == null) {
                    computedCRS = evaluateCRS(originalFeature);
                }

                ab.setBinding(computedBinding);
                ab.setName(name);
                if (computedCRS != null) {
                    ab.setCRS(computedCRS);
                }

                return ab.buildDescriptor(name);
            }
        }
    }

