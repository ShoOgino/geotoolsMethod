    /**
     * Draws shapes on the map.
     * 
     * @param visibleRect the rectangle in teh screen space.
     * @param areaOfInterest the area of interest in world coordinates.
     */
    private void drawShapes( Rectangle visibleRect, ReferencedEnvelope areaOfInterest, boolean boundsChanged ) {
        Display display = Display.getDefault();

        /*
         * create an image with transparent color (this can be done better?)
         */
        Color white = display.getSystemColor(SWT.COLOR_WHITE);
        PaletteData palette = new PaletteData(new RGB[]{white.getRGB()});
        final ImageData sourceData = new ImageData(visibleRect.width, visibleRect.height, 1, palette);
        sourceData.transparentPixel = 0;

        // create the image to draw on
        Image img = new Image(display, sourceData);
        GC gc = new GC(img);
        gc.setAntialias(SWT.ON);

        // example lat/long coordinates to draw
        double[] worldCoords;
        if (odd) {
            worldCoords = new double[]{10.0, 40.0, 11.2, 43.3, 11.3, 45.2, 11.4, 46.5};
        } else {
            worldCoords = new double[]{11.0, 41.0, 12.2, 44.3, 11.3, 45.2, 11.4, 46.5};
        }
        odd = !odd;

        // get the world to screen transform
        double[] screenCoords = new double[8];
        AffineTransform worldToScreenTransform = getMapPane().getWorldToScreenTransform();
        // do the transform
        worldToScreenTransform.transform(worldCoords, 0, screenCoords, 0, worldCoords.length / 2);

        // draw lines
        gc.setForeground(display.getSystemColor(SWT.COLOR_MAGENTA));
        gc.setLineWidth(2);
        gc.drawLine((int) screenCoords[0], (int) screenCoords[1], (int) screenCoords[2], (int) screenCoords[3]);
        gc.drawLine((int) screenCoords[2], (int) screenCoords[3], (int) screenCoords[4], (int) screenCoords[5]);

        // draw dots
        int size = 10;
        gc.setBackground(display.getSystemColor(SWT.COLOR_RED));
        gc.fillOval((int) screenCoords[0] - size / 2, (int) screenCoords[1] - size / 2, size, size);
        gc.fillOval((int) screenCoords[2] - size / 2, (int) screenCoords[3] - size / 2, size, size);
        gc.fillOval((int) screenCoords[4] - size / 2, (int) screenCoords[5] - size / 2, size, size);
        gc.setForeground(display.getSystemColor(SWT.COLOR_BLACK));
        gc.drawOval((int) screenCoords[0] - size / 2, (int) screenCoords[1] - size / 2, size, size);
        gc.drawOval((int) screenCoords[2] - size / 2, (int) screenCoords[3] - size / 2, size, size);
        gc.drawOval((int) screenCoords[4] - size / 2, (int) screenCoords[5] - size / 2, size, size);

        gc.setAntialias(SWT.OFF);
        gc.dispose();

        // overlay the image
        getMapPane().setOverlay(img, areaOfInterest, false, boundsChanged);
    }

