    /**
     * Handle a ListDataEvent signallying a drag-reordering of the map layers.
     * The event is published by the list model after the layers have been
     * reordered there.
     *
     * @param ev the event
     */
    private void moveLayer( int delta ) {
        List<MapLayer> layersList = mapLayerTableViewer.getLayersList();
        MapLayer selectedMapLayer = mapLayerTableViewer.getSelectedMapLayer();
        MapContext mapContext = pane.getMapContext();
        

        int contextIndex = mapContext.indexOf(selectedMapLayer);

        int viewerIndex = layersList.indexOf(selectedMapLayer);
        int newViewerIndex = viewerIndex + delta;
        if (newViewerIndex < 0 || newViewerIndex > layersList.size() - 1) {
            return;
        }

        /*
        * MapLayerTable stores layers in the reverse order to
        * DefaultMapContext (see comment in javadocs for this class)
        */
        int newContextIndex = contextIndex - delta;
        if (newContextIndex < 0 || newContextIndex > mapContext.getLayerCount() - 1) {
            return;
        }

        if (contextIndex != newContextIndex) {
            mapContext.moveLayer(contextIndex, newContextIndex);
            pane.redraw();
            Collections.swap(layersList, viewerIndex, newViewerIndex);
            mapLayerTableViewer.refresh();
        }

    }

