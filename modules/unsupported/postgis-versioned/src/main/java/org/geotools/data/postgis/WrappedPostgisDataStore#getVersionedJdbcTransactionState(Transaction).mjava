    /**
     * Returns the versioned jdbc transaction state, eventually
     * 
     * @param transaction
     * @return
     * @throws IOException
     * @throws DataSourceException
     */
    protected VersionedJdbcTransactionState getVersionedJdbcTransactionState(Transaction transaction)
            throws IOException, DataSourceException {
        synchronized (transaction) {
            VersionedJdbcTransactionState state;
            state = (VersionedJdbcTransactionState) transaction.getState(this);

            if (state == null) {
                try {
                    Connection conn = createConnection();
                    conn.setAutoCommit(requireAutoCommit());
                    if (getTransactionIsolation() != Connection.TRANSACTION_NONE) {
                        // for us, NONE means use the default, which is
                        // usually READ_COMMITTED
                        conn.setTransactionIsolation(getTransactionIsolation());
                    }
                    state = new VersionedJdbcTransactionState(conn, this);
                    transaction.putState(this, state);
                } catch (SQLException eep) {
                    throw new DataSourceException("Connection failed:" + eep, eep);
                }
            }
            return state;
        }
    }

