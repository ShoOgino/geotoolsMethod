    /**
     * Returns true if the specified column is auto-increment. This method is
     * left protected so that specific datastore implementations can put their
     * own logic, should the default one be ineffective or have bad
     * performance.  NOTE: the postgis subclass will call this with the
     * columnname and table name pre-double-quoted! Other DB may have to do
     * the same - please check your DB's documentation.
     *
     * @param catalog
     * @param schema
     * @param tableName
     * @param conn
     * @param tableInfo
     * @param columnName
     * @param dataType
     *
     *
     * @throws SQLException
     */
    protected boolean isAutoIncrement(String catalog, String schema,
        String tableName, Connection conn, ResultSet tableInfo,
        String columnName, int dataType) throws SQLException {
        // if it's not an integer type it can't be an auto increment type
        if (!isIntegralType(dataType)) {
            return false;
        }

        // ok, it's an integer. To know if it's an auto-increment let's have a look at resultset metadata
        // and try to force it to get just a single row for exploring the metadata
        boolean autoIncrement = false;
        Statement statement = null;
        ResultSet rs = null;

        try {
            statement = conn.createStatement();
            statement.setFetchSize(1);
            String query = "SELECT " + columnName + " FROM ";
            if (schema != null) {
                query = query + schema + "."; //the schema will default to public if not specified
            }
            query = query + tableName + " WHERE 0=1"; //DJB: the "where 0=1" will optimize if you have a lot of dead tuples 
            rs = statement.executeQuery(query);

            // if the WHERE 0=1 give any data store problems, just remove it 
            // and put a comment here as to why it caused problems.
            java.sql.ResultSetMetaData rsInfo = rs.getMetaData();
            autoIncrement = rsInfo.isAutoIncrement(1);
        } finally {
            JDBCUtils.close(statement);
            JDBCUtils.close(rs);
        }

        return autoIncrement;
    }

