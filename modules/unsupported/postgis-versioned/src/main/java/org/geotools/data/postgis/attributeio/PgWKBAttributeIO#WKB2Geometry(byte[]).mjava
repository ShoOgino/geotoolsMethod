    /**
     * This method will convert a String of hex characters that represent  the
     * hexadecimal form of a Geometry in Well Known Binary representation to a
     * JTS  Geometry object.
     *
     * @param wkb a String of hex characters where each character  represents a
     *        hex value. In particular, each character is a value of 0-9, A, B
     *        ,C, D, E, or F.
     *
     * @return a JTS Geometry object that is equivalent to the WTB
     *         representation passed in by param wkb
     *
     * @throws IOException if more than one geometry object was found in  the
     *         WTB representation, or if the parser could not parse the WKB
     *         representation.
     */
    private Geometry WKB2Geometry(byte[] wkbBytes)
        throws IOException {
        // convert the byte[] to a JTS Geometry object

    	if (wkbBytes == null)  //DJB: null value from database --> null geometry (the same behavior as WKT).  NOTE: sending back a GEOMETRYCOLLECTION(EMPTY) is also a possibility, but this is not the same as NULL
    		return null;
    	try {
    	    inStream.setBytes(wkbBytes);
    		return wkbr.read(inStream);
    	} catch (Exception e) {
    		throw new DataSourceException("An exception occurred while parsing WKB data", e);
    	}

//        JTSFactory factory = new JTSFactory();
//        WKBParser parser = new WKBParser(factory);
//        try {
//            parser.parseData(wkbBytes, 42102);
//        } catch (Exception e) {
//            throw new DataSourceException("An exception occurred while parsing WKB data", e);
//        }

//        ArrayList geoms = factory.getGeometries();
//
//        if (geoms.size() > 0) {
//            return (Geometry) geoms.get(0);
//        } else if (geoms.size() > 1) {
//            throw new IOException(
//                "Found more than one Geometry in WKB representation ");
//        } else {
//            throw new IOException(
//                "Could not parse WKB representations -  found no Geometries ");
//        }
    }

