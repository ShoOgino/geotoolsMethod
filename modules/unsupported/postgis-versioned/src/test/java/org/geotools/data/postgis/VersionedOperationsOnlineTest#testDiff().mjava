    public void testDiff() throws IOException, IllegalAttributeException {
        VersionedPostgisDataStore ds = getDataStore();
        buildRiverHistory();
        VersionedPostgisFeatureStore fs = (VersionedPostgisFeatureStore) ds
                .getFeatureSource("river");

        // forward, deletion changeset
        FeatureDiffReader fdr = fs.getDifferences("4", "5", Filter.INCLUDE, null);
        assertEquals(fs.getSchema(), fdr.getSchema());
        assertTrue(fdr.hasNext());
        FeatureDiff diff = fdr.next();
        assertEquals("river.rv2", diff.getID());
        assertEquals(FeatureDiff.DELETED, diff.getState());
        assertFalse(fdr.hasNext());
        fdr.close();

        // same changeset, but backwards
        fdr = fs.getDifferences("5", "4", Filter.INCLUDE, null);
        assertEquals(fs.getSchema(), fdr.getSchema());
        assertTrue(fdr.hasNext());
        diff = fdr.next();
        assertEquals("river.rv2", diff.getID());
        assertEquals(FeatureDiff.INSERTED, diff.getState());
        assertEquals("rv2 v3", diff.getFeature().getAttribute("river"));
        assertEquals(new Double(3.0), diff.getFeature().getAttribute("flow"));
        // ... can't compare directly, they have different geometry factories
        // (afaik)
        assertTrue(DataUtilities.attributesEqual(lines(new int[][] { { 200, 200, 120, 120 } }),
                diff.getFeature().getDefaultGeometry()));
        assertFalse(fdr.hasNext());
        fdr.close();

        // forward diff, two modifications on changeset 1-2, and check reader reset while
        // you're at it
        fdr = fs.getDifferences("1", "2", Filter.INCLUDE, null);
        assertEquals(fs.getSchema(), fdr.getSchema());
        Set ids = new HashSet(Arrays.asList(new String[] { "river.rv1", "river.rv2" }));
        assertTrue(fdr.hasNext());
        while (fdr.hasNext()) {
            diff = fdr.next();
            assertTrue("Unexpected id: " + diff.getID(), ids.remove(diff.getID()));
            assertEquals("1", fdr.getFromVersion());
            assertEquals("2", fdr.getToVersion());
            assertEquals(FeatureDiff.UPDATED, diff.getState());
            if (diff.getID().equals("river.rv1")) {
                assertEquals(2, diff.getChangedAttributes().size());
                assertTrue(diff.getChangedAttributes().contains("river"));
                assertTrue(diff.getChangedAttributes().contains("flow"));
                assertEquals("rv1 v2", diff.getFeature().getAttribute("river"));
                assertEquals(new Double(9.6), diff.getFeature().getAttribute("flow"));
            } else {
                assertEquals(2, diff.getChangedAttributes().size());
                assertEquals("rv2 v2", diff.getFeature().getAttribute("river"));
                assertTrue(DataUtilities.attributesEqual(lines(new int[][] { { 100, 100, 120,
                        120 } }), diff.getFeature().getAttribute("geom")));
            }
        }
        fdr.close();

        // forward diff on creation
        fdr = fs.getDifferences("3", "4", Filter.INCLUDE, null);
        assertEquals(fs.getSchema(), fdr.getSchema());
        assertTrue(fdr.hasNext());
        diff = fdr.next();
        assertEquals(FeatureDiff.INSERTED, diff.getState());
        assertEquals(fs.getSchema(), diff.getFeature().getFeatureType());
        assertFalse(fdr.hasNext());
        fdr.close();
    }

