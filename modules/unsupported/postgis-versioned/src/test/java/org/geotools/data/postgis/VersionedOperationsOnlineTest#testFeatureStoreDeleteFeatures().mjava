    public void testFeatureStoreDeleteFeatures() throws IOException, NoSuchElementException,
            IllegalAttributeException {
        VersionedPostgisDataStore ds = getDataStore();

        // version enable road
        ds.setVersioned("road", true, "gimbo", "version enabling stuff");

        // build a filter to extract just road 1
        Filter filter = ff.id(Collections.singleton(ff.featureId("road.rd1")));
        
        // get it
        FeatureReader<SimpleFeatureType, SimpleFeature> fr = ds.getFeatureReader(new DefaultQuery("road", filter), Transaction.AUTO_COMMIT);
        Envelope env = ((Geometry) ((SimpleFeature) fr.next()).getDefaultGeometry()).getEnvelopeInternal();
        fr.close();

        // now delete one feature
        Transaction t = createTransaction("gimbo", "removing one feature by mass delete with filter");
        VersioningFeatureStore fs = (VersioningFeatureStore) ds.getFeatureSource("road");
        fs.setTransaction(t);
        fs.removeFeatures(filter);
        t.commit();
        t.close();
        
        fs.setTransaction(Transaction.AUTO_COMMIT);

        // and now see if it's still there
        fr = ds.getFeatureReader(new DefaultQuery(
                "road"), Transaction.AUTO_COMMIT);
        while (fr.hasNext())
            assertFalse(fr.next().getID().equals("road.rd1"));
        fr.close();

        // also make sure the deleted feature got into the changesets with
        // proper bounds
        DefaultQuery q = new DefaultQuery("changesets");
        q.setSortBy(new SortBy[] { ff.sort("revision", SortOrder.DESCENDING) });
        final SimpleFeatureCollection changes = ds.getFeatureSource(
                "changesets").getFeatures(q);
        SimpleFeatureIterator fi = changes.features();
        SimpleFeature lastChangeset = fi.next();
        fi.close();
        assertEquals(env, ((Geometry) lastChangeset.getDefaultGeometry()).getEnvelopeInternal());
        
        // finally make sure the deletion shows up in the differences
        long lastRevision = (Long) lastChangeset.getAttribute("revision");
        String vPrev = String.valueOf(lastRevision - 1);
        String vCurr = String.valueOf(lastRevision);
        FeatureDiffReader fdr = fs.getDifferences(vPrev, vCurr, null, null);
        assertTrue(fdr.hasNext());
        FeatureDiff fd = fdr.next();
        assertEquals(FeatureDiff.DELETED, fd.getState());
        assertEquals("road.rd1", fd.getOldFeature().getID());
        fdr.close();
        
        // also make sute it made into the modified type names
        String[] modifiedTypes = ds.getModifiedFeatureTypes(vPrev, vCurr);
        assertEquals(1, modifiedTypes.length);
        assertEquals("road", modifiedTypes[0]);
    }

