    public void testAppendFeatures() throws IOException, IllegalAttributeException {
        VersionedPostgisDataStore ds = getDataStore();

        // version enable road and river
        ds.setVersioned("road", true, "gimbo", "version enabling roads");
        ds.setVersioned("river", true, "gimbo", "version enabling river");

        // create a transaction and append some features to both feature types
        Transaction t = createTransaction("mambo", "Today I feel like adding fetures, yeah");
        FeatureWriter<SimpleFeatureType, SimpleFeature> fw = ds.getFeatureWriterAppend("road", t);
        // ... new road
        SimpleFeature f = fw.next();
        f.setAttribute(0, new Integer(4));
        f.setAttribute(1, line(new int[] { 3, 3, 4, 4, 5, 10 }));
        f.setAttribute(2, "r4");
        fw.write();
        String rd4id = f.getID();
        fw.close();
        // ... new river
        fw = ds.getFeatureWriterAppend("river", t);
        f = fw.next();
        f.setAttribute(0, new Integer(4));
        f.setAttribute(1, lines(new int[][] { { 0, 0, 1, 10 } }));
        f.setAttribute(2, "rv4");
        f.setAttribute(3, new Double(6.5));
        fw.write();
        String rv4id = f.getID();
        fw.close();
        // ... end
        t.commit();

        // check features are there
        // ... roads
        DefaultQuery q = new DefaultQuery("road", ff.id(Collections.singleton(ff.featureId(rd4id))));
         FeatureReader<SimpleFeatureType, SimpleFeature> fr = ds.getFeatureReader(q, t);
        assertTrue(fr.hasNext());
        fr.close();
        // ... rivers
        q = new DefaultQuery("river", ff.id(Collections.singleton(ff.featureId(rv4id))));
        fr = ds.getFeatureReader(q, t);
        assertTrue(fr.hasNext());
        fr.close();

        // ok, now check we registered the modification to both tables in the
        // same revision
        assertEquals(3, ds.getLastRevision());
        List types = Arrays.asList(ds.getModifiedFeatureTypes("2", "3"));
        assertEquals(2, types.size());
        assertTrue(types.contains("river"));
        assertTrue(types.contains("road"));

        // remember to close down the transaction
        t.close();
    }

