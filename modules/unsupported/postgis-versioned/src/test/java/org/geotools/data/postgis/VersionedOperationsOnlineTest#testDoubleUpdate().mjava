    /**
     * Versioned datastore broke if the same feature got updated twice in the same transaction
     * (since it tried to create a new record at revions x, then expired it, and created another
     * again at revision x).
     * 
     * @throws Exception
     * 
     */
    public void testDoubleUpdate() throws Exception {
        VersionedPostgisDataStore ds = getDataStore();

        // version enable trees
        ds.setVersioned("tree", true, "udig",
                "I like to doubly update things in the same transaction :-)");

        // build a filter to extract just road 1
        Filter filter = ff.id(Collections.singleton(ff.featureId("tree.1")));

        // setup a transaction
        Transaction t = createTransaction("gimbo", "double update");
        SimpleFeatureStore store = (SimpleFeatureStore) ds.getFeatureSource("tree");
        SimpleFeatureType treeSchema = ds.getSchema("tree");
        store.setTransaction(t);
        assertEquals(1, store.getFeatures(filter).size());
        store.modifyFeatures(treeSchema.getDescriptor("name"), "update1", filter);
        store.modifyFeatures(treeSchema.getDescriptor("name"), "update2", filter);
        t.commit();

        // make sure the second update is the one that went in
        SimpleFeatureCollection fc = store.getFeatures(filter);
        SimpleFeatureIterator fi = fc.features();
        assertTrue(fi.hasNext());
        SimpleFeature f = fi.next();
        assertEquals("update2", f.getAttribute("name"));
        assertFalse(fi.hasNext());
        fi.close();
        t.close();
    }

