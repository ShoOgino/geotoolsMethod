    public void testFeatureStoreUpdateFeatures() throws IOException, NoSuchElementException,
            IllegalAttributeException {
        VersionedPostgisDataStore ds = getDataStore();

        // version enable road
        ds.setVersioned("road", true, "gimbo", "version enabling stuff");

        // build a filter to extract just road 1
        Filter filter = ff.id(Collections.singleton(ff.featureId("road.rd1")));

        // get it
        FeatureReader<SimpleFeatureType, SimpleFeature> fr = ds.getFeatureReader(new DefaultQuery(
                "road", filter), Transaction.AUTO_COMMIT);
        Envelope env = ((Geometry) ((SimpleFeature) fr.next()).getDefaultGeometry())
                .getEnvelopeInternal();
        fr.close();

        // now updated it
        Transaction t = createTransaction("gimbo", "first change");
        FeatureStore fs = (FeatureStore) ds.getFeatureSource("road");
        fs.setTransaction(t);
        fs.modifyFeatures(roadType.getDescriptor("name"), "newRoad1", filter);
        t.commit();
        t.close();

        // make sure the updated feature got into the changesets with
        // proper bounds
        DefaultQuery q = new DefaultQuery("changesets");
        q.setSortBy(new SortBy[] { ff.sort("revision", SortOrder.DESCENDING) });
        final SimpleFeatureCollection features = ds.getFeatureSource(
                "changesets").getFeatures(q);
        SimpleFeatureIterator fi = features.features();
        SimpleFeature lastChangeset = fi.next();
        fi.close();
        assertEquals(env, ((Geometry) lastChangeset.getDefaultGeometry()).getEnvelopeInternal());
    }

