	/**
	 * Sets the JDBC database login credentials.
	 * 
	 * @param complete
	 *            JDBC connectionURL
	 */
	public void setURL(String dbURL) throws SQLException {

		_dbURL = dbURL;
		try {
			// _nativePool.getClass().getMethod("setURL", new Class [] {
			// String.class } ).invoke( _nativePool, new Object [] { _dbURL } );
			Properties props = parseURL(_dbURL, new Properties());

			LOGGER.finer("setting ServerName = " + props.getProperty("ServerName"));
			setServerName(props.getProperty("ServerName"));
			
			if (props.getProperty("PortNumber") != null || !props.getProperty("PortNumber").equals("")) {
				LOGGER.finer("setting ServerName = " + props.getProperty("PortNumber"));
				setPortNumber(Integer.parseInt(props.getProperty("PortNumber")));
			}
			
			LOGGER.finer("setting DatabaseName = " + props.getProperty("DatabaseName"));
			setDatabaseName(props.getProperty("DatabaseName"));

		} catch (Exception e) {
			LOGGER.severe("Failed to instantiate connection pool using " + _dbURL);
			throw new SQLException(
					"Failed to instantiate connection pool using " + _dbURL
							+ "(" + e + ")");
		}
	}

