    /**
         * Creates a database connection method to initialize a given database for
         * feature extraction with the given Properties.
         *
         * @param props Should contain at a minimum the user and password.
         *        Additional properties, such as charSet, can also be added.
         *
         * @return the sql Connection object to the database.
         *
         * @throws SQLException if the postgis sql driver could not be found
         */
    public Connection getConnection(Properties props) throws SQLException {
        // makes a new feature type bean to deal with incoming
        Connection dbConnection = null;

//       dbConnection = getConnectionPool().getConnection();

        // Instantiate the driver classes
        try {
            Class.forName("com.mysql.jdbc.Driver");
           LOGGER.fine("getting connection at " + _dbURL + " using " + _driver + " with props: " + props);
            dbConnection = DriverManager.getConnection(_dbURL, props);
        } catch (ClassNotFoundException cnfe) {
            throw new SQLException("JDBC driver ("+ _driver + " was not found.");
        }

        return dbConnection;
    }

