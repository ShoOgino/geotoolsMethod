     protected void setUp() throws Exception {
  
        
        HashMap local = new HashMap();
        local.put("dbtype","jdbc");        
  
        
         PropertyResourceBundle resource =
            new PropertyResourceBundle(this.getClass().getResourceAsStream("fixture.properties"));

        String namespace = resource.getString("namespace");
        String user = resource.getString("user");
               local.put("user", user);
        String password = resource.getString("password");
            local.put("passwd", password);
            
           String dbschema = resource.getString("schema");
            local.put("schema", dbschema);
       
           String driver = resource.getString("driver");
            local.put("driver", driver);

             String urlprefix = resource.getString("urlprefix");
            local.put("urlprefix", urlprefix);
            
        if (namespace.equals("http://www.geotools.org/data/postgis")) {
            throw new IllegalStateException(
                "The fixture.properties file needs to be configured for your own database");
        }
        
 /*       connFactory = new JDBCConnectionFactory(urlprefix, Driver);

        //connFactory = new PostgisConnectionFactory("localhost", "5432", 
        //   "testdb");
        //LOGGER.info("created new db connection");
        connFactory.setLogin(user, password);

        //LOGGER.info("set the login");
        //LOGGER.info("created new datasource");
*/
        try {
            LOGGER.fine("getting data source");
            DataSource dataSource = DataSourceUtil.buildDefaultDataSource(urlprefix, driver, user, password, null);
            
            /* connPool = connFactory.getConnectionPool();
            */
            setupTestTable(dataSource.getConnection());
            dstore = new JDBCDataStore(dataSource, dbschema, TEST_NS);

            dstore.setFIDMapper(
                "testset",
                new TypedFIDMapper(new BasicFIDMapper("gid", 255, true), "testset"));

            

            //LOGGER.fine("about to create ds");
            //postgis = new PostgisDataSource(connection, FEATURE_TABLE);
            //LOGGER.fine("created de");
            schema = dstore.getSchema(FEATURE_TABLE);
        } catch (Exception e) {
            LOGGER.log(Level.INFO, "exception while making schema", e);
        }
    }

