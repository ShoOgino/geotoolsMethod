    /**
     * Parses a MultiPolygon out of a MultiSurface element (because our geometry model only supports
     * MultiPolygon).
     *
     * <p>Precondition: parser positioned at a {@link GML#MultiSurface MultiSurface} start tag
     *
     * <p>Postcondition: parser positioned at the {@link GML#MultiSurface MultiSurface} end tag of
     * the starting tag
     */
    private Geometry parseMultiSurface(int dimension, CoordinateReferenceSystem crs)
            throws XMLStreamException, IOException, NoSuchAuthorityCodeException, FactoryException {

        reader.require(START_ELEMENT, GML.NAMESPACE, GML.MultiSurface.getLocalPart());

        reader.nextTag();
        final QName memberTag = reader.getName();
        List<Polygon> polygons = new ArrayList<>(2);
        if (GML.surfaceMembers.equals(memberTag)) {
            while (true) {
                reader.nextTag();
                if (END_ELEMENT == reader.getEventType()
                        && GML.surfaceMembers.getLocalPart().equals(reader.getLocalName())) {
                    // we're done
                    break;
                }
                Polygon p = parsePolygon(dimension, crs);
                polygons.add(p);
            }
            reader.nextTag();
        } else if (GML.surfaceMember.equals(memberTag)) {
            while (true) {
                reader.nextTag();
                Polygon p = parsePolygon(dimension, crs);
                polygons.add(p);
                reader.nextTag();
                reader.require(END_ELEMENT, GML.NAMESPACE, GML.surfaceMember.getLocalPart());
                reader.nextTag();
                if (END_ELEMENT == reader.getEventType()
                        && GML.MultiSurface.getLocalPart().equals(reader.getLocalName())) {
                    // we're done
                    break;
                }
            }
        }
        reader.require(END_ELEMENT, GML.NAMESPACE, GML.MultiSurface.getLocalPart());

        Geometry geom = geomFac.createMultiPolygon(polygons.toArray(new Polygon[polygons.size()]));
        return geom;
    }

