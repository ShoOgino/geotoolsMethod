    /**
     * Parses a MultiPoint.
     *
     * <p>Precondition: parser positioned at a {@link GML#MultiPoint MultiPoint} start tag
     *
     * <p>Postcondition: parser positioned at the {@link GML#MultiPoint MultiPoint} end tag of the
     * starting tag
     */
    private Geometry parseMultiPoint(int dimension, CoordinateReferenceSystem crs)
            throws XMLStreamException, IOException, NoSuchAuthorityCodeException, FactoryException {

        reader.require(START_ELEMENT, this.gmlNamespace, GML.MultiPoint);

        reader.nextTag();
        final String memberTag = reader.getLocalName();
        List<Point> points = new ArrayList<>(4);
        if (GML.pointMembers.equals(memberTag)) {
            while (true) {
                reader.nextTag();
                if (END_ELEMENT == reader.getEventType()
                        && GML.pointMembers.equals(reader.getLocalName())) {
                    // we're done
                    break;
                }
                Point p = parsePoint(dimension, crs);
                points.add(p);
            }
            reader.nextTag();
        } else if (GML.pointMember.equals(memberTag)) {
            while (true) {
                reader.nextTag();
                reader.require(START_ELEMENT, this.gmlNamespace, GML.Point);

                Point p = parsePoint(dimension, crs);
                points.add(p);
                reader.nextTag();
                reader.require(END_ELEMENT, this.gmlNamespace, GML.pointMember);
                reader.nextTag();
                if (END_ELEMENT == reader.getEventType()
                        && GML.MultiPoint.equals(reader.getLocalName())) {
                    // we're done
                    break;
                }
            }
        }
        reader.require(END_ELEMENT, this.gmlNamespace, GML.MultiPoint);

        Geometry geom = geomFac.createMultiPoint(points.toArray(new Point[0]));
        return geom;
    }

