    public FontEditor(Composite parent, SelectionListener parentListener) {
        this.parentListener = parentListener;
        fButton = new Button(parent, SWT.PUSH);
        // fExtent= computeImageSize(parent);
        // fImage= new Image(parent.getDisplay(), fExtent.x, fExtent.y);
        // fImage = new Image(parent.getDisplay(), "elcl16/up_co.gif"); //$NON-NLS-1$
        //
        // GC gc= new GC(fImage);
        // gc.setBackground(fButton.getBackground());
        // gc.fillRectangle(0, 0, fExtent.x, fExtent.y);
        // gc.dispose();

        fFont = new Font[1];
        fColor = new Color[1];

        fButton.setText(Messages.getString("FontEditor_SetFont"));
        labelFontDialog = new FontDialog(new Shell());
        labelFontDialog.setText("Choose a Font"); // $NON-NLS-1$

        fButton.setImage(fImage);
        fButton.addSelectionListener(
                new SelectionAdapter() {
                    public void widgetSelected(SelectionEvent event) {
                        labelFontDialog.setRGB(fColorValue);
                        labelFontDialog.setFontList(fFontList);

                        if (labelFontDialog.open() == null) return;
                        if (fFont[0] != null) fFont[0].dispose();
                        FontData[] list = labelFontDialog.getFontList();
                        if (list != null) {
                            fFont[0] = new Font(fButton.getDisplay(), list);
                            // set the text font here...
                            fFontList = list;
                        }
                        RGB rgb = labelFontDialog.getRGB();
                        if (rgb != null) {
                            if (fColor[0] != null) fColor[0].dispose();
                            fColor[0] = new Color(fButton.getDisplay(), rgb);
                            // set the text foreground color here...
                            fColorValue = rgb;
                            updateColorImage();
                        }
                        notifyParent(event);
                    }
                });

        fButton.addDisposeListener(
                new DisposeListener() {
                    public void widgetDisposed(DisposeEvent event) {
                        if (fImage != null) {
                            fImage.dispose();
                            fImage = null;
                        }
                        if (fColor != null) {
                            if (fColor[0] != null) fColor[0].dispose();
                            fColor = null;
                        }
                        if (fFont != null) {
                            if (fFont[0] != null) fFont[0].dispose();
                            fFont = null;
                        }
                    }
                });
    }

