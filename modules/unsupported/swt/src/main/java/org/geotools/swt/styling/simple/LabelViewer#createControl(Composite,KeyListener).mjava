    public Composite createControl(Composite parent, KeyListener klisten) {
        this.part =
                AbstractSimpleConfigurator.subpart(
                        parent, Messages.getString("SimpleStyleConfigurator_label_label"));
        this.klisten = klisten;

        this.on = new Button(part, SWT.CHECK);

        this.field = new Combo(part, SWT.DROP_DOWN | SWT.READ_ONLY);
        this.field.addKeyListener(klisten);
        if (this.schema != null) {
            List<AttributeDescriptor> types = this.schema.getAttributeDescriptors();
            List<String> typeStrings = new ArrayList<>();
            for (AttributeDescriptor attributeDescriptor : types) {
                typeStrings.add(attributeDescriptor.getLocalName());
            }
            this.field.setItems(typeStrings.toArray(new String[0]));
        }
        this.field.setToolTipText(Messages.getString("LabelViewer_field_tooltip"));

        this.fonter = new FontEditor(part);

        // determine which placement to use
        if (schema != null) {
            if (SLDs.isLine(schema)) {
                pointPlacement = false;
            } else {
                pointPlacement = true;
            }
            if (pointPlacement) {
                // point placement (3 combos: AnchorPoint (Horiz, Vert) + Rotation)
                initPlacementContentsPoint();
            } else {
                // line placement (1 combo: Perpendicular Offset)
                initPlacementContentsLine();
            }
        }

        listen(true);

        return part;
    }

