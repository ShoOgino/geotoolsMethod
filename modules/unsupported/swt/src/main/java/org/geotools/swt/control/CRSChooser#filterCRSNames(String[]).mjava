    /**
     * filters all CRS Names from all available CRS authorities
     *
     * @param filter array of keywords
     * @return Set of CRS Names which contain all the filter keywords
     */
    protected Set<String> filterCRSNames(String[] filter) {
        crsCodeMap = new HashMap<>();
        Set<String> descriptions = new TreeSet<>();

        for (Object object : ReferencingFactoryFinder.getCRSAuthorityFactories(null)) {
            CRSAuthorityFactory factory = (CRSAuthorityFactory) object;
            try {
                Set<String> codes = factory.getAuthorityCodes(CoordinateReferenceSystem.class);
                for (Object codeObj : codes) {
                    String code = (String) codeObj;
                    String description;
                    try {
                        description = factory.getDescriptionText(code).toString();
                    } catch (Exception e1) {
                        description = Messages.getString("CRSChooser_unnamed");
                    }
                    description += " (" + code + ")"; // $NON-NLS-1$ //$NON-NLS-2$
                    crsCodeMap.put(code, description);
                    if (matchesFilter(description.toUpperCase(), filter)) {
                        descriptions.add(description);
                    }
                }
            } catch (FactoryException e) {
                ExceptionMonitor.show(wktText.getShell(), e, "CRS Authority:" + e.getMessage());
            }
        }
        return descriptions;
    }

