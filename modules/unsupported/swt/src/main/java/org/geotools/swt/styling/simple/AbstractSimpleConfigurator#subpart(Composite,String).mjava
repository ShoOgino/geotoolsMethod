    /**
     * Construct a subpart labeled with the provided tag.
     * <p>
     * Creates a composite with a grid layout of the specifed columns,
     * and a label with text from label.
     * </p>
     * @param parent
     * @param label
     * @return Composite with one label 
     */
    public static Composite subpart( Composite parent, String label ) {
        Composite subpart = new Composite(parent, SWT.NONE);
        RowLayout across = new RowLayout();
        across.type = SWT.HORIZONTAL;
        across.wrap = true;
        across.pack = true;
        across.fill = true;
        across.marginBottom = 1;
        across.marginRight = 2;

        subpart.setLayout(across);

        Label labell = new Label(subpart, SWT.LEFT);
        labell.setText(label);

        RowData data = new RowData();
        data.width = 40;
        // check to see if width is not enough space
        GC gc = new GC(parent.getParent());
        gc.setFont(parent.getParent().getFont());
        FontMetrics fontMetrics = gc.getFontMetrics();
        gc.dispose();
        int labelWidth = Dialog.convertWidthInCharsToPixels(fontMetrics, labell.getText().length() + 1);
        if (labelWidth > data.width) {
            data.width = labelWidth;
        }
        // TODO: adjust the methods that call this one to keep a consistent
        // width (otherwise they're misaligned)
        data.height = 10;
        labell.setLayoutData(data);

        return subpart;
    }

