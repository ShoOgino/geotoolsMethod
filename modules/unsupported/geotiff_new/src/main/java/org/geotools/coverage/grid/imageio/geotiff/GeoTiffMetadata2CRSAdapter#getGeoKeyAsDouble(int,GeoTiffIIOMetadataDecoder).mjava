	/**
	 * Getting a specified geotiff geo key as a double. It is somehow tolerant
	 * in the sense that in case such a key does not exist it returns <code>Double.NaN</code>.
	 * 
	 * @param key
	 *            we want to get the value for.
	 * @param metadata
	 *            containing the key we are looking for.
	 * @return the value for the provided key.
	 * @throws IOException
	 */
	private static double getGeoKeyAsDouble(final int key,
			final GeoTiffIIOMetadataDecoder metadata) {

		try {
		        final String geoKey = metadata.getGeoKey(key);
		        if (geoKey != null)
		            return Double.parseDouble(geoKey);
		        else return Double.NaN;
		} catch (NumberFormatException ne) {
			if (LOGGER.isLoggable(Level.WARNING))
				LOGGER.log(Level.WARNING, ne.getLocalizedMessage(), ne);
			return Double.NaN;
		} catch (Exception e) {
			LOGGER.log(Level.WARNING, e.getLocalizedMessage(), e);
			return Double.NaN;
		}
	}

