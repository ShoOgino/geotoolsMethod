    /**
     * The GeoTIFFWritingUtilities spec requires that a user defined GCS be comprised of the
     * following:
     *
     * <ul>
     *   <li>a citation
     *   <li>a datum definition
     *   <li>a prime meridian definition (if not Greenwich)
     *   <li>an angular unit definition (if not degrees)
     * </ul>
     *
     * @param metadata to use for building this {@link GeographicCRS}.
     * @param linearUnit
     * @param angularUnit
     * @return a {@link GeographicCRS}.
     * @throws IOException
     */
    private GeographicCRS createUserDefinedGCS(
            final GeoTiffIIOMetadataDecoder metadata, Unit linearUnit, Unit angularUnit)
            throws IOException {
        // //
        //
        // coordinate reference system name (GeogCitationGeoKey)
        //
        // //
        String name = metadata.getGeoKey(GeoTiffGCSCodes.GeogCitationGeoKey);
        if (name == null) name = "unnamed";

        // lookup the Geodetic datum
        final GeodeticDatum datum = createGeodeticDatum(linearUnit, metadata);

        // coordinate reference system
        GeographicCRS gcs = null;

        try {
            // property map is reused
            final Map props = new HashMap();
            // make the user defined GCS from all the components...
            props.put("name", name);
            gcs =
                    crsFactory.createGeographicCRS(
                            props, datum, DefaultEllipsoidalCS.GEODETIC_2D.usingUnit(angularUnit));
        } catch (FactoryException fe) {
            final GeoTiffException io =
                    new GeoTiffException(metadata, fe.getLocalizedMessage(), fe);
            throw io;
        }

        return gcs;
    }

