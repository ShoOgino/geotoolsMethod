    public RasterManager(final GeoTiffReader reader) throws DataSourceException {

        Utilities.ensureNonNull("GeoTiffReader", reader);
        this.parent = reader;
        inputURL = reader.sourceURL;
        coverageIdentifier = reader.getName();
        hints = reader.getHints();
        coverageFactory = reader.getGridCoverageFactory();
        // get the overviews policy
        extractOverviewPolicy();

        // base image type
        baseImageType = reader.baseImageType;
        // load SM and CM
        defaultCM= baseImageType.getColorModel();
        defaultSM= baseImageType.getSampleModel();
        
        // default ImageLayout
        defaultImageLayout= new ImageLayout().setColorModel(defaultCM).setSampleModel(defaultSM);

        coverageEnvelope = reader.getOriginalEnvelope();
        coverageGridrange = reader.getOriginalGridRange();
        coverageCRS = reader.getCrs();
        raster2Model = reader.getOriginalGridToWorld(PixelInCell.CELL_CENTER);

        //instantiating controller for subsampling and overviews
        overviewsController=new OverviewsController(
                        reader.getHighestRes(),
                        reader.getNumberOfOverviews(),
                        reader.getOverviewsResolution());
        try {
            spatialDomainManager = new SpatialDomainManager();
        } catch (TransformException e) {
            throw new DataSourceException(e);
        } catch (FactoryException e) {
            throw new DataSourceException(e);
        }
        // granuleDescriptor creation
        granuleDescriptor = new GranuleDescriptor(this,DataUtilities.urlToFile(this.inputURL));
    }

