        /**
         * This method is responsible for evaluating possible subsampling
         * factors once the best resolution level has been found, in case we
         * have support for overviews, or starting from the original coverage in
         * case there are no overviews available.
         * 
         * Anyhow this method should not be called directly but subclasses
         * should make use of the setReadParams method instead in order to
         * transparently look for overviews.
         * 
         * @param imageIndex
         * @param readParameters
         * @param requestedRes
         */
        void computeDecimationFactors(
                final int imageIndex, 
                final ImageReadParam readParameters,
                final RasterLayerRequest request) {

            // the read parameters cannot be null
            Utilities.ensureNonNull("readParameters", readParameters);
            Utilities.ensureNonNull("request", request);

            // get the requested resolution in order to guess what we are looking for
            final double[] requestedRes = request.getRequestedResolution();
            if (requestedRes == null) {
                // if there is no requested resolution we don't do any subsampling
                readParameters.setSourceSubsampling(1, 1, 0, 0);
                return;
            }
            
            final int rasterWidth, rasterHeight;
            double selectedRes[] = new double[2];
            
            // are we working against a certain overview?
            final OverviewLevel level = overviewsController.resolutionsLevels.get(imageIndex);
            selectedRes[0] = level.resolutionX;
            selectedRes[1] = level.resolutionY;
            if (imageIndex == 0) {
                // highest resolution
                rasterWidth = domainManager.coverageRasterArea.width;
                rasterHeight = domainManager.coverageRasterArea.height;
            } else {
                // work on overviews
                final RasterLayout selectedLevelLayout = overviewsController.resolutionsLevels
                        .get(imageIndex).rasterLayout;
                rasterWidth = selectedLevelLayout.width;
                rasterHeight = selectedLevelLayout.height;
            }

            // //
            // DECIMATION ON READING
            // Setting subsampling factors with some checks
            // 1) the subsampling factors cannot be zero
            // 2) the subsampling factors cannot be such that the w or h are
            // zero
            // //
            int subSamplingFactorX = (int) Math.floor(requestedRes[0] / selectedRes[0]);
            subSamplingFactorX = subSamplingFactorX == 0 ? 1 : subSamplingFactorX;

            while (rasterWidth / subSamplingFactorX <= 0 && subSamplingFactorX >= 0)
                subSamplingFactorX--;
            subSamplingFactorX = subSamplingFactorX <= 0 ? 1 : subSamplingFactorX;

            int subSamplingFactorY = (int) Math.floor(requestedRes[1] / selectedRes[1]);
            subSamplingFactorY = subSamplingFactorY == 0 ? 1 : subSamplingFactorY;

            while (rasterHeight / subSamplingFactorY <= 0 && subSamplingFactorY >= 0)
                subSamplingFactorY--;
            subSamplingFactorY = subSamplingFactorY <= 0 ? 1 : subSamplingFactorY;

            // set the read parameters
            readParameters.setSourceSubsampling(subSamplingFactorX, subSamplingFactorY, 0, 0);

        }

