	/**
	 * Parses a coordinate reference system.
	 * 
	 * <p>
	 * For the moment we can only encode geographic and projected coordinate
	 * reference systems, we cannot encode the other types like vertical
	 * coordinate reference systems.
	 * 
	 * @throws GeoTiffException
	 */
	public GeoTiffIIOMetadataEncoder parseCoordinateReferenceSystem()
			throws GeoTiffException {
		final GeoTiffIIOMetadataEncoder metadata = new GeoTiffIIOMetadataEncoder();
		// /////////////////////////////////////////////////////////////////////
		//
		// CREATING METADATA AND SETTING BASE FIELDS FOR THEM
		//
		// /////////////////////////////////////////////////////////////////////
		// model type
		final int modelType = (crs instanceof ProjectedCRS) ? 1 : 2;

		// GTModelTypeGeoKey
		metadata
				.addGeoShortParam(GeoTiffConstants.GTModelTypeGeoKey, modelType);

		switch (modelType) {
		// /////////////////////////////////////////////////////////////////////
		//
		// GEOGRAPHIC COORDINATE REFERENCE SYSTEMCREATING METADATA AND SETTING
		// BASE FIELDS FOR THEM
		//
		// /////////////////////////////////////////////////////////////////////
		case GeoTiffGCSCodes.ModelTypeGeographic:
			parseGeoGCS((DefaultGeographicCRS) crs, metadata);
			break;

		// /////////////////////////////////////////////////////////////////////
		//
		// PROJECTED COORDINATE REFERENCE SYSTEMCREATING METADATA AND SETTING
		// BASE FIELDS FOR THEM
		//
		// /////////////////////////////////////////////////////////////////////
		case GeoTiffPCSCodes.ModelTypeProjected:
			parseProjCRS((ProjectedCRS) crs, metadata);
			break;

		default:
			throw new GeoTiffException(
					null,
					"The supplied grid coverage uses an unsupported crs! You are allowed to use only projected and geographic coordinate reference systems",
					null);
		}
		return metadata;

		//
		// if ("VERT_CS".equals(keyword)) {
		// parseVertCS(element);
		// }
		//
		// if ("LOCAL_CS".equals(keyword)) {
		// parseLocalCS(element);
		// }
		//
		// if ("COMPD_CS".equals(keyword)) {
		// parseCompdCS(element);
		// }
		//
		// if ("FITTED_CS".equals(keyword)) {
		// parseFittedCS(element);
		// }

	}

