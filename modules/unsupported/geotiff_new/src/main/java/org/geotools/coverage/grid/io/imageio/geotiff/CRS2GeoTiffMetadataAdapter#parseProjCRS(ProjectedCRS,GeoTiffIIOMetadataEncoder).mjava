	/**
	 * Parses a "PROJCS" element. This element has the following pattern:
	 * 
	 * <blockquote><code>
	 * PROJCS["<name>", <geographic cs>, <projection>, {<parameter>,}*,
	 *        <linear unit> {,<twin axes>}{,<authority>}]
	 * </code></blockquote>
	 * 
	 * @param projectedCRS
	 *            The parent element.
	 * @param metadata
	 * @return The "PROJCS" element as a {@link ProjectedCRS} object.
	 * @throws ParseException
	 *             if the "GEOGCS" element can't be parsed.
	 */
	private void parseProjCRS(final ProjectedCRS projectedCRS,
			GeoTiffIIOMetadataEncoder metadata) {

		// do we have a code for this pcrs
		final int code = getEPSGCode(projectedCRS);
		if (GeoTiffIIOMetadataEncoder.isTiffUShort(code)) {
			metadata.addGeoShortParam(GeoTiffPCSCodes.ProjectedCSTypeGeoKey,
					code);
			return;
		}

		// user defined projected coordinate reference system.
		// key 3072
		metadata.addGeoShortParam(GeoTiffPCSCodes.ProjectedCSTypeGeoKey, 32767);

		// name of the user defined projected crs
		// key 3073
//		metadata.addGeoAscii(GeoTiffPCSCodes.PCSCitationGeoKey, projectedCRS
//				.getName().getCode());

		// projection
		parseProjection(projectedCRS, metadata);

		// geographic crs
		parseGeoGCS((DefaultGeographicCRS) (projectedCRS.getBaseCRS()),
				metadata);

	}

