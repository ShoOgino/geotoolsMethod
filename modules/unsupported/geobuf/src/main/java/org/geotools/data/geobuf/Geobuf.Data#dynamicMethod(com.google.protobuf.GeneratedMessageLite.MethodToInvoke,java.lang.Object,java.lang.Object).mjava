        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final java.lang.Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                java.lang.Object arg0,
                java.lang.Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE:
                    {
                        return new org.geotools.data.geobuf.Geobuf.Data();
                    }
                case IS_INITIALIZED:
                    {
                        byte isInitialized = memoizedIsInitialized;
                        if (isInitialized == 1) return DEFAULT_INSTANCE;
                        if (isInitialized == 0) return null;

                        boolean shouldMemoize = ((Boolean) arg0).booleanValue();
                        if (hasFeatureCollection()) {
                            if (!getFeatureCollection().isInitialized()) {
                                if (shouldMemoize) {
                                    memoizedIsInitialized = 0;
                                }
                                return null;
                            }
                        }
                        if (hasFeature()) {
                            if (!getFeature().isInitialized()) {
                                if (shouldMemoize) {
                                    memoizedIsInitialized = 0;
                                }
                                return null;
                            }
                        }
                        if (hasGeometry()) {
                            if (!getGeometry().isInitialized()) {
                                if (shouldMemoize) {
                                    memoizedIsInitialized = 0;
                                }
                                return null;
                            }
                        }
                        if (shouldMemoize) memoizedIsInitialized = 1;
                        return DEFAULT_INSTANCE;
                    }
                case MAKE_IMMUTABLE:
                    {
                        keys_.makeImmutable();
                        return null;
                    }
                case NEW_BUILDER:
                    {
                        return new Builder();
                    }
                case VISIT:
                    {
                        Visitor visitor = (Visitor) arg0;
                        org.geotools.data.geobuf.Geobuf.Data other =
                                (org.geotools.data.geobuf.Geobuf.Data) arg1;
                        keys_ = visitor.visitList(keys_, other.keys_);
                        dimensions_ =
                                visitor.visitInt(
                                        hasDimensions(),
                                        dimensions_,
                                        other.hasDimensions(),
                                        other.dimensions_);
                        precision_ =
                                visitor.visitInt(
                                        hasPrecision(),
                                        precision_,
                                        other.hasPrecision(),
                                        other.precision_);
                        switch (other.getDataTypeCase()) {
                            case FEATURE_COLLECTION:
                                {
                                    dataType_ =
                                            visitor.visitOneofMessage(
                                                    dataTypeCase_ == 4, dataType_, other.dataType_);
                                    break;
                                }
                            case FEATURE:
                                {
                                    dataType_ =
                                            visitor.visitOneofMessage(
                                                    dataTypeCase_ == 5, dataType_, other.dataType_);
                                    break;
                                }
                            case GEOMETRY:
                                {
                                    dataType_ =
                                            visitor.visitOneofMessage(
                                                    dataTypeCase_ == 6, dataType_, other.dataType_);
                                    break;
                                }
                            case DATATYPE_NOT_SET:
                                {
                                    visitor.visitOneofNotSet(dataTypeCase_ != 0);
                                    break;
                                }
                        }
                        if (visitor
                                == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                                        .INSTANCE) {
                            if (other.dataTypeCase_ != 0) {
                                dataTypeCase_ = other.dataTypeCase_;
                            }
                            bitField0_ |= other.bitField0_;
                        }
                        return this;
                    }
                case MERGE_FROM_STREAM:
                    {
                        com.google.protobuf.CodedInputStream input =
                                (com.google.protobuf.CodedInputStream) arg0;
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                                (com.google.protobuf.ExtensionRegistryLite) arg1;
                        try {
                            boolean done = false;
                            while (!done) {
                                int tag = input.readTag();
                                switch (tag) {
                                    case 0:
                                        done = true;
                                        break;
                                    default:
                                        {
                                            if (!parseUnknownField(tag, input)) {
                                                done = true;
                                            }
                                            break;
                                        }
                                    case 10:
                                        {
                                            java.lang.String s = input.readString();
                                            if (!keys_.isModifiable()) {
                                                keys_ =
                                                        com.google.protobuf.GeneratedMessageLite
                                                                .mutableCopy(keys_);
                                            }
                                            keys_.add(s);
                                            break;
                                        }
                                    case 16:
                                        {
                                            bitField0_ |= 0x00000001;
                                            dimensions_ = input.readUInt32();
                                            break;
                                        }
                                    case 24:
                                        {
                                            bitField0_ |= 0x00000002;
                                            precision_ = input.readUInt32();
                                            break;
                                        }
                                    case 34:
                                        {
                                            org.geotools.data.geobuf.Geobuf.Data.FeatureCollection
                                                            .Builder
                                                    subBuilder = null;
                                            if (dataTypeCase_ == 4) {
                                                subBuilder =
                                                        ((org.geotools.data.geobuf.Geobuf.Data
                                                                                .FeatureCollection)
                                                                        dataType_)
                                                                .toBuilder();
                                            }
                                            dataType_ =
                                                    input.readMessage(
                                                            org.geotools.data.geobuf.Geobuf.Data
                                                                    .FeatureCollection.parser(),
                                                            extensionRegistry);
                                            if (subBuilder != null) {
                                                subBuilder.mergeFrom(
                                                        (org.geotools.data.geobuf.Geobuf.Data
                                                                        .FeatureCollection)
                                                                dataType_);
                                                dataType_ = subBuilder.buildPartial();
                                            }
                                            dataTypeCase_ = 4;
                                            break;
                                        }
                                    case 42:
                                        {
                                            org.geotools.data.geobuf.Geobuf.Data.Feature.Builder
                                                    subBuilder = null;
                                            if (dataTypeCase_ == 5) {
                                                subBuilder =
                                                        ((org.geotools.data.geobuf.Geobuf.Data
                                                                                .Feature)
                                                                        dataType_)
                                                                .toBuilder();
                                            }
                                            dataType_ =
                                                    input.readMessage(
                                                            org.geotools.data.geobuf.Geobuf.Data
                                                                    .Feature.parser(),
                                                            extensionRegistry);
                                            if (subBuilder != null) {
                                                subBuilder.mergeFrom(
                                                        (org.geotools.data.geobuf.Geobuf.Data
                                                                        .Feature)
                                                                dataType_);
                                                dataType_ = subBuilder.buildPartial();
                                            }
                                            dataTypeCase_ = 5;
                                            break;
                                        }
                                    case 50:
                                        {
                                            org.geotools.data.geobuf.Geobuf.Data.Geometry.Builder
                                                    subBuilder = null;
                                            if (dataTypeCase_ == 6) {
                                                subBuilder =
                                                        ((org.geotools.data.geobuf.Geobuf.Data
                                                                                .Geometry)
                                                                        dataType_)
                                                                .toBuilder();
                                            }
                                            dataType_ =
                                                    input.readMessage(
                                                            org.geotools.data.geobuf.Geobuf.Data
                                                                    .Geometry.parser(),
                                                            extensionRegistry);
                                            if (subBuilder != null) {
                                                subBuilder.mergeFrom(
                                                        (org.geotools.data.geobuf.Geobuf.Data
                                                                        .Geometry)
                                                                dataType_);
                                                dataType_ = subBuilder.buildPartial();
                                            }
                                            dataTypeCase_ = 6;
                                            break;
                                        }
                                }
                            }
                        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (java.io.IOException e) {
                            throw new RuntimeException(
                                    new com.google.protobuf.InvalidProtocolBufferException(
                                                    e.getMessage())
                                            .setUnfinishedMessage(this));
                        } finally {
                        }
                    }
                    // fall through
                case GET_DEFAULT_INSTANCE:
                    {
                        return DEFAULT_INSTANCE;
                    }
                case GET_PARSER:
                    {
                        if (PARSER == null) {
                            synchronized (org.geotools.data.geobuf.Geobuf.Data.class) {
                                if (PARSER == null) {
                                    PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    }
            }
            throw new UnsupportedOperationException();
        }

