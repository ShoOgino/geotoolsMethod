      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.geotools.data.geobuf.Geobuf.Data.Geometry();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (!hasType()) {
              return null;
            }
            for (int i = 0; i < getGeometriesCount(); i++) {
              if (!getGeometries(i).isInitialized()) {
                return null;
              }
            }
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            lengths_.makeImmutable();
            coords_.makeImmutable();
            geometries_.makeImmutable();
            values_.makeImmutable();
            customProperties_.makeImmutable();
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            org.geotools.data.geobuf.Geobuf.Data.Geometry other = (org.geotools.data.geobuf.Geobuf.Data.Geometry) arg1;
            type_ = visitor.visitInt(hasType(), type_,
                other.hasType(), other.type_);
            lengths_= visitor.visitIntList(lengths_, other.lengths_);
            coords_= visitor.visitLongList(coords_, other.coords_);
            geometries_= visitor.visitList(geometries_, other.geometries_);
            values_= visitor.visitList(values_, other.values_);
            customProperties_= visitor.visitIntList(customProperties_, other.customProperties_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    int rawValue = input.readEnum();
                    org.geotools.data.geobuf.Geobuf.Data.Geometry.Type value = org.geotools.data.geobuf.Geobuf.Data.Geometry.Type.forNumber(rawValue);
                    if (value == null) {
                      super.mergeVarintField(1, rawValue);
                    } else {
                      bitField0_ |= 0x00000001;
                      type_ = rawValue;
                    }
                    break;
                  }
                  case 16: {
                    if (!lengths_.isModifiable()) {
                      lengths_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(lengths_);
                    }
                    lengths_.addInt(input.readUInt32());
                    break;
                  }
                  case 18: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    if (!lengths_.isModifiable() && input.getBytesUntilLimit() > 0) {
                      lengths_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(lengths_);
                    }
                    while (input.getBytesUntilLimit() > 0) {
                      lengths_.addInt(input.readUInt32());
                    }
                    input.popLimit(limit);
                    break;
                  }
                  case 24: {
                    if (!coords_.isModifiable()) {
                      coords_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(coords_);
                    }
                    coords_.addLong(input.readSInt64());
                    break;
                  }
                  case 26: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    if (!coords_.isModifiable() && input.getBytesUntilLimit() > 0) {
                      coords_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(coords_);
                    }
                    while (input.getBytesUntilLimit() > 0) {
                      coords_.addLong(input.readSInt64());
                    }
                    input.popLimit(limit);
                    break;
                  }
                  case 34: {
                    if (!geometries_.isModifiable()) {
                      geometries_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(geometries_);
                    }
                    geometries_.add(
                        input.readMessage(org.geotools.data.geobuf.Geobuf.Data.Geometry.parser(), extensionRegistry));
                    break;
                  }
                  case 106: {
                    if (!values_.isModifiable()) {
                      values_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(values_);
                    }
                    values_.add(
                        input.readMessage(org.geotools.data.geobuf.Geobuf.Data.Value.parser(), extensionRegistry));
                    break;
                  }
                  case 120: {
                    if (!customProperties_.isModifiable()) {
                      customProperties_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(customProperties_);
                    }
                    customProperties_.addInt(input.readUInt32());
                    break;
                  }
                  case 122: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    if (!customProperties_.isModifiable() && input.getBytesUntilLimit() > 0) {
                      customProperties_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(customProperties_);
                    }
                    while (input.getBytesUntilLimit() > 0) {
                      customProperties_.addInt(input.readUInt32());
                    }
                    input.popLimit(limit);
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (org.geotools.data.geobuf.Geobuf.Data.Geometry.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return memoizedIsInitialized;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }

