    protected CoordinateReferenceSystem correctFilterForServer( String typeName, Filter serverFilter) {
        // TODO modify bbox requests here
        FeatureSetDescription fsd = WFSCapabilities.getFeatureSetDescription(store.capabilities,
                typeName);

        Envelope maxbbox = null;
        CoordinateReferenceSystem dataCRS = null;
        
        if (fsd.getSRS() != null) {
            // reproject this filter!
            try {
                dataCRS = CRS.decode( fsd.getSRS() );
                MathTransform toDataCRS = CRS.findMathTransform(DefaultGeographicCRS.WGS84, dataCRS);
                maxbbox = JTS.transform(fsd.getLatLongBoundingBox(), null, toDataCRS, 10);
            } catch (FactoryException e) {
                WFS_1_0_0_DataStore.LOGGER.warning(e.getMessage());
                maxbbox = null;
            } catch (MismatchedDimensionException e) {
                WFS_1_0_0_DataStore.LOGGER.warning(e.getMessage());
                maxbbox = null;
            } catch (TransformException e) {
                WFS_1_0_0_DataStore.LOGGER.warning(e.getMessage());
                maxbbox = null;
            }
        } else {
            maxbbox = fsd.getLatLongBoundingBox();
        }
        
        // Rewrite request if we have a maxbox
        if (maxbbox != null) {
            WFSBBoxFilterVisitor clipVisitor = new WFSBBoxFilterVisitor(maxbbox);
            Filters.accept(serverFilter, clipVisitor);
        } else { // give up an request everything
            WFS_1_0_0_DataStore.LOGGER.log(Level.FINE,
                    "Unable to clip your query against the latlongboundingbox element");
            // filters[0] = Filter.EXCLUDE; // uncoment this line to just give
            // up
        }
        return dataCRS;
    }

