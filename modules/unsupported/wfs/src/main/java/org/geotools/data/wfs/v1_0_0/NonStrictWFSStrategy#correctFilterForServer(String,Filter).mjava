    /**
     * Using the provided query; obtain a FeatureSetDescriptor and modify the provided serverFilter
     * to be correct.
     * <p>
     * If we are being strict the implementation may also clip any geometry or bbox 
     * to the valid bounds advertised as valid by the server (or by the data CRS).
     * <p>
     * @param query
     * @param serverFilter
     * @return CoordinateReferenceSystem to use when making the request (usually the data CRS for a WFS 1.0 Datastore)
     */
    protected CoordinateReferenceSystem correctFilterForServer( String typeName, Filter serverFilter) {
        // TODO modify bbox requests here
        FeatureSetDescription fsd = WFSCapabilities.getFeatureSetDescription(store.capabilities,
                typeName);

        CoordinateReferenceSystem dataCRS = null;
        
        if (fsd.getSRS() != null) {
            // reproject this filter!
            try {
                dataCRS = CRS.decode( fsd.getSRS() );
            } catch (FactoryException e) {
                WFS_1_0_0_DataStore.LOGGER.warning(e.getMessage());
            } catch (MismatchedDimensionException e) {
                WFS_1_0_0_DataStore.LOGGER.warning(e.getMessage());
            }
        }
        // we are going to assume that to assume that we don't need to clip or
        // anything; and just return the dataCRS
        // Rewrite request if we have a maxbox
        WFSBBoxFilterVisitor visitor = new WFSBBoxFilterVisitor(null);
        Filters.accept(serverFilter, visitor);
        return dataCRS;
    }

