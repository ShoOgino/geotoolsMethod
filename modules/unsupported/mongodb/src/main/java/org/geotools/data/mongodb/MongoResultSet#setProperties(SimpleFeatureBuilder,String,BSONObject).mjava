    /**
     * Set non-geometry properties for feature (GeoJSON.properties)
     * 
     * @param fb SimpleFeatureBuilder, properties defined in dotted notation, e.g.
     *            "properties.name", \ "properties.nested.attr" etc.
     * @param base property name (called recursively, "properties" first time through)
     * @param dbo JSON (BasicDBObject) or Array (BasicBSONList) object
     */
    @SuppressWarnings("rawtypes")
    private void setProperties (SimpleFeatureBuilder fb, String base, BSONObject dbo)
    {
        Set<String> cols = dbo.keySet();

        for (String col : cols)
        {
            Object dbcol = dbo.get( col );
            // recurse for nested JSON objects and arrays
            if (dbcol instanceof BasicDBObject || dbcol instanceof BasicBSONList)
            {
                setProperties( fb, base + "." + col, (BSONObject) dbcol );
            }
            else
            {
                Class featureBinding = fb.getFeatureType().getType( base + "." + col ).getBinding();
                Class dboBinding = dbo.get( col ).getClass();
                // set if bindings match
                if (dboBinding.equals( featureBinding ))
                {
                    fb.set( base + "." + col, dbo.get( col ) );
                }
                // if bindings mismatch, but feature binding is String then set using toString()
                // or if bindings subclass Number then cast (possibly lossy)
                else if (featureBinding.equals( String.class )
                        || (featureBinding.getSuperclass().equals( Number.class ) && dboBinding
                                .getSuperclass().equals( Number.class )))
                {
                    try
                    {
                        fb.set( base + "." + col, dbo.get( col ).toString() );
                    }
                    // ignore nfe if unable to convert
                    catch (NumberFormatException ne)
                    {
                    }
                }
            }
        }
    }

