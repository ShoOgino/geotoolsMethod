    @Override
    public List<Feature> getFeatures(Object source, Object foreignKeyValue, List<Object> idValues, CoordinateReferenceSystem reprojection,
                                     Object feature, List<PropertyName> selectedProperties, boolean includeMandatory, int resolveDepth,
                                     Integer resolveTimeOut) throws IOException {
        if (!(foreignKeyValue instanceof CollectionLinkFunction.LinkCollection)) {
            throw new RuntimeException("MongoDB nesting only supports foreign keys of 'CollectionLink' type.");
        }
        CollectionLinkFunction.LinkCollection linkCollection = (CollectionLinkFunction.LinkCollection) foreignKeyValue;
        List collection = getSubCollection(feature, linkCollection.getCollectionPath());
        if (collection == null) {
            return Collections.emptyList();
        }
        List<SimpleFeature> features = new ArrayList<>();
        for (int i = 0; i < collection.size(); i++) {
            features.add(MongoCollectionFeature.build(feature, linkCollection.getCollectionPath(), i));
        }
        FeatureSource fSource = buildMappingFeatureSource(feature, features);
        ArrayList<Feature> matchingFeatures = new ArrayList<Feature>();
        // get all the mapped nested features based on the link values
        FeatureCollection<FeatureType, Feature> fCollection = fSource.getFeatures(Query.ALL);
        if (fCollection instanceof MappingFeatureCollection) {
            FeatureIterator<Feature> iterator = fCollection.features();
            while (iterator.hasNext()) {
                matchingFeatures.add(iterator.next());
            }
            iterator.close();
        }
        return matchingFeatures;
    }

