        /**
         * Return name of Class with max number occurrences
         * 
         * @param propKey original property key, "geometry.type" needs special handling
         * @param buildRule build rule to apply; use majority, or convert all to Strings
         * @return name of Class with max occurrences
         */
        public String getMajorityClass (String propKey, RecordBuilder buildRule)
        {
            int max = -1;
            String maxClass = null;

            Set<String> keys = classMap.keySet();

            // if more than one type, and build rule is String just return String type
            if (keys.size() > 1 && buildRule.equals( RecordBuilder.STRING )
                    && !keys.contains( "geometry.type" ))
            {
                maxClass = String.class.getCanonicalName();
            }
            else
            {
                for (String currClass : keys)
                {
                    if (classMap.get( currClass ) > max)
                    {
                        max = classMap.get( currClass );
                        maxClass = currClass;
                    }
                }

                // determine class for "normal" property, preserve actual type (Point etc.) for
                // geometry.type
                if (!propKey.equals( "geometry.type" ))
                {
                    maxClass = classNameMap.get( maxClass );
                }
            }

            return maxClass;
        }

