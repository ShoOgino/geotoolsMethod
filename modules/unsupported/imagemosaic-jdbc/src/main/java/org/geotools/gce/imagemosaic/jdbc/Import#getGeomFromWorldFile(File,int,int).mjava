    private Geometry getGeomFromWorldFile(File imageFile, int width, int height)
            throws IOException {
        StringBuffer buff = new StringBuffer(imageFile.getAbsolutePath());

        // try to find world file, e.g for *.png *.pgw
        char charToRemove = buff.charAt(buff.length() - 2);
        buff = buff.deleteCharAt(buff.length() - 2);
        if (Character.isUpperCase(charToRemove)) buff.append("W");
        else buff.append("w");

        File f = new File(buff.toString());

        if (f.exists() == false) { // check if worldfile has "wld" extension
            f = null;
            int index = buff.lastIndexOf(".");
            if (index != -1) {
                buff.delete(index + 1, buff.length());
                buff.append("wld");
                f = new File(buff.toString());
            }
        }

        if (f == null || f.exists() == false)
            throw new IOException("Cannot find world file for " + imageFile.getAbsolutePath());

        try (BufferedReader in = new BufferedReader(new FileReader(f))) {
            Double resx = Double.valueOf(in.readLine());
            in.readLine(); // skip rotate x
            in.readLine(); // skip rotaty y
            Double resy = Double.valueOf(in.readLine());
            Double ulx = Double.valueOf(in.readLine());
            Double uly = Double.valueOf(in.readLine());

            double minx = ulx;
            double maxx = ulx + width * resx;
            if (resy > 0) resy *= -1;

            double miny = uly + height * resy;
            double maxy = uly;
            GeometryFactory factory = new GeometryFactory();
            Coordinate[] coords = {
                new Coordinate(minx, miny),
                new Coordinate(minx, maxy),
                new Coordinate(maxx, maxy),
                new Coordinate(maxx, miny),
                new Coordinate(minx, miny)
            };
            Polygon poly =
                    factory.createPolygon(factory.createLinearRing(coords), new LinearRing[0]);
            return factory.createMultiPolygon(new Polygon[] {poly});
        }
    }

