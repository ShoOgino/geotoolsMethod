    public static DXFText read(DXFLineNumberReader br, DXFUnivers univers) throws IOException {
        DXFLayer l = null;
        String value = "", style = "STANDARD";
        int visibility = 0, align = 0, c = -1;
        DXFLineType lineType = null;
        double x = 0,
                y = 0,
                angle = 0,
                rotation = 0,
                zoomfactor = 1,
                thickness = DXFTables.defaultThickness,
                height = 0;

        int sln = br.getLineNumber();
        log.debug(">>Enter at line: " + sln);

        DXFCodeValuePair cvp = null;
        DXFGroupCode gc = null;
        DXFExtendedData _extData = null;

        boolean doLoop = true;
        while (doLoop) {
            cvp = new DXFCodeValuePair();
            try {
                gc = cvp.read(br);
            } catch (DXFParseException ex) {
                throw new IOException("DXF parse error" + ex.getLocalizedMessage());
            } catch (EOFException e) {
                doLoop = false;
                break;
            }

            switch (gc) {
                case TYPE:
                    String type = cvp.getStringValue();
                    // geldt voor alle waarden van type
                    br.reset();
                    doLoop = false;
                    break;
                case X_1: // "10"
                    x = cvp.getDoubleValue();
                    break;
                case Y_1: // "20"
                    y = cvp.getDoubleValue();
                    break;
                case TEXT: // "1"
                    value = cvp.getStringValue();
                    break;
                case ANGLE_1: // "50"
                    rotation = cvp.getDoubleValue();
                    break;
                case THICKNESS: // "39"
                    thickness = cvp.getDoubleValue();
                    break;
                case DOUBLE_1: // "40"
                    height = cvp.getDoubleValue();
                    break;
                case ANGLE_2: // "51"
                    angle = cvp.getDoubleValue();
                    break;
                case DOUBLE_2: // "41"
                    zoomfactor = cvp.getDoubleValue();
                    break;
                case INT_3: // "72"
                    align = cvp.getShortValue();
                    break;
                case LAYER_NAME: // "8"
                    l = univers.findLayer(cvp.getStringValue());
                    break;
                case COLOR: // "62"
                    c = cvp.getShortValue();
                    break;
                case TEXT_STYLE_NAME: // "7"
                    style = cvp.getStringValue();
                    break;
                case VISIBILITY: // "60"
                    visibility = cvp.getShortValue();
                    break;
                case LINETYPE_NAME: // "6"
                    lineType = univers.findLType(cvp.getStringValue());
                    break;
                case XDATA_APPLICATION_NAME:
                    String appName = cvp.getStringValue();
                    _extData = DXFExtendedData.getExtendedData(br);
                    _extData.setAppName(appName);
                    break;
                default:
                    break;
            }
        }

        DXFText e =
                new DXFText(
                        x,
                        y,
                        value,
                        rotation,
                        thickness,
                        height,
                        align,
                        style,
                        c,
                        l,
                        angle,
                        zoomfactor,
                        visibility,
                        lineType,
                        _extData);
        e.setType(GeometryType.POINT);
        e.setStartingLineNumber(sln);
        e.setUnivers(univers);
        // Hack voor label
        e.setKey(value);
        log.debug(
                e.toString(
                        x,
                        y,
                        value,
                        rotation,
                        thickness,
                        height,
                        align,
                        style,
                        c,
                        angle,
                        zoomfactor,
                        visibility));
        log.debug(">Exit at line: " + br.getLineNumber());
        return e;
    }

