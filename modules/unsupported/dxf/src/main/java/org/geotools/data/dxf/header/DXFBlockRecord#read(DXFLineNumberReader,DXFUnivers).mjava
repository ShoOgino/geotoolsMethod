    public static DXFBlockRecord read(DXFLineNumberReader br, DXFUnivers univers) throws IOException {
        Vector<DXFEntity> sEnt = new Vector<DXFEntity>();
        String name = "";
        double x = 0, y = 0;
        int flag = 0;
        DXFLayer l = null;

        int sln = br.getLineNumber();
        log.debug(">Enter at line: " + sln);

        DXFCodeValuePair cvp = null;
        DXFGroupCode gc = null;

        boolean doLoop = true;
        while (doLoop) {
            cvp = new DXFCodeValuePair();
            try {
                gc = cvp.read(br);
            } catch (DXFParseException ex) {
                throw new IOException("DXF parse error" + ex.getLocalizedMessage());
            } catch (EOFException e) {
                doLoop = false;
                break;
            }

            /// TODO GJ Delete Block::read println
            //System.out.println("Block: read " + gc);


            switch (gc) {
                case TYPE:
                    String type = cvp.getStringValue();
                    if (ENDBLK.equals(type)) {
                        doLoop = false;
                    } else if (ENDSEC.equals(type)) {
                        // hack voor als ENDBLK ontbreekt
                        doLoop = false;
                        br.reset();
                    }
                    break;
                case NAME:
                    name = cvp.getStringValue();
                    break;
                default:
                    //myLog.writeLog("Unknown :" + ligne_temp + " (" + ligne + ")");
                    break;
            }
        }
        DXFBlockRecord e = new DXFBlockRecord(x, y, flag, name, sEnt, DXFColor.getDefaultColorIndex(), l);

        /// TODO GJ Delete this Block println
        // System.out.println(" - " + e.toString(x, y, flag, name, sEnt.size(), DXFColor.getDefaultColorIndex()));


        log.debug(e.toString(x, y, flag, name, sEnt.size(), DXFColor.getDefaultColorIndex()));
        log.debug(">Exit at line: " + br.getLineNumber());
        return e;
    }
    /*
    public String toString(double x, double y, int flag, String name, int numEntities, int c) {
    StringBuffer s = new StringBuffer();
    s.append("DXFBlock [");
    s.append("x: ");
    s.append(x + ", ");
    s.append("y: ");
    s.append(y + ", ");
    s.append("flag: ");
    s.append(flag + ", ");
    s.append("name: ");
    s.append(name + ", ");
    s.append("color: ");
    s.append(c + ", ");
    s.append("numEntities: ");
    s.append(numEntities);
    s.append("]");
    return s.toString();
    }

    @Override
    public DXFEntity translate(double x, double y) {
    return this;
    }
     */

