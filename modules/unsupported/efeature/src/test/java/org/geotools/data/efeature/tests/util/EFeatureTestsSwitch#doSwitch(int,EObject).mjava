    /**
     * Calls <code>caseXXX</code> for each class of the model until one returns a non null result;
     * it yields that result.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @return the first non-null result returned by a <code>caseXXX</code> call.
     * @generated
     */
    protected T doSwitch(int classifierID, EObject theEObject) {
        switch (classifierID) {
            case EFeatureTestsPackage.EFEATURE_DATA:
                {
                    EFeatureData<?, ?> eFeatureData = (EFeatureData<?, ?>) theEObject;
                    T result = caseEFeatureData(eFeatureData);
                    if (result == null) result = caseEFeature(eFeatureData);
                    if (result == null) result = defaultCase(theEObject);
                    return result;
                }
            case EFeatureTestsPackage.NON_GEO_EOBJECT:
                {
                    NonGeoEObject nonGeoEObject = (NonGeoEObject) theEObject;
                    T result = caseNonGeoEObject(nonGeoEObject);
                    if (result == null) result = defaultCase(theEObject);
                    return result;
                }
            case EFeatureTestsPackage.EFEATURE_COMPATIBLE_DATA:
                {
                    EFeatureCompatibleData<?, ?> eFeatureCompatibleData =
                            (EFeatureCompatibleData<?, ?>) theEObject;
                    T result = caseEFeatureCompatibleData(eFeatureCompatibleData);
                    if (result == null) result = defaultCase(theEObject);
                    return result;
                }
            default:
                return defaultCase(theEObject);
        }
    }

