    /**
     * This handles model notifications by calling {@link #updateChildren} to update any cached
     * children and by creating a viewer notification, which it passes to {@link
     * #fireNotifyChanged}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void notifyChanged(Notification notification) {
        updateChildren(notification);

        switch (notification.getFeatureID(EFeatureData.class)) {
            case EFeatureTestsPackage.EFEATURE_DATA__ID:
            case EFeatureTestsPackage.EFEATURE_DATA__DATA:
            case EFeatureTestsPackage.EFEATURE_DATA__SRID:
            case EFeatureTestsPackage.EFEATURE_DATA__DEFAULT:
            case EFeatureTestsPackage.EFEATURE_DATA__STRUCTURE:
            case EFeatureTestsPackage.EFEATURE_DATA__ATTRIBUTE:
            case EFeatureTestsPackage.EFEATURE_DATA__GEOMETRY:
                fireNotifyChanged(
                        new ViewerNotification(
                                notification, notification.getNotifier(), false, true));
                return;
        }
        super.notifyChanged(notification);
    }

