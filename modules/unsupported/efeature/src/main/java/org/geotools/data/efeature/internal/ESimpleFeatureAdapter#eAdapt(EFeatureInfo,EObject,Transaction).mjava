    /**
     * Adapt given EFeature {@link EObject data} into a {@link ESimpleFeature} instance.
     * <p>
     * This method writes adapted data to {@link EObject} and then calls {@link EFeature#getData()}.
     * </p>
     * @param eStructure - structure to adapt 
     * @param eObject - EFeature {@link EObject data} to adapt
     * @param transaction - any adaptation is written to this transaction 
     * @return a {@link ESimpleFeature} instance with the given structure.
     */
    public ESimpleFeature eAdapt(EFeatureInfo eStructure, EObject eObject, Transaction transaction) {
        //
        // Prepare
        //
        ESimpleFeature eData = null;
        //
        // Get current notification delivery state
        //
        boolean eDeliver = eObject.eDeliver();
        //
        // Disable notifications
        //
        eObject.eSetDeliver(false);
        //
        // Get internal EFeature implementation
        //
        EFeatureInternal eInternal = eInternal(eStructure, eObject);
        //
        // Enter modification mode
        //
        eInternal.enter(transaction);
        //
        // Try to set values
        //        
        try {                        
            //
            // Update SRID for all instances?
            //
            if (!isIdentity) {
                eStructure.setSRID(newSRID);
            }
            //
            // Update delegate directly without any
            // additional validation, since it is
            // already established that the data is
            // valid.
            //
            for (Entry<EAttribute, Object> it : newValueMap.entrySet()) {
                eObject.eSet(it.getKey(), it.getValue());
            }
            //
            // Finished
            //
            return (eData = eInternal.getData(transaction, true));

        } finally {
            //
            // Leave modification mode
            //
            eInternal.leave();
            //
            // Restore notification delivery state
            //
           eObject.eSetDeliver(eDeliver);
           //
           // Notify?
           //
           if(eData!=null) {
               eNotify(eObject, eData);
           }
           
        }

    }

