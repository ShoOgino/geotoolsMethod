    /**
     * Validate {@link EFeature} folder information against given {@link EPackage}.
     *
     * <p>
     *
     * @param ePackage - given {@link EPackage} instance
     * @return <code>true</code> if valid, <code>false</code> otherwise.
     */
    public EFeatureStatus validate(EPackage ePackage) {
        //
        // Invalidate structure
        //
        doInvalidate(false);
        //
        // 1) Verify folder name
        //
        if (eName == null || eName.length() == 0) {
            return failure(this, eName(), "Folder name is missing");
        }

        // 2) Verify that instances of given
        // eClass is an EObject of same class
        // as given folder name?
        //
        EClass eParent = null;
        if (eIsObject) {
            EClassifier eClassifier = ePackage.getEClassifier(eName);
            if (eClassifier instanceof EClass) {
                eParent = (EClass) eClassifier;
            } else
                return failure(
                        this, eName(), "Folder mismatch: Parent " + eName + " not an EClass");
        }

        // 3) Verify features
        //
        EFeatureStatus s;
        for (EFeatureInfo it : eFeatureInfoMap.values()) {
            if (!(s = it.validate(ePackage, eParent)).isSuccess()) {
                return s;
            }
        }

        // Confirm that structure is valid
        //
        return structureIsValid(eName());
    }

