    /**
     * Initializes me with a {@link Date} object against which to test input values, a relational
     * operator to apply in comparisons, and an adapter to convert those inputs to {@link Date}
     * objects.
     * 
     * @param date - the {@link Date} object to match against input values
     * @param operator - the relational operator to test
     * @param adapter - converts input values to {@link Date} objects
     * 
     * @since 1.2
     */
    public DateCondition(Date date, RelationalOperator operator, DateAdapter adapter) {

        super(date, adapter);

        switch (operator) {
        case EQUAL_TO:
            this.lowerBound = date;
            this.lowerInclusive = true;
            this.upperBound = date;
            this.upperInclusive = true;
            break;
        case NOT_EQUAL_TO:
            this.lowerBound = date;
            this.lowerInclusive = false;
            this.upperBound = date;
            this.upperInclusive = false;
            break;
        case LESS_THAN:
            this.upperBound = date;
            this.upperInclusive = false;
            break;
        case LESS_THAN_OR_EQUAL_TO:
            this.upperBound = date;
            this.upperInclusive = true;
            break;
        case GREATER_THAN:
            this.lowerBound = date;
            this.lowerInclusive = false;
            break;
        case GREATER_THAN_OR_EQUAL_TO:
            this.lowerBound = date;
            this.lowerInclusive = true;
            break;
        }

        this.operator = operator;
    }

