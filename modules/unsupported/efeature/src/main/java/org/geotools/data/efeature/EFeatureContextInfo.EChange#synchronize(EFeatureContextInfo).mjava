        /**
         * Synchronize given {@link EFeatureContextInfo structure}  
         * with it's {@link EFeatureContextFactory factory} counterpart.
         * <p> 
         * This is required since {@link EditingDomain editing domains} are 
         * allowed to be added to and removed from the context.
         * </p>
         * @param eContextInfo - {@link EFeatureContextInfo structure}
         * @return a {@link Map} from {@link EFeatureContextInfo#eContextID() eContexID} to 
         * {@link EFeatureContextInfo} instances.
         */    
        public final Map<String, EFeatureDomainInfo> synchronize(EFeatureContextInfo eContextInfo)
        {
            //
            // Ensure thread safe access to domain map 
            //
            synchronized(eContextInfo.eDomainMap) {
                //
                // Get copy of current domain structure map
                //
                eMap = new HashMap<String, EFeatureDomainInfo>(eContextInfo.eDomainMap);
                //
                // Get context instance
                //
                EFeatureContext eContext = eContextInfo.eContext(false);
                //
                // Get current set of editing domains
                //
                List<String> eDomainIDs = eContext.eDomainIDs();
                //
                // Initialize
                //
                HashMap<String, EFeatureDomainInfo> 
                    eNewMap = new HashMap<String, EFeatureDomainInfo>(eDomainIDs.size());           
                
                // Add all domains 
                //
                for(String eDomainID : eDomainIDs)
                {
                    // Get structure information
                    //
                    EFeatureDomainInfo eDomainInfo = eMap.get(eDomainID);
                    
                    // Not found or overwrite?
                    //
                    if(eDomainInfo==null)
                    {
                        // Create the domain structure
                        //
                        eDomainInfo = EFeatureDomainInfo.create(eContextInfo, eDomainID);
                        
                    }
                    /// Put to map of new structures 
                    //
                    eNewMap.put(eDomainID, eDomainInfo);
                }
                
                // Remove disposed editing domains
                //
                eMap.keySet().retainAll(eDomainIDs);
                
                // Put new to current map
                //
                eMap.putAll(eNewMap);
                
                // Finished
                // 
                return Collections.unmodifiableMap(eMap);
            }
        }

