    /**
     * Define EFeature {@link EFeatureInfo structure} from given information.
     * <p>
     * <b>NOTE</b>: This method assumes that the {@link EFeatureContext} and 
     * {@link EFeatureHints} are already set. This method also attaches the 
     * {@link EFeatureInfo} instance with given context 
     * {@link EFeatureContextInfo structure}, and adds the 
     * {@link EClass#getEIDAttribute()} to the {@link EFeatureContext#eIDFactory()}.
     * </p>
     * @param eInfo
     * @param eContext
     * @param eNsURI
     * @param eDomainID
     * @param eFolderName - the {@link EFeatureFolderInfo folder} instance 
     * @param eClass - {@link EFeature} or EFeature compatible EMF {@link EClass class} . 
     * @return a {@link EFeatureInfo} instance
     */
    private static EFeatureInfo define(
            EFeatureInfo eInfo, EFeatureContext eContext, 
            String eNsURI, String eDomainID, String eFolderName, EClass eClass) {
        //
        // Set context path
        //        
        eInfo.eNsURI = eNsURI;
        eInfo.eDomainID = eDomainID;
        eInfo.eFolderName = eFolderName;
        //
        // Set EClass implementing EFeature 
        //                
        eInfo.eClassName = eClass.getName();
        eInfo.eClass = new WeakReference<EClass>(eClass);        
        //
        // Set ID attribute 
        //                
        EAttribute eIDAttribute = eGetIDAttribute(eClass,eInfo.eHints);
        eInfo.eIDAttributeName = eIDAttribute.getName();
        //
        // Set SRID attribute 
        //                
        EAttribute eSRIDAttribute = eGetSRIDAttribute(eClass, eInfo.eHints);
        eInfo.eSRIDAttributeName = eSRIDAttribute.getName();
        //
        // Set default geometry attribute 
        //                
        EAttribute eDefaultAttribute = eGetDefaultAttribute(eClass, eInfo.eHints);
        eInfo.eDefaultAttributeName = eDefaultAttribute.getName();
        //
        // Create EFeature attribute structures 
        //                        
        EList<EAttribute> eAttributes = eClass.getEAllAttributes();
        eInfo.eAttributeInfoMap = attributes(eInfo, eAttributes);
        eInfo.eGeometryInfoMap = geometries(eInfo, eAttributes);
        //
        // Register ID attribute with ID factory
        //
        eContext.eIDFactory().add(eClass,eIDAttribute);
        //
        // Add to cache
        //
        eContext.eStructure().doAttach(eInfo);
        //
        // Finished
        //
        return eInfo;
    }    

