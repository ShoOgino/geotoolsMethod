    /**
     * Adapt given {@link EObject} into an EFeature.
     *
     * @param eObject - {@link EObject} to be adapted into this context
     * @return new {@link EFeature} instance
     * @throws IllegalArgumentException If adaption failed.
     */
    public EFeature eAdapt(EObject eObject) throws IllegalArgumentException {
        //
        // Get context
        //
        EFeatureContext eContext = eContext();
        //
        // Get package
        //
        EPackage ePackage = eObject.eClass().getEPackage();
        //
        // Verify that package is contained in context
        //
        if (!eContext.contains(ePackage)) {
            throw new IllegalArgumentException("EPackage [" + ePackage.getNsURI() + "] not found");
        }
        //
        // Check if object is in cache
        //
        EFeatureInfo eStructure = eFeatureInfoCache().get(eObject);
        if (eStructure == null) {
            //
            // Create structure in this context
            //
            eStructure = EFeatureInfo.create(eContext(), eObject, new EFeatureHints());
            //
            // Validate structure
            //
            eStructure.validate(ePackage, null);
        }
        //
        // Adapt directly?
        //
        if (eObject instanceof EFeature) {
            ((EFeature) eObject).setStructure(eStructure);
            return (EFeature) eObject;
        }
        //
        // Create an delegate
        //
        return EFeatureDelegate.create(eStructure, (InternalEObject) eObject, true);
    }

