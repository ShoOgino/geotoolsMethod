    /**
     * Initializes me with a {@link Character} object against which to test input values, a
     * relational operator to apply in comparisons, and an adapter to convert those inputs to {@link
     * Character} objects.
     *
     * @param c - the {@link Character} object to match against input values
     * @param operator - the relational operator to test
     * @param adapter - converts input values to {@link Character} objects
     * @since 1.2
     */
    public CharacterCondition(Character c, RelationalOperator operator, CharacterAdapter adapter) {

        this.value = c;
        this.adapter = adapter;

        switch (operator) {
            case EQUAL_TO:
                this.lower = c;
                this.lowerInclusive = true;
                this.upper = c;
                this.upperInclusive = true;
                break;
            case NOT_EQUAL_TO:
                this.lower = c;
                this.lowerInclusive = false;
                this.upper = c;
                this.upperInclusive = false;
                break;
            case LESS_THAN:
                this.upper = c;
                this.upperInclusive = false;
                break;
            case LESS_THAN_OR_EQUAL_TO:
                this.upper = c;
                this.upperInclusive = true;
                break;
            case GREATER_THAN:
                this.lower = c;
                this.lowerInclusive = false;
                break;
            case GREATER_THAN_OR_EQUAL_TO:
                this.lower = c;
                this.lowerInclusive = true;
                break;
        }

        this.operator = operator;
    }

