    /**
     * Convert GeoTools {@link Filter} to a {@link EFeatureQuery} statement capable of querying
     * {@link EObject} instances from the {@link EClass} defined by given {@link EFeatureInfo
     * structure}.
     *
     * @param eFeatureInfo - filter on {@link EFeatureInfo} instance
     * @param featureType - {@link SimpleFeatureType} instance
     * @param eObjects - {@link TreeIterator} to by queried
     * @param filter - GeoTools {@link Filter filter} instance
     * @return a {@link EFeatureQuery} statement
     * @throws EFeatureEncoderException If filter encoding failed.
     */
    public static EFeatureQuery toEFeatureQuery(
            EFeatureInfo eFeatureInfo, TreeIterator<EObject> eObjects, Filter filter)
            throws EFeatureEncoderException {
        //
        // Do sanity checks
        //
        isSane("eFeatureInfo", eFeatureInfo);
        isSane("eObjects", eObjects);
        isSane("filter", filter);
        //
        // Create an EClass filter
        //
        EObjectCondition eClassFilter = createEClassFilter(eFeatureInfo.eClass());
        //
        // Create spatial filter
        //
        EObjectCondition eSpatialFilter = toEObjectCondition(eFeatureInfo, true, filter);
        //
        // Create EMF Query WHERE clause
        //
        WHERE where = new WHERE(eClassFilter.AND(eSpatialFilter));
        //
        // Create EFeature filter
        //
        EFeatureFilter eWhere = new EFeatureFilter(where);
        //
        // Create query instance
        //
        return new EFeatureQuery(eObjects, eWhere);
    }

