    /**
     * Create new {@link EFeatureDelegate} instance
     *
     * @param eStructure - EFeature {@link EFeatureInfo structure}.
     * @param eImpl - new {@link InternalEObject} implementation which this delegates to
     * @param eTrusted - if <code>true</code>, the method will not validate structure against
     *     implementation.
     * @param eHints - if {@link EFeatureHints#EFEATURE_SINGLETON_FEATURES} is <code>true</code>, a
     *     {@link ThreadLocal thread local} singleton instance is returned
     * @throws IllegalArgumentException If implementation does not validate against given structure
     */
    public static final EFeatureDelegate create(
            EFeatureInfo eStructure,
            InternalEObject eImpl,
            boolean eTrusted,
            EFeatureHints eHints) {
        //
        // Initialize
        //
        EFeatureDelegate eDelegate;
        //
        // Is EFeatureDelegate a singleton?
        //
        if (eHints.eSingletonFeatures()) {
            //
            // Get singleton instance
            //
            eDelegate = eSingleton.get();
            //
            // No singleton instance found?
            //
            if (eDelegate == null) {
                //
                // Create new delegate
                //
                eDelegate = new EFeatureDelegate(eStructure, eImpl, eTrusted, eHints);
                //
                // Update thread local variable
                //
                eSingleton.set(eDelegate);
            }
            //
            // Adapt directly? (replaces current delegate)
            //
            else if (eImpl instanceof EFeatureDelegate) {
                //
                // Cast to EFeatureDelegate
                //
                eDelegate = (EFeatureDelegate) eImpl;
                //
                // Replace structure
                //
                eDelegate.eReplace(eStructure, eDelegate.eImpl, false, eHints);
            }
            //
            // Replace implementation of singleton delegate
            //
            else {
                //
                // Replace implementation
                //
                eDelegate.eReplace(eStructure, eImpl, eTrusted, eHints);
            }
        }
        //
        // Adapt directly? (returns same current delegate)
        //
        else if (eImpl instanceof EFeatureDelegate) {
            //
            // Cast to EFeatureDelegate
            //
            eDelegate = (EFeatureDelegate) eImpl;
            //
            // Replace structure
            //
            eDelegate.eReplace(eStructure, eDelegate.eImpl, false, eHints);
        }
        //
        // Construct new instance
        //
        else {
            eDelegate = new EFeatureDelegate(eStructure, eImpl, eTrusted, eHints);
        }
        //
        // Get current ID if set
        //
        String eSetID = eDelegate.getID();
        //
        // Get ID factory from context
        //
        EFeatureIDFactory eIDFactory = eStructure.eContext().eIDFactory();
        //
        // Set ID as used?
        //
        if (!(eSetID == null || eSetID.length() == 0)) {
            //
            // Set ID as used for this delegate
            //
            eIDFactory.useID(eDelegate, eSetID);
        } else {
            //
            // Create new ID for this delegate
            //
            eSetID = eIDFactory.createID(eDelegate);
        }
        //
        // Finished
        //
        return eDelegate;
    }

