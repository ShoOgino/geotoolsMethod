    /**
     * Get {@link EFeature} with given name.
     * <p>
     * {@link SimpleFeatureType} names have the following format:
     * 
     * <pre>
     * eType=&lt;eFolder&gt;.&lt;eFeature&gt;
     * 
     * where
     * 
     * eFolder = {@link EFeature} folder name
     * eFeature = {@link EFeature} class | reference name
     * </pre>
     * 
     * @param eType - given {@link SimpleFeatureType} name
     * @return a {@link EFeatureInfo} instance if found, <code>null</code> otherwise.
     * @see {@link EFeatureInfo#getReferenceName()}
     * @throws IllegalArgumentException
     */
    public EFeatureInfo eGetFeatureInfo(String eType) throws IllegalArgumentException {
        if (!(eType == null || eType.length() == 0)) {
            String[] eParts = eType.split("\\.");
            if (eParts.length == 2) {
                EFeatureFolderInfo eFolderInfo = eFolderInfoMap.get(eParts[0]);
                if (eFolderInfo != null) {
                    return eFolderInfo.eGetFeatureInfo(eParts[1]);
                }
            }            
            throw new IllegalArgumentException("Type name have illegal format. Expected \"<efolder>.<efeature>\"");
        }
        throw new IllegalArgumentException("Type name can not be null or empty");
    }

