    /**
     * {@link Function}s are not supported.
     */
    @Override
    public Object visit(Function function, Object extraData) throws RuntimeException {

        throw new IllegalArgumentException("Functions are not not supported");

        // try {
        // List<Expression> parameters = function.getParameters();
        // List contexts = null;
        // //check context, if a list which patches parameter size list assume its context
        // // to pass along to each Expression for encoding
        // if( extraData instanceof List && ((List)extraData).size() == parameters.size() ) {
        // contexts = (List) extraData;
        // }
        //
        // //set the encoding function flag to signal we are inside a function
        // encodingFunction = true;
        //
        // //write the name
        // out.write( function.getName() );
        //
        // //write the arguments
        // out.write( "(");
        // for ( int i = 0; i < parameters.size(); i++ ) {
        // Expression e = parameters.get( i );
        //
        // Object context = contexts != null ? contexts.get( i ) : extraData;
        // e.accept(this, context);
        //
        // if ( i < parameters.size()-1 ) {
        // out.write( ",");
        // }
        //
        // }
        // out.write( ")");
        //
        // //reset the encoding function flag
        // encodingFunction = false;
        // }
        // catch (IOException e) {
        // throw new RuntimeException( e );
        // }
        //
        // return extraData;
    }

