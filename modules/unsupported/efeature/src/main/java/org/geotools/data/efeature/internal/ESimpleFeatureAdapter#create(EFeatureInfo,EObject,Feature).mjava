    /**
     * Attempts to transform new data into valid form
     * </p>
     * @param eStructure - given EFeature {@link EFeatureInfo structure}
     * @param eImpl - {@link EObject} containing EFeature data
     * @param eData - {@link Feature} data to prepare for adaption into given structure
     * @return a new {@link ESimpleFeatureAdapter} instance
     */
    public static ESimpleFeatureAdapter create(
            EFeatureInfo eStructure, 
            EObject eImpl, Feature eData) {
        //
        // Verify that given data is valid
        //
        EFeatureStatus s;
        if (!(s = eStructure.validate(eData)).isSuccess()) {
            throw new IllegalArgumentException(s.getMessage());
        }
        //
        // Prepare transformation
        //
        ESimpleFeatureAdapter eAdapter = new ESimpleFeatureAdapter();
        //
        // Get new and old feature types
        //
        eAdapter.oldType = eStructure.getFeatureType();
        eAdapter.newType = eData.getType();
        //
        // Get old and new CRS
        //
        eAdapter.oldCRS = eAdapter.oldType.getCoordinateReferenceSystem();
        eAdapter.newCRS = eAdapter.newType.getCoordinateReferenceSystem();
        //
        // Get transformation
        //
        try {
            eAdapter.transform = CRS.findMathTransform(
                    eAdapter.newCRS, eAdapter.oldCRS, true);
        } catch (FactoryException e) {
            throw new IllegalArgumentException("Tranform from " + "'" 
                    + eAdapter.newCRS + "' to '" + eAdapter.oldCRS 
                    + "' not possible");
        }
        //
        // Is identity transform?
        //
        eAdapter.isIdentity = (eAdapter.transform instanceof IdentityTransform);
        if (!eAdapter.isIdentity) {
            //
            // Get SRIDs
            //
            eAdapter.oldSRID = CRS.toSRS(eAdapter.oldCRS, true);
            eAdapter.newSRID = CRS.toSRS(eAdapter.newCRS, true);
        }
        //
        // Prepare feature values, catching
        // any transformation errors before any
        // changes are committed to the model
        //
        for (Property it : eData.getProperties()) {
            //
            // Get attribute, null indicates that it does not exist
            // in the structure of this EFeature instance. If so,
            // just discard it (in line with using structures as filters)
            //
            String eName = it.getName().getLocalPart();
            EAttribute eAttribute = eStructure.eGetAttribute(eName);
            //
            // EAttribute found in this structure.
            //
            if (eAttribute != null) {
                //
                // Get value
                //
                Object value = it.getValue();
                //
                // Cache old value
                //
                eAdapter.oldValues.add(value);
                eAdapter.oldValueMap.put(eAttribute, value);
                //
                // Adapt value?
                //
                if (value instanceof Geometry) {
                    try {
                        value = JTS.transform((Geometry) value, eAdapter.transform);
                    } catch (Exception e) {
                        throw new IllegalArgumentException("Failed to " 
                                + "transform geometry: " + it);
                    }
                }
                //
                // Cache new value
                //
                eAdapter.newValues.add(value);
                eAdapter.newValueMap.put(eAttribute, value);
            }
        }
        //
        // Finished
        //
        return eAdapter;
    }        

