    @Override
    public ESimpleFeature next() throws IOException, 
        IllegalArgumentException, NoSuchElementException {
        
        //
        // Sanity check
        //
        if (!hasNext()) { 
            throw new NoSuchElementException();
        }
        
        try {
            //
            // Access to EFeatureInfo hints must be synchronized (thread safe)
            //
            eStructure.eLock();
            //
            // Initialize
            //
            Feature feature = null;
            //
            // Get current EFeature or EFeature data compatible EObject
            //
            EObject eObject = eReader.get();
            //
            // Adapt given object to EFeature structure
            //
            EFeature eFeature = eAdapt(eStructure, eObject, eHints);
            //
            // Get feature from EFeature
            //
            feature = eFeature.getData(eTx);
            //
            // Implements ESimpleFeature?
            //
            if(feature instanceof ESimpleFeature) {
                //
                // This is always the case if EFeatureInternal is used. 
                //
                return (ESimpleFeature)feature;
            } else {
                //
                // If EFeatureInternal is NOT used, this may be required since 
                // the getData() method of EFeature defines Feature, not 
                // SimpleFeature. Since use of EFeatureInternal is strongly 
                // recommended (solves several general problems, like the context 
                // startup problem etc.), a WARNING message is issued telling them that
                // the this operation may be unsafe. 
                //
                LOGGER.log(Level.WARNING,"Non-standard Feature implementation " +
                		"found. Unpredictable behavior may occur.");
                //
                // Forward ESimpleFeature delegate
                //
                return new ESimpleFeatureDelegate(eStructure, eFeature, (SimpleFeature)feature, eHints);
            }

        } finally {
            //
            // Release lock on structure
            //
            eStructure.eUnlock();
            //
            // Progress to next feature
            //
            eReader.next();
        }        
    }

