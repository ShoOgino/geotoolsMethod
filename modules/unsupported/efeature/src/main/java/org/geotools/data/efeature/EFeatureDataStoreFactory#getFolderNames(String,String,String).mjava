    /**
     * Get {@link EFeature} folder names from given {@link EFeatureContext}
     * 
     * @param eContextID - {@link EFeatureContext} instance extension point id
     * @param eNsURI - {@link EPackage} defining {@link EObject}s containing {@link EFeature}s or
     *        {@link EFeature} compatible data.
     * @param eQuery - query used to select which {@link EFeature} folders to include
     * @return an array of {@link EFeature} folder names if found, <code>empty</code> array
     *         otherwise.
     */
    public static String[] getFolderNames(String eContextID, String eNsURI, String eQuery) {
        EFeatureContextInfo eInfo = eGetContextFactory().eStructure(eContextID);
        if (eInfo != null) {
            EFeaturePackageInfo d = eInfo.eGetPackageInfo(eNsURI);
            if (d != null) {
                return d.eGetFolderNames(eQuery);
            }
        }
        return new String[] {};
    }

