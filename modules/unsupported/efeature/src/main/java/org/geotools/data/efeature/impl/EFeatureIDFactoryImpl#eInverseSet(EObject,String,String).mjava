    protected String eInverseSet(EObject eObject, String eNewID, String eSetID) {
        if((eObject instanceof EFeature)) {
            if(!eNewID.equals(eSetID)) {
                if(eObject instanceof EFeatureImpl) {
                    return ((EFeatureImpl)eObject).eImpl().eSetID(eNewID, false);
                } else if(eObject instanceof EFeatureDelegate) {
                    return ((EFeatureDelegate)eObject).eImpl().eSetID(eNewID, false);
                }
                //
                // ------------------------------------------------------
                //  This is not recommended, but let's try it out ...
                // ------------------------------------------------------
                //  Just as implementors or EObject are expected to 
                //  implement InternalEObject, implementors of EFeature
                //  are expected to implement EFeatureInternal or 
                //  EFeatureDelegate. These implementations have guards 
                //  that break the recursive call sequence 
                //  EFeature.setID() -> EFeatureIDFactory.useID() -> 
                //  EFeature.setID(), handles the context startup 
                //  problem and much more which direct implementors of 
                //  EFeature must handle them selves.
                //
                try {
                    ((EFeature)eObject).setID(eNewID);
                } catch (Exception e) {
                    //
                    // Notify that this is a unrecoverable errors
                    //
                    String msg = "Erroneous implementation of EFeature. " +
                    		 "Extend EFeatureImpl or use a EFeatureDelegate. ";
                    //
                    // Log message as severe. This should give the implementor some additional hints...
                    //
                    LOGGER.log(Level.SEVERE, msg + e.getMessage(), e);
                    //
                    // Throw it again
                    //
                    throw ((IllegalArgumentException)(new IllegalArgumentException(msg).initCause(e)));
                }
            }
        }
        return eNewID;
    }

