    protected String eInverseSet(EObject eObject, String eNewID, String eSetID) {
        if ((eObject instanceof EFeature)) {
            if (!eNewID.equals(eSetID)) {
                if (eObject instanceof EFeatureImpl) {
                    return ((EFeatureImpl) eObject).eInternal().eSetID(eNewID, false);
                } else if (eObject instanceof EFeatureDelegate) {
                    return ((EFeatureDelegate) eObject).eInternal().eSetID(eNewID, false);
                }
                //
                // ------------------------------------------------------
                //  !!! EFeature not implemented !!!
                // ------------------------------------------------------
                //  Just as implementors or EObject are expected to
                //  implement InternalEObject, implementors of EFeature
                //  are expected to implement EFeatureInternal or
                //  EFeatureDelegate. These implementations have guards
                //  that break the recursive call sequence
                //  EFeature.setID() -> EFeatureIDFactory.useID() ->
                //  EFeature.setID(), handles the context startup
                //  problem and much more which direct implementors of
                //  EFeature must handle themselves. Try
                //
                //
                //  This will probably fail, but let's try it out anyway ...
                //
                try {
                    ((EFeature) eObject).setID(eNewID);
                } catch (Exception e) {
                    //
                    // Notify that this is a unrecoverable errors
                    //
                    String msg =
                            "EFeature is implemented correctly. "
                                    + "Extend EFeatureImpl or use a EFeatureDelegate instead. ";
                    //
                    // Log message as severe. This should give the implementor some additional
                    // hints...
                    //
                    LOGGER.log(Level.SEVERE, msg + e.getMessage(), e);
                    //
                    // Throw it again
                    //
                    throw ((IllegalArgumentException)
                            (new IllegalArgumentException(msg).initCause(e)));
                }
            }
            return eNewID;
        }
        //
        // This should never happen...
        //
        throw new IllegalArgumentException("'" + eObject + " does not implement EFeature");
    }

