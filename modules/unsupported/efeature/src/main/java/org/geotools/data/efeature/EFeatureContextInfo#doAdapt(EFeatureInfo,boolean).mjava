    /**
     * Adapt given {@link EFeatureInfo} to this {@link EFeatureContextInfo#eContext() context}
     * <p>
     * <b>NOTE</b>: This method attaches the {@link EFeatureInfo} instance 
     * with given {@link EFeatureContext context} {@link EFeatureContextInfo structure}, 
     * and adds the {@link EClass#getEIDAttribute()} to the 
     * {@link EFeatureContext#eIDFactory()}.
     * </p>
     * @param eInfo - {@link EFeatureInfo} instance to adapt into this context 
     * @param copy - if <code>true</code>, copy {@link EFeatureInfo} instance
     * into this context. If <code>false</code>, claim it (move into this context). 
     * @return new {@link EFeatureInfo} instance if copy, same otherwise
     * @throws IllegalArgumentException If adaption failed.
     */
    protected EFeatureInfo doAdapt(EFeatureInfo eInfo, boolean copy) {     
        //
        // Clone EFeature structure?
        //
        if(copy) {
            //
            // Do a deep copy.
            //
            eInfo = new EFeatureInfo(eInfo,this);
        } else {            
            //
            // Adapt structure to this context 
            //
            eInfo.eAdapt(this);
        }
        //
        // ----------------------------------------------
        //  Attach to context
        // ----------------------------------------------
        //  This is an important step because:
        //  1) It makes the context structure aware of
        //  2) It allows the structure validation method  
        //     to map it to package structure (folder).
        //  3) If it fails now, nothing is yet added to 
        //     the context
        // ----------------------------------------------
        EFeatureStatus eStatus;
        if((eStatus = doAttach(eInfo)).isFailure()) {
            //
            // Notify 
            //
            throw new IllegalArgumentException("EFeatureInfo " + 
                    eInfo.eName() + " could not be adapted: " + eStatus.getMessage());            
        }
        //
        // Get this context
        //
        EFeatureContext eContext = eContext(false);
        //
        // Get EClass implementing EFeature
        //
        EClass eClass = eInfo.eClass();
        //
        // Add ID attribute to ID factory?
        //
        if(!eContext.eIDFactory().creates(eInfo.eIDAttribute())) {
            eContext.eIDFactory().add(eClass, eInfo.eIDAttribute());
        }
        //
        // Add package if not contained by new context
        //
        EPackage ePackage = eInfo.eClass().getEPackage();
        if(!eContext.contains(ePackage)) {
            //
            // Add package to the structure
            //
            eContext.eAdd(ePackage);
            //
            // ----------------------------------------------
            //  Validate the structure from context down
            // ----------------------------------------------
            //  This is an important step because:
            //  1) It will add create "eURI/eDomain/eFolder"
            //     structures, which given EFeatureInfo 
            //     instance is added to if possible.
            //  2) More to come...
            // ----------------------------------------------
            validate();
        }
        
        //
        // Finished
        //
        return eInfo;
    }

