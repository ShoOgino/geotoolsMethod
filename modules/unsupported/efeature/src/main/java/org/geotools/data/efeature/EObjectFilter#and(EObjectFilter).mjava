    /**
     * Creates a new filter combining me with another as a boolean conjunction. The "and" operation
     * short-circuits; the <code>other</code> filter is not consulted when I (the first filter) do
     * not match.
     *
     * @param other another filter (must not be <code>null</code>)
     * @return a new "and" filter
     */
    public final EObjectFilter and(final EObjectFilter other) {
        return new EObjectFilter() {
            @Override
            public boolean matches(Object object) {
                return EObjectFilter.this.matches(object) && other.matches(object);
            }
        };
    }

