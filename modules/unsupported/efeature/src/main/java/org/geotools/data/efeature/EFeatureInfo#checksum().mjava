    /**
     * Calculate structure checksum.
     *
     * <p>This method calculates the checksum by repeatedly applying {@link
     * #eFeatureUID(EStructuralFeature)} on every {@link EStructuralFeature} in this structure,
     * concatenating them together and finally calculating a checksum from the concatenated string
     * of unique feature IDs.
     *
     * @return a {@link Adler32} checksum for given structure
     */
    protected final Long checksum() {
        //
        // Prepare array of IDs
        //
        List<String> eIDs = new ArrayList<String>();
        //
        // Add EFeature ID EAttribute feature ID
        //
        eIDs.add(eFeatureUID(eIDAttribute()));
        //
        // Add all EAttribute feature IDs
        //
        for (EAttribute it : eGetAttributeMap(true).values()) {
            eIDs.add(eFeatureUID(it));
        }
        //
        // Add reference?
        //
        if (!isRoot()) {
            eIDs.add(eFeatureUID(eReference()));
        }
        //
        // Sort array (structure is unordered, order it to ensure equal checksum)
        //
        Collections.sort(eIDs);
        //
        // Calculate checksum (Adler32 is much faster then CRC-32 and almost as accurate)
        //
        Adler32 a = new Adler32();
        a.update(Arrays.toString(eIDs.toArray()).toString().getBytes());
        //
        // Finished
        //
        return a.getValue();
    }

