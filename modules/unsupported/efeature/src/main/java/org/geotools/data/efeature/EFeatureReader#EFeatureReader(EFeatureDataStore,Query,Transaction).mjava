    /**
     * The {@link EFeatureReader} constructor.
     *
     * @param eDataStore - {@link EFeatureDataStore} instance containing {@link EFeature} resource
     *     information
     * @param query - {@link Query} instance. Note that {@link Query#getTypeName()} is expected to
     *     be a name of a {@link SimpleFeatureType} in given data store.
     *     <p>{@link SimpleFeatureType} names have the following format:
     *     <pre>
     * eName=&lt;eFolder&gt;.&lt;eReference&gt;
     *
     * where
     *
     * eFolder = {@link EFeature} folder name
     * eReference = {@link EFeature} reference name
     * </pre>
     *
     * @throws IOException
     */
    protected EFeatureReader(EFeatureDataStore eDataStore, Query query, Transaction eTx)
            throws IOException {
        //
        // Cache references
        //
        this.eDataStore = new WeakReference<EFeatureDataStore>(eDataStore);
        this.eStructure = eDataStore.eStructure().eGetFeatureInfo(query.getTypeName());
        this.eReader = new EFeatureAttributeReader(eDataStore, query);
        this.eTx = eTx;
        //
        // Copy query hints
        //
        if (query.getHints() instanceof EFeatureHints) {
            this.eHints = new EFeatureHints(query.getHints());
        } else {
            this.eHints = new EFeatureHints(this.eStructure.eHints);
            this.eHints.add(query.getHints());
        }
    }

