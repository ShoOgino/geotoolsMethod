    /**
     * Validate structure against the {@link #eContext()}.
     * @throws IllegalStateException If {@link #isDisposed() disposed}.
     */
    public EFeatureStatus validate()
    {
        //
        // 1) Verify that not disposed
        //
        if(isDisposed)
        {
            return failure(this, eContextID, "Is disposed");
        }
        //
        // Invalidate structure
        //
        invalidate(false);
        //
        // 2) Verify that a EFeatureIDFactory instance is given
        //
        if(eContext(false).eIDFactory()==null)
        {
            return failure(this, eContextID, "No EFeatureIDFactory instance found");
        }
        //
        // Synchronize with EFeatureContext counterpart. 
        //
        EChange eChange = new EChange();
        Map<String,EFeaturePackageInfo> ePackageMap = eChange.synchronize(this);        
        //
        // 3) Validate all packages 
        //
        for(EFeaturePackageInfo it : ePackageMap.values())
        {
            EFeatureStatus s;
            if((s = it.validate()).isFailure())
            {
               return s; 
            }
        }
        //
        // Commit changes to structure
        //
        eChange.commit(this);
        //
        // Finished 
        //
        return structureIsValid(eContextID());
    }

