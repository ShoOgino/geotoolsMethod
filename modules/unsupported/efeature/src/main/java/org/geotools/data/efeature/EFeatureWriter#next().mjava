    @Override
    public ESimpleFeature next() throws IOException {
        if (eReader == null) {
            throw new IOException("Writer has been closed");
        }
        String fid = null;
        try {
            //
            // Get flag
            //
            boolean bHasNext = hasNext();
            //
            // Has more features?
            //
            if (isUpdating() && bHasNext) {
                //
                // Grab next feature matching given query
                //
                eNext = eReader.next();
                //
                // Create live copy
                //
                eLive = new ESimpleFeatureImpl(eNext, eReader.eTx);
                //
                // Finished
                //
                return eLive;
                
            } else if(isAppending()) {
                //
                //  No more EObject found, create new from structure
                //
                EFeature eFeature = eNewInstance();
                //
                // Get default values
                //
                Object eValues[] = DataUtilities.defaultValues(getFeatureType());
                //
                // Set default values
                //
                eSetValues(eFeature, Arrays.asList(eValues));
                //
                // Finished
                //
                return (ESimpleFeature)eFeature.getData(eReader.eTx);
            }
            //
            // Illegal writer mode
            //
            if(bHasNext) {
                throw new IOException("EFeatureWriter does allow updates");
            } else {
                throw new IOException("EFeatureWriter does allow appending");                
            }
            
        } catch (IllegalAttributeException e) {
            String message = "Problem creating feature "
                    + (fid != null ? fid : "");
            throw new DataSourceException(message, e);
        }    
    }

