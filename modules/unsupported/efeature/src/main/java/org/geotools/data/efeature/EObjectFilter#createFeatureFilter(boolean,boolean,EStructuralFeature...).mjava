    /**
     * Creates a filter matching specified features.
     * 
     * @param all - if <code>true</code>, all features must match
     * @param negated - if <code>true</code>, concatenation is negated
     * @param features - structural features
     * 
     * @return the filter
     */
    public static EObjectFilter createFeatureFilter(final boolean all, final boolean negated,
            final EStructuralFeature... features) {
        return new EObjectFilter() {
            @Override
            public boolean matches(Object object) {
                if (object instanceof EStructuralFeature) {
                    int count = 0;
                    EStructuralFeature match = (EStructuralFeature) object;
                    for (EObject it : features) {
                        if (EcoreUtil.equals(match, it)) {
                            count++;
                            if (!all)
                                break;
                        } else if (all) {
                            count = 0;
                            break;
                        }
                    }
                    return (all ? count > 0 : count == 1);
                }
                return false;
            }
        };
    }

