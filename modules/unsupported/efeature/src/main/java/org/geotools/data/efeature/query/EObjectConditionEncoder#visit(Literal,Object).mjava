    /**
     * Get literal or it's value.
     * <p>
     * 
     * @param expression - the expression to visit
     * @param toValue - if {@link Boolean#TRUE TRUE}, push and return {@link Literal#getValue()
     *        literal value}, otherwise push and return the {@link Literal} itself.
     * 
     * @return a {@link Object value} or the {@link Literal itself} instance depending on 'toValue'
     *         flag
     * 
     */
    @Override
    public Object visit(Literal expression, Object toValue) {

        // Initialize
        //
        Object literal = expression;

        // Get parse flag
        //
        boolean bFlag = (toValue instanceof Boolean ? (Boolean) toValue : false);

        // Get literal value?
        //
        if (bFlag) {
            // Get literal value
            //
            literal = expression.evaluate(null);

            // If that failed, grab the value as is
            //
            if (literal == null) {
                literal = expression.getValue();
            }

        } else if (literal == null) {
            literal = Expression.NIL;
        }

        // Push to stack
        //
        eExpressionStack.push(literal);

        // Finished
        //
        return literal;

    }

