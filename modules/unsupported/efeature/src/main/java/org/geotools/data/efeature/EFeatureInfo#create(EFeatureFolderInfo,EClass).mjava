    /**
     * Create EFeature {@link EFeatureInfo structure} from 
     * given EMF {@link EClass class} in given {@link EFeatureFolderInfo folder}.
     * <p>
     * <b>NOTE</b>: This method attaches the {@link EFeatureInfo} instance 
     * with given {@link EFeatureContext context} {@link EFeatureContextInfo structure}, 
     * and adds the {@link EClass#getEIDAttribute()} to the 
     * {@link EFeatureContext#eIDFactory()}.
     * </p>
     * @param eFolderInfo - the {@link EFeatureFolderInfo folder} instance 
     * @param eClass - {@link EFeature} or EFeature compatible EMF {@link EClass class} . 
     * @return a new {@link EFeatureInfo} instance if not defined, 
     * or the existing structure if defined
     */
    protected static EFeatureInfo create(
            EFeatureFolderInfo eFolderInfo, EClass eClass) {
        //
        // Get structure information
        //
        String eNsURI = eFolderInfo.eNsURI;
        String eFolderName = eFolderInfo.eName;
        //
        // Get context information
        //
        EFeatureContext eContext = eFolderInfo.eContext(false);
        //
        // Check cache first
        //
        EFeatureInfo eInfo = eContext.eStructure().eGetFeatureInfo(eFolderName, eClass);
        //
        // Was not cached?
        //
        if (eInfo == null) {
            //
            // Create new instance
            //
            eInfo = new EFeatureInfo();
            //
            // Set context
            //
            eInfo.eFactory = eFolderInfo.eFactory;
            eInfo.eContext = eFolderInfo.eContext;
            eInfo.eContextID = eContext.eContextID();
            //
            // Set construction hints
            //
            eInfo.eHints = (eFolderInfo.eHints != null ? eFolderInfo.eHints : new EFeatureHints());
            //
            // Get SRID from hints
            //
            eInfo.srid = eGetSRID(eInfo.eHints);
            //
            // Forward
            //
            eInfo = define(eInfo, eContext, eNsURI, eFolderName, eClass);
        }
        //
        // Finished
        //
        return eInfo;
    }

