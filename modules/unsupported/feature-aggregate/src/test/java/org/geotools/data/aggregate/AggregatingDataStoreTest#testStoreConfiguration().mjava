    @Test
    public void testStoreConfiguration() throws IOException {
        store.autoConfigureStores(Arrays.asList("store1", "store2", "gt:store3"));

        // check we have the expected set of types, in the expected order
        Set<String> types = new LinkedHashSet<String>();
        types.addAll(Arrays.asList(store1.getTypeNames()));
        types.addAll(Arrays.asList(store2.getTypeNames()));
        types.addAll(Arrays.asList(store3.getTypeNames()));
        String[] expected = (String[]) types.toArray(new String[types.size()]);
        assertArrayEquals(expected, store.getTypeNames());

        // grab the BasicPolygon type map and check it looks fine
        AggregateTypeConfiguration config = store.getConfigurations().get(BASIC_POLYGONS);
        assertEquals(BASIC_POLYGONS, config.getName());
        assertEquals(2, config.getStoreMap().size());
        assertEquals(BASIC_POLYGONS, config.getStoreMap().get(new NameImpl("store1")));
        assertEquals(BASIC_POLYGONS, config.getStoreMap().get(new NameImpl("store2")));

        // grab the Streams type map and check it looks fine
        config = store.getConfigurations().get("Streams");
        assertEquals("Streams", config.getName());
        assertEquals(1, config.getStoreMap().size());
        assertEquals("Streams", config.getStoreMap().get(new NameImpl("store2")));

        // grab the RoadSegments type map and check it looks fine
        config = store.getConfigurations().get(ROAD_SEGMENTS);
        assertEquals(ROAD_SEGMENTS, config.getName());
        assertEquals(2, config.getStoreMap().size());
        assertEquals(ROAD_SEGMENTS, config.getStoreMap().get(new NameImpl("store1")));
        assertEquals(ROAD_SEGMENTS, config.getStoreMap().get(new NameImpl("gt", "store3")));
    }

