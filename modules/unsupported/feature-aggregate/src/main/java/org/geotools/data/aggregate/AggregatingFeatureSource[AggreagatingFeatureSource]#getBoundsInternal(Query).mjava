    @Override
    protected ReferencedEnvelope getBoundsInternal(Query query) throws IOException {
        // schedule all the bound queries
        AggregatingDataStore store = getStore();
        List<Future<ReferencedEnvelope>> allBounds = new ArrayList<Future<ReferencedEnvelope>>();
        for (SourceType st : config.getSourceTypes()) {
            Future<ReferencedEnvelope> f =
                    store.submit(
                            new BoundsCallable(store, query, st.getStoreName(), st.getTypeName()));
            allBounds.add(f);
        }

        // aggregate the envelopes
        ReferencedEnvelope result =
                new ReferencedEnvelope(getSchema().getCoordinateReferenceSystem());
        for (Future<ReferencedEnvelope> future : allBounds) {
            try {
                ReferencedEnvelope bound = future.get();
                if (bound != null) {
                    // the inputs might have slightly different crs, compensate
                    Envelope env = new Envelope(bound);
                    result.expandToInclude(env);
                }
            } catch (Exception e) {
                throw new IOException("Failed to get the envelope from a delegate store", e);
            }
        }
        if (result.isNull()) {
            return null;
        } else {
            return result;
        }
    }

