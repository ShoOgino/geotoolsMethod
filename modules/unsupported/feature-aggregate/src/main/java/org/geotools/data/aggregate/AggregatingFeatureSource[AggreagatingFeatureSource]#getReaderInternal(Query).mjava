    @Override
    protected FeatureReader<SimpleFeatureType, SimpleFeature> getReaderInternal(Query query)
            throws IOException {
        try {
            // get the target schema from the primary store
            Query psQuery = new Query(query);
            Name psName = config.getPrimarySourceType().getStoreName();
            psQuery.setTypeName(config.getPrimarySourceType().getTypeName());
            DataStore ps = getStore().getStore(psName, false);
            SimpleFeatureType target = DataUtilities.createView(ps, psQuery).getSchema();
            target = retypeNameSchema(target);

            // schedule all the data retrieval operations
            FeatureQueue queue = new FeatureQueue(config.getSourceTypes().size());
            AggregatingDataStore store = getStore();
            for (SourceType st : config.getSourceTypes()) {
                FeatureCallable fc = new FeatureCallable(store, query, st.getStoreName(),
                        st.getTypeName(), queue, target);
                queue.addSource(fc);
                store.submit(fc);
            }

            // build a reader out of the queue
            SimpleFeatureReader reader = new QueueReader(queue, target);
            return reader;
        } catch (SchemaException e) {
            throw new IOException("Failed to compute target feature type", e);
        }
    }

