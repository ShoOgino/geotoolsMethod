    /**
     * Builds a feature iterator that will sort the specified iterator contents following the
     * {@link SortBy} directives given. The iterator provided will be closed by this routine.
     * 
     * @param reader The reader whose contents need sorting
     * @param sortBy The sorting directives
     * @param maxFeatures The max number of features to keep in memory
     * @param maxFiles The max number of files the merge/sort algorithm can keep open concurrently
     * @return
     * @throws IOException
     */
    public static final SimpleFeatureIterator getSortedIterator(SimpleFeatureIterator iterator,
            SimpleFeatureType schema, SortBy[] sortBy, int maxFeatures, int maxFiles)
            throws IOException {
        DelegateSimpleFeatureReader reader = new DelegateSimpleFeatureReader(schema, iterator);
        SimpleFeatureReader sorted = getSortedReader(reader, sortBy, maxFeatures, maxFiles);
        return new FeatureReaderFeatureIterator(sorted);
    }

