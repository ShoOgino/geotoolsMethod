    /**
     * Writes the source file (.SRC). The default byte order is BIG_ENDIAN.
     *
     * @param gc The GridCoverage to write
     * @param dest The destination object (can be a File or ZipOutputStream)
     * @throws FileNotFoundException If the destination file could not be found
     * @throws IOException If the file could not be written
     */
    private void writeSRC(GridCoverage2D gc, final String name, Object dest)
            throws FileNotFoundException, IOException {

        // /////////////////////////////////////////////////////////////////////
        // TODO @task @todo
        // Here I am making the assumption that the non geophysiscs view is 8
        // bit but it can also be 16. I should do something more general like a
        // clamp plus a format but for the moment this is enough.
        //
        // We need also to get the one visible band
        //
        // /////////////////////////////////////////////////////////////////////
        RenderedImage image = gc.getRenderedImage();
        try (ImageOutputStream out = getImageOutputStream(dest, image, name + ".SRC")) {
            // setting byte order
            out.setByteOrder(java.nio.ByteOrder.BIG_ENDIAN);

            // /////////////////////////////////////////////////////////////////////
            //
            // Prepare to write
            //
            // /////////////////////////////////////////////////////////////////////
            image = untileImage(image);

            final ParameterBlockJAI pbj = new ParameterBlockJAI("imagewrite");
            pbj.addSource(image);
            pbj.setParameter("Format", "raw");
            pbj.setParameter("Output", out);
            JAI.create("ImageWrite", pbj);

            out.flush();

            if (dest instanceof ZipOutputStream) {
                ((ZipOutputStream) dest).closeEntry();
            }
        }
    }

