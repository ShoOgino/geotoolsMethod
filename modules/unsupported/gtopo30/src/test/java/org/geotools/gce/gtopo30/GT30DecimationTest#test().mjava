    /**
     * Testing reader and writer for gtopo. This test first of all read an existing gtopo tessel
     * into a coverage object, therefore it writes it back onto the disk. Once the coverage is
     * written back\ it loads it again building a new coverage which is finally visualized.
     */
    public void test() throws Exception {

        URL statURL =
                TestData.url(this, (new StringBuffer(this.fileName).append(".DEM").toString()));
        AbstractGridFormat format = new GTopo30FormatFactory().createFormat();

        if (format.accepts(statURL)) {

            /** STEP 1 Reading the coverage into memory in order to write it down again */
            // get a reader
            AbstractGridCoverage2DReader reader = format.getReader(statURL);

            // get a grid coverage
            final ParameterValueGroup params = reader.getFormat().getReadParameters();
            params.parameter(AbstractGridFormat.READ_GRIDGEOMETRY2D.getName().toString())
                    .setValue(
                            new GridGeometry2D(
                                    new GridEnvelope2D(new Rectangle(0, 0, 640, 480)),
                                    reader.getOriginalEnvelope()));
            gc = reader.read(params.values().toArray(new GeneralParameterValue[1]));
            if (TestData.isInteractiveTest()) {
                //				 logging some info
                logger.info(gc.getCoordinateReferenceSystem2D().toWKT());
                logger.info(gc.toString());
                gc.show();
            } else {
                PlanarImage.wrapRenderedImage(gc.getRenderedImage()).getTiles();
            }
        }
    }

