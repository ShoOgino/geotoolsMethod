    /**
     * Constructor.
     *
     * @param cPathName The path to this file
     *
     * @throws IOException if the path or the file are invalid
     * @throws SchemaException if the contained feature type can not be
     *         constructed
     */
    public VPFFile(String cPathName) throws IOException, SchemaException {
        pathName = cPathName;
        inputStream = new RandomAccessFile(cPathName, ACCESS_MODE);
        readHeader();

        GeometryDescriptor gat = null;
        VPFColumn geometryColumn = null;

        Iterator iter = columns.iterator();
        while (iter.hasNext()) {
            geometryColumn = (VPFColumn) iter.next();

            if (geometryColumn.isGeometry()) {
                gat = geometryColumn.getGeometryAttributeType();

                break;
            }
        }

        SimpleFeatureType superType = null;
        // if it's a text geometry feature type add annotation as a super type
        if (pathName.endsWith(TEXT_PRIMITIVE)) {
            superType =  AnnotationFeatureType.ANNOTATION;
        }
         
        SimpleFeatureTypeBuilder b = new SimpleFeatureTypeBuilder();
        b.setName( cPathName );
        b.setNamespaceURI("VPF");
        b.setSuperType(superType);
        b.addAll( columns );
        b.setDefaultGeometry(gat.getLocalName());
        featureType = b.buildFeatureType();
    }

