    /**
     * Constructor which defaults the containing database to null and looks up the first (and
     * presumably only) entry in the library attribute table
     *
     * @param dir the containing directory
     * @param namespace the namespace to create features with.
     * @throws SchemaException For problems making one of the feature classes as a FeatureType.
     */
    public VPFLibrary(SimpleFeature libraryFeature, File dir, URI namespace)
            throws IOException, SchemaException {
        // read libraries info
        String vpfTableName = new File(dir, LIBRARY_HEADER_TABLE).toString();
        VPFFile lhtFile = VPFFileFactory.getInstance().getFile(vpfTableName);
        lhtFile.reset();
        this.namespace = namespace != null ? namespace : DEFAULT_NAMESPACE;
        try {
            lhtFile.readFeature(); // check for errors
        } catch (IllegalAttributeException exc) {
            LOGGER.log(Level.FINE, "", exc);
            throw new IOException("Illegal values in library attribute table");
        }
        if (libraryFeature != null) {
            xmin = ((Number) libraryFeature.getAttribute(FIELD_XMIN)).doubleValue();
            ymin = ((Number) libraryFeature.getAttribute(FIELD_YMIN)).doubleValue();
            xmax = ((Number) libraryFeature.getAttribute(FIELD_XMAX)).doubleValue();
            ymax = ((Number) libraryFeature.getAttribute(FIELD_YMAX)).doubleValue();
        } else {
            xmin = -180;
            ymin = -90;
            xmax = 180;
            ymax = 90;
        }
        directory = dir;
        // What about looking up the LAT from the previous directory? Or, can you get what you need
        // from the LHT?
        String directoryName = directory.getPath();
        libraryName = directoryName.substring(directoryName.lastIndexOf(File.separator) + 1);
        setCoverages();
    }

