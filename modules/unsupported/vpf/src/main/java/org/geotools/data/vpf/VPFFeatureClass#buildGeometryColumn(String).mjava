    /**
     * Create a geometry column (usually for feature classes that
     * make use of tiles so simple joins can not be used)
     * @param table The name of the table containing the geometric primitives
     * @return An <code>AttributeType</code> for the geometry column which is actually a <code>GeometryAttributeType</code>
     */
    private AttributeDescriptor buildGeometryColumn(String table) {
        AttributeDescriptor result = null;

        table = table.trim().toLowerCase();

        // Why would the fileList already contain a null?
        //      if(!fileList.contains(null)){
        CoordinateReferenceSystem crs = getCoverage().getLibrary().getCoordinateReferenceSystem();
        if(crs != null){
            result = new AttributeTypeBuilder().binding( Geometry.class )
                .nillable(true).length(-1).crs(crs).buildDescriptor("GEOMETRY");
        }else{
            result = new AttributeTypeBuilder().binding( Geometry.class )
                .nillable(true).buildDescriptor("GEOMETRY");
        }
        columns.add(result);

        setGeometryFactory(table);

        //      }
        return result;
    }

