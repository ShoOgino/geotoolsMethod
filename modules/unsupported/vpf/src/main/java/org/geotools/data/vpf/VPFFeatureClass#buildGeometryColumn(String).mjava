    /**
     * Create a geometry column (usually for feature classes that make use of tiles so simple joins
     * can not be used)
     *
     * @param table The name of the table containing the geometric primitives
     * @return An <code>AttributeType</code> for the geometry column which is actually a <code>
     *     GeometryAttributeType</code>
     */
    private synchronized VPFColumn buildGeometryColumn(String table) {
        AttributeDescriptor descriptor = null;
        table = table.trim().toUpperCase();

        if (this.debug) {
            System.out.println("buildGeometryColumn: " + table);
        }

        CoordinateReferenceSystem crs = getCoverage().getLibrary().getCoordinateReferenceSystem();
        if (crs != null) {
            descriptor =
                    new AttributeTypeBuilder()
                            .binding(Geometry.class)
                            .nillable(true)
                            .length(-1)
                            .crs(crs)
                            .buildDescriptor("GEOMETRY");
        } else {
            descriptor =
                    new AttributeTypeBuilder()
                            .binding(Geometry.class)
                            .nillable(true)
                            .buildDescriptor("GEOMETRY");
        }

        VPFColumn result = new VPFColumn("GEOMETRY", descriptor); // how to construct
        setGeometryFactory(table);

        return result;
    }

