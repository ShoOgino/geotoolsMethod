    /**
     * Builds feature classes for the coverage
     *
     * @throws SQLException
     */
    private void discoverFeatureClasses() throws IOException, SchemaException {
        VPFFeatureClass featureClass = null;
        // boolean hasFeatureClass;
        String fcsFileName = pathName + File.separator + TABLE_FCS;
        // AbstractSet featureClassNames = new HashSet();
        String featureClassName;

        // We need to record all of the possible files
        // for each of the feature classes in this coverage
        VPFFile file = VPFFileFactory.getInstance().getFile(fcsFileName);

        // We might want to grab the FCS list and pass it to the feature class
        // constructor just to save time.
        Iterator iter = file.readAllRows().iterator();
        while (iter.hasNext()) {
            SimpleFeature row = (SimpleFeature) iter.next();
            featureClassName = row.getAttribute("feature_class").toString().trim();
            featureClass = new VPFFeatureClass(this, featureClassName, pathName, namespace);
            featureClasses.add(featureClass);
        }
    }

