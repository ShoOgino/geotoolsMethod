    @Override
    public ContentFeatureSource getFeatureSource(String typeName) throws IOException {

        VPFFeatureSource featureSource = VPFFeatureSource.getFeatureSource(typeName);
        if (featureSource == null) {
            featureSource = VPFFeatureSource.getFeatureSource(typeName.toUpperCase());
        }

        if (featureSource == null) {
            VPFFeatureType featureType = typeMap.get(typeName);
            if (featureType == null) {
                featureType = typeMap.get(typeName.toUpperCase());
            }
            if (featureType != null) {
                String featureTypeName = featureType.getTypeName();
                Query query = new Query(Query.ALL);
                ContentEntry entry = this.entry(new NameImpl(featureTypeName));
                featureSource = new VPFCovFeatureSource(featureType, entry, query);
            }
        }

        if (featureSource == null) {
            if (VPFDataStoreFactory.isLoggable(Level.FINEST)) {
                System.out.println("VPFLibrary.getFeatureSource returned null");
                System.out.println(typeName);
            }
            Query query = new Query(Query.ALL);
            ContentEntry entry = this.entry(new NameImpl(typeName));
            featureSource = new VPFLibFeatureSource(entry, query);
        }
        return featureSource;
    }

