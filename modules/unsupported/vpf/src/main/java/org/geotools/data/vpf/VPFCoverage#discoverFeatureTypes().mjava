    /**
     * The point of this block of code is to scan the CHAR.VDT file for FACC codes. There is a one
     * to one relationship between FACC codes and feature types, but there is a one to many
     * relationship between feature classes and feature types/FACC codes. Since objects are stored
     * in the file system by feature class, this mechanism allows us to separate features of
     * different feature types in the same feature class.
     *
     * <p>Some coverages do not have a CHAR.VDT file. In these cases, there is a 1:1:1 relationship
     * between the coverage, feature class, and feature type.
     */
    private void discoverFeatureTypes() {
        try {
            Iterator charVDTIter = getCharVDT().readAllRows().iterator();

            while (charVDTIter.hasNext()) {
                // Figure out which featureClass owns it
                SimpleFeature row = (SimpleFeature) charVDTIter.next();
                // String attr = row.getAttribute("attribute").toString().trim().toLowerCase();

                // if (!ALLOWED_FCODE_ATTRIBUTES_LIST.contains(attr)) continue;

                String tableFileName = row.getAttribute("table").toString().trim().toUpperCase();

                // We need to go through all of this
                // so that entries match what is in FCS
                String featureClassName =
                        tableFileName.substring(0, tableFileName.indexOf(".")).toLowerCase();
                Iterator featureClassIter = featureClasses.iterator();

                while (featureClassIter.hasNext()) {
                    VPFFeatureClass featureClass = (VPFFeatureClass) featureClassIter.next();

                    if (featureClassName.equalsIgnoreCase(featureClass.getTypeName())) {
                        VPFFeatureType featureType = new VPFFeatureType(featureClass, row);
                        featureTypes.add(featureType);

                        break;
                    }
                }
            }
        } catch (IOException exc) {
            // If there is no char.vdt,
            // we can assume there is only one feature type
            // and only one feature class
            VPFFeatureClass coverageClass = (VPFFeatureClass) featureClasses.get(0);
            VPFFeatureType featureType = new VPFFeatureType(coverageClass);
            featureTypes.add(featureType);
        }
    }

