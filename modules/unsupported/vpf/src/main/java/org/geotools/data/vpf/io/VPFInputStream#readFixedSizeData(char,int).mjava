    /**
     * Describe <code>readFixedSizeData</code> method here.
     *
     * @param dataType a <code>char</code> value
     * @param instancesCount an <code>int</code> value
     * @return an <code>Object</code> value
     * @exception IOException if an error occurs
     */
    protected Object readFixedSizeData(char dataType, int instancesCount) throws IOException {
        Object result = null;

        switch (dataType) {
            case DATA_TEXT:
            case DATA_LEVEL1_TEXT:
            case DATA_LEVEL2_TEXT:
            case DATA_LEVEL3_TEXT:
                byte[] dataBytes = new byte[instancesCount * DataUtils.getDataTypeSize(dataType)];
                input.readFully(dataBytes);
                result = DataUtils.decodeData(dataBytes, dataType);

                break;

            case DATA_SHORT_FLOAT:
                result = new Float(readFloat());

                break;

            case DATA_LONG_FLOAT:
                result = new Double(readDouble());

                break;

            case DATA_SHORT_INTEGER:
                result = Short.valueOf(readShort());

                break;

            case DATA_LONG_INTEGER:
                result = Integer.valueOf(readInteger());

                break;

            case DATA_NULL_FIELD:
                result = "NULL";

                break;

            case DATA_TRIPLET_ID:
                result = readTripletId();

                break;

            case DATA_2_COORD_F:
                result = readCoord2DFloat(instancesCount);

                break;

            case DATA_2_COORD_R:
                result = readCoord2DDouble(instancesCount);

                break;

            case DATA_3_COORD_F:
                result = readCoord3DFloat(instancesCount);

                break;

            case DATA_3_COORD_R:
                result = readCoord3DDouble(instancesCount);

                break;

            default:
                break;
        } // end of switch (dataType)

        return result;
    }

