    /**
     * Returns a row with a matching value for the provided column
     *
     * @param idName The name of the column to look for, such as "id"
     * @param id An identifier for the requested row
     *
     * @return The first row which matches the ID
     *
     * @throws IllegalAttributeException The feature can not be created due to
     *         illegal attributes in the source file
     */
    public SimpleFeature getRowFromId(String idName, int id) {
        SimpleFeature result = null;

        try {
            // This speeds things up mightily
            String firstColumnName = ((VPFColumn) columns.get(0)).getLocalName();

            if (idName.equals(firstColumnName)) {
                setPosition(id);
                result = readFeature();

                Number value = (Number) result.getAttribute(idName);

                // Check to make sure we got a primary key match
                if ((value == null) || (value.intValue() != id)) {
                    result = null;
                }
            }

            if (result == null) {
                Iterator<SimpleFeature> joinedIter = readAllRows().iterator();
                result = getRowFromIterator(joinedIter, idName, id);
            }
        } catch (IOException exc) {
            exc.printStackTrace();
        }

        return result;
    }

