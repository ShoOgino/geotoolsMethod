    /**
     * Put together a map of VPF files and their corresponding
     * TableRows
     * 
     * @param file
     * @param row
     */
    private Map generateFileRowMap(VPFFile file, SimpleFeature row)
            throws IOException{
        String tileFileName = null;
        Map rows = new HashMap();
        rows.put(file, row);
        Iterator joinIter = featureType.getFeatureClass().getJoinList().iterator();
        while (joinIter.hasNext()) {
            ColumnPair columnPair = (ColumnPair) joinIter.next();
            VPFFile primaryFile = getVPFFile(columnPair.column1);
            VPFFile joinFile = null;
            joinFile = getVPFFile(columnPair.column2);
    
            if (!rows.containsKey(joinFile) && rows.containsKey(primaryFile)) {
                SimpleFeature joinRow = (SimpleFeature) rows.get(primaryFile);
    
                try {
                    int joinID = Integer.parseInt(joinRow.getAttribute(columnPair.column1.getName()).toString());
                    rows.put(joinFile, getVPFFile(columnPair.column2).getRowFromId(columnPair.column2.getName(), joinID));
                } catch (NullPointerException exc) {
                    // Non-matching joins - just put in a NULL
                    rows.put(joinFile, null);
                } catch (IllegalAttributeException exc) {
                    // I really don't expect to see this one
                    exc.printStackTrace();
                    rows.put(joinFile, null);
                }
            }
        }
        return rows;
    
    }

