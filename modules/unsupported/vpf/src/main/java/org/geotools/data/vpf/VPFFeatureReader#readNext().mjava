    /**
     * Read a row and determine if it matches the feature type Three possibilities here: row is null
     * -- hasNext = false, do not try again row matches -- hasNext = true, do not try again row does
     * not match -- hasNext is undefined because we must try again
     *
     * @return Whether we need to read again
     */
    private boolean readNext() throws IOException {
        boolean result = true;
        VPFFile file = (VPFFile) featureType.getFeatureClass().getFileList().get(0);
        hasNext = false;
        SimpleFeature row = null;
        try {
            if (file.hasNext()) {
                row = file.readFeature();
            }
        } catch (IOException exc1) {
            // TODO Auto-generated catch block
            exc1.printStackTrace();
        } catch (IllegalAttributeException exc1) {
            // TODO Auto-generated catch block
            exc1.printStackTrace();
        }
        if ((row == null)) {
            hasNext = false;
            result = false;
        }
        // Exclude objects with a different FACC Code
        else if (featureType.getFaccCode() != null) {
            try {
                Object temp = null;
                for (int i = 0; temp == null && i < ALLOWED_FCODE_ATTRIBUTES.length; i++) {
                    temp = row.getAttribute(ALLOWED_FCODE_ATTRIBUTES[i]);
                }
                String faccCode = temp.toString().trim();
                if (featureType.getFaccCode().equals(faccCode)) {
                    retrieveObject(file, row);
                    hasNext = true;
                    result = false;
                }
            } catch (RuntimeException exc) {
                // Ignore this case because it typically means the f_code is invalid
            }
        }
        return result;
    }

