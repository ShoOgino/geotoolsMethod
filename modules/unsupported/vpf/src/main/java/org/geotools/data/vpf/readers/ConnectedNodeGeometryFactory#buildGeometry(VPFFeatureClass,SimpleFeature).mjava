    /* (non-Javadoc)
     * @see com.ionicsoft.wfs.jdbc.geojdbc.module.vpf.VPFGeometryFactory#buildGeometry(java.lang.String, int, int)
     */
    @Override
    public synchronized Geometry buildGeometry(VPFFeatureClass featureClass, SimpleFeature values)
            throws SQLException, IOException, IllegalAttributeException {
        int nodeId = Integer.parseInt(values.getAttribute("cnd_id").toString());
        //        VPFFeatureType featureType = (VPFFeatureType)values.getFeatureType();

        // Get the right edge table
        String baseDirectory = featureClass.getDirectoryName();
        String tileDirectory = baseDirectory;

        // If the primitive table is there, this coverage is not tiled
        if (!new File(tileDirectory.concat(File.separator).concat(CONNECTED_NODE_PRIMITIVE))
                .exists()) {
            Short tileId =
                    Short.valueOf(Short.parseShort(values.getAttribute("tile_id").toString()));
            VPFLibrary vpf = featureClass.getCoverage().getLibrary();
            String tileName = vpf.getTileMap().get(tileId);

            if (tileName != null) {

                tileDirectory =
                        tileDirectory.concat(File.separator).concat(tileName.toUpperCase()).trim();
            }
        }
        if (!new File(tileDirectory.concat(File.separator).concat(CONNECTED_NODE_PRIMITIVE))
                .exists()) {
            return null;
        }

        String nodeTableName =
                tileDirectory.concat(File.separator).concat(CONNECTED_NODE_PRIMITIVE);
        VPFFile nodeFile = VPFFileFactory.getInstance().getFile(nodeTableName);
        SimpleFeature row = nodeFile.getRowFromId("id", nodeId);
        Geometry result = (Geometry) row.getAttribute("coordinate");
        return result;
    }

