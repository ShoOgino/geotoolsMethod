    /**
     * Returns the value of {@link Tile#getSubsamplingFloor} for the first tile that returns a
     * non-null value. It doesn't matter if the selected tile is not the best one. This method
     * is used only as a hint for begining with a tile having reasonable chances to be cheap,
     * in order to compute an initial cost relatively low.
     *
     * @param node The node where to starts the search (initially the {@linkplain #root}).
     * @param subsampling The requested subsampling.
     * @return A suggested subsampling.
     */
    private static Dimension getSubsamplingFloor(TreeNode node, final Dimension subsampling) {
        final Tile tile = node.tile;
        if (tile != null) {
            final Dimension floor = tile.getSubsamplingFloor(subsampling);
            if (floor != null) {
                return floor;
            }
        }
        node = node.firstChildren();
        while (node != null) {
            final Dimension floor = getSubsamplingFloor(node, subsampling);
            if (floor != null) {
                return floor;
            }
            node = node.nextSibling();
        }
        return subsampling;
    }

