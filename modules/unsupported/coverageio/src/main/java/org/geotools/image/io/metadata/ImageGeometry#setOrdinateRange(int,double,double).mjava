    /**
     * Set the envelope range along the specified dimension. If the dimension is greater
     * than the current envelope dimension, then this dimension is added.
     *
     * @param dimension The dimension to set. It can eventually be greater than {@link #getDimension}.
     * @param minimum   The minimum value along the specified dimension (inclusive).
     * @param maximum   The maximum value along the specified dimension (<strong>inclusive</strong>).
     */
    public void setOrdinateRange(final int dimension, final double minimum, final double maximum) {
        double[] lowers = getLowerCornerAccessor().getUserObject(double[].class);
        double[] uppers = getUpperCornerAccessor().getUserObject(double[].class);
        final int length = dimension + 1;
        if (lowers == null) {
            lowers = new double[length];
            Arrays.fill(lowers, Double.NaN);
        } else {
            final int oldLength = lowers.length;
            if (length > oldLength) {
                lowers = XArray.resize(lowers, length);
                Arrays.fill(lowers, oldLength, length, Double.NaN);
            }
        }
        if (uppers == null) {
            uppers = new double[length];
            Arrays.fill(uppers, Double.NaN);
        } else {
            final int oldLength = uppers.length;
            if (length > oldLength) {
                uppers = XArray.resize(uppers, length);
                Arrays.fill(uppers, oldLength, length, Double.NaN);
            }
        }
        lowers[dimension]  = minimum;
        uppers[dimension]  = maximum;
        getLowerCornerAccessor().setUserObject(lowers);
        getUpperCornerAccessor().setUserObject(uppers);
    }

