    /**
     * Rounds the specified values. This method is invoked automatically by the {@link #read read}
     * method while reading an image. It provides a place where to fix rounding errors in latitude
     * and longitude coordinates. For example if longitudes have a step 1/6° but are written with
     * only 3 decimal digits, then we get {@linkplain #getColumnX x} values like {@code 10.000},
     * {@code 10.167}, {@code 10.333}, <cite>etc.</cite>, which can leads to an error of 0.001°
     * in longitude. This error may cause {@code TextRecordImageReader} to fails validation tests
     * and throws an {@link javax.imageio.IIOException}: "<cite>Points dont seem to be distributed
     * on a regular grid</cite>". A work around is to multiply the <var>x</var> and <var>y</var>
     * coordinates by 6, round to the nearest integer and divide them by 6.
     * <p>
     * The default implementation do nothing.
     *
     * @param values The values to round in place.
     */
    protected void round(double[] values) {
    }

