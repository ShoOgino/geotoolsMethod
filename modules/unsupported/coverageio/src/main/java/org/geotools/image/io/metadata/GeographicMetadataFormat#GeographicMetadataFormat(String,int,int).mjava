    /**
     * Creates a metadata format of the given name. Subclasses should invoke the various
     * {@link #addElement(String,String,int) addElement} or {@link #addAttribute
     * addAttribute} methods for adding new elements compared to the {@linkplain
     * #getInstance default instance}.
     *
     * @param rootName the name of the root element.
     * @param maximumDimensions The maximum number of dimensions allowed for coordinate
     *                          systems.
     * @param maximumBands The maximum number of sample dimensions allowed for images.
     */
    protected GeographicMetadataFormat(final String rootName,
            final int maximumDimensions, final int maximumBands)
    {
        /*
         * The schemas illustrated in the following comments use the this syntax:
         *
         *   +-- element (attribute) : ClassName
         *
         * Legend: (*)  Mandatory element or attribute.
         *         (!)  Element or attribute that is not from the OGC specification.
         *
         * In this tree, the index {@code n} is the number of dimensions.
         */
        super(rootName, CHILD_POLICY_SOME);
        /*
         * root
         * +-- boundedBy : Envelope
         *     +-- lowerCorner  (*)
         *     +-- upperCorner  (*)
         */
        addElement    ("boundedBy",   rootName,       CHILD_POLICY_ALL);
        addElement    ("lowerCorner", "boundedBy",    CHILD_POLICY_EMPTY);
        addElement    ("upperCorner", "boundedBy",    CHILD_POLICY_EMPTY);
        addObjectValue("lowerCorner", Double.TYPE, 1, MAXIMUM_DIMENSIONS);
        addObjectValue("upperCorner", Double.TYPE, 1, MAXIMUM_DIMENSIONS);
        /*
         * root : RectifiedGridCoverage
         * +-- rectifiedGridDomain (dimension, srsName) : RectifiedGrid             (*)
         *     +-- crs (name, type) : CoordinateReferenceSystem                     (!)
         *     |   +-- datum (name, type) : Datum                                   (!)
         *     |   |   +-- ellipsoid (name, unit) : Ellipsoid                       (!)
         *     |   |   |   +-- semiMajorAxis : double                               (!)
         *     |   |   |   +-- secondDefiningParameter                              (!)
         *     |   |   |       +-- semiMinorAxis : double                           (!)
         *     |   |   |       +-- inverseFlattening : double                       (!)
         *     |   |   +-- primeMeridian (name, greenwichLongitude) : PrimeMeridian (!)
         *     |   +-- cs (name, type) : CoordinateSystem                           (!)
         *     |   |   +-- axis[0] (name, direction, units, origin) : Axis          (!)
         *     |   |   +-- ...                                                      (!)
         *     |   |   +-- axis[n-1] (name, direction, units, origin) : Axis        (!)
         *     |   +-- projection (name) : Projection                               (!)
         *     |       +-- parameter[0] (name, value) : ParameterValue              (!)
         *     |       +-- parameter[1] (name, value) : ParameterValue              (!)
         *     |       +-- ...                                                      (!)
         *     +-- limits : GridEnvelope                                            (*)
         *     |   +-- low  : int[]                                                 (*)
         *     |   +-- high : int[]                                                 (*)
         *     +-- origin : Point                                                   (*)
         *     |   +-- coordinates                                                  (*)
         *     +-- cells                                                            (!)
         *     |   +-- offsetVector[0]                                              (!)
         *     |   +-- ...                                                          (!)
         *     |   +-- offsetVector[n-1]                                            (!)
         *     +-- localizationGrid                                                 (!)
         *     |   +-- ordinates[0] : double[]                                      (!)
         *     |   +-- ...                                                          (!)
         *     |   +-- ordinates[n-1] : double[]                                    (!)
         *     +-- pixelOrientation                                                 (!)
         *     +-- rangeSet : File                                                  (*)
         *         +-- rangeParameters
         *         |   +-- TBD
         *         +-- fileName                                                     (*)
         *         +-- fileStructure                                                (*)
         *         +-- fileDate
         *         +-- fileFormat
         *         +-- spatialResolution (uom)
         *         +-- spectrum
         *         +-- bandRange (uom)
         *         +-- bands (type)                                                 (!)
         *         |   +-- band[0] (name, scale, offset, minValue, maxValue, fillValues) : Band
         *         |   +-- band[1] (name, scale, offset, minValue, maxValue, fillValues) : Band
         *         |   +-- ...
         *         +-- mimeType
         *         +-- compression
         */
        addElement    ("rectifiedGridDomain",     rootName,                  CHILD_POLICY_SOME);
        addAttribute  ("rectifiedGridDomain",     "dimension",               DATATYPE_INTEGER, true, null);
        addAttribute  ("rectifiedGridDomain",     "srsName",                 DATATYPE_STRING);

        addElement    ("crs",                     "rectifiedGridDomain",     CHILD_POLICY_SOME);
        addAttribute  ("crs",                     "name",                    DATATYPE_STRING);
        addAttribute  ("crs",                     "type",                    DATATYPE_STRING, false, null, CRS_TYPES);
        addElement    ("datum",                   "crs",                     CHILD_POLICY_SOME);
        addAttribute  ("datum",                   "name",                    DATATYPE_STRING);
        addAttribute  ("datum",                   "type",                    DATATYPE_STRING, false, null, DATUM_TYPES);
        addElement    ("ellipsoid",               "datum",                   CHILD_POLICY_ALL);
        addAttribute  ("ellipsoid",               "name",                    DATATYPE_STRING);
        addAttribute  ("ellipsoid",               "unit",                    DATATYPE_STRING);
        addElement    ("primeMeridian",           "datum",                   CHILD_POLICY_EMPTY);
        addAttribute  ("primeMeridian",           "name",                    DATATYPE_STRING);
        addAttribute  ("primeMeridian",           "greenwichLongitude",      DATATYPE_DOUBLE);
        addElement    ("semiMajorAxis",           "ellipsoid",               CHILD_POLICY_EMPTY);
        addObjectValue("semiMajorAxis",           Double.class);
        addElement    ("secondDefiningParameter", "ellipsoid",               CHILD_POLICY_CHOICE);
        addElement    ("semiMinorAxis",           "secondDefiningParameter", CHILD_POLICY_EMPTY);
        addObjectValue("semiMinorAxis",           Double.class);
        addElement    ("inverseFlattening",       "secondDefiningParameter", CHILD_POLICY_EMPTY);
        addObjectValue("inverseFlattening",       Double.class);
        addElement    ("cs",                      "crs",                     2, maximumDimensions);
        addAttribute  ("cs",                      "name",                    DATATYPE_STRING);
        addAttribute  ("cs",                      "type",                    DATATYPE_STRING, false, null, CS_TYPES);
        addElement    ("axis",                    "cs",                      CHILD_POLICY_EMPTY);
        addAttribute  ("axis",                    "name",                    DATATYPE_STRING);
        addAttribute  ("axis",                    "direction",               DATATYPE_STRING, true,  null, DIRECTIONS);
        addAttribute  ("axis",                    "units",                   DATATYPE_STRING);
        addAttribute  ("axis",                    "origin",                  DATATYPE_STRING);
        addElement    ("projection",              "crs",                     0, MAXIMUM_PARAMETERS);
        addAttribute  ("projection",              "name",                    DATATYPE_STRING);
        addElement    ("parameter",               "projection",              CHILD_POLICY_EMPTY);
        addAttribute  ("parameter",               "name",                    DATATYPE_STRING);
        addAttribute  ("parameter",               "value",                   DATATYPE_DOUBLE);

        addElement    ("limits",                  "rectifiedGridDomain",     CHILD_POLICY_ALL);
        addElement    ("low",                     "limits",                  CHILD_POLICY_EMPTY);
        addElement    ("high",                    "limits",                  CHILD_POLICY_EMPTY);
        addObjectValue("low",                     Integer.class);
        addObjectValue("high",                    Integer.class);
        addElement    ("origin",                  "rectifiedGridDomain",     CHILD_POLICY_ALL);
        addElement    ("coordinates",             "origin",                  CHILD_POLICY_EMPTY);
        addElement    ("cells",                   "rectifiedGridDomain",     1, MAXIMUM_DIMENSIONS);
        addElement    ("offsetVector",            "cells",                   CHILD_POLICY_EMPTY);
        addElement    ("localizationGrid",        "rectifiedGridDomain",     1, MAXIMUM_DIMENSIONS);
        addElement    ("ordinates",               "localizationGrid",        CHILD_POLICY_EMPTY);
        addElement    ("pixelOrientation",        "rectifiedGridDomain",     CHILD_POLICY_EMPTY);
        addObjectValue("pixelOrientation",        String.class,              1, PIXEL_ORIENTATIONS.size());

        addElement    ("rangeSet",                "rectifiedGridDomain",     CHILD_POLICY_SOME  );
        addElement    ("rangeParameters",         "rangeSet",                CHILD_POLICY_EMPTY);
        // todo: handle rangeParameters' children; for the moment it is considered
        //as a leaf of the tree.
        addElement    ("fileName",                "rangeSet",                CHILD_POLICY_EMPTY);
        addElement    ("fileStructure",           "rangeSet",                CHILD_POLICY_EMPTY);
        addElement    ("fileDate",                "rangeSet",                CHILD_POLICY_EMPTY);
        addElement    ("fileFormat",              "rangeSet",                CHILD_POLICY_EMPTY);
        addElement    ("spatialResolution",       "rangeSet",                CHILD_POLICY_EMPTY);
        addAttribute  ("spatialResolution",       "uom",                     DATATYPE_STRING);
        addElement    ("spectrum",                "rangeSet",                CHILD_POLICY_EMPTY);
        addElement    ("bandRange",               "rangeSet",                0, MAXIMUM_BANDS);
        addAttribute  ("bandRange",               "uom",                     DATATYPE_STRING);
        addElement    ("bands",                   "rangeSet",                0, MAXIMUM_BANDS);
        addAttribute  ("bands",                   "type",                    DATATYPE_STRING, false, null, SAMPLE_TYPES);
        addElement    ("band",                    "bands",                   CHILD_POLICY_EMPTY);
        addElement    ("mimeType",                "rangeSet",                CHILD_POLICY_EMPTY);
        addElement    ("compression",             "rangeSet",                CHILD_POLICY_EMPTY);
        /*
         * root : RectifiedGridCoverage
         *   +-- rectifiedGridDomain (dimension, srsName) : RectifiedGrid (*)
         *       +-- rangeSet : File                                      (*)
         *           +-- bands                                            (!)
         *               +-- band[0] (name, scale, offset, minValue, maxValue, fillValues)
         *               +-- band[1] (name, scale, offset, minValue, maxValue, fillValues)
         *               +-- ...
         */
        addAttribute("band", "name",       DATATYPE_STRING);
        addAttribute("band", "scale",      DATATYPE_DOUBLE);
        addAttribute("band", "offset",     DATATYPE_DOUBLE);
        addAttribute("band", "minValue",   DATATYPE_DOUBLE);
        addAttribute("band", "maxValue",   DATATYPE_DOUBLE);
        addAttribute("band", "fillValues", DATATYPE_DOUBLE, false, 0, Short.MAX_VALUE);
        /*
         * Allow users to specify fully-constructed GeoAPI objects.
         */
        addObjectValue("crs",           CoordinateReferenceSystem.class);
        addObjectValue("datum",         Datum.class);
        addObjectValue("ellipsoid",     Ellipsoid.class);
        addObjectValue("cs",            CoordinateSystem.class);
        addObjectValue("axis",          CoordinateSystemAxis.class);
        addObjectValue("projection",    Projection.class);
        addObjectValue("parameter",     ParameterValue.class);
        addObjectValue("boundedBy",     Envelope.class);
        addObjectValue("primeMeridian", PrimeMeridian.class);
    }

