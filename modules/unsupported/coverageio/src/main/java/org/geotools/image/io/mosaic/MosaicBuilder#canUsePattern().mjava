    /**
     * Returns {@code true} if we can create {@link TileManager} using a regular pattern instead
     * than enumerating every tiles. This method returns {@code true} if {@link #generateFilename}
     * has not be overriden, otherwise we can't guess at this stage the pattern that the user is
     * applying.
     */
    private boolean canUsePattern() {
        final Class<?>[] parameters = new Class[3];
        Arrays.fill(parameters, Integer.TYPE);
        Class<?> classe = getClass();
        Method method;
        do try {
            method = classe.getDeclaredMethod("generateFilename", parameters);
            return method.getDeclaringClass().equals(MosaicBuilder.class);
        } catch (NoSuchMethodException e) {
            classe = classe.getSuperclass();
        } while (classe != null);
        // Would be a programming error. The method we are looking for is just below.
        throw new AssertionError();
    }

