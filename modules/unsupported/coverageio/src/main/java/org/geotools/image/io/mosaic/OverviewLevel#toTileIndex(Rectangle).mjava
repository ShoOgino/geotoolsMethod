    /**
     * Converts the search rectangle from <cite>absolute space</cite> to
     * <cite>tile index space</cite>. Index can not be negative neither
     * greater than ({@linkplain #nx},@linkplain #ny}). The (xmin,ymin)
     * index are inclusive while the (xmax,ymax) index are exclusive.
     *
     * @param search The search region in absolute coordinate. This rectangle will not be modified.
     * @return The search region as tile index.
     */
    private Rectangle toTileIndex(final Rectangle search) {
        final Rectangle index = new Rectangle(dx * xSubsampling, dy * ySubsampling);

        // Computes min values.
        int x = search.x - mosaic.x * xSubsampling;
        int y = search.y - mosaic.y * ySubsampling;
        if (x >= 0) index.x = x / index.width;  // Otherwise lets (x,y) to its default value (0).
        if (y >= 0) index.y = y / index.height;

        // Computes max values. We round (width,height) toward higher integer.
        x += search.width;
        y += search.height;
        index.width  = Math.min(nx, (x + (index.width  - 1)) / index.width)  - index.x;
        index.height = Math.min(ny, (y + (index.height - 1)) / index.height) - index.y;
        return index;
    }

