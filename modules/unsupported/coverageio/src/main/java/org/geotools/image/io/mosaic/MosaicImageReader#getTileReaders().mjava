    /**
     * Returns every readers used for reading tiles. New readers may be created on the fly
     * by this method.  However failure to create them will be logged rather than trown as
     * an exception. In such case the information obtained by the caller may be incomplete
     * and the exception may be thrown later when {@link #getTileReader} will be invoked.
     */
    final Set<ImageReader> getTileReaders() {
        for (final Map.Entry<ImageReaderSpi,ImageReader> entry : readers.entrySet()) {
            ImageReader reader = entry.getValue();
            if (reader == null) {
                final ImageReaderSpi provider = entry.getKey();
                try {
                    reader = createReaderInstance(provider);
                } catch (IOException exception) {
                    Logging.unexpectedException(MosaicImageReader.class, "getTileReaders", exception);
                    continue;
                }
                entry.setValue(reader);
            }
            if (!readerInputs.containsKey(reader)) {
                readerInputs.put(reader, null);
            }
        }
        assert readers.values().containsAll(readerInputs.keySet());
        return readerInputs.keySet();
    }

