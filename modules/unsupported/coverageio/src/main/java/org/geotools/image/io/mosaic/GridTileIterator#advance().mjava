    /**
     * Updates {@link #tile} to the next tile to be returned, or set it to {@code null} if the
     * iteration is over. In case of failure while creating a tile (which should never occurs),
     * logs a warning and searchs for an other tile. It may violate the collection contract in
     * that such iterator would return less than {@link java.util.Collection#size} entries, but
     * it should not occurs since the URL are supposed to be valid before they are stored as a
     * pattern. Nevertheless we log instead than throwing an unchecked exception in the hope to
     * get something partially working in case of such error.
     */
    private void advance() {
        while (level != null) {
            while (y < level.getNumYTiles()) {
                while (x < level.getNumXTiles()) {
                    try {
                        tile = level.getTile(x++, y);
                    } catch (MalformedURLException e) {
                        Logging.unexpectedException(GridTileIterator.class, "next", e);
                        continue; // Search for an other tile.
                    }
                    if (tile != null) {
                        return;
                    }
                }
                x = 0;
                y++;
            }
            y = 0;
            level = level.getFinerLevel();
        }
        tile = null;
    }

