    /**
     * Returns a default color space for the destination sample model.
     * If no destination image has been specified, then a gray scale
     * color space will be constructed for values ranging from 0 to 1.
     */
    private ColorSpace getColorSpace(int numBands) {
        if (destination!=null) {
            return destination.getColorModel().getColorSpace();
        }
        /*
         * Overrides the number of source bands if this
         * parameter block contains enough informations.
         */
        if (sourceBands!=null) {
            numBands = sourceBands.length;
        } else if (model!=null) {
            numBands = model.getNumBands();
        }
        /*
         * Checks the number of destination bands. If 'destinationBands' is
         * null,  then all bands are going to be used.   If it is non-null,
         * then the destination image may have more bands than what we are
         * going to use. This problem still an open question... As a patch,
         * current implementation search for the greatest band number.
         */
        if (destinationBands!=null) {
            for (int i=0; i<destinationBands.length; i++) {
                if (destinationBands[i] >= numBands) {
                    numBands = destinationBands[i]+1;
                }
            }
        }
        if (numBands==1) {
            return ColorSpace.getInstance(ColorSpace.CS_GRAY);
        }
        return new ScaledColorSpace(numBands, 0, 0, 1);
    }

