    /**
     * Decimates the given array in-place so that each value {@code divisors[i]} is a multiple
     * of {@code divisors[i-1]}. Value greater than {@code maximum} are trimmed.
     *
     * @param  divisors The array to decimate in-place.
     * @param  maximum The maximal value to keep, inclusive.
     * @param  multiples If {@code false}, disables the restriction to multiples.
     * @return The number of valid values in the given array.
     */
    private static int decimate(final int[] divisors, final int maximum, final boolean multiples) {
        assert XArray.isStrictlySorted(divisors);
        int n;
        if (!multiples) {
            n = Arrays.binarySearch(divisors, maximum);
            if (n < 0) {
                n = (~n) - 1;
            }
        } else {
            n = 0;
            for (int i=1; i<divisors.length; i++) {
                final int x = divisors[i];
                if (x > maximum) {
                    break;
                }
                if ((x % divisors[n]) == 0) {
                    divisors[++n] = x;
                }
            }
        }
        return ++n;
    }

