    /**
     * Returns an image reader provider inferred from the given input,
     * or {@code null} if none can be found without ambiguity.
     */
    static ImageReaderSpi getImageReaderSpi(final Object input) {
        ImageReaderSpi provider = null;
        final String path = getInputName(input);
        if (path != null) {
            final int split = path.indexOf('.', path.lastIndexOf('/') + 1);
            if (split >= 0) {
                final String suffix = path.substring(split + 1).trim();
                String[] suffixes = null;
                final Iterator<ImageReaderSpi> it = IIORegistry.getDefaultInstance()
                        .getServiceProviders(ImageReaderSpi.class, true);
                while (it.hasNext()) {
                    final ImageReaderSpi candidate = it.next();
                    final String[] candidateSuffixes = candidate.getFileSuffixes();
                    if (XArray.containsIgnoreCase(candidateSuffixes, suffix)) {
                        if (provider != null) {
                            if (Arrays.equals(candidateSuffixes, suffixes)) {
                                // E.g. we may have both CLIB and JSE version of PNG reader.
                                continue;
                            }
                            // We have an ambiguity - Returns null so we don't make a choice.
                            return null;
                        }
                        provider = candidate;
                        suffixes = candidateSuffixes;
                        // Continue the search for making sure that we don't have an ambiguity.
                    }
                }
            }
        }
        return provider;
    }

