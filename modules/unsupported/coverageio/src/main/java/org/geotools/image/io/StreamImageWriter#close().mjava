    /**
     * Closes the output stream created by {@link #getOutputStream()}. This method does nothing
     * if the output stream is the {@linkplain #output output} instance given by the user rather
     * than a stream created by this class from a {@link File} or {@link URL} output.
     * <p>
     * This method is invoked automatically by {@link #setOutput}, {@link #reset}, {@link #dispose}
     * or {@link #finalize} methods and doesn't need to be invoked explicitly. It has protected
     * access only in order to allow overriding by subclasses.
     *
     * @throws IOException if an error occured while closing the stream.
     *
     * @see #closeOnReset
     */
    @Override
    protected void close() throws IOException {
        if (closeOnReset != null) {
            closeOnReset.close();
        }
        closeOnReset = null;
        stream       = null;
        super.close();
    }

