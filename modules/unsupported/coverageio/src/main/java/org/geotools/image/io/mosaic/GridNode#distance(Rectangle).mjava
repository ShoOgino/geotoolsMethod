    /**
     * Returns the largest horizontal or vertical distance between this rectangle and the specified
     * one. Returns a negative number if the rectangles overlap. Diagonals are <strong>not</strong>
     * computed.
     * <p>
     * This method is not robust to integer arithmetic overflow. In such case, an
     * {@link AssertionError} is likely to be thrown if assertions are enabled.
     */
    private int distance(final Rectangle rect) {
        int dx = rect.x - x;
        if (dx >= 0) {
            dx -= width;
        } else {
            dx += rect.width;
            dx = -dx;
        }
        int dy = rect.y - y;
        if (dy >= 0) {
            dy -= height;
        } else {
            dy += rect.height;
            dy = -dy;
        }
        final int distance = Math.max(dx, dy);
        assert (intersects(rect) ? (dx < 0 && dy < 0) : (distance >= 0)) : distance;
        return distance;
    }

