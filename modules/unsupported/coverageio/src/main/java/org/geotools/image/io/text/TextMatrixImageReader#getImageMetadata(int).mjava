    /**
     * Returns metadata associated with the given image.
     * Calling this method may force loading of full image.
     *
     * @param  imageIndex The image index.
     * @return The metadata, or {@code null} if none.
     * @throws IOException If an error occurs reading the data information from the input source.
     */
    @Override
    public IIOMetadata getImageMetadata(final int imageIndex) throws IOException {
        checkImageIndex(imageIndex);
        if (!ignoreMetadata) {
            if (data == null || !completed) {
                load(imageIndex, true);
            }
            float minimum = Float.POSITIVE_INFINITY;
            float maximum = Float.NEGATIVE_INFINITY;
            for (int i=0; i<data.length; i++) {
                final float value = data[i];
                if (value < minimum) minimum = value;
                if (value > maximum) maximum = value;
            }
            if (minimum < maximum) {
                final GeographicMetadata metadata = new GeographicMetadata(this);
                metadata.getBand(0).setValidRange(minimum, maximum);
                return metadata;
            }
        }
        return null;
    }

