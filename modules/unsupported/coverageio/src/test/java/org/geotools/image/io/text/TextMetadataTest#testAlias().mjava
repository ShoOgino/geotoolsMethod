    /**
     * Tests the addition of alias.
     *
     * @throws IOException If an I/O operation was required and failed.
     */
    @Test
    @Ignore
    public void testAlias() throws IOException {
        final DefaultTextMetadataParser parser = new DefaultTextMetadataParser();
        parser.setGeographicMetadata(new GeographicMetadata());
        /*
         * Tests "add" operations.
         */
        parser.add("Alias 1", "Value 1");
        parser.add("Alias 2", "Value 2");
        try {
            parser.add("  alias  1", "Value X");
            fail(); // We should not get there.
        } catch (AmbiguousMetadataException exception) {
            // This is the expected exception.
            if (out != null) {
                out.println(exception);
            }
        }
        parser.add("Alias 1", "Value 1"); // Already defined
        parser.add("Alias 3", "Value 3");
        /*
         * Tests "addAlias" operations.
         */
        parser.addAlias(TextMetadataParser.X_RESOLUTION, "Alias 1");
        parser.addAlias(TextMetadataParser.Y_RESOLUTION, "Alias 2");
        parser.addAlias(TextMetadataParser.Y_RESOLUTION, "Alias 2bis");
        parser.addAlias(TextMetadataParser.X_RESOLUTION, "Alias 1bis");
        parser.addAlias(TextMetadataParser.X_RESOLUTION, "Alias 1"); // Already defined
        try {
            parser.addAlias(TextMetadataParser.X_RESOLUTION, "Alias 2");
            fail(); // We should not get there.
        } catch (AmbiguousMetadataException exception) {
            // This is the expected exception.
            if (out != null) {
                out.println(exception);
            }
        }
        parser.add("Alias 2bis", "Value 2");
        try {
            parser.add("Alias 1bis", "Value 2");
            fail(); // We should not get there.
        } catch (AmbiguousMetadataException exception) {
            // This is the expected exception.
            if (out != null) {
                out.println(exception);
            }
        }
    }

