    /**
     * Ensures that the given nodes are equals. This method invokes itself recursively for
     * checking children equality. Returns the number of node compared.
     */
    private static int assertTreeEqual(
            final javax.swing.tree.TreeNode node,       final javax.swing.tree.TreeNode copy,
            final javax.swing.tree.TreeNode nodeParent, final javax.swing.tree.TreeNode copyParent)
    {
        int n = 1;
        assertSame(copyParent, copy.getParent());
        assertSame(nodeParent, node.getParent());
        assertEquals(copy.isLeaf(),            node.isLeaf());
        assertEquals(copy.getAllowsChildren(), node.getAllowsChildren());
        assertEquals(copy.toString(),          node.toString());
        assertEquals(copy.getChildCount(),     node.getChildCount());
        for (int i=0; i<copy.getChildCount(); i++) {
            assertEquals(i, copy.getIndex(copy.getChildAt(i)));
            assertEquals(i, node.getIndex(node.getChildAt(i)));
            n += assertTreeEqual(node.getChildAt(i), copy.getChildAt(i), node, copy);
        }
        return n;
    }

