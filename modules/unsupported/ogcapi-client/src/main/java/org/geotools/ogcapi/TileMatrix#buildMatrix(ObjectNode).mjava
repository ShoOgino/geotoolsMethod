    private static TileMatrix buildMatrix(ObjectNode node) {
        TileMatrix tileMatrix = new TileMatrix();

        tileMatrix.setIdentifier(node.get("identifier").asText());

        if (node.has("scaleDenominator")) {
            tileMatrix.setDenominator(node.get("scaleDenominator").asDouble());
        }
        if (node.has("topLeftCorner")) {
            double[] coords = new double[2];
            JsonNode tlCorner = node.get("topLeftCorner");
            int i = 0;
            for (JsonNode c : tlCorner) {
                coords[i++] = c.asDouble();
            }
            tileMatrix.setTopLeft(gf.createPoint(new Coordinate(coords[0], coords[1])));
        }
        if (node.has("tileWidth")) {
            tileMatrix.setTileWidth(node.get("tileWidth").asInt());
        }
        if (node.has("tileHeight")) {
            tileMatrix.setTileHeight(node.get("tileHeight").asInt());
        }
        if (node.has("matrixWidth")) {
            tileMatrix.setMatrixWidth(node.get("matrixWidth").asInt());
        }
        if (node.has("matrixHeight")) {
            tileMatrix.setMatrixHeight(node.get("matrixHeight").asInt());
        }
        return tileMatrix;
    }

