    static CollectionsType buildCollections(URL url) throws Exception {
        ObjectMapper mapper = new ObjectMapper();
        mapper.registerModule(new JtsModule());

        try (JsonParser parser = factory.createParser(url)) {
            JsonToken token = parser.nextToken(); // start 1st object
            CollectionsType ret = new CollectionsType();
            while (!parser.isClosed()) {
                // We can now see title, description and links array
                token = parser.nextToken();
                if (token == null) {
                    break;
                }

                if (JsonToken.FIELD_NAME.equals(token)
                        && "collections".equalsIgnoreCase(parser.currentName())) {
                    token = parser.nextToken();
                    if (!JsonToken.START_ARRAY.equals(token)) {
                        throw new UnsupportedOperationException(
                                "Was expecting an array of collections");
                    }
                    while (parser.nextToken() == JsonToken.START_OBJECT) { // collections
                        // array

                        ObjectNode node = mapper.readTree(parser);
                        // Actually, we want to read this items child link that is labelled
                        // self
                        if (node.has("links")) {
                            JsonNode links = node.get("links");
                            for (JsonNode link : links) {
                                if ("self".equalsIgnoreCase(link.get("rel").asText())
                                        && APPLICATION_JSON.equalsIgnoreCase(
                                                link.get("type").asText())) {
                                    CollectionType realCollection =
                                            CollectionType.buildRealCollection(
                                                    new URL(link.get("href").asText()));
                                    ret.collections.put(
                                            realCollection.getIdentifier(), realCollection);
                                }
                            }
                        }
                    }
                }
                if (JsonToken.FIELD_NAME.equals(token)
                        && "crs".equalsIgnoreCase(parser.currentName())) {
                    token = parser.nextToken();
                    if (!JsonToken.START_ARRAY.equals(token)) {
                        throw new UnsupportedOperationException(
                                "Was expecting an array of CRS Strings");
                    }
                    while (parser.nextToken() == JsonToken.START_OBJECT) {

                        ObjectNode node = mapper.readTree(parser);
                        for (JsonNode c : node) {
                            ret.crs.add(OgcApiUtils.parseCRS(c.asText()));
                        }
                    }
                }
            }
            return ret;
        }
    }

