    @Override
    public Converter createConverter(
            Class<?> source, Class<?> target, org.geotools.util.factory.Hints hints) {
        if (String.class.equals(target) && Clob.class.isAssignableFrom(source)) {
            return new Converter() {
                @Override
                public <T> T convert(Object source, Class<T> target) throws Exception {
                    if (source == null) {
                        throw new IllegalArgumentException("source must not be null");
                    }
                    Clob clob = (Clob) source;
                    long length = clob.length();
                    if (length == 0) {
                        return target.cast("");
                    }
                    if (length > Integer.MAX_VALUE) {
                        return null;
                    }
                    int clength = (int) length;
                    String s = clob.getSubString(1, clength);
                    return target.cast(s);
                }
            };
        }
        return null;
    }

