    @Test
    public void testBadInput() {

        GeometryBuilder gb = new GeometryBuilder();
        Polygon p = gb.polygon();
        try {
            Point point = (Point) PolyLabeller.getPolylabel(p, 1);
            fail("processed empty polygon");
        } catch (IllegalStateException e) {
            // this is good!
        }
        try {
            p = gb.polygon(0, 0, 0, 0, 0, 0, 0, 0);
            Point point = (Point) PolyLabeller.getPolylabel(p, 1);
            fail("processed invalid polygon");
        } catch (IllegalStateException e) {
            // this is good.
        }
    }
    /*
     * @Ignore @Test //awaiting valid data set public void testGetPolylabel() throws FileNotFoundException, IOException { File water1 =
     * TestData.file(this, "water1.json"); Polygon p = fetchPoly(water1); Coordinate expected = new Coordinate(3865.85009765625, 2124.87841796875);
     * Coordinate c = PolyLabeller.getPolylabel(p, 1); double delta = 0.0001; assertEquals(expected.x, c.x, delta); assertEquals(expected.y, c.y,
     * delta); }
     * 
     * @Ignore @Test //awaiting valid data set public void testGetPolylabelPrecision() throws FileNotFoundException, IOException { File water1 =
     * TestData.file(this, "water1.json"); Polygon p = fetchPoly(water1); Coordinate expected = new Coordinate(3854.296875, 2123.828125); Coordinate c
     * = PolyLabeller.getPolylabel(p, 50); double delta = 0.0001; assertEquals(expected.x, c.x, delta); assertEquals(expected.y, c.y, delta); }
     * 
     * @Ignore @Test //awaiting valid data set public void testGetPolylabel2() throws FileNotFoundException, IOException { File water2 =
     * TestData.file(this, "water2.json"); Polygon p = fetchPoly(water2); Coordinate expected = new Coordinate(3263.5, 3263.5); Coordinate c =
     * PolyLabeller.getPolylabel(p, 1); double delta = 0.0001; assertEquals(expected.x, c.x, delta); assertEquals(expected.y, c.y, delta); }
     */

