    /**
     * QuadTree Query
     * 
     * @param bbox
     * @return
     * @throws DataSourceException
     * @throws IOException
     * @throws TreeException
     *                 DOCUMENT ME!
     */
    CloseableIterator<Data> queryQuadTree(Envelope bbox) throws DataSourceException,
            IOException, TreeException {
        try {
            // old code was checking the resulting collection wasn't empty and
            // it that
            // case it closed the qtree straight away. qtree gets closed anyways
            // with
            // this code path, but it's quite a bit faster because it avoid one
            // disk access
            // just to check the collection is not empty
            if ((qtree != null) && !bbox.contains(qtree.getRoot().getBounds()))
                return qtree.search(bbox);
        } catch (Exception e) {
            ShapefileRenderer.LOGGER.warning(e.getLocalizedMessage());
        }

        return null;
    }

