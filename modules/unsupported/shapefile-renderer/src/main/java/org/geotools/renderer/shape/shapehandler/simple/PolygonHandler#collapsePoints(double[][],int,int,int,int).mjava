	/**
	 * Return true if the current point and the last point should be collapsed
	 * into a single point. The first and last point must be the same so if the
	 * current doubles is the 1-2 second double or if one of the last two the it
	 * will return false. Otherwise it will return true if the distance in the y
	 * axis is less than the distance of one pixel... similar comparison is done
	 * along the x-axis.
	 * 
	 * @return true if the current point and the last point should be collapsed
	 *         into a single point.
	 */
	private boolean collapsePoints(double[][] coords, int part,
			int totalDoubles, int readDoubles, int currentDoubles) {
		return currentDoubles > 3
				&& currentDoubles < totalDoubles - 1
				&& Math.abs(coords[part][readDoubles - 4]
						- coords[part][readDoubles - 2]) <= spanx
				&& Math.abs(coords[part][readDoubles - 3]
						- coords[part][readDoubles - 1]) <= spany;
	}

