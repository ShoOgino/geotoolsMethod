    /** Builds the fill using a FillBuilder */
    private void buildFill(
            CssRule cssRule,
            final FillBuilder fb,
            Map<String, List<Value>> values,
            int i,
            final String fillPropertyName) {
        for (Value fillValue : getMultiValue(values, fillPropertyName, i)) {
            if (Function.isGraphicsFunction(fillValue)) {
                new SubgraphicBuilder(fillPropertyName, fillValue, values, cssRule, i) {

                    @Override
                    protected GraphicBuilder getGraphicBuilder() {
                        return fb.graphicFill();
                    }
                };
            } else if (fillValue != null) {
                fb.color(getExpression(fillValue));
            }
        }
        Expression opacity = getExpression(values, fillPropertyName + "-opacity", i);
        if (opacity != null) {
            fb.opacity(opacity);
        }
    }

