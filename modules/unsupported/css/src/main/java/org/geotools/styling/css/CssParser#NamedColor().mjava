    @SuppressSubnodes
    Rule NamedColor() {
        String[] colorNames = new String[Value.COLORS_TO_HEX.size()];
        int i = 0;
        for (String name : Value.COLORS_TO_HEX.keySet()) {
            colorNames[i++] = name;
        }
        // make sure the longer words come before the shorter ones (yellowgreen before yellow)
        Arrays.sort(colorNames, Collections.reverseOrder());

        Rule[] insensitiveColorNames = new Rule[colorNames.length];
        for (int j = 0; j < colorNames.length; j++) {
            insensitiveColorNames[j] = IgnoreCase(colorNames[j]);
        }

        return Sequence(
                FirstOf(insensitiveColorNames),
                new Action() {

                    @Override
                    public boolean run(Context ctx) {
                        String hex = Value.COLORS_TO_HEX.get(match().toLowerCase());
                        push(new Value.Literal(hex));
                        return true;
                    }
                });
    }

