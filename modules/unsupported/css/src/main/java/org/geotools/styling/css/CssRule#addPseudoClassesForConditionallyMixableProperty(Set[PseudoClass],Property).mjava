    /**
     * Adds pseudo classes for fill and stroke, whose ability to mix-in depends on whether a function (symbol) or a straight value was used for the
     * value of the property
     * 
     * @param result
     * @param property
     */
    private void addPseudoClassesForConditionallyMixableProperty(Set<PseudoClass> result,
            Property property) {
        String propertyName = property.getName();
        List<Value> values = property.getValues();
        if (values.size() == 1 && values.get(0) instanceof Function) {
            result.add(PseudoClass.newPseudoClass(propertyName));
            addIndexedPseudoClasses(result, propertyName);
        } else {
            for (int i = 0; i < values.size(); i++) {
                if (values.get(i) instanceof Function) {
                    result.add(PseudoClass.newPseudoClass("symbol", i));
                    result.add(PseudoClass.newPseudoClass(propertyName, i + 1));
                }
            }
        }
    }

