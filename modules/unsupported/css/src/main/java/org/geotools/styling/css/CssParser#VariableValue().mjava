    Rule VariableValue() {
        return Sequence(
                Ch('@'),
                Identifier(),
                push(new Value.Literal(match())),
                Optional(
                        Sequence(
                                Ch('('),
                                OneOrMore(Sequence(TestNot(AnyOf(")")), ANY)),
                                push(new Value.Literal(match())),
                                Ch(')'))),
                new Action() {
                    @Override
                    public boolean run(Context context) {
                        List<Value> values =
                                popAll(Value.class)
                                        .stream()
                                        .map(o -> (Value) o)
                                        .collect(Collectors.toList());
                        Literal id = (Literal) values.get(0);
                        if ("sd".equals(id.body)) {
                            values.set(0, new Value.Literal("wms_scale_denominator"));
                        }
                        if (values.size() == 2) {
                            Value.Literal defaultValue = (Literal) values.get(1);
                            String body = defaultValue.body;
                            if (Value.COLORS_TO_HEX.containsKey(body)) {
                                values.set(1, new Value.Literal(Value.COLORS_TO_HEX.get(body)));
                            } else if (body.startsWith("'") && body.endsWith("'")) {
                                values.set(
                                        1, new Value.Literal(body.substring(1, body.length() - 1)));
                            }
                        }
                        push(new Value.Function("env", values));
                        return true;
                    }
                });
    }

