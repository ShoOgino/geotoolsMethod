    /**
     * Turns a rule with nested subrules into a flat list of rules (this rule, plus all nested with
     * a properly combined selector and property inheritance)
     */
    public List<CssRule> expandNested(RulesCombiner combiner) {
        if (nestedRules == null || nestedRules.isEmpty()) {
            return Collections.singletonList(this);
        } else {
            List<CssRule> result = new ArrayList<>();
            result.add(this);
            for (CssRule nestedRule : nestedRules) {
                // combine with parent's properties and selectors
                CssRule combined = combiner.combineRules(Arrays.asList(this, nestedRule));
                combined.setComment(nestedRule.getComment());
                combined.setAncestry(null);
                combined.nestedRules = nestedRule.nestedRules;

                final List<CssRule> nestedCombined = combined.expandNested(combiner);
                result.addAll(nestedCombined);
            }
            return result;
        }
    }

