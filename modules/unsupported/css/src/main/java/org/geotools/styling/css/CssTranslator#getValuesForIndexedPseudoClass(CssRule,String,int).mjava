    /**
     * Returns the set of values for the idx-th pseudo-class taking into account both generic and
     * non indexed pseudo class names
     * 
     * @param cssRule
     * @param pseudoClassName
     * @param idx
     * @return
     */
    private Map<String, List<Value>> getValuesForIndexedPseudoClass(CssRule cssRule,
            String pseudoClassName, int idx) {
        Map<String, List<Value>> combined = new LinkedHashMap<>();
        // catch all ones
        combined.putAll(cssRule.getPropertyValues(PseudoClass.newPseudoClass("symbol")));
        // catch all index specific
        combined.putAll(cssRule.getPropertyValues(PseudoClass.newPseudoClass("symbol", idx + 1)));
        // symbol specific ones
        combined.putAll(cssRule.getPropertyValues(PseudoClass.newPseudoClass(pseudoClassName)));
        // symbol and index specific ones
        combined.putAll(cssRule.getPropertyValues(PseudoClass.newPseudoClass(pseudoClassName,
                idx + 1)));
        return combined;
    }

