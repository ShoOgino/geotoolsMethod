    private void testTranslation(String css)
            throws TransformerException, IOException, FileNotFoundException, SAXException,
                    ParserConfigurationException {
        File sldFile =
                new File(
                        file.getParentFile(),
                        FilenameUtils.getBaseName(file.getName())
                                + (exclusiveRulesEnabled ? "" : "-first")
                                + ".sld");

        // Java 9 pretty-print has slightly different indentation
        File sldFile_java9 =
                new File(
                        file.getParentFile(),
                        FilenameUtils.getBaseName(file.getName())
                                + (exclusiveRulesEnabled ? "" : "-first")
                                + "_java9.sld");

        if (!sldFile.exists()) {
            Stylesheet ss = CssParser.parse(css);
            CssTranslator tx = new CssTranslator();
            Style style = tx.translate(ss);
            writeStyle(style, sldFile);
            // throw new IllegalStateException("Could not locate sample sld file " +
            // sldFile.getPath());
        }

        Style actual = cssToSld(css);
        File sldFile2 =
                new File("./target/css", FilenameUtils.getBaseName(file.getName()) + ".sld");
        writeStyle(actual, sldFile2);
        String actualSld = FileUtils.readFileToString(sldFile2);

        List validationErrors = validateSLD(actualSld);
        if (!validationErrors.isEmpty()) {
            LOGGER.severe("Validation failed, errors are: ");
            for (Object e : validationErrors) {
                if (e instanceof SAXParseException) {
                    SAXParseException se = (SAXParseException) e;
                    LOGGER.severe("line " + se.getLineNumber() + ": " + se.getLocalizedMessage());
                } else {
                    LOGGER.log(Level.SEVERE, "Other exception type", e);
                }
            }
            LOGGER.severe(
                    "Validation failed, the two files are: "
                            + sldFile.getAbsolutePath()
                            + " "
                            + sldFile2.getAbsolutePath());
            fail("Validation failed");
        }

        String expectedSld = FileUtils.readFileToString(sldFile);
        StyledLayerDescriptor expectedSLD = parseToSld(expectedSld);
        StyledLayerDescriptor actualSLD = parseToSld(actualSld);
        // Document expectedDom = XMLUnit.buildControlDocument(expectedSld);
        // Document actualDom = XMLUnit.buildControlDocument(actualSld);
        // Diff diff = new Diff(expectedDom, actualDom);
        // if (!diff.identical()) {
        if (!expectedSLD.equals(actualSLD)) {
            String message =
                    "Comparison failed, the two files are: "
                            + sldFile.getAbsolutePath()
                            + " "
                            + sldFile2.getAbsolutePath();

            // Try the java9 version
            if (sldFile_java9.exists()) {
                expectedSLD = parseToSld(FileUtils.readFileToString(sldFile_java9));
                if (expectedSLD.equals(actualSLD)) {
                    return;
                }
            }

            // System.err.println(message);
            fail(message);
        }
    }

