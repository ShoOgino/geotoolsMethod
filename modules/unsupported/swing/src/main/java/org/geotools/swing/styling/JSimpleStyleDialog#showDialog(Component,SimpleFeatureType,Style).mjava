    /**
     * Static convenience method: displays a {@code JSimpleStyleDialog} to prompt
     * the user for style preferences to use with the given feature type.
     *
     * @param parent parent component (may be null)
     * @param featureType the feature type that the Style will be used to display
     * @param initialStyle an optional Style object to initialize the dialog
     *        (may be {@code null})
     *
     * @return a new Style instance or null if the user cancels the dialog
     */
    public static Style showDialog(Component parent, 
            SimpleFeatureType featureType, Style initialStyle) {
        
        Style style = null;
        JSimpleStyleDialog dialog = null;
        if (parent != null) {
            if (parent instanceof Frame) {
                dialog = new JSimpleStyleDialog((Frame) parent, featureType, initialStyle);

            } else if (parent instanceof Dialog) {
                dialog = new JSimpleStyleDialog((Dialog) parent, featureType, initialStyle);
            }
        }

        if (dialog == null) {
            dialog = new JSimpleStyleDialog((Frame)null, featureType, initialStyle);
        }

        dialog.setVisible(true);

        if (dialog.completed()) {
            switch (dialog.getGeomType()) {
                case POLYGON:
                case MULTIPOLYGON:
                    style = SLD.createPolygonStyle(
                            dialog.getLineColor(),
                            dialog.getFillColor(),
                            dialog.getOpacity(),
                            dialog.getLabelField(),
                            dialog.getLabelFont());
                    break;

                case LINESTRING:
                case MULTILINESTRING:
                    style = SLD.createLineStyle(
                            dialog.getLineColor(),
                            dialog.getLineWidth(),
                            dialog.getLabelField(),
                            dialog.getLabelFont());
                    break;

                case POINT:
                case MULTIPOINT:
                    style = SLD.createPointStyle(
                            dialog.getPointSymbolName(),
                            dialog.getLineColor(),
                            dialog.getFillColor(),
                            dialog.getOpacity(),
                            dialog.getPointSize(),
                            dialog.getLabelField(),
                            dialog.getLabelFont());
                    break;
            }
        }

        dialog.dispose();
        return style;
    }

