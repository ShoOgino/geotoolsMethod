    /** Create and layout the controls */
    private void initComponents() {
        MigLayout layout = new MigLayout();
        JPanel panel = new JPanel(layout);
        controls = new HashMap<>();

        JLabel label = new JLabel("Feature type");
        label.setForeground(Color.BLUE);
        panel.add(label, "wrap");

        typeLabel = new JLabel();
        panel.add(typeLabel, "gapbefore indent, span, wrap");

        /*
         * Line style items
         */
        label = new JLabel("Line");
        label.setForeground(Color.BLUE);
        panel.add(label, "wrap");

        JButton btn = new JButton("Color...");
        btn.addActionListener(e -> chooseLineColor());
        panel.add(btn, "gapbefore indent");
        controls.put(btn, ControlCategory.LINE);

        lineColorIcon = new JColorIcon(COLOR_ICON_SIZE, COLOR_ICON_SIZE, DEFAULT_LINE_COLOR);
        lineColorLabel = new JLabel(lineColorIcon);
        panel.add(lineColorLabel, "gapafter 20px");

        label = new JLabel("Width");
        panel.add(label, "split 2");

        Integer[] widths = new Integer[5];
        for (int i = 1; i <= widths.length; i++) {
            widths[i - 1] = Integer.valueOf(i);
        }
        final JComboBox<Integer> lineWidthCBox = new JComboBox<>(widths);
        lineWidthCBox.addActionListener(
                e -> lineWidth = ((Number) lineWidthCBox.getModel().getSelectedItem()).intValue());
        panel.add(lineWidthCBox, "wrap");
        controls.put(lineWidthCBox, ControlCategory.LINE);

        /*
         * Fill style items
         */
        label = new JLabel("Fill");
        label.setForeground(Color.BLUE);
        panel.add(label, "wrap");

        btn = new JButton("Color...");
        btn.addActionListener(e -> chooseFillColor());
        panel.add(btn, "gapbefore indent");
        controls.put(btn, ControlCategory.FILL);

        fillColorIcon = new JColorIcon(COLOR_ICON_SIZE, COLOR_ICON_SIZE, DEFAULT_FILL_COLOR);
        fillColorLabel = new JLabel(fillColorIcon);
        panel.add(fillColorLabel, "gapafter 20px");

        label = new JLabel("% opacity");
        panel.add(label, "split 2");

        fillOpacitySlider = new JSlider(0, 100, 100);
        fillOpacitySlider.setPaintLabels(true);
        fillOpacitySlider.setMajorTickSpacing(20);
        fillOpacitySlider.addChangeListener(
                e -> opacity = (float) fillOpacitySlider.getValue() / 100);
        panel.add(fillOpacitySlider, "span, wrap");
        controls.put(fillOpacitySlider, ControlCategory.FILL);

        /*
         * Point style items
         */
        label = new JLabel("Point");
        label.setForeground(Color.BLUE);
        panel.add(label, "wrap");

        label = new JLabel("Size");
        panel.add(label, "gapbefore indent, split 2");

        Number[] sizes = new Number[10];
        for (int i = 1; i <= sizes.length; i++) {
            sizes[i - 1] = Integer.valueOf(i * 5);
        }
        pointSizeCBox = new JComboBox<>(sizes);
        pointSizeCBox.addActionListener(
                e -> pointSize = ((Number) pointSizeCBox.getModel().getSelectedItem()).intValue());
        panel.add(pointSizeCBox);
        controls.put(pointSizeCBox, ControlCategory.POINT);

        label = new JLabel("Symbol");
        panel.add(label, "skip, split 2");

        pointSymbolCBox = new JComboBox<>(WELL_KNOWN_SYMBOL_NAMES);
        pointSymbolCBox.addActionListener(
                e ->
                        pointSymbolName =
                                WELL_KNOWN_SYMBOL_NAMES[pointSymbolCBox.getSelectedIndex()]
                                        .toString());
        panel.add(pointSymbolCBox, "wrap");
        controls.put(pointSymbolCBox, ControlCategory.POINT);

        /*
         * Label items
         */
        label = new JLabel("Labels");
        label.setForeground(Color.BLUE);
        panel.add(label, "wrap");

        final JButton fontBtn = new JButton("Font...");
        fontBtn.addActionListener(e -> chooseLabelFont());

        labelCBox = new JComboBox<>();
        labelCBox.addActionListener(
                e -> labelField = labelCBox.getModel().getSelectedItem().toString());

        final JCheckBox checkBox = new JCheckBox();
        checkBox.addActionListener(
                e -> {
                    labelFeatures = checkBox.isSelected();
                    labelCBox.setEnabled(labelFeatures);
                    fontBtn.setEnabled(labelFeatures);
                });
        panel.add(checkBox, "gapbefore indent, span, split 3");

        label = new JLabel("Field");
        panel.add(label);
        labelCBox.setEnabled(checkBox.isSelected());
        panel.add(labelCBox, "wrap");
        fontBtn.setEnabled(checkBox.isSelected());
        panel.add(fontBtn, "wrap");

        /*
         * Apply and Cancel buttons
         */
        btn = new JButton("Apply");
        btn.addActionListener(
                e -> {
                    completed = true;
                    setVisible(false);
                });
        panel.add(btn, "span, split 2, align right");

        btn = new JButton("Cancel");
        btn.addActionListener(
                e -> {
                    geomType = null;
                    setVisible(false);
                });
        panel.add(btn);

        getContentPane().add(panel);
        pack();
    }

