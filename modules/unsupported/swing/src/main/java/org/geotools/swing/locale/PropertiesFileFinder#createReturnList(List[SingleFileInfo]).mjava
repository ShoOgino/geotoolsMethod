    /**
     * Converts a list of single file information (base name plus locale) into
     * a list of {@linkplain PropertiesFileInfo} objects.
     * 
     * @param infoList list of single file information
     * @return a new list of {@code PropertiesFileInfo} objects
     */
    private List<PropertiesFileInfo> createReturnList(List<SingleFileInfo> infoList) {
        List<PropertiesFileInfo> pfiList = new ArrayList<PropertiesFileInfo>();

        if (!infoList.isEmpty()) {
            Collections.sort(infoList, new Comparator<SingleFileInfo>() {
                @Override
                public int compare(SingleFileInfo o1, SingleFileInfo o2) {
                    return o1.name.compareTo(o2.name);
                }
            });

            String curName = infoList.get(0).name;
            List<Locale> locales = new ArrayList<Locale>();
            ListIterator<SingleFileInfo> iter = infoList.listIterator();
            while (iter.hasNext()) {
                SingleFileInfo sfi = iter.next();
                if (sfi.name.equals(curName)) {
                    locales.add(sfi.locale);
                } else {
                    pfiList.add(new PropertiesFileInfo(curName, locales));
                    curName = sfi.name;
                    locales.clear();
                    locales.add(sfi.locale);
                }
            }
            pfiList.add(new PropertiesFileInfo(curName, locales));
        }
        return pfiList;
    }

