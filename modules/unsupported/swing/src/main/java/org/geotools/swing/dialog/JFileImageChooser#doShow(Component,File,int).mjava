    /**
     * Helper method which creates and displays the chooser dialog on the event dispatch thread.
     * 
     * @param parent optional parent component
     * @param workingDir optional initial working directory
     * @param openOrSave either {@linkplain #OPEN_DIALOG} or {@linkplain #SAVE_DIALOG}
     * 
     * @return selected file or {@code null} if the dialog was cancelled
     */
    private static File doShow(Component parent, File workingDir, int openOrSave) {
        JFileImageChooser chooser = new JFileImageChooser(workingDir);
        File file = null;
        int dialogRtnValue;

        switch (openOrSave) {
            case OPEN_DIALOG:
                chooser.setFilter(supportedReaders);
                chooser.setDialogTitle("Open image");
                dialogRtnValue = chooser.showOpenDialog(parent);
                break;
                
            case SAVE_DIALOG:
                chooser.setFilter(supportedWriters);
                chooser.setDialogTitle("Save image");
                dialogRtnValue = chooser.showSaveDialog(parent);
                break;
                
            default:
                // just in case
                throw new IllegalArgumentException(
                        "Invalid value for openOrSave argument" + openOrSave);
        }

        if (dialogRtnValue == JFileImageChooser.APPROVE_OPTION) {
            file = chooser.getSelectedFile();

            String name = file.getAbsolutePath();
            int dot = name.lastIndexOf('.');

            FormatFilter filter = (FormatFilter) chooser.getFileFilter();
            if (dot < 0) {
                name = name + filter.getDefaultSuffix();
                file = new File(name);
            }
        }

        return file;
    }

