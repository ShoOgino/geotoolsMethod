    /** Set up the dialog to work with a given feature type */
    private void setType() {

        GeometryDescriptor desc = schema.getGeometryDescriptor();
        Class<? extends Geometry> clazz = (Class<? extends Geometry>) desc.getType().getBinding();
        geomType = Geometries.getForBinding(clazz);

        String labelText = schema.getTypeName();

        switch (geomType) {
            case POLYGON:
            case MULTIPOLYGON:
                labelText = labelText + " (polygon)";
                break;

            case LINESTRING:
            case MULTILINESTRING:
                labelText = labelText + " (line)";
                break;

            case POINT:
            case MULTIPOINT:
                labelText = labelText + " (point)";
                break;

            default:
                throw new UnsupportedOperationException("No style method for " + clazz.getName());
        }

        typeLabel.setText(labelText);

        // enable relevant components
        for (Component c : controls.keySet()) {
            switch (controls.get(c)) {
                case LINE:
                    // nothing to do at present
                    break;

                case FILL:
                    c.setEnabled(
                            geomType != Geometries.LINESTRING
                                    && geomType != Geometries.MULTILINESTRING);
                    break;

                case POINT:
                    c.setEnabled(geomType == Geometries.POINT || geomType == Geometries.MULTIPOINT);
                    break;
            }
        }

        // set the fields available for labels
        fieldsForLabels = new String[schema.getAttributeCount() - 1];

        int k = 0;
        for (AttributeDescriptor attr : schema.getAttributeDescriptors()) {
            if (Geometry.class.isAssignableFrom(attr.getType().getBinding())) {
                continue;
            }

            fieldsForLabels[k++] = attr.getLocalName();
        }

        labelCBox.setModel(new DefaultComboBoxModel(fieldsForLabels));
    }

