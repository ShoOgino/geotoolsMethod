    /**
     * Creates a new text field with the given initial value.
     *
     * @param value the initial value to display
     * @param allowNegative true if this field should allow negative values to be entered; false if
     *     only positive values are allowed
     */
    public JIntegerField(int value, boolean allowNegative) {
        this.document = new IntegerDocument(allowNegative);
        setDocument(document);
        setValue(value);

        document.addDocumentListener(
                new DocumentListener() {

                    @Override
                    public void insertUpdate(DocumentEvent e) {
                        if (fireEvents) {
                            ValueChangedEvent<Integer> ev =
                                    new ValueChangedEvent<>(
                                            JIntegerField.this,
                                            Integer.valueOf(document.getValue()));

                            fireValueChangedEvent(ev);
                        }
                    }

                    @Override
                    public void removeUpdate(DocumentEvent e) {
                        if (fireEvents) {
                            ValueChangedEvent<Integer> ev =
                                    new ValueChangedEvent<>(
                                            JIntegerField.this,
                                            Integer.valueOf(document.getValue()));

                            fireValueChangedEvent(ev);
                        }
                    }

                    @Override
                    public void changedUpdate(DocumentEvent e) {}
                });
    }

