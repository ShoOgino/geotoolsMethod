    /**
     * {@inheritDoc}
     * If no rendering task is presently running this new task will be accepted, 
     * otherwise it will be rejected (ie. there is no task queue).
     */
    public synchronized long submit(MapContent mapContent, GTRenderer renderer,
            Graphics2D graphics,
            RenderingExecutorListener listener) {
        
        if (mapContent == null) {
            throw new IllegalArgumentException("mapContent must not be null");
        }
        if (graphics == null) {
            throw new IllegalArgumentException("graphics must not be null");
        }
        if (mapContent.getViewport().isEmpty()) {
            throw new IllegalArgumentException("The viewport must not be empty");
        }
        if (listener == null) {
            throw new IllegalArgumentException("listener must not be null");
        }
        
        
        if (taskFuture == null || taskFuture.isDone()) {
            try {
                // wait for any cancelled task to finish its shutdown
                cancelLatch.await();
            } catch (InterruptedException ex) {
                throw new RuntimeException(ex);
            }

            task = new RenderingTask(mapContent, renderer, graphics);
            this.listener = listener;
            taskFuture = taskExecutor.submit(task);
            
            watcher = watchExecutor.scheduleAtFixedRate(new Runnable() {
                public void run() {
                    pollTaskResult();
                }
            }, DEFAULT_POLLING_INTERVAL, DEFAULT_POLLING_INTERVAL, TimeUnit.MILLISECONDS);
            
            return task.getId();
            
        } else {
            return RenderingExecutor.TASK_REJECTED;
        }
        
    }

