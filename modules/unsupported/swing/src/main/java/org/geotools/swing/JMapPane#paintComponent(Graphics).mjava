    /**
     * Called by the system to draw the layers currently visible layers.
     * Client code should not use this method directly; instead call
     * repaint().
     */
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);

        if (acceptRepaintRequests) {

            if (curPaintArea == null ||
                context == null ||
                context.getLayerCount() == 0 ||
                renderer == null) {

                return;
            }

            if (needNewBaseImage) {
                baseImage = new BufferedImage(
                        curPaintArea.width + 1, curPaintArea.height + 1,
                        BufferedImage.TYPE_INT_ARGB);

                if (baseImageGraphics != null) {
                    baseImageGraphics.dispose();
                }
                
                baseImageGraphics = baseImage.createGraphics();
                needNewBaseImage = false;
                redrawBaseImage = true;
                clearLabelCache = true;
            }

            final ReferencedEnvelope mapAOI = context.getAreaOfInterest();
            if (mapAOI == null) {
                return;
            }

            if (redrawBaseImage) {
                if (baseImageMoved) {
                    afterImageMove(mapAOI, curPaintArea);
                    baseImageMoved = false;
                    clearLabelCache = true;
                }

                if (renderingExecutor.submit(mapAOI, curPaintArea, baseImageGraphics)) {
                    MapPaneEvent ev = new MapPaneEvent(this, MapPaneEvent.Type.RENDERING_STARTED);
                    publishEvent(ev);

                } else {
                    onRenderingRejected();
                }

            } else {
                Graphics2D g2 = (Graphics2D) g;
                g2.drawImage(baseImage, imageOrigin.x, imageOrigin.y, null);
            }

            redrawBaseImage = true;
        }
    }

