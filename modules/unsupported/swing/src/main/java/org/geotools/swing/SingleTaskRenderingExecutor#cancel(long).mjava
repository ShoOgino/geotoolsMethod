    /**
     * {@inheritDoc}
     * Since this task can only ever have a single task running, 
     * and no tasks queued, this method simply checks if the running
     * task has the specified ID value and, if so, cancels it.
     */
    public synchronized void cancel(long taskId) {
        // Allow for the possibility that cancel has been called before the 
        // task has started running
        if (hasUnfinishedTask(taskId)) {
            task.cancel();
            cancelLatch = new CountDownLatch(1);
        } else {
            throw new RuntimeException("no task");
        }
    }

