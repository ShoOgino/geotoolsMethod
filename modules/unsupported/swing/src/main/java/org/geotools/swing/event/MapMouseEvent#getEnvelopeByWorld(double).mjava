    /**
     * Gets an envelope of specified width (in world distance units) which is
     * centred on the mouse position.
     * 
     * @param widthWorld envelope width in world units
     * @return the envelope
     * 
     * @throws IllegalArgumentException if {@code widthWorld} is less than zero
     */
    public ReferencedEnvelope getEnvelopeByWorld(double widthWorld) {
        if (widthWorld < 0) {
            throw new IllegalArgumentException("invalid value for widthWorld: " + widthWorld);
        }
        
        double halfw = widthWorld / 2;
        DirectPosition2D worldPos = getWorldPos();
        return new ReferencedEnvelope(
                worldPos.x - halfw, worldPos.x + halfw,
                worldPos.y - halfw, worldPos.y + halfw,
                worldPos.getCoordinateReferenceSystem());
    }

