    /**
     * Scans the properties files in the resource directory, compiles a list
     * of locales, and determines whether each of them is fully or partially
     * supported.
     * 
     * @return list of locale info
     * @throws IOException on error scanning resources directory
     */
    private static List<LocaleInfo> loadLocaleInfo() throws IOException {
        PropertiesFileFinder finder = new PropertiesFileFinder();
        List<PropertiesFileInfo> infoList = finder.scan(PREFIX);
        
        Set<Locale> allLocales = new HashSet<Locale>();
        for (PropertiesFileInfo info : infoList) {
            allLocales.addAll(info.getLocales());
        }
        
        List<LocaleInfo> localeInfoList = new ArrayList<LocaleInfo>();
        for (Locale l : allLocales) {
            localeInfoList.add(new LocaleInfo(l, true));
        }
        
        for (PropertiesFileInfo info : infoList) {
            List<Locale> locales = info.getLocales();
            for (LocaleInfo li : localeInfoList) {
                if (!locales.contains(li.locale)) {
                    li.fullySupported = false;
                }
            }
        }
        
        return localeInfoList;
    }

