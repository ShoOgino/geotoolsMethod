    /**
     * Get band values at the given position
     *
     * @param pos the location to query
     *
     * @param params not used at present
     *
     * @return a {@code List} of band values; will be empty if {@code pos} was
     *         outside the coverage bounds
     *
     * @throws Exception if the grid coverage could not be queried
     */
    @Override
    public List<Number> getInfo(DirectPosition2D pos, Object... params)
            throws Exception {

        List<Number> list = new ArrayList<Number>();

        if (isValid()) {
            switch (sourceType) {
                case COVERAGE: {
                    GridCoverage2D source = (GridCoverage2D) sourceRef.get();
                    ReferencedEnvelope env = new ReferencedEnvelope(source.getEnvelope2D());
                    DirectPosition2D trPos = getTransformed(pos);
                    if (env.contains(trPos)) {
                        Object objArray = source.evaluate(trPos);
                        Number[] bandValues = asNumberArray(objArray);
                        if (bandValues != null) {
                            list.addAll(Arrays.asList(bandValues));
                        }
                    }
                }
                break;

                case READER: {
                    AbstractGridCoverage2DReader reader = (AbstractGridCoverage2DReader) sourceRef.get();
                    GeneralEnvelope genEnv = reader.getOriginalEnvelope();
                    DirectPosition2D trPos = getTransformed(pos);
                    if (genEnv.contains(trPos)) {
                        Number[] bandValues = getGridReaderValues(trPos);
                        if (bandValues != null) {
                            list.addAll(Arrays.asList(bandValues));
                        }
                    }
                }
                break;
            }
        }
        
        return list;
    }

