    /**
     * Calculates the dimensions that a given text string requires when rendered as HTML text in a
     * label component.
     *
     * <p>The method used is adapted from that described in a blog post by Morten Nobel:
     *
     * <blockquote>
     *
     * http://blog.nobel-joergensen.com/2009/01/18/changing-preferred-size-of-a-html-jlabel/
     *
     * </blockquote>
     *
     * @param labelText the text to render, optionally enclosed in {@code <html>...</html>} tags
     * @param fixedDimSize the size of the fixed dimension (either width or height
     * @param width {@code true} if the fixed dimension is width; {@code false} for height
     * @return the rendered label text extent
     */
    public static Dimension getHtmlLabelTextExtent(
            final String labelText, final int fixedDimSize, final boolean width) {

        final Dimension[] result = new Dimension[1];

        if (SwingUtilities.isEventDispatchThread()) {
            result[0] = doGetHtmlTextExtent(labelText, fixedDimSize, width);
        } else {
            try {
                SwingUtilities.invokeAndWait(
                        new Runnable() {
                            @Override
                            public void run() {
                                result[0] = doGetHtmlTextExtent(labelText, fixedDimSize, width);
                            }
                        });

            } catch (Exception ex) {
                // Either an InterruptedException or an InvocationTargetException
                // both of which are fatal
                throw new RuntimeException(ex);
            }
        }

        return result[0];
    }

