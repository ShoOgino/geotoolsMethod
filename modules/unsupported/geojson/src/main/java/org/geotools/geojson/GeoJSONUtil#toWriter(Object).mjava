    /**
     * Converts an object to {@link Writer} instance.
     *
     * <p>The <tt>output</tt> parameter may be one of the following types:
     *
     * <ul>
     *   <li>{@link Writer}
     *   <li>{@link OutputStream}
     *   <li>{@link File}
     *   <li>{@link String} *
     * </ul>
     *
     * * A string parameter is considered a file path.
     *
     * @param output The output object.
     * @return A writer.
     */
    public static Writer toWriter(Object output) throws IOException {
        // If the user passed in an OutputStreamWriter, we'll trust them to close it themselves.
        if (output instanceof OutputStreamWriter) {
            return new Writer() {
                Writer writer = new BufferedWriter((Writer) output);

                @Override
                public void write(char[] cbuf, int off, int len) throws IOException {
                    writer.write(cbuf, off, len);
                }

                @Override
                public void flush() throws IOException {
                    writer.flush();
                }

                @Override
                public void close() throws IOException {}
            };
        }

        if (output instanceof BufferedWriter) {
            return (BufferedWriter) output;
        }

        if (output instanceof Writer) {
            return new BufferedWriter((Writer) output);
        }

        if (output instanceof OutputStream) {
            return new BufferedWriter(new OutputStreamWriter((OutputStream) output));
        }

        if (output instanceof File) {
            return new BufferedWriter(new FileWriter((File) output));
        }

        if (output instanceof String) {
            return new BufferedWriter(new FileWriter((String) output));
        }

        throw new IllegalArgumentException("Unable to turn " + output + " into a writer");
    }

