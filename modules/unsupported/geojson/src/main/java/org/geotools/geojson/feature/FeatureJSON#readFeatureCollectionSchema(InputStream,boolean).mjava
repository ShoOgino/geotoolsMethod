    /**
     * Reads the {@link SimpleFeatureType} of a GeoJSON feature collection. In the
     * worst case, it will parse all features searching for attributes not present
     * in previous features.
     * 
     * @param input
     *          The input. See {@link GeoJSONUtil#toReader(Object)} for details.
     * @param nullValuesEncoded
     *          if the input has null values encoded. If this flag is set to true
     *          and the GeoJSON doesn't actually encode null values, only the
     *          first feature attributes will be discovered.
     * @return The feature collection schema
     * 
     * @throws IOException
     *           In the event of a parsing error or if the input json is invalid.
     */
    public SimpleFeatureType readFeatureCollectionSchema(InputStream input, boolean nullValuesEncoded) throws IOException {
        return readFeatureCollectionSchema((Object)input, false);
    }

