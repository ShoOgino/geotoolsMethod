    String collectionText(
            boolean withBounds,
            boolean withCRS,
            boolean crsAfter,
            boolean missingFirstFeatureAttribute,
            boolean nullFirstFeatureAttribute,
            boolean nullAttributeAllFeatures) {
        StringBuffer sb = new StringBuffer();
        sb.append("{'type':'FeatureCollection',");
        if (withBounds) {
            FeatureCollection features = collection();
            ReferencedEnvelope bbox = features.getBounds();
            sb.append("'bbox': [");
            sb.append(bbox.getMinX())
                    .append(",")
                    .append(bbox.getMinY())
                    .append(",")
                    .append(bbox.getMaxX())
                    .append(",")
                    .append(bbox.getMaxY());
            sb.append("],");
        }
        if (withCRS && !crsAfter) {
            sb.append("'crs': {");
            sb.append("  'type': 'name',");
            sb.append("  'properties': {");
            sb.append("    'name': 'EPSG:4326'");
            sb.append("   }");
            sb.append("},");
        }
        sb.append("'features':[");
        if (nullAttributeAllFeatures) {
            // creates all features with a null attribute
            for (int i = 0; i < 3; i++) {
                sb.append(featureText(i, false, true)).append(",");
            }
        } else {
            // only the first feature will have a null or missing attribute
            sb.append(featureText(0, missingFirstFeatureAttribute, nullFirstFeatureAttribute))
                    .append(",");
            for (int i = 1; i < 3; i++) {
                sb.append(featureText(i, false, false)).append(",");
            }
        }
        sb.setLength(sb.length() - 1);
        sb.append("]");
        if (withCRS && crsAfter) {
            sb.append(",'crs': {");
            sb.append("  'type': 'name',");
            sb.append("  'properties': {");
            sb.append("    'name': 'EPSG:4326'");
            sb.append("   }");
            sb.append("}");
        }
        sb.append("}");
        return sb.toString();
    }

