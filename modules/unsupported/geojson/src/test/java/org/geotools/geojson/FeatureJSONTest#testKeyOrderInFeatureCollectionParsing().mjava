    public void testKeyOrderInFeatureCollectionParsing() throws Exception {
        /* Test parsing of three variations of the same GeoJSON object. */

        /* input1 tests parsing when "type" occurs at the top of each sub-object */
        String input1 = "{" +
                " \"type\": \"FeatureCollection\"," +
                " \"features\": [{" +
                "  \"type\": \"Feature\"," +
                "  \"geometry\": {" +
                "   \"type\": \"GeometryCollection\"," +
                "   \"geometries\": [{" +
                "    \"type\": \"Polygon\"," +
                "    \"coordinates\": [[[100.0, 1.0],[101.0, 1.0],[100.5, 1.5],[100.0, 1.0]]]" +
                "   }]" +
                "  }," +
                "  \"properties\": {}" +
                " }]" +
                "}";

        /* input2 tests parsing when "type" in a geometry of the geom collection occurs after "coordinates". */
        String input2 = "{" +
                " \"type\": \"FeatureCollection\"," +
                " \"features\": [{" +
                "  \"type\": \"Feature\"," +
                "  \"geometry\": {" +
                "   \"type\": \"GeometryCollection\"," +
                "   \"geometries\": [{" +
                "    \"coordinates\": [[[100.0, 1.0],[101.0, 1.0],[100.5, 1.5],[100.0, 1.0]]]," +
                "    \"type\": \"Polygon\"" +
                "   }]" +
                "  }," +
                "  \"properties\": {}" +
                " }]" +
                "}";

        /* input3 is similar to input 2 but also tests parsing when "type" for the feature collection occurs after
         * "features".
         */
        String input3 = "{" +
                " \"features\": [{" +
                "  \"type\": \"Feature\"," +
                "  \"geometry\": {" +
                "   \"type\": \"GeometryCollection\"," +
                "   \"geometries\": [{" +
                "    \"coordinates\": [[[100.0, 1.0],[101.0, 1.0],[100.5, 1.5],[100.0, 1.0]]]," +
                "    \"type\": \"Polygon\"" +
                "   }]" +
                "  }," +
                "  \"properties\": {}" +
                " }]," +
                " \"type\": \"FeatureCollection\"" +
                "}";

        GeometryFactory factory = new GeometryFactory();
        Point expectedLastPoint = factory.createPoint(new Coordinate(100.0, 1.0));

        /* test input 1 */
        FeatureCollection featureCollection = fjson.readFeatureCollection(input1);
        testKeyOrderInFeatureCollectionParsing_VerifyContents(featureCollection, expectedLastPoint);

        /* test input 2 */
        featureCollection = fjson.readFeatureCollection(input2);
        testKeyOrderInFeatureCollectionParsing_VerifyContents(featureCollection, expectedLastPoint);

        /* test input 3 */
        featureCollection = fjson.readFeatureCollection(input3);
        testKeyOrderInFeatureCollectionParsing_VerifyContents(featureCollection, expectedLastPoint);
    }

