    protected void assertEqualsLax(SimpleFeature f1, SimpleFeature f2) {
        Assert.assertEquals(f1.getID(), f1.getID());
        Assert.assertEquals(f1.getAttributeCount(), f2.getAttributeCount());

        for (int i = 0; i < f1.getAttributeCount(); i++) {
            Object o1 = f1.getAttribute(i);
            Object o2 = f2.getAttribute(i);

            if (o1 instanceof Geometry) {
                Assert.assertTrue(((Geometry) o1).equals((Geometry) o2));
            } else {
                if (o1 instanceof Number) {
                    if (o1 instanceof Integer || o1 instanceof Long) {
                        Assert.assertTrue(o2 instanceof Integer || o2 instanceof Long);
                        Assert.assertEquals(((Number) o1).intValue(), ((Number) o2).intValue());
                    } else if (o1 instanceof Float || o1 instanceof Double) {
                        Assert.assertTrue(o2 instanceof Float || o2 instanceof Double);
                        Assert.assertEquals(
                                ((Number) o1).doubleValue(), ((Number) o2).doubleValue(), 0d);
                    } else {
                        Assert.fail();
                    }
                } else if (o1 != null && o1.getClass().isArray()) {
                    List c1 = Converters.convert(o1, List.class);
                    List c2 = Converters.convert(o2, List.class);
                    Assert.assertEquals(c1, c2);
                } else {
                    Assert.assertEquals(o1, o2);
                }
            }
        }
    }

