    public void testDisjointFilter() throws Exception {
        if( conn == null ) return;
        
        //                   + (20,30)
        //                            +----------------------+
        //  +(20,10)         +(10,10) | + (20,10)   +(30,10) |
        //                            +----------------------+
        GeometryFactory gf = new GeometryFactory();
        Polygon p = gf.createPolygon(gf.createLinearRing(new Coordinate[] { new Coordinate(15, 0),
                new Coordinate(35, 0), new Coordinate(35, 15), new Coordinate(15, 15),
                new Coordinate(15, 0) }), null);
        GeometryFilter filter = filterFactory.createGeometryFilter(AbstractFilter.GEOMETRY_DISJOINT);
        // had to reduce the envelope a little, Oracle has trobles with bbox that span the whole earth
        Expression right = filterFactory.createLiteralExpression(p);
        Expression left = filterFactory.createAttributeExpression(dstore.getSchema("ORA_TEST_POINTS"), "SHAPE");
        filter.addLeftGeometry(left);
        filter.addRightGeometry(right);
        
        SimpleFeatureSource fs = dstore.getFeatureSource("ORA_TEST_POINTS");
        SimpleFeatureCollection fr = fs.getFeatures(filter);
        assertEquals(3, fr.size()); // we have 4!
        
        // check a filter built changing operands order works the same
        filter.addLeftGeometry(right);
        filter.addRightGeometry(left);
        fr = fs.getFeatures(filter);        
        assertEquals(3, fr.size()); // we pass this!
    }

