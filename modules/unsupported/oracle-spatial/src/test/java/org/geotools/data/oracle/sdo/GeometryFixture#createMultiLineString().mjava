  /**
   * MultiLineString geometry for testing fixture.
   * <code><pre>
   *  2,7+==+==+5,7
   *        |4,7
   *        |
   *        |
   * 1,2+   +4,2
   *    \   /
   *  2,1+-+3,1
   * </pre></code>
   * <p>
   * Expected Encoding:</p>
   * <ul>
   * <li><b>SDO_GTYPE:</b><code>2005</code><br/>
   *     2 dimensional, 0 measures, 05 for MultiLine
   *     </li>
   * <li><b>SDO_SRID:</b><code>NULL</code></li>
   * <li><b>SDO_POINT:</b><code>NULL</code></li>
   * <li><b>SDO_ELEM_INFO:</b><code>(1,2,1,11,2,1)</code><br/>
   *     Two triplets
   *     <ul>
   *     <li>(1,2,1): linestring(2) of straight lines(1) starting at 1
   *         </li>
   *         
   *     <li>(11,2,1): linestring(2) of straight lines(1) starting at 1
   *         </li>
   *     </ul>
   *     </li>
   * <li><b>SDO_ORDINATES:</b><code>(1,2, 2,1, 3,1, 4,2 4,7,
   *                                 2,7, 4,7, 5,7)</code></li>
   * </ul>
   * <p>
   * SQL:</p>
   * <code><pre>
   * MDSYS.SDO_GEOMETRY(
   *   2005,
   *   NULL,
   *   NULL,
   *   (1,2,1,11,2,1),
   *   (1,2, 2,1, 3,1, 4,2 4,7, 2,7, 4,7, 5,7)
   * )
   * </pre></code> 
   */    
  protected MultiLineString createMultiLineString(){
      LineString line1 = gf.createLineString(
          coords( new double[]{ 1,2, 2,1, 3,1, 4,2, 4,7 })
      );
      LineString line2 = gf.createLineString(
          coords( new double[]{ 2,7, 4,7, 5,7 })
      );
      MultiLineString multiLineString =
          gf.createMultiLineString( new LineString[]{line1,line2});
          
      return multiLineString;        
  }   

