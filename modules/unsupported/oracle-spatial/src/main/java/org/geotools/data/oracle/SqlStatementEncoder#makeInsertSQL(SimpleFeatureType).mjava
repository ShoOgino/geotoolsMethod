    /**
     * Constructs an Insert SQL statement template for this feature type.
     *
     * @param featureType The feature type to construct the statement for.
     *
     * @return The SQL insert template.  The FID column will always be first, followed by each
     *         feature attribute.  The VALUES section will contain ?'s for each attribute of the
     *         feature type.
     */
    String makeInsertSQL(SimpleFeatureType featureType) {
        StringBuffer sql = new StringBuffer("INSERT INTO ");

        sql.append(tableName);
        sql.append("(");
        sql.append(fidColumn);
        sql.append(",");

        AttributeDescriptor[] attributeTypes = featureType.getAttributeDescriptors().toArray(new AttributeDescriptor[featureType.getAttributeDescriptors().size()]);

        for (int i = 0; i < attributeTypes.length; i++) {
            sql.append(attributeTypes[i].getLocalName());
            if (i < (attributeTypes.length - 1)) {
                sql.append(",");
            } else { 
                sql.append(")");
            }
        }

        sql.append(" VALUES (?,"); // fid column        

        for (int i = 0; i < attributeTypes.length; i++) {
            sql.append("?");
            if (i < (attributeTypes.length - 1)) {
                sql.append(",");
            } else { 
                sql.append(")");
            }
        }

        return sql.toString();
    }

