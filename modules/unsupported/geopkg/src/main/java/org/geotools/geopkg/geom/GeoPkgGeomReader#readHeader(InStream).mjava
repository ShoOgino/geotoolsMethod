    /*
     * OptimizedGeoPackageBinary {
     * byte[3] magic = 0x47504230; // 'GPB'
     * byte flags;                 // see flags layout below
     * unit32 srid;
     * double[] envelope;          // see flags envelope contents indicator code below
     * WKBGeometry geometry;       // per OGC 06-103r4 clause 8
     *
     * 
     * flags layout:
     *   bit     7       6       5       4       3       2       1       0
     *   use     V       V       V       V       E       E       E       B

     *   use:
     *   V: version number (4-bit unsigned integer)
     *      0 = version 1
     *      
     *   E: envelope contents indicator code (3-bit unsigned integer)
     *     value |                    description                               | envelope length (bytes)
     *       0   | no envelope (space saving slower indexing option)            |      0
     *       1   | envelope is [minx, maxx, miny, maxy]                         |      32
     *       2   | envelope is [minx, maxx, miny, maxy, minz, maxz]             |      48
     *       3   | envelope is [minx, maxx, miny, maxy, minm, maxm]             |      48
     *       4   | envelope is [minx, maxx, miny, maxy, minz, maxz, minm, maxm] |      64
     *   B: byte order for header values (1-bit Boolean)
     *       0 = Big Endian   (most significant bit first)
     *       1 = Little Endian (least significant bit first)
     */
    protected GeometryHeader readHeader(InStream in) throws IOException {
        GeometryHeader h = new GeometryHeader();

        // read first 4 bytes  
        // TODO: something with the magic number
        byte[] buf = new byte[4];
        in.read(buf);

        // next byte flags
        h.setFlags(new GeometryHeaderFlags((byte)buf[3]));

        // set endianness
        ByteOrderDataInStream din = new ByteOrderDataInStream(in);
        din.setOrder(h.getFlags().getEndianess());

        // read the srid
        h.setSrid(din.readInt());

        // read the envlope
        if (h.getFlags().getEnvelopeIndicator() != EnvelopeType.NONE) {
            double x1 = din.readDouble();
            double x2 = din.readDouble();
            double y1 = din.readDouble();
            double y2 = din.readDouble();
    
            if (h.getFlags().getEnvelopeIndicator().getValue() > 1) {
                // 2 = minz,maxz; 3 = minm,maxm - we ignore these for now 
                din.readDouble();
                din.readDouble();
            }
    
            if (h.getFlags().getEnvelopeIndicator().getValue() > 3) {
                // 4 = minz,maxz,minm,maxm - we ignore these for now
                din.readDouble();
                din.readDouble();
            }
    
            h.setEnvelope (new Envelope(x1, x2, y1, y2));
        }
        return h;
    }

