    void assertLastChangedDateString() throws Exception {
        final TimeZone tz = TimeZone.getTimeZone("GMT");
        // get the date now for comparison
        final Calendar c = Calendar.getInstance(tz);
        final Date now = c.getTime();
        // this is what should be used for the date string format in the DB
        final String dateFomratString = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'";
        final SimpleDateFormat sdf = new SimpleDateFormat(dateFomratString);
        sdf.setTimeZone(tz);

        try (Connection cx = geopkg.getDataSource().getConnection();
            Statement st = cx.createStatement();
            ResultSet rs = st.executeQuery(String.format("SELECT last_change FROM %s;",
                GeoPackage.GEOPACKAGE_CONTENTS))){
            
            if (rs.next()) {
                final String dateString = rs.getString(1);
                // parse the date with the expected format string
                Date parsedDate = sdf.parse(dateString);
                // assert the month value is the same for NOW and the parsed date.
                assertEquals("Month value does not match", new SimpleDateFormat("MMMM").format(now),
                    new SimpleDateFormat("MMMM").format(parsedDate));
                // assert the minute value is the same for NOW and the parsed date.
                assertEquals("Minutes value does not match", new SimpleDateFormat("mm").format(now),
                    new SimpleDateFormat("mm").format(parsedDate));
            }
        }
    }

