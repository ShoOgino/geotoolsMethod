    /*
     * (non-Javadoc)
     *
     * @see org.geotools.data.DataStore#getTypeNames()
     */
    public String[] getTypeNames() throws IOException {

        final int TABLE_NAME_COL = 3;
        Connection conn = null;
        List list = new ArrayList();

        try {
            conn = getConnection(Transaction.AUTO_COMMIT);

            DatabaseMetaData meta = conn.getMetaData();  // DB: shouldnt this be done by looking at geometry_columns?  or are you trying to allow non-spatial tables in as well?
            String[] tableType = { "TABLE" , "VIEW"};
            ResultSet tables = meta.getTables(null,
                    config.getDatabaseSchemaName(), "%", tableType);

            while (tables.next()) {
            	String tableName = tables.getString(TABLE_NAME_COL);

                if (allowTable(tableName)) {
                    list.add(tableName);
                }
            }
            tables.close();

            return (String[]) list.toArray(new String[list.size()]);
        } catch (SQLException sqlException) {
            JDBCUtils.close(conn, Transaction.AUTO_COMMIT, sqlException);
            conn = null;

            String message = "Error querying database for list of tables:"
                + sqlException.getMessage();
            throw new DataSourceException(message, sqlException);
        } finally {
            JDBCUtils.close(conn, Transaction.AUTO_COMMIT, null);
        }

    	/*
        //Justin's patch from uDig, should be faster, but untested.
    	Connection conn = null;
		String namespace = config.getNamespace();
		try {
			conn = getConnection(Transaction.AUTO_COMMIT);

			PreparedStatement st = null;

			if (namespace != null && !namespace.trim().equals("")) { //$NON-NLS-1$
				st = conn.prepareStatement(
					"SELECT distinct a.relname "  //$NON-NLS-1$
					+ "FROM pg_class a, pg_attribute b, pg_namespace c, pg_type d " //$NON-NLS-1$
				   + "WHERE a.oid = b.attrelid " //$NON-NLS-1$
				   	 + "AND b.atttypid = d.oid "  //$NON-NLS-1$
				   	 + "AND a.relnamespace = c.oid "  //$NON-NLS-1$
				   	 + "AND c.nspname = ? " //$NON-NLS-1$
				   	 + "AND d.typname = ? " //$NON-NLS-1$
				   	 + "AND a.relname in (SELECT f_table_name FROM geometry_columns)" //$NON-NLS-1$
				);
				st.setString(1, namespace);
				st.setString(2, "geometry"); //$NON-NLS-1$
			}
			else {
				st = conn.prepareStatement(
					"SELECT distinct a.relname "  //$NON-NLS-1$
					+ "FROM pg_class a, pg_attribute b, pg_type d " //$NON-NLS-1$
				   + "WHERE a.oid = b.attrelid " //$NON-NLS-1$
				   	 + "AND b.atttypid = d.oid "  //$NON-NLS-1$
				   	 + "AND d.typname = ? " //$NON-NLS-1$
				   	 + "AND a.relname in (SELECT f_table_name FROM geometry_columns)" //$NON-NLS-1$
				);
				st.setString(1, "geometry"); //$NON-NLS-1$
			}

			ResultSet rs = st.executeQuery();
			ArrayList names = new ArrayList();
			while(rs.next()) {
				String table = rs.getString(1);
				if (allowTable(table)){
					names.add(table);
				}

			}

			return (String[])names.toArray(new String[names.size()]);
		}
		catch (SQLException sqlException) {
	        JDBCUtils.close(conn, Transaction.AUTO_COMMIT, sqlException);
	        conn = null;
	        throw new DataSourceException( sqlException );
	    }
	    finally {
	        JDBCUtils.close(conn, Transaction.AUTO_COMMIT, null);
	    }
	    */
    }

