	/**
	 * Create a new  FeatureReader<SimpleFeatureType, SimpleFeature> based on attributeReaders.
	 *
	 * <p>
	 * The provided <code>schema</code> describes the attributes in the
	 * queryData ResultSet. This schema should cover the requirements of
	 * <code>filter</code>.
	 * </p>
	 *
	 * <p>
	 * Retyping to the users requested Schema will not happen in this method.
	 * </p>
	 *
	 * @param schema
	 * @param postFilter
	 *            Filter for post processing, or <code>null</code> if not
	 *            required.
	 * @param queryData
	 *            Holds a ResultSet for attribute Readers
	 *
	 *
	 * @throws IOException
	 */
	protected  FeatureReader<SimpleFeatureType, SimpleFeature> createFeatureReader(SimpleFeatureType schema,
			org.opengis.filter.Filter postFilter, QueryData queryData) throws IOException {
        
        // Thanks Shaun Forbes moving excludes check earlier
        if (postFilter == Filter.EXCLUDE) {
            return new EmptyFeatureReader<SimpleFeatureType, SimpleFeature>(schema);
        }
        
         FeatureReader<SimpleFeatureType, SimpleFeature> fReader = getJDBCFeatureReader(queryData);

		if ((postFilter != null) && (postFilter != Filter.INCLUDE)) {
			fReader = new FilteringFeatureReader<SimpleFeatureType, SimpleFeature>(fReader, postFilter);
		}

		
		return fReader;
	}

