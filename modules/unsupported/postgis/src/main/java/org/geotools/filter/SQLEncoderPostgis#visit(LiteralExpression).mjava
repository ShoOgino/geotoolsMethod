    /**
     * Checks to see if the literal is a geometry, and encodes it if it  is, if
     * not just sends to the parent class.
     *
     * @param expression the expression to visit and encode.
     *
     * @throws RuntimeException for IO exception (need a better error)
     */
    public void visit(LiteralExpression expression) throws RuntimeException {
        LOGGER.finer("exporting LiteralExpression");

        try {
            if (expression.getType() == DefaultExpression.LITERAL_GEOMETRY) {
                visitLiteralGeometry(expression);
            } else {
                super.visit(expression);
            }
        } catch (java.io.IOException ioe) {
            LOGGER.warning("Unable to export expression" + ioe);
            throw new RuntimeException("io error while writing", ioe);
        }
    }

