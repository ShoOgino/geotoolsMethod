    /**
     * Take the encoding, mimetype and schema and determine the complex type based from that
     * 
     * @param encoding
     *            string
     * @param mimetype
     *            string
     * @param schema
     *            string
     * @return class type it maps to
     */
    private static Class getComplexType(String encoding, String mimetype, String schema) {
        if ((encoding.toUpperCase()).contains("GML") || (mimetype.toUpperCase()).contains("GML")
                || (schema.toUpperCase()).contains("GML")) {
            return Geometry.class;
        } else if ((encoding.toUpperCase()).contains("POLYGON")
                || (mimetype.toUpperCase()).contains("POLYGON")
                || (schema.toUpperCase()).contains("POLYGON")) {
            return Geometry.class;
        } else if ((encoding.toUpperCase()).contains("POINT")
                || (mimetype.toUpperCase()).contains("POINT")
                || (schema.toUpperCase()).contains("POINT")) {
            return Geometry.class;
        } else if ((encoding.toUpperCase()).contains("LINE")
                || (mimetype.toUpperCase()).contains("LINE")
                || (schema.toUpperCase()).contains("LINE")) {
            return Geometry.class;
        } else if ((encoding.toUpperCase()).contains("RING")
                || (mimetype.toUpperCase()).contains("RING")
                || (schema.toUpperCase()).contains("RING")) {
            return Geometry.class;
        }

        // default to big O
        return Object.class;
    }

