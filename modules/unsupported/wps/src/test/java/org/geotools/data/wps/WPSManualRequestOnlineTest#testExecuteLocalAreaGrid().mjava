    /** Try to get an area grid in arcgrid format, raw */
    public void testExecuteLocalAreaGrid() throws ServiceException, IOException, ParseException {

        // don't run the test if the server is not up
        if (fixture == null) {
            return;
        }

        String processIdenLocal = "gs:AreaGrid";

        WPSCapabilitiesType capabilities = wps.getCapabilities();

        // get the first process and execute it
        ProcessOfferingsType processOfferings = capabilities.getProcessOfferings();
        EList processes = processOfferings.getProcess();
        // ProcessBriefType process = (ProcessBriefType) processes.get(0);

        // does the server contain the specific process I want
        boolean found = false;
        Iterator iterator = processes.iterator();
        while (iterator.hasNext()) {
            ProcessBriefType process = (ProcessBriefType) iterator.next();
            if (process.getIdentifier().getValue().equalsIgnoreCase(processIdenLocal)) {
                found = true;

                break;
            }
        }

        // exit test if my process doesn't exist on server
        if (!found) {
            // System.out.println("Skipping, gs:AreaGrid not found!");
            return;
        }

        // do a full describeprocess on my process
        DescribeProcessRequest descRequest = wps.createDescribeProcessRequest();
        descRequest.setIdentifier(processIdenLocal);
        wps.issueRequest(descRequest);

        // based on the describeprocess, setup the execute
        ExecuteProcessRequest exeRequest = wps.createExecuteProcessRequest();
        exeRequest.setIdentifier(processIdenLocal);
        exeRequest.addInput(
                "envelope",
                Arrays.asList(
                        wps.createBoundingBoxInputValue(
                                "EPSG:4326",
                                2,
                                Arrays.asList(-180d, -90d),
                                Arrays.asList(180d, 90d))));
        exeRequest.addInput("width", Arrays.asList(wps.createLiteralInputValue("2")));
        exeRequest.addInput("height", Arrays.asList(wps.createLiteralInputValue("1")));
        OutputDefinitionType rawOutput = wps.createOutputDefinitionType("result");
        rawOutput.setMimeType("application/arcgrid");
        ResponseFormType responseForm = wps.createResponseForm(null, rawOutput);
        exeRequest.setResponseForm(responseForm);

        // send the request
        ExecuteProcessResponse response = wps.issueRequest(exeRequest);

        // response should not be null and no exception should occur.
        assertNotNull(response);

        // we should get a raw response, no exception, no response document
        ExecuteResponseType executeResponse = response.getExecuteResponse();
        assertNull(executeResponse);
        ExceptionReportType exceptionResponse = response.getExceptionResponse();
        assertNull(exceptionResponse);

        // check result correctness
        StringBuilder sb = new StringBuilder();
        assertEquals("application/arcgrid", response.getRawContentType());
        try (BufferedReader reader =
                new BufferedReader(new InputStreamReader(response.getRawResponseStream()))) {

            String line = null;
            while ((line = reader.readLine()) != null) {
                sb.append(line).append("\n");
            }
        }
        String arcgrid = sb.toString();
        String expectedHeader =
                "NCOLS 2\n"
                        + "NROWS 1\n"
                        + "XLLCORNER -180.0\n"
                        + "YLLCORNER -90.0\n"
                        + "CELLSIZE 180.0\n"
                        + "NODATA_VALUE -9999";
        assertTrue(arcgrid.startsWith(expectedHeader));
    }

