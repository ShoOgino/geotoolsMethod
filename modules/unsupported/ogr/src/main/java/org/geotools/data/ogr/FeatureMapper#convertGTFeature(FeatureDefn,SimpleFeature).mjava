    /**
     * Turns a GeoTools feature into an OGR one
     * 
     * @param feature
     * @return
     * @throws DataSourceException
     */
    org.gdal.ogr.Feature convertGTFeature(FeatureDefn ogrSchema, SimpleFeature feature)
            throws IOException {
        // create a new empty OGR feature
        org.gdal.ogr.Feature result = new org.gdal.ogr.Feature(ogrSchema);

        // go thru GeoTools feature attributes, and convert
        SimpleFeatureType schema = feature.getFeatureType();
        for (int i = 0, j = 0; i < schema.getAttributeCount(); i++) {
            AttributeDescriptor at = schema.getDescriptor(i);
            Object attribute = feature.getAttribute(i);
            if (at instanceof GeometryDescriptor) {
                // using setGeoemtryDirectly the feature becomes the owner of the generated
                // OGR geometry and we don't have to .delete() it (it's faster, too)
                result.SetGeometryDirectly(geomMapper.parseGTGeometry((Geometry) attribute));
                continue;
            }

            if (attribute == null) {
                result.UnsetField(j);
            } else {
                final FieldDefn ogrField = ogrSchema.GetFieldDefn(j);
                final int ogrType = ogrField.GetFieldType();
                ogrField.delete();
                if (ogrType == ogr.OFTInteger)
                    result.SetField(j, ((Number) attribute).intValue());
                else if (ogrType == ogr.OFTReal)
                    result.SetField(j, ((Number) attribute).doubleValue());
                else if (ogrType == ogr.OFTDateTime)
                    result.SetField(j, dateTimeFormat.format((java.util.Date) attribute));
                else if (ogrType == ogr.OFTDate)
                    result.SetField(j, dateFormat.format((java.util.Date) attribute));
                else if (ogrType == ogr.OFTTime)
                    result.SetField(j, timeFormat.format((java.util.Date) attribute));
                else
                    result.SetField(j, attribute.toString());
            }
            j++;
        }

        return result;
    }

