    public void testGeot5588() throws Exception {
        // Definition Table
        //   Type NATIVE Charset "Neutral"
        //   Fields 3
        //     byte_field Integer (3) ;
        //     short_field Integer (5) ;
        //     int_field_0 Integer ;

        String tabFile = getAbsolutePath("geot5588/geot5588a.tab");
        OGRDataStore s = new OGRDataStore(tabFile, "MapInfo File", null, ogr);

        SimpleFeatureType schema = s.getSchema("geot5588a");
        assertEquals(Short.class, schema.getDescriptor("byte_field").getType().getBinding());
        assertEquals(Integer.class, schema.getDescriptor("short_field").getType().getBinding());
        assertEquals(BigInteger.class, schema.getDescriptor("int_field_0").getType().getBinding());

        // Check contents
        FeatureSource<SimpleFeatureType, SimpleFeature> fs = s.getFeatureSource("geot5588a");
        try (FeatureIterator<SimpleFeature> iterator = fs.getFeatures().features()) {
            // Test data should contain one feature
            assertTrue(iterator.hasNext());
            SimpleFeature feature = iterator.next();
            assertEquals((short) 999, feature.getAttribute("byte_field"));
            assertEquals(99999, feature.getAttribute("short_field"));
            assertEquals(BigInteger.valueOf(257), feature.getAttribute("int_field_0"));

            // There shouldn't be any more features from here
            assertFalse(iterator.hasNext());
        }
    }

