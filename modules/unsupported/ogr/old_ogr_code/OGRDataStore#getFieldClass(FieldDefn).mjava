    /**
     * Turns an ogrFieldType into the best corresponding class we can figure out
     * 
     * @param ogrFieldType
     * @return
     */
    private Class getFieldClass(FieldDefn field) {
        final int ogrFieldType = field.GetFieldType();
        final int width = field.GetWidth();
        if (ogrFieldType < 0)
            throw new IllegalArgumentException("Can't have a negative type");
        if (ogrFieldType == ogr.OFTInteger) {
            if (width <= 9)
                return Integer.class;
            else if (width <= 19)
                return Long.class;
            else
                return BigDecimal.class;
        } else if (ogrFieldType == ogr.OFTReal) {
            if (width < 13)
                return Float.class;
            else
                return Double.class;
        } else if (ogrFieldType == ogr.OFTDate || ogrFieldType == ogr.OFTTime
                || ogrFieldType == ogr.OFTDateTime) {
            // return java.sql.Date.class;
            // } else if (ogrFieldType == ogr.OFTTime) {
            // return java.sql.Time.class;
            // } else if (ogrFieldType == ogr.OFTDateTime) {
            return java.util.Date.class;
        } else {
            return String.class;
        }
    }

