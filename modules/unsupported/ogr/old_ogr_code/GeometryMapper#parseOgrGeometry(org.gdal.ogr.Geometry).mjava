    /**
     * Reads the current feature's geometry using wkb encoding. A wkbReader should be provided since
     * it's not thread safe by design.
     * 
     * @throws IOException
     */
    Geometry parseOgrGeometry(org.gdal.ogr.Geometry geom) throws IOException {
        // Extract the geometry using either WKT or WKB. Rationale: the SWIG
        // bindings do not provide subclasses. Even if they did, going thru the
        // JNI barrier often is expensive, so it's better to gather the geometry
        // is a single call
        if (USE_WKB) {
            int wkbSize = geom.WkbSize();
            // the gdal interface uses a char* type, maybe because in C it's
            // unsigned and has
            // the same size as a byte, unfortunately this means we have to
            // unpack it
            // to byte format by doing bit masking and shifting
            byte[] byteBuffer = new byte[wkbSize];
            geom.ExportToWkb(byteBuffer, WKB_XDR);
            try {
                Geometry g = wkbReader.read(byteBuffer);
                return g;
            } catch (ParseException pe) {
                throw new RuntimeException(
                        "Could not parse the current Geometry in WKB format.", pe);
            }
        } else {
            String[] stringArray = new String[1];
            geom.ExportToWkt(stringArray);
            try {
                return wktReader.read(stringArray[0]);
            } catch (ParseException pe) {
                throw new RuntimeException(
                        "Could not parse the current Geometry in WKB format.", pe);
            }
        }
    }

