    /**
     * @param currentFeature
     * @throws IOException
     * @throws JsonProcessingException
     */
    private void writeFeature(SimpleFeature currentFeature, JsonGenerator g)
            throws IOException, JsonProcessingException {
        g.writeStartObject();
        g.writeStringField("type", "Feature");
        g.writeFieldName("properties");
        g.writeStartObject();
        for (Property p : currentFeature.getProperties()) {
            PropertyType type = p.getType();
            if (type instanceof GeometryType) {
                continue;
            }
            Object value = p.getValue();
            String name = p.getName().getLocalPart();
            if (value == null) {
                generator.writeNullField(name);
                continue;
            }
            Class<?> binding = p.getType().getBinding();
            if (binding == Integer.class) {
                g.writeNumberField(name, (int) value);
            } else if (binding == Double.class) {
                g.writeNumberField(name, (double) value);
            } else {
                g.writeFieldName(name);
                g.writeString(value.toString());
            }
        }
        g.writeEndObject();

        Geometry defaultGeometry = (Geometry) currentFeature.getDefaultGeometry();
        // Check CRS and Axis order before writing out to comply with
        // https://tools.ietf.org/html/rfc7946 unless they asked nicely
        if (!encodeFeatureCollectionCRS) {
            CoordinateReferenceSystem inCRS =
                    currentFeature
                            .getDefaultGeometryProperty()
                            .getDescriptor()
                            .getCoordinateReferenceSystem();
            if (transform == null || inCRS != lastCRS) {
                lastCRS = inCRS;
                try {
                    transform = CRS.findMathTransform(inCRS, outCRS, true);
                } catch (FactoryException e) {
                    throw new RuntimeException(e);
                }
            }
            if (!CRS.equalsIgnoreMetadata(inCRS, outCRS)) {
                // reproject
                try {
                    defaultGeometry = JTS.transform(defaultGeometry, transform);
                } catch (MismatchedDimensionException | TransformException e) {
                    throw new RuntimeException(e);
                }
            }
        }

        if (defaultGeometry != null) {
            g.writeFieldName("geometry");
            String gString = mapper.writeValueAsString(defaultGeometry);

            g.writeRawValue(gString);
            g.writeStringField("id", currentFeature.getID());
        } else {
            g.writeNull();
        }
        g.writeEndObject();
        g.flush();
    }

