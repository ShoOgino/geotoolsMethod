    /** */
    private SimpleFeatureBuilder getBuilder(JsonNode props) {

        if (schema == null) {
            typeBuilder = new SimpleFeatureTypeBuilder();
            // GeoJSON is always WGS84
            typeBuilder.setCRS(DefaultGeographicCRS.WGS84);
            typeBuilder.setName(baseName);
            if (typeBuilder.getDefaultGeometry() == null) {
                typeBuilder.setDefaultGeometry(GEOMETRY_NAME);
                typeBuilder.add(GEOMETRY_NAME, Geometry.class, DefaultGeographicCRS.WGS84);
            }
            Iterator<Entry<String, JsonNode>> fields = props.fields();
            while (fields.hasNext()) {
                Entry<String, JsonNode> n = fields.next();
                typeBuilder.nillable(true);
                JsonNode value = n.getValue();

                if (value instanceof IntNode) {
                    typeBuilder.add(n.getKey(), Integer.class);
                } else if (value instanceof DoubleNode) {
                    typeBuilder.add(n.getKey(), Double.class);
                } else {
                    typeBuilder.defaultValue("");
                    typeBuilder.add(n.getKey(), String.class);
                }
            }
            schema = typeBuilder.buildFeatureType();
        }
        return new SimpleFeatureBuilder(schema);
    }

