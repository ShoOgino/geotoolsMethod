    @Test
    public void copyContent() throws Exception {
        File directory = tmp;
        Map<String, Serializable> params = new HashMap<>();
        params.put(GeoJSONDataStoreFactory.URL_PARAM.key, url);
        DataStore store = fac.createDataStore(params);
        SimpleFeatureType featureType = store.getSchema("locations");

        File file2 = new File(directory, "duplicate.geojson");

        // System.out.println("copying to " + file2);
        Map<String, Serializable> params2 = new HashMap<>();
        params2.put(GeoJSONDataStoreFactory.FILE_PARAM.key, file2);

        GeoJSONDataStoreFactory factory = new GeoJSONDataStoreFactory();
        DataStore duplicate = factory.createNewDataStore(params2);
        duplicate.createSchema(featureType);

        SimpleFeature feature, newFeature;

        Query query = new Query(featureType.getTypeName(), Filter.INCLUDE);
        assertNotNull(duplicate);
        try (FeatureReader<SimpleFeatureType, SimpleFeature> reader =
                        store.getFeatureReader(query, Transaction.AUTO_COMMIT);
                FeatureWriter<SimpleFeatureType, SimpleFeature> writer =
                        duplicate.getFeatureWriterAppend("duplicate", Transaction.AUTO_COMMIT)) {
            while (reader.hasNext()) {
                feature = reader.next();
                newFeature = writer.next();

                newFeature.setAttributes(feature.getAttributes());
                writer.write();
            }
        }

        // test the new store is the same as the original
        SimpleFeatureStore featureStore = (SimpleFeatureStore) store.getFeatureSource("locations");
        assertEquals(9, featureStore.getFeatures().size());

        SimpleFeatureStore featureStored =
                (SimpleFeatureStore) duplicate.getFeatureSource("duplicate");
        assertEquals(9, featureStored.getFeatures().size());

        try (SimpleFeatureIterator original = featureStore.getFeatures().features();
                SimpleFeatureIterator dups = featureStored.getFeatures().features()) {
            while (original.hasNext() && dups.hasNext()) {
                SimpleFeature o = original.next();
                SimpleFeature d = dups.next();

                for (int i = 0; i < o.getAttributeCount(); i++) {
                    assertTrue(
                            "" + o.getAttribute(i) + " doesn't equal " + d.getAttribute(i),
                            DataUtilities.attributesEqual(o.getAttribute(i), d.getAttribute(i)));
                }
            }

        } finally {
            store.dispose();
        }
    }

