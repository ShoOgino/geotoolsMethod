    @Test
    public void testCreateFeatureSourceAndCountFeature() throws Exception {

        PowerMockito.mockStatic(HttpClients.class);
        PowerMockito.when(HttpClients.createDefault()).thenReturn(clientMock);
        PowerMockito.whenNew(HttpGet.class)
                .withNoArguments()
                .thenReturn(getMock)
                .thenReturn(getMock);
        when(clientMock.execute(getMock)).thenReturn(responseMock);
        when(responseMock.getStatusLine()).thenReturn(responseMockStatusLine);
        when(responseMockStatusLine.getStatusCode()).thenReturn(HttpStatus.SC_OK);
        when(responseMock.getEntity()).thenReturn(responseMockEntity);
        when(responseMock.getEntity().getContent())
                .thenReturn(
                        ArcGISRestDataStoreFactoryTest.readJSONAsStream("test-data/catalog.json"))
                .thenReturn(
                        ArcGISRestDataStoreFactoryTest.readJSONAsStream(
                                "test-data/lgaDataset.json"))
                .thenReturn(
                        ArcGISRestDataStoreFactoryTest.readJSONAsStream(
                                "test-data/lgaDataset.json"));

        this.dataStore =
                (ArcGISRestDataStore)
                        ArcGISRestDataStoreFactoryTest.createDefaultOpenDataTestDataStore();
        this.dataStore.createTypeNames();

        FeatureSource<SimpleFeatureType, SimpleFeature> src =
                this.dataStore.createFeatureSource(
                        this.dataStore.getEntry(
                                new NameImpl(ArcGISRestDataStoreFactoryTest.NAMESPACE, TYPENAME1)));
        src.getSchema();
        assertTrue(src instanceof ArcGISRestFeatureSource);
        assertEquals("LGAProfiles2014Beta", src.getInfo().getName());
        assertEquals(
                ArcGISRestDataStoreFactoryTest.NAMESPACE, src.getInfo().getSchema().toString());
        assertEquals(CRS.decode("EPSG:3857"), src.getInfo().getCRS());
        assertEquals("LGA Profile 2014 (beta)", src.getInfo().getTitle());
        assertEquals(15661191, src.getInfo().getBounds().getMinX(), 1);
        assertEquals(-4742385, src.getInfo().getBounds().getMinY(), 1);
        assertEquals(16706777, src.getInfo().getBounds().getMaxX(), 1);
        assertEquals(-4022464, src.getInfo().getBounds().getMaxY(), 1);
        assertEquals(
                "[Health and Human Services, LGA, LGA Profiles]",
                src.getInfo().getKeywords().toString());
        assertEquals(
                "<div>2014 Local Government Area Profiles</div><div><br /></div>https://www2.health.vic.gov.au/about/reporting-planning-data/gis-and-planning-products/geographical-profiles<div>&gt; Please read the data definistions at the link above</div><div>&gt; xls and pdf documents area available at the link above</div><div>&gt; This is a beta release of the 2014 LGA profiles in this format. Field names and types may change during the beta phase.Â </div><div><br /></div><div>Last updated : 24 May 2016</div><div>Owning agency : Department of Health and Human Services, Victoria</div><div>Copyright statement : https://www.health.vic.gov.au/copyright</div><div>Licence name : https://www.health.vic.gov.au/data-license</div><div>Disclaimer: https://www.health.vic.gov.au/data-disclaimer</div><div>Attribution statement: https://www.health.vic.gov.au/data-attribution</div><div><br /></div><div>Off-line access : Department of Health and Human Services, GPO Box 4057, Melbourne Victoria, 3001</div><div><br /></div><div>Geographic coverage-jurisdiction : Victoria</div>",
                src.getInfo().getDescription());

        // Feature count test
        PowerMockito.whenNew(HttpPost.class).withNoArguments().thenReturn(postMock);
        when(clientMock.execute(postMock)).thenReturn(responseMock);

        when(responseMock.getStatusLine()).thenReturn(responseMockStatusLine);
        when(responseMockStatusLine.getStatusCode()).thenReturn(HttpStatus.SC_OK);
        when(responseMock.getEntity()).thenReturn(responseMockEntity);
        when(responseMockEntity.getContent())
                .thenReturn(
                        ArcGISRestDataStoreFactoryTest.readJSONAsStream("test-data/count.json"));

        assertEquals(79, src.getCount(new Query()));
    }

