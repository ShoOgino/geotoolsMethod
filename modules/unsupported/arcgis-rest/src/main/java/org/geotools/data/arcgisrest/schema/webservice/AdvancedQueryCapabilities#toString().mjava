    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(AdvancedQueryCapabilities.class.getName())
                .append('@')
                .append(Integer.toHexString(System.identityHashCode(this)))
                .append('[');
        sb.append("supportsPagination");
        sb.append('=');
        sb.append(((this.supportsPagination == null) ? "<null>" : this.supportsPagination));
        sb.append(',');
        sb.append("supportsQueryRelatedPagination");
        sb.append('=');
        sb.append(
                ((this.supportsQueryRelatedPagination == null)
                        ? "<null>"
                        : this.supportsQueryRelatedPagination));
        sb.append(',');
        sb.append("supportsQueryWithDistance");
        sb.append('=');
        sb.append(
                ((this.supportsQueryWithDistance == null)
                        ? "<null>"
                        : this.supportsQueryWithDistance));
        sb.append(',');
        sb.append("supportsReturningQueryExtent");
        sb.append('=');
        sb.append(
                ((this.supportsReturningQueryExtent == null)
                        ? "<null>"
                        : this.supportsReturningQueryExtent));
        sb.append(',');
        sb.append("supportsStatistics");
        sb.append('=');
        sb.append(((this.supportsStatistics == null) ? "<null>" : this.supportsStatistics));
        sb.append(',');
        sb.append("supportsOrderBy");
        sb.append('=');
        sb.append(((this.supportsOrderBy == null) ? "<null>" : this.supportsOrderBy));
        sb.append(',');
        sb.append("supportsDistinct");
        sb.append('=');
        sb.append(((this.supportsDistinct == null) ? "<null>" : this.supportsDistinct));
        sb.append(',');
        sb.append("supportsQueryWithResultType");
        sb.append('=');
        sb.append(
                ((this.supportsQueryWithResultType == null)
                        ? "<null>"
                        : this.supportsQueryWithResultType));
        sb.append(',');
        sb.append("supportsSqlExpression");
        sb.append('=');
        sb.append(((this.supportsSqlExpression == null) ? "<null>" : this.supportsSqlExpression));
        sb.append(',');
        sb.append("supportsAdvancedQueryRelated");
        sb.append('=');
        sb.append(
                ((this.supportsAdvancedQueryRelated == null)
                        ? "<null>"
                        : this.supportsAdvancedQueryRelated));
        sb.append(',');
        sb.append("supportsReturningGeometryCentroid");
        sb.append('=');
        sb.append(
                ((this.supportsReturningGeometryCentroid == null)
                        ? "<null>"
                        : this.supportsReturningGeometryCentroid));
        sb.append(',');
        if (sb.charAt((sb.length() - 1)) == ',') {
            sb.setCharAt((sb.length() - 1), ']');
        } else {
            sb.append(']');
        }
        return sb.toString();
    }

