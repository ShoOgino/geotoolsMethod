    @Override
    public int hashCode() {
        int result = 1;
        result = ((result* 31)+((this.extent == null)? 0 :this.extent.hashCode()));
        result = ((result* 31)+((this.supportsApplyEditsWithGlobalIds == null)? 0 :this.supportsApplyEditsWithGlobalIds.hashCode()));
        result = ((result* 31)+((this.maxRecordCount == null)? 0 :this.maxRecordCount.hashCode()));
        result = ((result* 31)+((this.type == null)? 0 :this.type.hashCode()));
        result = ((result* 31)+((this.hasStaticData == null)? 0 :this.hasStaticData.hashCode()));
        result = ((result* 31)+((this.editingInfo == null)? 0 :this.editingInfo.hashCode()));
        result = ((result* 31)+((this.supportsAttachmentsByUploadId == null)? 0 :this.supportsAttachmentsByUploadId.hashCode()));
        result = ((result* 31)+((this.relationships == null)? 0 :this.relationships.hashCode()));
        result = ((result* 31)+((this.id == null)? 0 :this.id.hashCode()));
        result = ((result* 31)+((this.supportsStatistics == null)? 0 :this.supportsStatistics.hashCode()));
        result = ((result* 31)+((this.standardMaxRecordCount == null)? 0 :this.standardMaxRecordCount.hashCode()));
        result = ((result* 31)+((this.isDataVersioned == null)? 0 :this.isDataVersioned.hashCode()));
        result = ((result* 31)+((this.templates == null)? 0 :this.templates.hashCode()));
        result = ((result* 31)+((this.supportsAdvancedQueries == null)? 0 :this.supportsAdvancedQueries.hashCode()));
        result = ((result* 31)+((this.currentVersion == null)? 0 :this.currentVersion.hashCode()));
        result = ((result* 31)+((this.hasZ == null)? 0 :this.hasZ.hashCode()));
        result = ((result* 31)+((this.objectIdField == null)? 0 :this.objectIdField.hashCode()));
        result = ((result* 31)+((this.name == null)? 0 :this.name.hashCode()));
        result = ((result* 31)+((this.displayField == null)? 0 :this.displayField.hashCode()));
        result = ((result* 31)+((this.supportsCalculate == null)? 0 :this.supportsCalculate.hashCode()));
        result = ((result* 31)+((this.fields == null)? 0 :this.fields.hashCode()));
        result = ((result* 31)+((this.maxRecordCountFactor == null)? 0 :this.maxRecordCountFactor.hashCode()));
        result = ((result* 31)+((this.hasM == null)? 0 :this.hasM.hashCode()));
        result = ((result* 31)+((this.allowGeometryUpdates == null)? 0 :this.allowGeometryUpdates.hashCode()));
        result = ((result* 31)+((this.useStandardizedQueries == null)? 0 :this.useStandardizedQueries.hashCode()));
        result = ((result* 31)+((this.globalIdField == null)? 0 :this.globalIdField.hashCode()));
        result = ((result* 31)+((this.description == null)? 0 :this.description.hashCode()));
        result = ((result* 31)+((this.supportsRollbackOnFailureParameter == null)? 0 :this.supportsRollbackOnFailureParameter.hashCode()));
        result = ((result* 31)+((this.supportsTruncate == null)? 0 :this.supportsTruncate.hashCode()));
        result = ((result* 31)+((this.indexes == null)? 0 :this.indexes.hashCode()));
        result = ((result* 31)+((this.htmlPopupType == null)? 0 :this.htmlPopupType.hashCode()));
        result = ((result* 31)+((this.minScale == null)? 0 :this.minScale.hashCode()));
        result = ((result* 31)+((this.hasAttachments == null)? 0 :this.hasAttachments.hashCode()));
        result = ((result* 31)+((this.advancedQueryCapabilities == null)? 0 :this.advancedQueryCapabilities.hashCode()));
        result = ((result* 31)+((this.serviceItemId == null)? 0 :this.serviceItemId.hashCode()));
        result = ((result* 31)+((this.supportsValidateSql == null)? 0 :this.supportsValidateSql.hashCode()));
        result = ((result* 31)+((this.supportsCoordinatesQuantization == null)? 0 :this.supportsCoordinatesQuantization.hashCode()));
        result = ((result* 31)+((this.types == null)? 0 :this.types.hashCode()));
        result = ((result* 31)+((this.capabilities == null)? 0 :this.capabilities.hashCode()));
        result = ((result* 31)+((this.maxScale == null)? 0 :this.maxScale.hashCode()));
        result = ((result* 31)+((this.defaultVisibility == null)? 0 :this.defaultVisibility.hashCode()));
        result = ((result* 31)+((this.tileMaxRecordCount == null)? 0 :this.tileMaxRecordCount.hashCode()));
        result = ((result* 31)+((this.typeIdField == null)? 0 :this.typeIdField.hashCode()));
        result = ((result* 31)+((this.multiScaleGeometryInfo == null)? 0 :this.multiScaleGeometryInfo.hashCode()));
        result = ((result* 31)+((this.supportedQueryFormats == null)? 0 :this.supportedQueryFormats.hashCode()));
        result = ((result* 31)+((this.supportsMultiScaleGeometry == null)? 0 :this.supportsMultiScaleGeometry.hashCode()));
        result = ((result* 31)+((this.drawingInfo == null)? 0 :this.drawingInfo.hashCode()));
        result = ((result* 31)+((this.copyrightText == null)? 0 :this.copyrightText.hashCode()));
        result = ((result* 31)+((this.geometryType == null)? 0 :this.geometryType.hashCode()));
        return result;
    }

