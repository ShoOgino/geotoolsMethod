    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(EditorTrackingInfo.class.getName())
                .append('@')
                .append(Integer.toHexString(System.identityHashCode(this)))
                .append('[');
        sb.append("enableEditorTracking");
        sb.append('=');
        sb.append(((this.enableEditorTracking == null) ? "<null>" : this.enableEditorTracking));
        sb.append(',');
        sb.append("enableOwnershipAccessControl");
        sb.append('=');
        sb.append(
                ((this.enableOwnershipAccessControl == null)
                        ? "<null>"
                        : this.enableOwnershipAccessControl));
        sb.append(',');
        sb.append("allowOthersToQuery");
        sb.append('=');
        sb.append(((this.allowOthersToQuery == null) ? "<null>" : this.allowOthersToQuery));
        sb.append(',');
        sb.append("allowOthersToUpdate");
        sb.append('=');
        sb.append(((this.allowOthersToUpdate == null) ? "<null>" : this.allowOthersToUpdate));
        sb.append(',');
        sb.append("allowOthersToDelete");
        sb.append('=');
        sb.append(((this.allowOthersToDelete == null) ? "<null>" : this.allowOthersToDelete));
        sb.append(',');
        sb.append("allowAnonymousToUpdate");
        sb.append('=');
        sb.append(((this.allowAnonymousToUpdate == null) ? "<null>" : this.allowAnonymousToUpdate));
        sb.append(',');
        sb.append("allowAnonymousToDelete");
        sb.append('=');
        sb.append(((this.allowAnonymousToDelete == null) ? "<null>" : this.allowAnonymousToDelete));
        sb.append(',');
        if (sb.charAt((sb.length() - 1)) == ',') {
            sb.setCharAt((sb.length() - 1), ']');
        } else {
            sb.append(']');
        }
        return sb.toString();
    }

