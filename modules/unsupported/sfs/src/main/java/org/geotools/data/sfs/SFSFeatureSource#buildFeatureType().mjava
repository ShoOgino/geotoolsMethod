    /**
     * This method returns the schema of the layer
     *
     * @return SimpleFeatureType
     * @throws IOException, MalformedURLException
     */
    @Override
    protected SimpleFeatureType buildFeatureType() throws IOException, MalformedURLException {

        /* Get the layer describing URL*/
        String jsonString =
                ods.resourceToString("describe/" + contentEntry.getName().getLocalPart(), null);

        JSONParser parser = new JSONParser();

        JSONArray jsonArray = null;
        try {
            jsonArray = (JSONArray) parser.parse(jsonString);

        } catch (org.json.simple.parser.ParseException pe) {
            LOGGER.log(
                    Level.SEVERE,
                    "parse Exception : FeatureSource -- buildFeatureType --" + pe.getMessage(),
                    pe);
        }
        /* Lets build the feature type*/
        SimpleFeatureTypeBuilder fbt = new SimpleFeatureTypeBuilder();

        fbt.setName(contentEntry.getName());
        /* set the CRS*/
        fbt.setCRS(layer.getCoordinateReferenceSystem());
        /* First Iterator*/
        Iterator itr = jsonArray.iterator();
        while (itr.hasNext()) {
            HashMap<String, String> tmpMap = (HashMap<String, String>) itr.next();

            /* Iterate Through the hashMap to extract the key-value pairs*/
            for (Map.Entry<String, String> entry : tmpMap.entrySet()) {

                // LOGGER.log(Level.INFO, "{0} - {1} - {2}", new Object[]{entry.getKey(),
                // entry.getValue(), OpenDataStoreUtil.getClass(entry.getValue())});
                fbt.add(entry.getKey(), SFSDataStoreUtil.getClass(entry.getValue()));
            }
        }

        return fbt.buildFeatureType();
    }

