    /**
     * Returns the next feature -- also if the axis is flipped (i.e. YX instead of XY) then it is
     * brought back to XY
     *
     * @return SimpleFeature
     * @throws IOException
     * @throws IllegalArgumentException
     * @throws NoSuchElementException
     */
    public SimpleFeature next()
            throws IOException, IllegalArgumentException, NoSuchElementException {
        try {
            /*Read in next feature*/
            SimpleFeature sf = (SimpleFeature) featureIterator.next();

            Geometry fg;

            if (!layer.isXYOrder()) {
                /* flip the geometry */
                fg = (Geometry) sf.getDefaultGeometry();
                if (fg != null) {
                    SFSDataStoreUtil.flipFeatureYX(fg);
                }
                /* flip the bounding box*/
                ArrayList al = (ArrayList) sf.getAttribute("boundedBy");
                if (al != null) {
                    SFSDataStoreUtil.flipYXInsideTheBoundingBox(al);
                }
            }

            // the json reader does not know about the namespaces and puts the geometry in a
            // "geometry" attribute
            // so we need to clone the returned feature and adapt it a bit
            for (AttributeDescriptor at : fbuilder.getFeatureType().getAttributeDescriptors()) {
                if (at instanceof GeometryDescriptor) {
                    fbuilder.add(sf.getDefaultGeometry());
                } else {
                    fbuilder.add(sf.getAttribute(at.getLocalName()));
                }
            }
            return fbuilder.buildFeature(sf.getID());
        } finally {
            hasNext = null;
        }
    }

