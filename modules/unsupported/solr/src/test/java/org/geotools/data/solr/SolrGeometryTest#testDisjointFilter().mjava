    public void testDisjointFilter() throws Exception {
        init("not-active");
        FilterFactory2 ff = (FilterFactory2) dataStore.getFilterFactory();
        GeometryFactory gf = new GeometryFactory();
        PackedCoordinateSequenceFactory sf = new PackedCoordinateSequenceFactory();
        Point ls = gf.createPoint(sf.create(new double[] {0, 0}, 2));
        Disjoint f = ff.disjoint(ff.property("geo"), ff.literal(ls));
        SimpleFeatureCollection features = featureSource.getFeatures(f);
        try (final Stream<SimpleFeature> featureStream = FeatureStreams.toFeatureStream(features)) {
            final List<SimpleFeature> featuresList = featureStream.collect(Collectors.toList());
            assertEquals(11, featuresList.size());
            assertTrue(
                    "not-active.11 ID not found",
                    featuresList.stream().anyMatch(x -> "not-active.11".equals(x.getID())));
            assertTrue(
                    "not-active.12 ID not found",
                    featuresList.stream().anyMatch(x -> "not-active.12".equals(x.getID())));
            assertTrue(
                    "not-active.10 ID found",
                    featuresList.stream().noneMatch(x -> "not-active.10".equals(x.getID())));
            assertTrue(
                    "not-active.1 ID found",
                    featuresList.stream().noneMatch(x -> "not-active.1".equals(x.getID())));
        }
    }

