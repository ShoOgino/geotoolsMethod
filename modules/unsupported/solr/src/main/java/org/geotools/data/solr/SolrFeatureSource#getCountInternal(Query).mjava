    @Override
    protected int getCountInternal(Query query) throws IOException {
        int count = 0;
        try {
            SolrDataStore store = getDataStore();
            Filter[] split = splitFilter(query.getFilter(), this);
            Filter preFilter = split[0];
            Filter postFilter = split[1];
            if (postFilter != null && postFilter != Filter.INCLUDE) {
                // grab a reader
                try (FeatureReader<SimpleFeatureType, SimpleFeature> reader = getReader(query)) {
                    while (reader.hasNext()) {
                        reader.next();
                        count++;
                    }
                }
                return count;
            } else {
                Query preQuery = new Query(query);
                preQuery.setFilter(preFilter);
                SolrQuery q = store.count(getSchema(), preQuery);
                if (store.getLogger().isLoggable(Level.FINE)) {
                    store.getLogger().log(Level.FINE, q.toString());
                }
                @SuppressWarnings("PMD.CloseResource") // not managed here
                HttpSolrClient server = store.getSolrServer();
                QueryResponse rsp = server.query(q);
                count = (int) (rsp.getResults().getNumFound() - rsp.getResults().getStart());
                // Manage max manually
                if (query.getMaxFeatures() > 0 && query.getMaxFeatures() < Integer.MAX_VALUE) {
                    if (count > query.getMaxFeatures()) {
                        count = query.getMaxFeatures();
                    }
                }
            }
        } catch (Throwable e) { // NOSONAR
            if (e instanceof Error) {
                throw (Error) e;
            } else {
                throw (IOException) new IOException().initCause(e);
            }
        }
        return count;
    }

