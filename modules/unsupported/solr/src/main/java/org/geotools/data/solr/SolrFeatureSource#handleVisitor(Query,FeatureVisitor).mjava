    @Override
    protected boolean handleVisitor(Query query, FeatureVisitor visitor) throws IOException {
        // Don't do the following shortcuts if we don't request all features as that
        // might introduce subtle bugs.
        if (query.getMaxFeatures() != Integer.MAX_VALUE) {
            return false;
        }

        SortBy sortBy;

        if (visitor instanceof MinVisitor) {
            // Get Minimum value
            MinVisitor minVisitor = (MinVisitor) visitor;
            List<Expression> exprs = minVisitor.getExpressions();
            if (exprs.size() != 1 || !(exprs.get(0) instanceof PropertyName)) {
                return false;
            }

            PropertyName propName = (PropertyName) exprs.get(0);
            sortBy = new SortByImpl(propName, SortOrder.ASCENDING);
        } else if (visitor instanceof MaxVisitor) {
            // Get Maximum Value
            MaxVisitor maxVisitor = (MaxVisitor) visitor;
            List<Expression> exprs = maxVisitor.getExpressions();
            if (exprs.size() != 1 || !(exprs.get(0) instanceof PropertyName)) {
                return false;
            }

            PropertyName propName = (PropertyName) exprs.get(0);
            sortBy = new SortByImpl(propName, SortOrder.DESCENDING);
        } else if (visitor instanceof NearestVisitor) {
            NearestVisitor nearestVisitor = (NearestVisitor) visitor;
            Expression exp = nearestVisitor.getExpression();

            if (!(exp instanceof PropertyName)) {
                return false;
            }

            PropertyName propName = (PropertyName) exp;

            if (!(nearestVisitor.getValueToMatch() instanceof Date)) {
                return false;
            }

            FilterFactory factory = CommonFactoryFinder.getFilterFactory(null);

            // Sort by difference from getValueToMatch, should return closest value
            // at the top of the sort
            PropertyName expr =
                    factory.property(
                            "abs(ms("
                                    + dateFormatUTC.format(nearestVisitor.getValueToMatch())
                                    + ","
                                    + propName.getPropertyName()
                                    + "))");

            sortBy = new SortByImpl(expr, SortOrder.ASCENDING);

        } else {
            // Otherwise let the caller iterate through the entire collection
            return false;
        }

        Query newQuery = new Query(query);
        newQuery.setSortBy(new SortBy[] {sortBy});

        // We set up the sortBy where we only need a single value instead of the
        // entire collection.
        newQuery.setMaxFeatures(1);

        FeatureReader<SimpleFeatureType, SimpleFeature> reader = getReader(newQuery);
        while (reader.hasNext()) {
            visitor.visit(reader.next());
        }

        return true;
    }

