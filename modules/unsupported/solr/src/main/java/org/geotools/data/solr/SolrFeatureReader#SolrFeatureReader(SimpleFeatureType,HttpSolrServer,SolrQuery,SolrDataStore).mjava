    /**
     * Creates the feature reader for SOLR store <br>
     * The feature reader use SOLR CURSOR to paginate request, so multiple SOLR query will be
     * executed
     * 
     * @param featureType the feature type to query
     * @param solrUrl the URL of SOLR server
     * @param solrQuery the SOLR query to execute
     * @param solrDataStore the SOLR store
     * @throws SolrServerException
     */
    public SolrFeatureReader(SimpleFeatureType featureType, HttpSolrServer server,
            SolrQuery solrQuery, SolrDataStore solrDataStore) throws SolrServerException {
        this.featureType = featureType;
        this.solrQuery = solrQuery;
        this.solrDataStore = solrDataStore;
        this.pkey = solrDataStore.getPrimaryKey(featureType.getTypeName());

        this.builder = new SimpleFeatureBuilder(featureType);

        this.server = server;

        // Add always pk as field if not already present
        if (solrQuery.getFields() != null && !solrQuery.getFields().contains(pkey.getName())) {
            solrQuery.addField(pkey.getName());
        }

        // Can't use pagination with start, then first query for cursor mark of start
        if (solrQuery.getStart() != null && solrQuery.getStart() > 0) {
            cursorMark = getCursorMarkForStart(server, solrQuery);
        } else {
            cursorMark = CursorMarkParams.CURSOR_MARK_START;
        }
        solrQuery.set(CursorMarkParams.CURSOR_MARK_PARAM, cursorMark);
        QueryResponse rsp = server.query(solrQuery);
        if (this.solrDataStore.getLogger().isLoggable(Level.FINE)) {
            this.solrDataStore.getLogger().log(Level.FINE,
                    "SOLR query done: " + solrQuery.toString());
        }
        this.solrDocIterator = rsp.getResults().iterator();
        nextCursorMark = rsp.getNextCursorMark();
        counter = 0;

        // create readers for different geometry types
        geometryReaders = new HashMap<>();
        for (AttributeDescriptor att : featureType.getAttributeDescriptors()) {
            if (att instanceof GeometryDescriptor) {
                SolrSpatialStrategy spatialStrategy = SolrSpatialStrategy.createStrategy((GeometryDescriptor)att);
                geometryReaders.put(att.getName(), spatialStrategy);
            }
        }
    }

