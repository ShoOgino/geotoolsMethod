    /**
     * Builds the SolrJ count query with support of limit/offset, OGC filter encoding and viewParams <br>
     * Currently only additional "q" and "fq" SOLR parameters can be passed using vireParams, this
     * conditions are added in AND with others
     * 
     * @param featureType the feature type to query
     * @param q the OGC query to translate in SOLR request
     * 
     * @see {@link Hints#VIRTUAL_TABLE_PARAMETERS}
     * 
     */
    protected SolrQuery count(SimpleFeatureType featureType, Query q) {
        SolrQuery query = new SolrQuery();
        query.setParam("omitHeader", true);
        query.setQuery("*:*");
        try {

            // Encode limit/offset, if necessary
            if (q.getStartIndex() != null && q.getStartIndex() >= 0) {
                query.setStart(q.getStartIndex());
            }
            if (q.getMaxFeatures() > 0) {
                query.setRows(q.getMaxFeatures());
            }

            // Encode OGC filer
            FilterToSolr f2s = initializeFilterToSolr(featureType);
            String fq = this.field + ":" + featureType.getTypeName();
            String ffq = f2s.encodeToString(q.getFilter());
            if (ffq != null && !ffq.isEmpty()) {
                fq = fq + " AND " + ffq;
            }
            query.setFilterQueries(fq);

            // Add viewparams parameters
            addViewparams(q, query);

        } catch (Exception e) {
            LOGGER.log(Level.SEVERE, e.getMessage(), e);
        }
        return query;
    }

