    /** Store a tile */
    public void saveTile(MBTilesTile entry) throws IOException {
        try {
            try (Connection cx = connPool.getConnection()) {

                if (disableJournal) {
                    disableJournal(cx);
                }

                if (entry.getData() != null) {
                    try (PreparedStatement ps =
                            prepare(
                                            cx,
                                            format(
                                                    "INSERT OR REPLACE INTO %s VALUES (?,?,?,?)",
                                                    TABLE_TILES))
                                    .set(entry.getZoomLevel())
                                    .set(entry.getTileColumn())
                                    .set(entry.getTileRow())
                                    .set(entry.getData())
                                    .log(Level.FINE)
                                    .statement()) {
                        ps.execute();
                    }
                } else {
                    try (PreparedStatement ps =
                            prepare(
                                            cx,
                                            format(
                                                    "DELETE FROM %s WHERE zoom_level=? AND "
                                                            + "tile_column=? AND tile_row=?",
                                                    TABLE_TILES))
                                    .set(entry.getZoomLevel())
                                    .set(entry.getTileColumn())
                                    .set(entry.getTileRow())
                                    .log(Level.FINE)
                                    .statement()) {
                        ps.execute();
                    }
                }

                saveMinMaxZoomMetadata(
                        (int) Math.min(entry.getZoomLevel(), this.minZoom()),
                        (int) Math.max(entry.getZoomLevel(), this.maxZoom()));
            }
        } catch (SQLException e) {
            throw new IOException(e);
        }
    }

