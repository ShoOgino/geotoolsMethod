    /** Store a grid */
    public void saveGrid(MBTilesGrid entry) throws IOException {
        try (Connection cx = connPool.getConnection()) {
            if (entry.getGrid() != null) {
                try (PreparedStatement ps =
                        prepare(
                                        cx,
                                        format(
                                                "INSERT OR REPLACE INTO %s VALUES (?,?,?,?)",
                                                TABLE_GRIDS))
                                .set(entry.getZoomLevel())
                                .set(entry.getTileColumn())
                                .set(entry.getTileRow())
                                .set(entry.getGrid())
                                .log(Level.FINE)
                                .statement()) {
                    ps.execute();
                }
            } else {
                try (PreparedStatement ps =
                        prepare(
                                        cx,
                                        format(
                                                "DELETE FROM %s WHERE zoom_level=? AND tile_column=? AND tile_row=?",
                                                TABLE_GRIDS))
                                .set(entry.getZoomLevel())
                                .set(entry.getTileColumn())
                                .set(entry.getTileRow())
                                .log(Level.FINE)
                                .statement()) {
                    ps.execute();
                }
            }

            for (Map.Entry<String, String> gridDataEntry : entry.getGridData().entrySet()) {
                if (gridDataEntry.getValue() != null) {
                    try (PreparedStatement ps =
                            prepare(
                                            cx,
                                            format(
                                                    "INSERT OR REPLACE INTO %s VALUES (?,?,?,?,?)",
                                                    TABLE_GRID_DATA))
                                    .set(entry.getZoomLevel())
                                    .set(entry.getTileColumn())
                                    .set(entry.getTileRow())
                                    .set(gridDataEntry.getKey())
                                    .set(gridDataEntry.getValue())
                                    .log(Level.FINE)
                                    .statement()) {
                        ps.execute();
                    }
                } else {
                    try (PreparedStatement ps =
                            prepare(
                                            cx,
                                            format(
                                                    "DELETE FROM %s WHERE zoom_level=? AND tile_column=? AND tile_row=? AND key_name=?",
                                                    TABLE_GRID_DATA))
                                    .set(entry.getZoomLevel())
                                    .set(entry.getTileColumn())
                                    .set(entry.getTileRow())
                                    .set(gridDataEntry.getKey())
                                    .log(Level.FINE)
                                    .statement()) {
                        ps.execute();
                    }
                }
            }
        } catch (SQLException e) {
            throw new IOException(e);
        }
    }

