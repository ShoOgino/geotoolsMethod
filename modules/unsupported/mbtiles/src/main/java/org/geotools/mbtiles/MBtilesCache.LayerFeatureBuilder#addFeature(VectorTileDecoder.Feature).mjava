        void addFeature(VectorTileDecoder.Feature mvtFeature) {
            Geometry geometry = getGeometry(tile, mvtFeature);
            // geometry might have been fully outside boundaries
            if (geometry == null) {
                return;
            }
            builder.set(geometryName, geometry);

            // collect all the attributes
            Map<String, Object> attributes = mvtFeature.getAttributes();
            for (AttributeDescriptor ad : schema.getAttributeDescriptors()) {
                String attributeName = ad.getLocalName();
                Object value = attributes.get(attributeName);
                if (value != null) {
                    builder.set(attributeName, value);
                }
            }

            // test for tile border intersection, and if needed, add a clip that the renderer
            // will use to make extra borders disappear, much like client side apps do
            SimpleFeature feature = builder.buildFeature(featureIdPrefix + mvtFeature.getId());
            Envelope geometryEnvelope = geometry.getEnvelopeInternal();
            if (geometryEnvelope.getMinX() < tileEnvelope.getMinX()
                    || geometryEnvelope.getMaxX() > tileEnvelope.getMaxX()
                    || geometryEnvelope.getMinY() < tileEnvelope.getMinY()
                    || geometryEnvelope.getMaxY() > tileEnvelope.getMaxY()) {
                feature.getUserData().put(Hints.GEOMETRY_CLIP, clip);
            }

            // todo: handle the un-finished features
            result.add(feature);
        }

