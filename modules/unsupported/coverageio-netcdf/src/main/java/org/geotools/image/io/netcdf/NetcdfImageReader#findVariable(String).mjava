    /**
     * Returns the variable of the given name. This method is similar to
     * {@link NetcdfDataset#findVariable(String)} except that the search
     * is case-insensitive and an exception is thrown if no variable has
     * been found for the given name.
     *
     * @param  name The name of the variable to search.
     * @return The variable for the given name.
     * @throws IIOException if no variable has been found for the given name.
     * @throws IOException If an error occured while reading the NetCDF file.
     */
    protected Variable findVariable(final String name) throws IOException {
        ensureFileOpen();
        /*
         * First tries a case-sensitive search. Case matter since the same letter in different
         * case may represent different variables. For example "t" and "T" are typically "time"
         * and "temperature" respectively.
         */
        Variable candidate = dataset.findVariable(name);
        if (candidate != null) {
            return candidate;
        }
        /*
         * We tried a case-sensitive search without success. Now tries a case-insensitive search
         * before to report a failure.
         */
        final List<Variable> variables = dataset.getVariables();
        if (variables != null) {
            for (final Variable variable : variables) {
                if (variable!=null && name.equalsIgnoreCase(variable.getName())) {
                    return variable;
                }
            }
        }
        throw new IIOException(Errors.format(
                ErrorKeys.VARIABLE_NOT_FOUND_IN_FILE_$2, name, dataset.getLocation()));
    }

