    /**
     * @see org.geotools.data.jdbc.fidmapper.FIDMapper#getPKAttributes(java.lang.String)
     */
    public Object[] getPKAttributes(String FID) throws IOException {
        Object pk = null;

        switch (getColumnType(0)) {
        case Types.INTEGER:
        case Types.SMALLINT:
        case Types.TINYINT:
        	try {
        		pk = new Integer(Integer.parseInt(FID));
	        } catch(NumberFormatException nfe) {
	    		//if we get a really bad featureid we want to return something
	    	    //that will not mess up the database and throw an exception,
	    	    //we just want to not match against it, so we return -1
	    	    pk = new Integer(-1);
	    	}
            break;
        case Types.BIGINT:
            try {
                pk = new BigInteger(FID);
            } catch(NumberFormatException nfe) {
                //if we get a really bad featureid we want to return something
                //that will not mess up the database and throw an exception,
                //we just want to not match against it, so we return -1
                pk = new BigInteger("-1");
            }
            break;
        case Types.NUMERIC:
        	try {
        		pk = new Long(Long.parseLong(FID));
        	} catch(NumberFormatException nfe) {
        		//if we get a really bad featureid we want to return something
        	    //that will not mess up the database and throw an exception,
        	    //we just want to not match against it, so we return -1
        	    pk = new Integer(-1);
        	}
            break;
        case Types.VARCHAR: //unlikely to be used, but you never know...
        case Types.LONGVARCHAR:
        case Types.CHAR:
            pk = new String(FID);
            break;
        }

        return new Object[] { pk };
    }

