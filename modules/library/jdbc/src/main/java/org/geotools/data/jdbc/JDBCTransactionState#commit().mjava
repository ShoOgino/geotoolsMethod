    /**
     * Commit the maintained state. 
     * <p>
     * JDBCTransactionState offers native support for this operation
     * </p>
     * @see org.geotools.data.Transaction.State#commit()
     * @throws IOException
     */
    public void commit() throws IOException {
        try {
            connection.commit();
        } catch (SQLException e) {
            // TODO: a rock and a hard place
            //
            // This is a horrible situation.
            // I assume the commit failed meaning that this connection was 
            // transaction was rolled back.
            // This is the worse though as we are calling this in a
            // loop as we commit all other Transaction.State!
            // 
            // That is we should rollback, but we cannot! (As we may have already
            // commited someone else)
            // We are absolutely going to have an inconsistent state here
            // and there is nothing I can do about it :-(
            //
            // This would be a design flaw, if there was anything we
            // could do about it
            throw new DataSourceException( "Transaction commit", e );
        }
    }

