    /**
     * Encodes an Id filter
     *
     * @param filter the
     * @throws RuntimeException If there's a problem writing output
     */
    public Object visit(Id filter, Object extraData) {

        if (primaryKey == null) {
            throw new RuntimeException("Must set a primary key before trying to encode FIDFilters");
        }

        Set ids = filter.getIdentifiers();

        List<PrimaryKeyColumn> columns = primaryKey.getColumns();
        for (Iterator i = ids.iterator(); i.hasNext(); ) {
            try {
                Identifier id = (Identifier) i.next();
                List<Object> attValues = JDBCDataStore.decodeFID(primaryKey, id.toString(), false);

                out.write("(");

                for (int j = 0; j < attValues.size(); j++) {
                    out.write(escapeName(columns.get(j).getName()));
                    out.write(" = ");
                    out.write('?');

                    // store the value for later usage
                    literalValues.add(attValues.get(j));
                    // no srid, pk are not formed with geometry values
                    SRIDs.add(-1);
                    dimensions.add(-1);
                    // if it's not null, we can also infer the type
                    literalTypes.add(attValues.get(j) != null ? attValues.get(j).getClass() : null);
                    descriptors.add(null);

                    if (j < (attValues.size() - 1)) {
                        out.write(" AND ");
                    }
                }

                out.write(")");

                if (i.hasNext()) {
                    out.write(" OR ");
                }
            } catch (java.io.IOException e) {
                throw new RuntimeException(IO_ERROR, e);
            }
        }

        return extraData;
    }

