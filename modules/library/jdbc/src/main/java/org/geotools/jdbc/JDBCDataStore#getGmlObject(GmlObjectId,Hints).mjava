    /** */
    public Object getGmlObject(GmlObjectId id, Hints hints) throws IOException {
        // geometry?
        if (isAssociations()) {

            Connection cx = createConnection();
            try {
                try {
                    Statement st = null;
                    ResultSet rs = null;

                    if (getSQLDialect() instanceof PreparedStatementSQLDialect) {
                        st = selectGeometrySQLPS(id.getID(), cx);
                        rs = ((PreparedStatement) st).executeQuery();
                    } else {
                        String sql = selectGeometrySQL(id.getID());
                        LOGGER.log(Level.FINE, "Get GML object: {0}", sql);

                        st = cx.createStatement();
                        rs = st.executeQuery(sql);
                    }

                    try {
                        if (rs.next()) {
                            // read the geometry
                            Geometry g =
                                    getSQLDialect()
                                            .decodeGeometryValue(
                                                    null,
                                                    rs,
                                                    "geometry",
                                                    getGeometryFactory(),
                                                    cx,
                                                    hints);

                            // read the metadata
                            String name = rs.getString("name");
                            String desc = rs.getString("description");
                            setGmlProperties(g, id.getID(), name, desc);

                            return g;
                        }
                    } finally {
                        closeSafe(rs);
                        closeSafe(st);
                    }

                } catch (SQLException e) {
                    throw (IOException) new IOException().initCause(e);
                }
            } finally {
                closeSafe(cx);
            }
        }

        // regular feature, first feature out the feature type
        int i = id.getID().indexOf('.');
        if (i == -1) {
            LOGGER.info("Unable to determine feature type for GmlObjectId:" + id);
            return null;
        }

        // figure out the type name from the id
        String featureTypeName = id.getID().substring(0, i);
        SimpleFeatureType featureType = getSchema(featureTypeName);
        if (featureType == null) {
            throw new IllegalArgumentException("No such feature type: " + featureTypeName);
        }

        // load the feature
        Id filter = getFilterFactory().id(Collections.singleton(id));
        DefaultQuery query = new DefaultQuery(featureTypeName);
        query.setFilter(filter);
        query.setHints(hints);

        SimpleFeatureCollection features = getFeatureSource(featureTypeName).getFeatures(query);
        if (!features.isEmpty()) {
            SimpleFeatureIterator fi = features.features();
            try {
                if (fi.hasNext()) {
                    return fi.next();
                }
            } finally {
                fi.close();
            }
        }

        return null;
    }

