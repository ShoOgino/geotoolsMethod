    /**
     * Creates the prepared statement for feature updates
     * 
     * @param conn
     * @param featureType
     * @throws SQLException
     */
    protected PreparedStatement createUpdateStatement(Connection conn, SimpleFeatureType featureType)
            throws SQLException {
        List<AttributeDescriptor> attributeTypes = featureType.getAttributeDescriptors();
        String tableName = featureType.getTypeName();

        // create statement piecewise on a string buffer
        StringBuffer statementSQL = new StringBuffer("UPDATE  " + tableName + " SET ");

        // the "SET" part updating the fields, and the primary key too, if it's
        // not generated by the DBMS
        for (int i = 0; i < attributeTypes.size(); i++) {
            statementSQL.append(attributeTypes.get(i).getLocalName()).append(" = ");

            if (attributeTypes.get(i) instanceof GeometryDescriptor) {
                statementSQL.append(getGeometryPlaceHolder(attributeTypes.get(i)));
            } else {
                statementSQL.append("?");
            }

            statementSQL.append(",");
        }

        // ... the updated primary keys, if any...
        if (!mapper.returnFIDColumnsAsAttributes() && !mapper.hasAutoIncrementColumns()) {
            for (int i = 0; i < mapper.getColumnCount(); i++) {
                statementSQL.append(mapper.getColumnName(i)).append(" = ?,");
            }
        }

        statementSQL.setCharAt(statementSQL.length() - 1, ' ');
        statementSQL.append(" WHERE ");

        // now append primary key placeholders
        if (!mapper.returnFIDColumnsAsAttributes() && !mapper.hasAutoIncrementColumns()) {
            for (int i = 0; i < mapper.getColumnCount(); i++) {
                statementSQL.append(mapper.getColumnName(i)).append(" = ?");

                if (i < (mapper.getColumnCount() - 1)) {
                    statementSQL.append(" AND ");
                }
            }
        }

        String sql = statementSQL.toString();

        return conn.prepareStatement(sql);
    }

