    /**
     * Inserts a collection of new features into the database for a particular
     * feature type / table.
     */
    protected void insert(Collection features, SimpleFeatureType featureType, Connection cx)
        throws IOException {
        PrimaryKey key = getPrimaryKey(featureType);

        // we do this in a synchronized block because we need to do two queries,
        // first to figure out what the id will be, then the insert statement
        synchronized (this) {
            Statement st = null;

            try {
                if ( !(dialect instanceof PreparedStatementSQLDialect) ) {
                    st = cx.createStatement();    
                }
                
                // figure out if we should determine what the fid is pre or post insert
                boolean postInsert = dialect.lookupGeneratedValuesPostInsert() && isGenerated(key);
                
                for (Iterator f = features.iterator(); f.hasNext();) {
                    SimpleFeature feature = (SimpleFeature) f.next();
                    
                    List<Object> keyValues = null;
                    boolean useExisting = Boolean.TRUE.equals(feature.getUserData().get(Hints.USE_PROVIDED_FID));
                    if(useExisting) {
                        keyValues = decodeFID(key, feature.getID(), true);
                    } else if (!postInsert) {
                        keyValues = getNextValues( key, cx );
                    }
                    

                    if ( dialect instanceof PreparedStatementSQLDialect ) {
                        PreparedStatement ps = insertSQLPS( featureType, feature, keyValues, cx );
                        try {
                            ps.execute();    
                        } finally {
                            closeSafe( ps );
                        }
                    } else {
                        String sql = insertSQL(featureType, feature, keyValues, cx);
                        LOGGER.log(Level.FINE, "Inserting new feature: {0}", sql);

                        //TODO: execute in batch to improve performance?
                        st.execute(sql);
                    }
                    
                    if ( keyValues == null ) {
                        //grab the key values post insert
                        keyValues = getLastValues(key,cx);
                    }
                    
                    //report the feature id as user data since we cant set the fid
                    String fid = featureType.getTypeName() + "." + encodeFID(keyValues);
                    feature.getUserData().put("fid", fid);
                }

                //st.executeBatch();
            } catch (SQLException e) {
                String msg = "Error inserting features";
                throw (IOException) new IOException(msg).initCause(e);
            } finally {
                closeSafe(st);
            }
        }
    }

