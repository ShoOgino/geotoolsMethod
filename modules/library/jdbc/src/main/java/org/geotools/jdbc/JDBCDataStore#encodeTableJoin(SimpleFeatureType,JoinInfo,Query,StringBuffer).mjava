    /** Helper method to encode the join clause(s) of a query. */
    protected void encodeTableJoin(
            SimpleFeatureType featureType, JoinInfo join, Query query, StringBuffer sql)
            throws SQLException {
        encodeAliasedTableName(
                featureType.getTypeName(), sql, query.getHints(), join.getPrimaryAlias());

        for (JoinPart part : join.getParts()) {
            sql.append(" ");
            dialect.encodeJoin(part.getJoin().getType(), sql);
            sql.append(" ");
            encodeAliasedTableName(
                    part.getQueryFeatureType().getTypeName(),
                    sql,
                    setKeepWhereClausePlaceHolderHint(null, true),
                    part.getAlias());
            sql.append(" ON ");

            Filter j = part.getJoinFilter();

            FilterToSQL toSQL = getFilterToSQL(null);
            toSQL.setInline(true);
            try {
                sql.append(" ").append(toSQL.encodeToString(j));
            } catch (FilterToSQLException e) {
                throw new RuntimeException(e);
            }
        }
        if (sql.indexOf(WHERE_CLAUSE_PLACE_HOLDER) >= 0) {
            // this means that one of the joined table provided a placeholder
            throw new RuntimeException(
                    "Joins between virtual tables that provide a :where_placeholder: are not supported: "
                            + sql);
        }
    }

