    public String expandParameters(Hints hints) throws SQLException {
        // no need for expansion if we don't have parameters
        if (parameters.size() == 0) {
            return sql;
        }

        // grab the parameter values
        Map<String, String> values = null;
        if(hints != null) {
            values = (Map<String, String>) hints.get(Hints.VIRTUAL_TABLE_PARAMETERS);
        }
        if (values == null) {
            values = Collections.emptyMap();
        }

        // perform the expansion, checking for validity and applying default values as needed
        String result = sql;
        for (VirtualTableParameter param : parameters.values()) {
            String value = values.get(param.getName());
            if(value == null) {
                // use the default value and eventually prepare to expand the empty string
                value = param.getDefaultValue();
                if(value == null) {
                    value = "";
                }
            } else {
                if(param.getValidator() != null) {
                    try {
                        param.getValidator().validate(value);
                        
                        // Parameter value has passed validation, perform sql escaping
                        // if enabled
                        if (escapeSql) {
                            value = EscapeSql.escapeSql(value);
                        }
                    } catch(IllegalArgumentException e) {
                        // fully log the exception, but only rethrow a more generic description as
                        // the message could be exposed to attackers
                        LOGGER.log(Level.SEVERE, "Invalid value for parameter " + param.getName(), e);
                        throw new SQLException("Invalid value for parameter " + param.getName());
                    }
                }
            }
            
            result = result.replace("%" + param.getName() + "%", value);
        }
        
        return result;
    }

