    @Override
    protected ReferencedEnvelope getBoundsInternal(Query query) throws IOException {
        JDBCDataStore dataStore = getDataStore();

        // split the filter
        Filter[] split = splitFilter(query.getFilter());
        Filter preFilter = split[0];
        Filter postFilter = split[1];

        try {

            if ((postFilter != null) && (postFilter != Filter.INCLUDE)
                    || (query.getMaxFeatures() < Integer.MAX_VALUE && !canLimit())
                    || (query.getStartIndex() != null
                            && query.getStartIndex() > 0
                            && !canOffset())) {
                // calculate manually, don't use datastore optimization
                getDataStore().getLogger().fine("Calculating bounds manually");

                // grab the 2d part of the crs
                CoordinateReferenceSystem flatCRS =
                        CRS.getHorizontalCRS(getSchema().getCoordinateReferenceSystem());
                ReferencedEnvelope bounds = new ReferencedEnvelope(flatCRS);

                // grab a reader
                Query q = new Query(query);
                q.setFilter(postFilter);
                try (FeatureReader<SimpleFeatureType, SimpleFeature> i = getReader(q)) {
                    if (i.hasNext()) {
                        SimpleFeature f = i.next();
                        bounds.init(f.getBounds());

                        while (i.hasNext()) {
                            f = i.next();
                            bounds.include(f.getBounds());
                        }
                    }
                }

                return bounds;
            } else {
                // post filter was null... pre can be set or null... either way
                // use datastore optimization
                Connection cx = dataStore.getConnection(getState());
                try {
                    Query q = new Query(query);
                    q.setFilter(preFilter);
                    return dataStore.getBounds(getSchema(), q, cx);
                } finally {
                    getDataStore().releaseConnection(cx, getState());
                }
            }
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }

