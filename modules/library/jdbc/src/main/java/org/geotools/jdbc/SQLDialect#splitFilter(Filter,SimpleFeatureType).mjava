    /**
     * Splits the filter into two parts, an encodable one, and a non encodable one. The default 
     * implementation uses the filter capabilities to split the filter, subclasses can implement 
     * their own logic if need be.
     * 
     * @param original
     * @return
     */
    public Filter[] splitFilter(Filter filter, SimpleFeatureType schema) {
        PostPreProcessFilterSplittingVisitor splitter = new PostPreProcessFilterSplittingVisitor(
                dataStore.getFilterCapabilities(), schema, null);
        filter.accept(splitter, null);

        Filter[] split = new Filter[2];
        split[0] = splitter.getFilterPre();
        split[1] = splitter.getFilterPost();

        return split;
    }

