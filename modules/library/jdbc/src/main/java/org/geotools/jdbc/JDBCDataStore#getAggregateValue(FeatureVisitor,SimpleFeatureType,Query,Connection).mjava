    /**
     * Results the value of an aggregate function over a query.
     */
    protected Object getAggregateValue(FeatureVisitor visitor, SimpleFeatureType featureType, Query query, Connection cx ) 
        throws IOException {
        
        //get the name of the function
        String function = getAggregateFunctions().get( visitor.getClass() );
        if ( function == null ) {
            //try walking up the hierarchy
            Class clazz = visitor.getClass();
            while( clazz != null && function == null ) {
                clazz = clazz.getSuperclass();
                function = getAggregateFunctions().get( clazz );
            }
            
            if ( function == null ) {
                //not supported
                LOGGER.info( "Unable to find aggregate function matching visitor: " + visitor.getClass());
                return null;
            }
        }
        
        AttributeDescriptor att = null;
        Expression expression = getExpression(visitor);
        if ( expression != null ) {
            att = (AttributeDescriptor) expression.evaluate( featureType );
        }
        
        //result of the function
        try {
            Object result = null;
            Statement st = null;
            ResultSet rs = null;
            
            try {
                if ( dialect instanceof PreparedStatementSQLDialect ) {
                    st = selectAggregateSQLPS(function, att, featureType, query, cx);
                    rs = ((PreparedStatement)st).executeQuery();
                } 
                else {
                    String sql = selectAggregateSQL(function, att, featureType, query);
                    LOGGER.fine( sql );
                    
                    st = cx.createStatement();
                    rs = st.executeQuery( sql );
                }
                    
                rs.next();
                result = rs.getObject( 1 );
            }
            finally {
                closeSafe( rs );
                closeSafe( st );
            }
            
            if ( setResult(visitor,result) ){
                return result;    
            }
            
            return null;
        }
        catch( SQLException e ) {
            throw (IOException) new IOException().initCause(e);
        }
    }

