    /**
     * Write the SQL for a Not filter
     *
     * @param filter the filter to visit
     * @param extraData extra data (unused by this method)
     */
    public Object visit(Not filter, Object extraData) {
        try {
            if (filter.getFilter() instanceof PropertyIsNull) {
                Expression expr = ((PropertyIsNull) filter.getFilter()).getExpression();
                if (isEnumerated(expr)) {
                    // skip enum remapping
                    writeEncodedField(
                            Integer.class,
                            (PropertyName) expr,
                            (AttributeDescriptor) expr.evaluate(featureType));
                } else {
                    expr.accept(this, extraData);
                }
                out.write(" IS NOT NULL ");

            } else {
                out.write("NOT (");
                filter.getFilter().accept(this, extraData);
                out.write(")");
            }
            return extraData;
        } catch (IOException e) {
            throw new RuntimeException(IO_ERROR, e);
        }
    }

