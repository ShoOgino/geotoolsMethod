    /**
     * Writes the SQL for the attribute Expression.
     *
     * @param expression the attribute to turn to SQL.
     *
     * @throws RuntimeException for io exception with writer
     */
    public void visit(AttributeExpression expression) throws RuntimeException {
        LOGGER.finer("exporting ExpressionAttribute");

        try {
        	//JD: evaluate the expression agains the feature type to get at the attribute, then 
        	// encode the namee
        	context = null;
        	if ( featureType != null ) {
        		AttributeDescriptor attributeType = (AttributeDescriptor) expression.evaluate( featureType );
            	if ( attributeType != null ) {
            		out.write( escapeName( attributeType.getLocalName() ) );
            		
            		//provide context for a literal being compared to this attribute
            		context = attributeType.getType().getBinding(); 
            		return;
            	}
        	}
        	
        	//if thigns are sane, we should get here
    		out.write(escapeName(expression.getAttributePath()));	
        	
        } catch (java.io.IOException ioe) {
            throw new RuntimeException("IO problems writing attribute exp", ioe);
        }
    }

