    /**
     * Makes an SQL Select statement.  Constructs an SQL statement that will select the
     * features from the table based on the filter.  The default implementation creates
     * a select statement for the table with the name <tt>typeName</tt>, selecting all
     * the columns with the names in the <tt>attrTypes</tt> array using the filter
     * as a WHERE clause.  The default implementation ignores the maxFeature parameter
     * since this requires DB dependant SQL.  Subclasses can override this to provide 
     * the maxFeatures functionality specific to their DB.
     *
     * @param typeName  a String with the typeName used as the table to query
     * @param mapper    an FIDMapper
     * @param attrTypes the array of AttributeType elements for the select statement
     * @param filter    the filter to convert to a where statement
     * @param sortBy 
     * @param offset
     * @param limit
     *
     * @return a String representing an SQL statement
     *
     * @throws SQLEncoderException If an error occurs encoding the SQL
     * FIXME: This should change to a FilterToSQLException after SQLEncoder is dropped
     */
    public String buildSQLQuery(String typeName, FIDMapper mapper, 
            AttributeDescriptor[] attrTypes, Filter filter, SortBy[] sortBy, Integer offset, Integer limit) throws SQLEncoderException;

