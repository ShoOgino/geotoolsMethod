    /**
     * Helper method for setting the result of a aggregate functino on a visitor. TODO: Remove this
     * method when there is an interface for aggregate visitors. See GEOT-2325 for details.
     */
    boolean setResult(FeatureVisitor visitor, Object result) {
        try {
            Method s = null;
            if (AGGREGATE_SETVALUE_CACHE.containsKey(visitor.getClass())) {
                s = AGGREGATE_SETVALUE_CACHE.get(visitor.getClass());
            } else {
                try {
                    s = visitor.getClass().getMethod("setValue", result.getClass());
                } catch (Exception e) {
                }

                if (s == null) {
                    for (Method m : visitor.getClass().getMethods()) {
                        if ("setValue".equals(m.getName()) && m.getParameterCount() == 1) {
                            s = m;
                            break;
                        }
                    }
                }
                AGGREGATE_SETVALUE_CACHE.put(visitor.getClass(), s);
            }
            if (s != null) {
                Class type = s.getParameterTypes()[0];
                if (!type.isInstance(result)) {
                    // convert
                    Object converted = Converters.convert(result, type);
                    if (converted != null) {
                        result = converted;
                    } else {
                        // could not set value
                        return false;
                    }
                }

                s.invoke(visitor, result);
                return true;
            }
        } catch (Exception e) {
            LOGGER.log(
                    Level.INFO,
                    "Failed to set optimized result, will fall back on full collection visit",
                    e);
        }
        return false;
    }

