    /**
     * Encodes a value in an sql statement.
     *
     * <p>Subclasses may wish to override or extend this method to handle specific types. This
     * default implementation does the following:
     *
     * <ol>
     *   <li>The <tt>value</tt> is encoded via its {@link #toString()} representation.
     *   <li>If <tt>type</tt> is a character type (extends {@link CharSequence}), it is wrapped in
     *       single quotes (').
     * </ol>
     */
    public void encodeValue(Object value, Class type, StringBuffer sql) {

        // turn the value into a literal and use FilterToSQL to encode it
        Literal literal = dataStore.getFilterFactory().literal(value);
        FilterToSQL filterToSQL = dataStore.createFilterToSQL(null);

        StringWriter w = new StringWriter();
        filterToSQL.setWriter(w);

        filterToSQL.visit(literal, type);

        sql.append(w.getBuffer().toString());
        //        if (CharSequence.class.isAssignableFrom(type)) {
        //            sql.append("'").append(value).append("'");
        //        } else {
        //            sql.append(value);
        //        }
    }

