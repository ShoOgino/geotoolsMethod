    public void testInvalidView() throws Exception {
        StringBuffer sb = new StringBuffer();
        sb.append("select ");
        dialect.encodeColumnName(null, aname("id"), sb);
        sb.append(", ");
        dialect.encodeColumnName(null, aname("flow"), sb);
        sb.append(" from ");
        if (dbSchemaName != null) {
            dialect.encodeSchemaName(dbSchemaName, sb);
            sb.append(".");
        }
        dialect.encodeTableName(tname("river"), sb);
        VirtualTable vt = new VirtualTable("invalid_attribute", sb.toString());

        Handler handler =
                new Handler() {
                    @Override
                    public synchronized void publish(LogRecord record) {
                        if (!record.getMessage().contains("Failed to execute statement")) {
                            fail("We should not have received any log statement");
                        }
                    }

                    @Override
                    public void flush() {
                        // nothing to do
                    }

                    @Override
                    public void close() throws SecurityException {
                        // nothing to do
                    }
                };
        handler.setLevel(Level.WARNING);
        Logger logger = Logging.getLogger(JDBCVirtualTableOnlineTest.class);
        Level oldLevel = logger.getLevel();

        logger.setLevel(Level.SEVERE);
        logger.addHandler(handler);
        dataStore.createVirtualTable(vt);
        ContentFeatureSource fs = dataStore.getFeatureSource("invalid_attribute");

        // now hack the sql view definition to inject an invalid column name,
        // it's easier than having to alter the column name in the db to make the existing
        // view invalid
        sb.setLength(0);
        dialect.encodeColumnName(null, aname("not_valid"), sb);
        String notValid = sb.toString();
        sb.setLength(0);
        dialect.encodeColumnName(null, aname("flow"), sb);
        String flow = sb.toString();
        dataStore.virtualTables.get("invalid_attribute").sql = vt.sql.replace(flow, notValid);

        try (SimpleFeatureIterator fi = fs.getFeatures().features()) {
            fail("We should not have gotten here, we were supposed to get a sql exception");
        } catch (RuntimeException e) {
            // fine, this is expected
            assertTrue(e.getCause() instanceof IOException);
        } finally {
            dataStore.dropVirtualTable("invalid_attribute");

            // shake the vm to make it run the finalizers
            System.gc();
            System.runFinalization();

            // reset the handlers
            logger.setLevel(oldLevel);
            logger.removeHandler(handler);
        }
    }

