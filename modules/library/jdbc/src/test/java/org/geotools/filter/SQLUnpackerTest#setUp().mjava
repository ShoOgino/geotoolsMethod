    /**
     * Sets up a schema and a test feature.
     *
     * @throws SchemaException If there is a problem setting up the schema.
     * @throws IllegalAttributeException If problem setting up the feature.
     */
    protected void setUp() throws SchemaException, IllegalAttributeException {
        //if(setup) return;
        super.setUp();
        setup = true;

        //_log.getLoggerRepository().setThreshold(Level.INFO);
        //Set capabilities for the SQLUnpacker
        capabilities = new FilterCapabilities();
        capabilities.addType(AbstractFilter.LOGIC_OR);
        capabilities.addType(AbstractFilter.LOGIC_AND);
        capabilities.addType(AbstractFilter.LOGIC_NOT);
        capabilities.addType(AbstractFilter.COMPARE_EQUALS);
        capabilities.addType(AbstractFilter.COMPARE_LESS_THAN);
        capabilities.addType(AbstractFilter.COMPARE_GREATER_THAN);
        capabilities.addType(AbstractFilter.COMPARE_LESS_THAN_EQUAL);
        capabilities.addType(AbstractFilter.COMPARE_GREATER_THAN_EQUAL);
        capabilities.addType(AbstractFilter.NULL);
        capabilities.addType(AbstractFilter.BETWEEN);
        unpacker = new SQLUnpacker(capabilities);

        try {
            FilterFactory2 ff = CommonFactoryFinder.getFilterFactory2();
            
            attrExp1 = ff.property("testInteger");
            attrExp2 = ff.property( "testGeometry");
            litExp1 = ff.literal(new Integer(65));
            litExp2 =  ff.literal(new Integer(35));
            
            mathExp1 = ff.add(litExp1,litExp2);

            btwnFilter = ff.between(attrExp1, litExp1, mathExp1);

            compFilter = ff.less(attrExp1,litExp2);

            
            geomFilter = ff.touches(attrExp2,litExp2);

            likeFilter = ff.like(attrExp1,pattern, wcMulti, wcSingle, escape);

            nullFilter = ff.isNull(attrExp2);
        } catch (IllegalFilterException e) {
            //should not happen.
            fail(e.getMessage());
        }

        //    testFeature = factory.create(attributes);
        LOGGER.finer("...set up complete");

        //_log.getLoggerRepository().setThreshold(Level.DEBUG);
    }

