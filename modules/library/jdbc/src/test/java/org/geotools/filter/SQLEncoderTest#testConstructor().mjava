//
//    /**
//     * Main for test runner.
//     *
//     * @param args DOCUMENT ME!
//     */
//    public static void main(String[] args) {
//        junit.textui.TestRunner.run(suite());
//    }
//
//    /**
//     * Required suite builder.
//     *
//     * @return A test suite for this unit test.
//     */
//    public static Test suite() {
//        //_log.getLoggerRepository().setThreshold(Level.DEBUG);
//        TestSuite suite = new TestSuite(SQLEncoderTest.class);
//        suite.addTestSuite(CapabilitiesTest.class);
//
//        return suite;
//    }
//
//    public void test1() throws Exception {
//        Filter test = testEncode(dataFolder + "/test1.xml");
//
//        //LOGGER.fine("parsed filter is: " + test);
//    }
//
//    public void test2() throws Exception {
//        Filter test = testEncode(dataFolder + "/test2.xml");
//
//        //LOGGER.fine("parsed filter is: " + test);
//    }
//
//    public void test3a() throws Exception {
//        try {
//            Filter test = testEncode(dataFolder + "/test3a.xml");
//
//            //LOGGER.fine("parsed filter is: " + test);
//        } catch (SQLEncoderException e) {
//            LOGGER.fine("successfully caught exception: " + e);
//
//            //contains geom, should not be supported
//            String expectMessage = "Filter type not supported";
//            assertTrue(expectMessage.equals(e.getMessage()));
//        }
//    }
//
//    public void test8() throws Exception {
//        Filter test = testEncode(dataFolder + "/test8.xml");
//
//        //LOGGER.fine("parsed filter is: " + test);
//    }
//
//    public void test9() throws Exception {
//        Filter test = testEncode(dataFolder + "/test9.xml");
//
//        //LOGGER.fine("parsed filter is: " + test);
//    }
//
//    /*public void test11() //like filters, uncomment when they are supported
//       throws Exception {
//       Filter test = testEncode(dataFolder+"/test11.xml");
//       } */
//    public void test13() throws Exception {
//        Filter test = testEncode(dataFolder + "/test13.xml");
//
//        //LOGGER.fine("parsed filter is: " + test);
//    }
//
    public void testConstructor() throws Exception {
        NullFilter tFilter = filterFac.createNullFilter();

        Integer testInt = new Integer(5);
        Expression testAtt = filterFac.createAttributeExpression(null, "test");
        tFilter.nullCheckValue(testAtt);

        //tFilter.addRightValue(testLiteral);
        LogicFilter notFilter = filterFac.createLogicFilter(AbstractFilter.LOGIC_NOT);
        notFilter.addFilter(tFilter);

        StringWriter output = new StringWriter();
        SQLEncoder encoder = new SQLEncoder(output, notFilter);
        LOGGER.fine("test filter is " + notFilter + "\n encoding result is "
            + output.getBuffer());
    }

