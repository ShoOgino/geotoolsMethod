    public void testDistanceGreatCircle() throws Exception {
        if (!isGeographySupportAvailable()) {
            return;
        }

        // This is the example reported in the PostGIS example:
        //
        // You can see the power of GEOGRAPHY in action by calculating the how close a plane
        // flying from Seattle to London (LINESTRING(-122.33 47.606, 0.0 51.5)) comes to Reykjavik
        // (POINT(-21.96 64.15)).
        // -- Distance calculation using GEOGRAPHY (122.2km)
        // SELECT ST_Distance('LINESTRING(-122.33 47.606, 0.0 51.5)'::geography, 'POINT(-21.96
        // 64.15)':: geography);

        // adding Reykjavik
        try (FeatureWriter fw =
                dataStore.getFeatureWriterAppend(tname("geopoint"), Transaction.AUTO_COMMIT)) {
            SimpleFeature f = (SimpleFeature) fw.next();
            Point point = gf.createPoint(new Coordinate(-21.96, 64.15));
            f.setAttribute("name", "Reykjavik");
            f.setDefaultGeometry(point);
            fw.write();
        }

        // testing distance filter
        LineString line =
                gf.createLineString(
                        new Coordinate[] {
                            new Coordinate(-122.33, 47.606), new Coordinate(0.0, 51.5)
                        });
        DWithin filter = ff.dwithin(ff.property(aname("geo")), ff.literal(line), 130000d, "metre");
        FeatureCollection features =
                dataStore.getFeatureSource(tname("geopoint")).getFeatures(filter);
        assertEquals(1, features.size());
        try (FeatureIterator fi = features.features()) {
            assertTrue(fi.hasNext());
            SimpleFeature feature = (SimpleFeature) fi.next();
            assertEquals("Reykjavik", feature.getAttribute("name"));
        }
    }

