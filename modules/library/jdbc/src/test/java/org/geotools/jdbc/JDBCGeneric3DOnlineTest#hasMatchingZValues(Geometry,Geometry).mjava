    /**
     * Tests whether two geometries have the same Z values for coordinates with identical 2D
     * locations. Requires that each geometry is internally location-consistent in Z; that is, if
     * two coordinates are identical in location, then the Z values are equal. This should always be
     * the case for valid data.
     *
     * @param g1
     * @param g2
     * @return true if the geometries are location-equal in Z
     */
    private static boolean hasMatchingZValues(Geometry g1, Geometry g2) {
        Coordinate[] pt1 = g1.getCoordinates();
        Map<Coordinate, Double> coordZMap = new HashMap<Coordinate, Double>();
        for (int i = 0; i < pt1.length; i++) {
            coordZMap.put(pt1[i], pt1[i].getZ());
        }

        Coordinate[] pt2 = g2.getCoordinates();

        for (int i2 = 0; i2 < pt2.length; i2++) {
            Coordinate p2 = pt2[i2];
            double z = coordZMap.get(p2);
            boolean isEqualZ = p2.getZ() == z || (Double.isNaN(p2.getZ()) && Double.isNaN(z));
            if (!isEqualZ) return false;
        }

        return true;
    }

