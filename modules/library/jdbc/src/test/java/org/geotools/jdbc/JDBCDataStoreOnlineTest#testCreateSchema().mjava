    public void testCreateSchema() throws Exception {
        SimpleFeatureTypeBuilder builder = new SimpleFeatureTypeBuilder();
        builder.setName(tname("ft2"));
        builder.setNamespaceURI(dataStore.getNamespaceURI());
        builder.setCRS(CRS.decode("EPSG:4326"));
        builder.add(aname("geometry"), Geometry.class);
        builder.add(aname("intProperty"), Integer.class);
        builder.add(aname("dateProperty"), Date.class);

        SimpleFeatureType featureType = builder.buildFeatureType();
        dataStore.createSchema(featureType);

        SimpleFeatureType ft2 = dataStore.getSchema(tname("ft2"));

        // JD: making the comparison a bit more lax
        // asertEquals(ft2,featureType);
        assertEqualsLax(ft2, featureType);
        // TODO: we should also check the crs as well
        // assertTrue(CRS.equalsIgnoreMetadata(featureType.getCoordinateReferenceSystem(),
        //        ft2.getCoordinateReferenceSystem()));

        // GEOT-2031
        assertNotSame(ft2, featureType);

        StringBuffer sql = new StringBuffer();
        sql.append("SELECT * FROM ");

        if (dataStore.getDatabaseSchema() != null) {
            dataStore.getSQLDialect().encodeSchemaName(dataStore.getDatabaseSchema(), sql);
            sql.append(".");
        }

        dataStore.getSQLDialect().encodeTableName("ft2", sql);

        try (Connection cx = dataStore.createConnection();
                Statement st = cx.createStatement();
                ResultSet rs = st.executeQuery(sql.toString())) {
        } catch (SQLException e) {
            throw e;
        }
    }

