    /**
     * Returns the bounds of the results of the specified query against the 
     * feature source.
     * <p>
     * This method calls through to {@link #getBoundsInternal(Query)} which 
     * subclasses must implement. It also contains optimizations which check 
     * state for cached values.
     * </p>
     */
    public final ReferencedEnvelope getBounds(Query query) throws IOException {
        query = joinQuery( query );
        query = resolvePropertyNames(query);
        /*
        if ( query == Query.ALL ) {
            //check the cache
            //TODO: there should be a check for a view here
            if ( getState().getBounds() != null ) {
                return getState().getBounds();
            }
        }
        */
        
        //
        //calculate the bounds
        //
        ReferencedEnvelope bounds = getBoundsInternal(query);
        
        /*
        if ( query == Query.ALL ) {
            //update the cache
            synchronized (getState()) {
                getState().setBounds(bounds);
            }
        }
        */
        return bounds;
    }
    //    return filtered(entry.getState(transaction), query.getFilter()).getBounds();
    //}

