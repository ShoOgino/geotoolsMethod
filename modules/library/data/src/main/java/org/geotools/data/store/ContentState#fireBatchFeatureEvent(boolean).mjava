    /**
     * Notifies all waiting listeners that a commit has been issued; this notification is also sent
     * to our
     */
    public final void fireBatchFeatureEvent(boolean isCommit) {
        if (batchFeatureEvent == null) {
            return;
        }
        if (isCommit) {
            batchFeatureEvent.setType(Type.COMMIT);

            // This state already knows about the changes, let others know a modifications was made
            this.entry.notifiyFeatureEvent(this, batchFeatureEvent);
        } else {
            batchFeatureEvent.setType(Type.ROLLBACK);

            // Notify this state about the rollback, other transactions see no change
            for (FeatureListener listener : listeners) {
                try {
                    listener.changed(batchFeatureEvent);
                } catch (Throwable t) {
                    this.entry.dataStore.LOGGER.log(
                            Level.WARNING,
                            "Problem issuing batch feature event " + batchFeatureEvent,
                            t);
                }
            }
        }

        batchFeatureEvent = null;
    }

