    /**
     * Returns a writer over features specified by a query.
     * 
     * @param query The query
     * @param flags flags specifying writing mode
     */
    public final FeatureWriter<SimpleFeatureType, SimpleFeature> getWriter( Query query, int flags ) throws IOException {
        query = joinQuery( query );
        query = resolvePropertyNames(query);
        
        FeatureWriter<SimpleFeatureType, SimpleFeature> writer;

        if (!canTransact() && transaction != null && transaction != Transaction.AUTO_COMMIT) {
            if ((flags | WRITER_COMMIT) == WRITER_COMMIT) {
                // Simple simple writer with no events or locking
                writer = getWriterInternal(query, flags);
                // filtering may not be needed
                if (!canFilter()) {
                    if (query.getFilter() != null && query.getFilter() != Filter.INCLUDE) {
                        writer = new FilteringFeatureWriter(writer, query.getFilter());
                    }
                }
            } else {
                DiffTransactionState state = (DiffTransactionState) getTransaction()
                        .getState(getEntry());
                // reader will take care of filtering
                // DiffContentWriter takes care of events
                FeatureReader<SimpleFeatureType, SimpleFeature> reader = getReader(query);
                writer = state.diffWriter( this, reader );
            }
        } else {
            writer = getWriterInternal(query, flags);
            // events
            if (!canEvent()){
                writer = new EventContentFeatureWriter(this, writer );
            }
            // filtering
            if (!canFilter()) {
                if (query.getFilter() != null && query.getFilter() != Filter.INCLUDE) {
                    writer = new FilteringFeatureWriter(writer, query.getFilter());
                }
            }
        }
        // Use InProcessLockingManager to assert write locks?
        if (!canLock()) {
            InProcessLockingManager lockingManager = (InProcessLockingManager) getDataStore()
                    .getLockingManager();
            writer = lockingManager.checkedWriter(writer, transaction);
        }
        // Finished
        return writer;
    }

