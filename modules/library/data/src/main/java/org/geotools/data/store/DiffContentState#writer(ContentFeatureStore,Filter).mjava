    /**
     * Convience Method for a Transaction based FeatureWriter
     * 
     * <p>
     * Constructs a DiffFeatureWriter that works against this Transaction.
     * </p>
     * 
     * @param typeName Type Name to record differences against
     * @param filter
     * 
     * @return A FeatureWriter that records Differences against a FeatureReader
     * 
     * @throws IOException If a FeatureRader could not be constucted to record differences against
     */
    public synchronized FeatureWriter<SimpleFeatureType, SimpleFeature> writer(
            ContentFeatureStore store, Filter filter) throws IOException {
        FeatureReader<SimpleFeatureType, SimpleFeature> reader = store.getReader(filter);
        if (true) {
            // this seems to protect against implementations not implementing filtering?
            // can probably remove
            reader = new FilteringFeatureReader<SimpleFeatureType, SimpleFeature>(reader, filter);
        }
        return new DiffContentFeatureWriter(store, reader, filter);
    }

