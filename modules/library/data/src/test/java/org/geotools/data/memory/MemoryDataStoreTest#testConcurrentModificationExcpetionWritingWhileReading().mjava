    public void testConcurrentModificationExcpetionWritingWhileReading() throws IOException {
    	Map<String, SimpleFeature> features = data.features("road");
    	assertTrue(features.size() >= 2);
    	Iterator<SimpleFeature> iterator = features.values().iterator();
    	if (iterator.hasNext()) {
    		iterator.next();
    	}
    	FeatureWriter<SimpleFeatureType, SimpleFeature> writer = data.getFeatureWriter("road", Transaction.AUTO_COMMIT);
    	GeometryFactory fac = new GeometryFactory();
    	
    	try {
            while (writer.hasNext()) {
                writer.next();
            }
            // create a new feature
            SimpleFeature newFeature = writer.next();
            newFeature.setDefaultGeometry(fac.createLineString(new Coordinate[]{new Coordinate(10, 10), new Coordinate(20, 20)}));
            writer.write();
            
        } finally {
            writer.close();
        }
    	// 2nd iterator.next() causes java.util.ConcurrentModificationException"
    	iterator.next();
    	
        // still the same size and no IOException
        List<Name> namesAfterRemove = data.getNames();
        assertNotNull(namesAfterRemove);
        assertEquals(2, namesAfterRemove.size());
    }

