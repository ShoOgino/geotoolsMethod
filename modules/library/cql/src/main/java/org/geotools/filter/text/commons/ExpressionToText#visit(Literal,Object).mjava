    /* (non-Javadoc)
     * @see org.opengis.filter.expression.ExpressionVisitor#visit(org.opengis.filter.expression.Literal, java.lang.Object)
     */
    @Override
    public Object visit(Literal expression, Object extraData) {
        StringBuilder output = asStringBuilder(extraData);

        Object literal = expression.getValue();
        if (literal instanceof Geometry) {
            Geometry geometry = (Geometry) literal;
            if (geometry.getUserData() instanceof CoordinateReferenceSystem && encodeEWKT) {
                CoordinateReferenceSystem crs = (CoordinateReferenceSystem) geometry.getUserData();
                try {
                    Integer code = CRS.lookupEpsgCode(crs, false);
                    if (code != null) {
                        output.append("SRID=").append(code).append(";");
                    }
                } catch (FactoryException e) {
                    LOGGER.log(
                            Level.FINE,
                            "Error while trying to get SRID for geometry, will not encode it",
                            e);
                }
            }
            WKTWriter writer = new WKTWriter();
            String wkt = writer.write(geometry);
            output.append(wkt);
        } else if (literal instanceof Number) {
            // don't convert to string
            output.append(literal);
        } else if (literal instanceof Date) {
            return dateToText((Date) literal, output);
        } else if (literal instanceof Period) {

            Period period = (Period) literal;

            output = dateToText(period.getBeginning().getPosition().getDate(), output);
            output.append("/");
            output = dateToText(period.getEnding().getPosition().getDate(), output);

            return output;
        } else if (literal instanceof Color) {
            Color color = (Color) literal;

            String redCode = Integer.toHexString(color.getRed());
            String greenCode = Integer.toHexString(color.getGreen());
            String blueCode = Integer.toHexString(color.getBlue());

            output.append("'#");
            if (redCode.length() == 1) {
                output.append("0");
            }
            output.append(redCode.toUpperCase());

            if (greenCode.length() == 1) {
                output.append("0");
            }
            output.append(greenCode.toUpperCase());

            if (blueCode.length() == 1) {
                output.append("0");
            }
            output.append(blueCode.toUpperCase());
            output.append("'");
        } else if (literal instanceof Boolean) {
            output.append(literal);
        } else {
            String escaped = literal.toString().replaceAll("'", "''");
            output.append("'" + escaped + "'");
        }
        return output;
    }

