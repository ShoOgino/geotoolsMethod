    public String buildIdentifier(final int nodeIdentifier) throws CQLException {

        // precondition: the stack have one or more identifier part parts
        try {

            // retrieves all part of identifier from result stack
            ArrayList<String> arrayParts = new ArrayList<>();

            while (!this.resultStack.empty()) {
                Result r = this.resultStack.peek();

                if (r.getNodeType() != nodeIdentifier) {
                    break;
                }
                String part = this.resultStack.popIdentifierPart();
                part = removeFirstAndLastDoubleQuote(part);
                arrayParts.add(part);
            }
            assert !arrayParts.isEmpty()
                    : "postcondition: the list of identifier part must have one or more elements ";

            // makes the identifier
            StringBuffer identifier = new StringBuffer(100);
            String part;

            int i = 0;

            for (i = arrayParts.size() - 1; i > 0; i--) {
                part = arrayParts.get(i);
                identifier.append(part).append(":");
            }
            assert i == 0;

            part = arrayParts.get(i);
            identifier.append(part);

            return identifier.toString();

        } catch (CQLException e) {
            throw new CQLException("Fail building identifier: " + e.getMessage(), this.cqlSource);
        }
    }

