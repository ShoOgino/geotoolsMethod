	/**
	 * builds: left predicate AND right predicate
	 */
	public static Object buildBinaryLogicalOperator(final String operator, FilterVisitor visitor, BinaryLogicOperator filter, Object extraData) {
    	
    	LOGGER.finer("exporting And filter");
    	
    	StringBuilder output = asStringBuilder(extraData);
		List<Filter> children = filter.getChildren();
		if (children != null) {
			output.append("(");
			for (Iterator<Filter> i = children.iterator(); i.hasNext();) {
				Filter child = i.next();
				child.accept(visitor, output);
				if (i.hasNext()) {
					output.append(" ").append(operator).append(" ");
				}
			}
			output.append(")");
		}
		return output;
	}

