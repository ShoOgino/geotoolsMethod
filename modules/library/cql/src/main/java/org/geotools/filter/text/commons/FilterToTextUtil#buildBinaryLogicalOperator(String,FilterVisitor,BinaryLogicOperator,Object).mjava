    /** builds: left predicate AND right predicate */
    public static Object buildBinaryLogicalOperator(
            final String operator,
            FilterVisitor visitor,
            BinaryLogicOperator filter,
            Object extraData) {

        LOGGER.finer("exporting binary logic filter");

        StringBuilder output = asStringBuilder(extraData);
        List<Filter> children = filter.getChildren();
        if (children != null) {
            for (Iterator<Filter> i = children.iterator(); i.hasNext(); ) {
                Filter child = i.next();
                if (child instanceof BinaryLogicOperator) {
                    output.append("(");
                }
                child.accept(visitor, output);
                if (child instanceof BinaryLogicOperator) {
                    output.append(")");
                }
                if (i.hasNext()) {
                    output.append(" ").append(operator).append(" ");
                }
            }
        }
        return output;
    }

