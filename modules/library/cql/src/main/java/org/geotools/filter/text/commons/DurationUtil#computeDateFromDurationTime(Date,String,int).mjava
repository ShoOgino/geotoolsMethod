    /**
     * Add or subtract time duration to initial date.
     *
     * @param date
     *            initial date
     * @param duration
     *            a String with format: TddHddMddS
     * @param sign
     *            1 or -1 (add or subract)
     * @return Date a computed date. if duration have not got duration "T"
     *         return date value.
     */
    private static Date computeDateFromDurationTime(final Date date, final String duration,
        final int sign) {
        DURATION_TIME = extractDurationTime(duration);

        if (isNull(DURATION_TIME)) {
            return date;
        }

        CALENDAR.setTime(date);

        // hours
        if (DURATION_TIME[HOURS] >= 0) {
            CALENDAR.add(Calendar.HOUR, sign * DURATION_TIME[HOURS]);
        }

        // minute
        if (DURATION_TIME[MINUTES] >= 0) {
            CALENDAR.add(Calendar.MINUTE, sign * DURATION_TIME[MINUTES]);
        }

        // seconds
        if (DURATION_TIME[SECONDS] >= 0) {
            CALENDAR.add(Calendar.SECOND, sign * DURATION_TIME[SECONDS]);
        }

        Date lastDate = CALENDAR.getTime();

        return lastDate;
    }

