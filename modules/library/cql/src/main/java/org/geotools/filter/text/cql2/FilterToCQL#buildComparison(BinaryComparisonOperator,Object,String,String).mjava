	/**
	 * Builds a comparison predicate inserting the operato1 or operator2 taking into 
	 * account the PropertyName position in the comparison filter.
	 * 
	 * @param filter	
	 * @param extraData
	 * @param operator1	an operator
	 * @param operator2 the opposite to the operator1
	 * @return SringBuffer
	 */
	private Object buildComparison(
						BinaryComparisonOperator filter,
						Object extraData, 
						String operator1, String operator2) {
       
		StringBuffer output = asStringBuffer(extraData);
        
        Object expr1 = filter.getExpression1();
        if (expr1 instanceof PropertyName) {
        	PropertyName propertyName = (PropertyName) filter.getExpression1();
        	propertyName.accept(this, output);
        	output.append(" ").append(operator1).append(" ");
        	filter.getExpression2().accept(this, output);
        } else {
        	PropertyName propertyName = (PropertyName) filter.getExpression2();
        	propertyName.accept(this, output);
        	output.append(" ").append(operator2).append(" ");
        	filter.getExpression1().accept(this, output);
        }
        return output;
	}

