    /**
     * <pre>
     * Sample: 
     * ATTR3 < 4 AND (NOT( ATTR1 < 10 AND ATTR2 < 2))
     * ATTR1 < 1 AND (NOT (ATTR2 < 2)) AND ATTR3 < 3
     * </pre>
     * @throws Exception
     */
    @Test
    public void andNot() throws Exception {
        Filter result;
        Filter expected;

        // ATTR3 < 4 AND (NOT( ATTR1 < 10 AND ATTR2 < 2))
        result = CompilerUtil.parseFilter(language,
                FilterCQLSample.FILTER_AND_NOT_AND);

        Assert.assertNotNull("filter expected", result);

        expected = FilterCQLSample
                .getSample(FilterCQLSample.FILTER_AND_NOT_AND);

        Assert.assertEquals("a bad filter was produced", expected, result);

        // "ATTR1 < 1 AND (NOT (ATTR2 < 2)) AND ATTR3 < 3"
        result = CompilerUtil.parseFilter(language,
                FilterCQLSample.FILTER_AND_NOT_COMPARASION);

        Assert.assertNotNull("filter expected", result);

        expected = FilterCQLSample
                .getSample(FilterCQLSample.FILTER_AND_NOT_COMPARASION);

        Assert.assertEquals("a bad filter was produced", expected, result);
    }

