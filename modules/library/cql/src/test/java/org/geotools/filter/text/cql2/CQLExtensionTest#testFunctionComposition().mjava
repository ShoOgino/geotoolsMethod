    /**
     * This test the following improvement: GEOT-1169 This is an extension the CQL specification.
     *
     * <pre>
     *  &lt;function&gt; ::= &lt;routine name &gt; &lt;argument list &gt; [*]
     *  &lt;argument list&gt; ::=    [*]
     *       &lt;left paren&gt; [&lt;positional arguments&gt;] &lt;right paren&gt;
     *  &lt;positional arguments&gt; ::=
     *       &lt;argument&gt; [ { &lt;comma&amp;gt &lt;argument&gt; }... ]
     *  &lt;argument&gt;  ::=
     *       &lt;literal&gt;
     *   |   &lt;attribute name&gt;
     *   |   &lt;function&gt;           [*]
     *   |   &lt;binary expression&gt;  [*]
     * </pre>
     */
    @Test
    public void testFunctionComposition() throws Exception {
        String cqlExpression;
        Expression expression;

        // Test 1
        cqlExpression = "strConcat(A, abs(B))";
        expression = CQL.toExpression(cqlExpression);

        // Test 2
        cqlExpression = "strConcat(A, strConcat(B, strConcat(C, '.')))";
        expression = CQL.toExpression(cqlExpression);
        Assert.assertNotNull(expression);
        Assert.assertTrue(expression instanceof Function);

        Function function = (Function) expression;
        Assert.assertEquals(2, function.getParameters().size());

        Expression propertyName = (Expression) function.getParameters().get(0);
        Assert.assertTrue(propertyName instanceof PropertyName);
        Assert.assertEquals("A", ((PropertyName) propertyName).getPropertyName());

        Expression arg2 = (Expression) function.getParameters().get(1);
        Assert.assertTrue(arg2 instanceof Function);

        function = (Function) arg2;
        propertyName = (Expression) function.getParameters().get(0);
        Assert.assertTrue(propertyName instanceof PropertyName);
        Assert.assertEquals("B", ((PropertyName) propertyName).getPropertyName());

        arg2 = (Expression) function.getParameters().get(1);
        Assert.assertTrue(arg2 instanceof Function);

        function = (Function) arg2;
        propertyName = (Expression) function.getParameters().get(0);
        Assert.assertTrue(propertyName instanceof PropertyName);
        Assert.assertEquals("C", ((PropertyName) propertyName).getPropertyName());

        arg2 = (Expression) function.getParameters().get(1);
        Assert.assertTrue(arg2 instanceof Literal);
        Assert.assertEquals(".", ((Literal) arg2).getValue());
    }

