    /**
     * Test for Function Unary Expressions with functions in CQL.
     * <p>
     *
     * <pre>
     *  &lt;unary expression &gt; ::=
     *         &lt;Literal &gt;
     *   |     &lt;Function &gt; [*]
     *   |     &lt;Attribute &gt;
     *   |   ( &lt;Expression &gt;)
     *   |   [ &lt;Expression &gt;]
     * </pre>
     *
     * </p>
     */
    @Test
    public void testUnaryExpressionFunction() throws Exception {
        Filter result;
        Filter expected;
        String cqlUnaryExp;

        cqlUnaryExp = FilterCQLSample.FILTER_WITH_FUNCTION_ABS;
        result = CQL.toFilter(cqlUnaryExp);

        Assert.assertNotNull("filter expected", result);

        expected = FilterCQLSample.getSample(cqlUnaryExp);

        Assert.assertEquals( "Equals Functions is expected", expected,result);

        // Key: GEOT-1167 type: BUG
        cqlUnaryExp = FilterCQLSample.FILTER__WITH_FUNCTION_STR_CONCAT;
        result = CQL.toFilter(cqlUnaryExp);
        Assert.assertNotNull("filter expected", result);

        expected = FilterCQLSample.getSample(cqlUnaryExp);

        // TODO BUG There is a bug in function "equals"' strConcat
        // assertEquals( "Functions", expected, result);

        // test for improvement Key: GEOT-1168
        cqlUnaryExp = "A = strConcat(B, 'testParam')";
        result = CQL.toFilter(cqlUnaryExp);

        Assert.assertTrue(result instanceof PropertyIsEqualTo);

        Expression expression = ((PropertyIsEqualTo) result).getExpression2();
        Assert.assertNotNull(expression);
        Assert.assertTrue(expression instanceof Function);

        Function function = (Function) expression;
        Assert.assertEquals(2, function.getParameters().size());

        Expression arg1 = (Expression) function.getParameters().get(0);
        Expression arg2 = (Expression) function.getParameters().get(1);
        Assert.assertTrue(arg1 instanceof PropertyName);
        Assert.assertTrue(arg2 instanceof Literal);

        Assert.assertEquals("B", ((PropertyName) arg1).getPropertyName());
        Assert.assertEquals("testParam", ((Literal) arg2).getValue());
    }

