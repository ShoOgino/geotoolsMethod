    /**
     * Performs a consistency check on this map. This method is used for tests and
     * assertions only.
     */
    final boolean isValid() {
        int count=0, size=0;
        synchronized (hash) {
            for (final Map.Entry<K,?> entry : hash.entrySet()) {
                if (entry.getValue() instanceof Reference) {
                    count++;
                } else {
                    assert hardCache.contains(entry.getKey());
                }
                size++;
            }
            assert size == hash.size();
            assert hardCache.size() == Math.min(size, hardReferencesCount);
        }
        return count == Math.max(size - hardReferencesCount, 0);
    }

