    /**
     * Tells the parser to resolve the systemId against the baseURI and read the entity text from
     * that resulting absolute URI. Note that because the older {@link DefaultHandler#resolveEntity
     * DefaultHandler.resolveEntity()}, method is overridden to call this one, this method may
     * sometimes be invoked with null <em>name</em> and <em>baseURI</em>, and with the
     * <em>systemId</em> already absolutized.
     */
    @Override
    public InputSource resolveEntity(String name, String publicId, String baseURI, String systemId)
            throws SAXException, IOException {
        if (LOGGER.isLoggable(Level.FINEST)) {
            LOGGER.finest(
                    String.format(
                            "resolveEntity request: name=%s, publicId=%s, baseURI=%s, systemId=%s",
                            name, publicId, baseURI, systemId));
        }

        try {
            String uri = systemId;
            // ignore the baseURI if the systemId is absolute
            if (!URI.create(systemId).isAbsolute()) {
                // use the baseURI to convert a relative systemId to absolute
                uri = new URL(new URL(baseURI), systemId).toString();
            }
            // check if the absolute systemId is an allowed URI
            if (ALLOWED_URIS.matcher(uri).matches()) {
                return null;
            }
        } catch (Exception e) {
            // do nothing
        }

        // do not allow external entities
        throw new SAXException(ERROR_MESSAGE_BASE + systemId);
    }

