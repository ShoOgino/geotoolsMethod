    /**
     * Finds the roots of a quadratic equation. More specifically, this method solves the following
     * equation:
     *
     * <blockquote>
     *
     * <code>
     * c0 +
     * c1*<var>x</var> +
     * c2*<var>x</var><sup>2</sup> == 0
     * </code>
     *
     * </blockquote>
     *
     * @return The roots. The length may be 1 or 2.
     */
    private static double[] quadraticRoots(double c0, double c1, double c2) {
        double d = c1 * c1 - 4 * c2 * c0;
        if (d > 0) {
            // Two real, distinct roots
            d = Math.sqrt(d);
            if (c1 < 0) {
                d = -d;
            }
            final double q = 0.5 * (d - c1);
            return new double[] {q / c2, (q != 0) ? c0 / q : -0.5 * (d + c1) / c2};
        } else if (d == 0) {
            // One real double root
            return new double[] {-c1 / (2 * c2)};
        } else {
            // Two complex conjugate roots
            return NO_REAL_ROOT;
        }
    }

