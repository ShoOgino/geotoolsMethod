    /**
     * Sorts the elements in the given array and return their ranks.
     * See class description for details.
     *
     * @param  source The array of values to sort, or {@code null}.
     * @param  target The array where to store sorted values, or {@code null} if none. May be the
     *         same array than {@code source}, in which case the sorting will be performed in place.
     * @return The value ranks, or {@code null} if {@code source} was null.
     *
     * @see Arrays#sort(int[])
     */
    public static int[] ranks(final int[] source, final int[] target) {
        if (source == null) {
            return null;
        }
        final Integer[] entries = new Integer[source.length];
        for (int i=0; i<entries.length; i++) {
            entries[i] = new Integer(i, source[i]);
        }
        final int[] ranks = ranks(entries);
        if (target != null) {
            for (int i=Math.min(entries.length, target.length); --i>=0;) {
                target[i] = entries[i].value;
            }
        }
        return ranks;
    }

