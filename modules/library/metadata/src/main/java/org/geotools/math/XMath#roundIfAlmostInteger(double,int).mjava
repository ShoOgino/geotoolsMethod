    /**
     * Rounds the specified value, providing that the difference between the original value and the
     * rounded value is not greater than the specified amount of floating point units. This method
     * can be used for hiding floating point error likes 2.9999999996.
     *
     * @param value The value to round.
     * @param maxULP The maximal change allowed in ULPs (Unit in the Last Place).
     * @return The rounded value, of {@code value} if it was not close enough to an integer.
     */
    public static double roundIfAlmostInteger(final double value, int maxULP) {
        final double target = Math.rint(value);
        if (value != target) {
            final boolean pos = (value < target);
            double candidate = value;
            while (--maxULP >= 0) {
                candidate = pos ? next(candidate) : previous(candidate);
                if (candidate == target) {
                    return target;
                }
            }
        }
        return value;
    }

