    /**
     * Returns an optional string value from the command line. This method should be called exactly
     * once for each parameter. Second invocation for the same parameter will returns {@code null},
     * unless the same parameter appears many times on the command line.
     *
     * <p>Paramater may be instructions like "-encoding cp850" or "-encoding=cp850". Both forms
     * (with or without "=") are accepted. Spaces around the '=' character, if any, are ignored.
     *
     * @param name The parameter name (e.g. "-encoding"). Name are case-insensitive.
     * @return The parameter value, of {@code null} if there is no parameter given for the specified
     *     name.
     */
    public String getOptionalString(final String name) {
        for (int i = 0; i < arguments.length; i++) {
            String arg = arguments[i];
            if (arg != null) {
                arg = arg.trim();
                String value = "";
                int split = arg.indexOf('=');
                if (split >= 0) {
                    value = arg.substring(split + 1).trim();
                    arg = arg.substring(0, split).trim();
                }
                if (arg.equalsIgnoreCase(name)) {
                    arguments[i] = null;
                    if (value.length() != 0) {
                        return value;
                    }
                    while (++i < arguments.length) {
                        value = arguments[i];
                        arguments[i] = null;
                        if (value == null) {
                            break;
                        }
                        value = value.trim();
                        if (split >= 0) {
                            return value;
                        }
                        if (!value.equals("=")) {
                            return value.startsWith("=") ? value.substring(1).trim() : value;
                        }
                        split = 0;
                    }
                    illegalArgument(
                            new IllegalArgumentException(
                                    Errors.getResources(locale)
                                            .getString(ErrorKeys.MISSING_PARAMETER_VALUE_$1, arg)));
                    return null;
                }
            }
        }
        return null;
    }

