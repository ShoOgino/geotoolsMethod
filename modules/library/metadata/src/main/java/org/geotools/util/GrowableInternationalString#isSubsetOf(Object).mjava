    /**
     * Returns {@code true} if all localized texts stored in this international string are contained
     * in the specified object. More specifically:
     *
     * <ul>
     *   <li>
     *       <p>If {@code candidate} is an instance of {@link InternationalString}, then this method
     *       returns {@code true} if, for all <var>{@linkplain Locale locale}</var>-<var>{@linkplain
     *       String string}</var> pairs contained in {@code this}, <code>candidate.{@linkplain
     *       InternationalString#toString(Locale) toString}(locale)</code> returns a string
     *       {@linkplain String#equals equals} to {@code string}.
     *   <li>
     *       <p>If {@code candidate} is an instance of {@link CharSequence}, then this method
     *       returns {@code true} if {@link #toString(Locale)} returns a string {@linkplain
     *       String#equals equals} to <code>candidate.{@linkplain CharSequence#toString()
     *       toString()}</code> for all locales.
     *   <li>
     *       <p>If {@code candidate} is an instance of {@link Map}, then this methods returns {@code
     *       true} if all <var>{@linkplain Locale locale}</var>-<var>{@linkplain String
     *       string}</var> pairs are contained into {@code candidate}.
     *   <li>
     *       <p>Otherwise, this method returns {@code false}.
     * </ul>
     *
     * @param candidate The object which may contains this international string.
     * @return {@code true} if the given object contains all localized strings found in this
     *     international string.
     * @since 2.3
     */
    public boolean isSubsetOf(final Object candidate) {
        if (candidate instanceof InternationalString) {
            final InternationalString string = (InternationalString) candidate;
            for (final Map.Entry<Locale, String> entry : localMap.entrySet()) {
                final Locale locale = entry.getKey();
                final String text = entry.getValue();
                if (!text.equals(string.toString(locale))) {
                    return false;
                }
            }
        } else if (candidate instanceof CharSequence) {
            final String string = candidate.toString();
            for (final String text : localMap.values()) {
                if (!text.equals(string)) {
                    return false;
                }
            }
        } else if (candidate instanceof Map) {
            final Map<?, ?> map = (Map<?, ?>) candidate;
            return map.entrySet().containsAll(localMap.entrySet());
        } else {
            return false;
        }
        return true;
    }

