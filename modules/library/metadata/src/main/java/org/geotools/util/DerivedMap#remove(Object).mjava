    /**
     * Removes the mapping for this key from this map if present.
     * The default implementation invokes
     * <code>{@linkplain #base}.remove({@linkplain #derivedToBase derivedToBase}(key))</code>.
     *
     * @param  key key whose mapping is to be removed from the map.
     * @return previous value associated with specified key, or {@code null}
     *	       if there was no entry for key.
     * @throws UnsupportedOperationException if the {@linkplain #base} map doesn't
     *         supports the {@code remove} operation.
     */
    @Override
    public V remove(final Object key) throws UnsupportedOperationException {
        if (keyType.isInstance(key)) {
            return base.remove(derivedToBase(keyType.cast(key)));
        } else {
            return null;
        }
    }

