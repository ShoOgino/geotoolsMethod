    /**
     * Synchronizes the content of the {@link #globalConfiguration} with
     * {@link FactoryIteratorProviders#GLOBAL}. New providers are {@linkplain #register registered}
     * immediately. Note that this method is typically invoked in a different thread than
     * {@link FactoryIteratorProviders} method calls.
     *
     * @see FactoryIteratorProviders#addFactoryIteratorProvider
     */
    private void synchronizeIteratorProviders() {
        final FactoryIteratorProvider[] newProviders =
                globalConfiguration.synchronizeIteratorProviders();
        if (newProviders == null) {
            return;
        }

        registry.streamCategories()
                .filter(category -> !needScanForPlugins.contains(category))
                .forEach(category -> {
                    /*
                     * Register immediately the factories only if some other factories were already
                     * registered for this category,  because in such case scanForPlugin() will not
                     * be invoked automatically. If no factory are registered for this category, do
                     * nothing - we will rely on the lazy invocation of scanForPlugins() when first
                     * needed. We perform this check because getServiceProviders(category).hasNext()
                     * is the criterion used by FactoryRegistry in order to decide if it should invoke
                     * automatically scanForPlugins().
                     */
                    for (FactoryIteratorProvider newProvider : newProviders) {
                        register(newProvider, category);
                    }
                });
    }

