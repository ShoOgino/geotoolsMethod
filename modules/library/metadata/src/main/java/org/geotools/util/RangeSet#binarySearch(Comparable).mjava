    /**
     * Retourne l'index de l'élément {@code value} dans le tableau {@code array}. Cette méthode
     * interprète le tableau {@code array} comme un tableau d'un des types intrinsèques du Java, et
     * appelle la méthode {@code Arrays.binarySearch} appropriée.
     *
     * @param value The value to search. This value must have been converted with {@link #toNumber}
     *     prior to call this method.
     */
    private int binarySearch(final Comparable value) {
        switch (arrayElementCode) {
            case DOUBLE:
                return Arrays.binarySearch((double[]) array, ((Number) value).doubleValue());
            case FLOAT:
                return Arrays.binarySearch((float[]) array, ((Number) value).floatValue());
            case LONG:
                return Arrays.binarySearch((long[]) array, ((Number) value).longValue());
            case INTEGER:
                return Arrays.binarySearch((int[]) array, ((Number) value).intValue());
            case SHORT:
                return Arrays.binarySearch((short[]) array, ((Number) value).shortValue());
            case BYTE:
                return Arrays.binarySearch((byte[]) array, ((Number) value).byteValue());
            case CHARACTER:
                return Arrays.binarySearch((char[]) array, ((Character) value).charValue());
            default:
                return Arrays.binarySearch((Object[]) array, value);
        }
    }

