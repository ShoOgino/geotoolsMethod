    /**
     * Sets this bounding box to the intersection of this box with the specified one.
     * The {@linkplain #getInclusion inclusion} status must be the same for both boxes.
     *
     * @param box The geographic bounding box to intersect with this box.
     *
     * @since 2.5
     */
    public synchronized void intersect(final GeographicBoundingBox box) {
        checkWritePermission();
        final Boolean inc1 =     getInclusion(); ensureNonNull("inclusion", inc1);
        final Boolean inc2 = box.getInclusion(); ensureNonNull("inclusion", inc2);
        if (inc1.booleanValue() != inc2.booleanValue()) {
            throw new IllegalArgumentException(Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$1, "box"));
        }
        final double xmin = box.getWestBoundLongitude();
        final double xmax = box.getEastBoundLongitude();
        final double ymin = box.getSouthBoundLatitude();
        final double ymax = box.getNorthBoundLatitude();
        if (xmin > westBoundLongitude) westBoundLongitude = xmin;
        if (xmax < eastBoundLongitude) eastBoundLongitude = xmax;
        if (ymin > southBoundLatitude) southBoundLatitude = ymin;
        if (ymax < northBoundLatitude) northBoundLatitude = ymax;
        if (westBoundLongitude > eastBoundLongitude) {
            westBoundLongitude = eastBoundLongitude = 0.5 * (westBoundLongitude + eastBoundLongitude);
        }
        if (southBoundLatitude > northBoundLatitude) {
            southBoundLatitude = northBoundLatitude = 0.5 * (southBoundLatitude + northBoundLatitude);
        }
    }

