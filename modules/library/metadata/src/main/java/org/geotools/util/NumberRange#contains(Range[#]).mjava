    /**
     * Returns {@code true} if the supplied range is fully contained within this range.
     */
    @Override
    @SuppressWarnings("unchecked")
    public boolean contains(Range<?> range) {
        final Class<? extends Number> type = getWidestClass(elementClass, getElementClass(range));
        /*
         * The type bounds is actually <? extends Number & Comparable> but I'm unable to express
         * it it local variable as of Java 6. So we have to bypass the compiler check, but those
         * casts are actually safes, including Range because getElementClass(range) would have
         * throw an exception otherwise.
         */
        range = convertAndCast((Range) range, (Class) type);
        return castTo((Class) type).containsNC(range);
    }

