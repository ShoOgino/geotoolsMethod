    /**
     * Sets or unsets a pairwise ordering between all factories meeting a criterion.
     *
     * <p>For example in the CRS framework ({@link org.geotools.referencing.FactoryFinder}), this is
     * used for setting ordering between all factories provided by two vendors, or for two
     * authorities. If one or both factories are not currently registered, or if the desired
     * ordering is already set/unset, nothing happens and false is returned.
     *
     * @param <T> The class represented by the {@code base} argument.
     * @param base The base category. Only categories {@linkplain Class#isAssignableFrom assignable}
     *     to {@code base} will be processed.
     * @param set {@code true} for setting the ordering, or {@code false} for unsetting.
     * @param filter1 Predicate for the preferred factory.
     * @param filter2 Predicate for the factory to which {@code filter1} is preferred.
     * @return {@code true} if the ordering changed as a result of this call.
     */
    public <T> boolean setOrdering(
            final Class<T> base,
            final boolean set,
            final Predicate<? super T> filter1,
            final Predicate<? super T> filter2) {
        ensureArgumentNonNull("filter1", filter1);
        ensureArgumentNonNull("filter2", filter2);
        return registry.streamCategories()
                .flatMap(category -> streamIfSubtype(category, base))
                .map(category -> setOrUnsetOrdering(category, set, filter1, filter2))
                .reduce((done1, done2) -> done1 || done2)
                .orElse(false);
    }

