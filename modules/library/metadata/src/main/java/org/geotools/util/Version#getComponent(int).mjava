    /**
     * Returns the specified components of this version string. For a version of the {@code
     * major.minor.revision} form, index 0 stands for the major version number, 1 stands for the
     * minor version number and 2 stands for the revision number.
     *
     * <p>The return value is an {@link Integer} if the component is parsable as an integer, or a
     * {@link String} otherwise. If there is no component at the specified index, then this method
     * returns {@code null}.
     *
     * @param index The index of the component to fetch.
     * @return The value at the specified index, or {@code null} if none.
     * @throws IndexOutOfBoundsException if {@code index} is negative.
     */
    public synchronized Comparable<?> getComponent(final int index) {
        if (parsed == null) {
            if (components == null) {
                components = PATTERN.split(version);
            }
            parsed = new Comparable[components.length];
        }
        if (index >= parsed.length) {
            return null;
        }
        Comparable<?> candidate = parsed[index];
        if (candidate == null) {
            final String value = components[index].trim();
            try {
                candidate = Integer.valueOf(value);
            } catch (NumberFormatException e) {
                candidate = value;
            }
            parsed[index] = candidate;
        }
        return candidate;
    }

