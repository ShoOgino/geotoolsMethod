    /**
     * Construct a initially empty set with an optional trash set. There is initially
     * no other set mutually exclusive with this one. Mutually exclusive sets must be
     * created using the {@code DisjointSet(DisjointSet)} constructor with this
     * newly created set as argument.
     *
     * @param hasTrash If {@code true}, all {@linkplain #remove remove} operations
     *        will add removed elements to a trash set (thus, really just moving the
     *        element to the trash). If {@code false}, there is no trash and this
     *        constructor behave like the no-argument constructor.
     * @see #getTrash
     */
    public DisjointSet(final boolean hasTrash) {
        map   = new LinkedHashMap<E, DisjointSet<E>>();
        trash = (hasTrash) ? new DisjointSet<E>(map) : null;
    }

