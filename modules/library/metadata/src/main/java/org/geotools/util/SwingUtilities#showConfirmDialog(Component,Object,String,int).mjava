    /**
     * Brings up a confirmation dialog with "Yes/No" buttons. This method can be invoked from any
     * thread and blocks until the user click on "Yes" or "No".
     *
     * @param owner The parent component. Dialog will apears on top of this owner.
     * @param message The dialog content to show.
     * @param title The title string for the dialog.
     * @param type The message type ({@link JOptionPane#ERROR_MESSAGE}, {@link
     *     JOptionPane#INFORMATION_MESSAGE}, {@link JOptionPane#WARNING_MESSAGE}, {@link
     *     JOptionPane#QUESTION_MESSAGE} or {@link JOptionPane#PLAIN_MESSAGE}).
     * @return {@code true} if user clicked on "Yes", {@code false} otherwise.
     */
    public static boolean showConfirmDialog(
            final Component owner, final Object message, final String title, final int type) {
        if (!EventQueue.isDispatchThread()) {
            final boolean[] result = new boolean[1];
            invokeAndWait(() -> result[0] = showConfirmDialog(owner, message, title, type));
            return result[0];
        }
        final int choice;
        if (JOptionPane.getDesktopPaneForComponent(owner) != null) {
            choice =
                    JOptionPane.showInternalConfirmDialog(
                            owner, // Composante parente
                            message, // Message
                            title, // Titre de la boîte de dialogue
                            JOptionPane.YES_NO_OPTION, // Boutons à faire apparaître
                            type); // Type du message
        } else {
            choice =
                    JOptionPane.showConfirmDialog(
                            owner, // Composante parente
                            message, // Message
                            title, // Titre de la boîte de dialogue
                            JOptionPane.YES_NO_OPTION, // Boutons à faire apparaître
                            type); // Type du message
        }
        return choice == JOptionPane.YES_OPTION;
    }

