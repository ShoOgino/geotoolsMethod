    /**
     * Casts the number to the specified class. The class must by one of {@link Byte},
     * {@link Short}, {@link Integer}, {@link Long}, {@link Float} or {@link Double}.
     */
    @SuppressWarnings("unchecked")
    public static <N extends Number> N cast(final Number n, final Class<N> c)
            throws IllegalArgumentException
    {
        if (n==null || n.getClass().equals(c)) {
            return (N) n;
        }
        if (Byte   .class.equals(c)) return (N) Byte   .valueOf(n.  byteValue());
        if (Short  .class.equals(c)) return (N) Short  .valueOf(n. shortValue());
        if (Integer.class.equals(c)) return (N) Integer.valueOf(n.   intValue());
        if (Long   .class.equals(c)) return (N) Long   .valueOf(n.  longValue());
        if (Float  .class.equals(c)) return (N) Float  .valueOf(n. floatValue());
        if (Double .class.equals(c)) return (N) Double .valueOf(n.doubleValue());
        throw unknownType(c);
    }

