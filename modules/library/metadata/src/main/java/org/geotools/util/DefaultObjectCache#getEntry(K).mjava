    /**
     * Retrieve cache entry, will create one if needed.
     *
     * @return ObjectCacheEntry
     */
    private ObjectCacheEntry<V> getEntry(K key) {
        synchronized (cache) {
            ObjectCacheEntry<V> entry = cache.get(key);
            if (entry == null) {
                entry = new ObjectCacheEntry<>();
                cache.put(key, entry);
            }
            return entry;
        }
    }

