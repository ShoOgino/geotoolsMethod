    public void writeUnLock(final K key) {
        synchronized (locks) {
            final ReentrantLock lock = locks.get(key);
            if (lock == null) {
                throw new IllegalMonitorStateException("Cannot unlock prior to locking");
            }
            if (lock.getHoldCount() == 0) {
                throw new IllegalMonitorStateException("Cannot unlock prior to locking");
            }
            lock.unlock();
            // TODO: stop lock from being removed when another worker is trying
            // to acquire it
            // TODO: review w/ J2SE 5.0
            // if (lock.holds() == 0) {
            // locks.remove(key);
            // }
        }
    }

