    /**
     * Casts the specified range to the specified type. If this class is associated to a unit of
     * measurement, then this method convert the {@code range} units to the same units than this
     * instance.
     *
     * @param type The class to cast to. Must be one of {@link Byte}, {@link Short},
     *             {@link Integer}, {@link Long}, {@link Float} or {@link Double}.
     * @return The casted range, or {@code range} if no cast is needed.
     */
    @Override
    <N extends Number & Comparable<? super N>>
    MeasurementRange<N> convertAndCast(final Range<? extends Number> range, final Class<N> type)
            throws IllegalArgumentException
    {
        if (range instanceof MeasurementRange) {
            final MeasurementRange<?> casted = (MeasurementRange) range;
            return casted.convertAndCast(type, units);
        }
        // TODO: Remove the (Range) cast when we will be allowed to compile for Java 6.
        return new MeasurementRange<N>(type, (Range) range, units);
    }

