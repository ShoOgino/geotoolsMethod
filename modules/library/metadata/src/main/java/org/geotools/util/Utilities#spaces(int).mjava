    /**
     * Returns a string of the specified length filled with white spaces. This method tries to
     * return a pre-allocated string if possible.
     *
     * @param length The string length. Negative values are clamped to 0.
     * @return A string of length {@code length} filled with white spaces.
     */
    public static String spaces(int length) {
        /*
         * No need to synchronize.  In the unlikely event of two threads calling this method
         * at the same time and the two calls creating a new string, the String.intern() call
         * will take care of canonicalizing the strings.
         */
        if (length < 0) {
            length = 0;
        }
        String s;
        if (length < spaces.length) {
            s = spaces[length];
            if (s == null) {
                s = spaces[spaces.length - 1].substring(0, length).intern();
                spaces[length] = s;
            }
        } else {
            char[] blancs = new char[length];
            Arrays.fill(blancs, ' ');
            s = new String(blancs);
        }
        return s;
    }

