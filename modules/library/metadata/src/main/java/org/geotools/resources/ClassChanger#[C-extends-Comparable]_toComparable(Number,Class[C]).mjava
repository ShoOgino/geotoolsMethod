    /**
     * Wraps the specified number as an instance of the specified classe.
     * For example <code>toComparable(new&nbsp;Long(time),&nbsp;Date.class)</code>
     * is equivalent to <code>new&nbsp;Date(time)</code>. There is of course no
     * point to use this method if the destination class is know at compile time.
     * This method is useful for creating instance of classes choosen dynamically
     * at run time.
     *
     * @param  value  The numerical value (may be null).
     * @param  classe The desired classe for return value.
     * @throws ClassNotFoundException if {@code classe} is not a registered class.
     */
    @SuppressWarnings("unchecked")
    public static <C extends Comparable> C toComparable(final Number value, final Class<C> classe)
            throws ClassNotFoundException
    {
        if (value != null) {
            if (Number.class.isAssignableFrom(classe)) {
                return classe.cast(value);
            }
            ClassChanger changer = getClassChanger(classe);
            final Comparable<?> c = changer.inverseConvert(value);
            return classe.cast(c);
        }
        return null;
    }

