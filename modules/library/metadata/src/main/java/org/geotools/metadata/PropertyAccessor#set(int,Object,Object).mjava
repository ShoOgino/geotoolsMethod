    /**
     * Sets a value for the specified metadata.
     *
     * @param  index The index of the property to set.
     * @param  metadata The metadata object on which to set the value.
     * @param  value The new value.
     * @return The old value.
     * @throws IllegalArgumentException if the specified property can't be set.
     * @throws ClassCastException if the given value is not of the expected type.
     */
    final Object set(final int index, final Object metadata, final Object value)
            throws IllegalArgumentException, ClassCastException
    {
        String key;
        if (index >= 0 && index < getters.length && setters != null) {
            final Method getter = getters[index];
            final Method setter = setters[index];
            if (setter != null) {
                final Object old = get(getter, metadata);
                set(getter, setter, metadata, new Object[] {value});
                return old;
            } else {
                key = getter.getName();
                key = key.substring(prefix(key).length());
            }
        } else {
            key = String.valueOf(index);
        }
        throw new IllegalArgumentException(Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$1, key));
    }

