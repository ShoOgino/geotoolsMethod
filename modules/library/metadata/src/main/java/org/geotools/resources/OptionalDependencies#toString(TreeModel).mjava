    /**
     * Returns a graphical representation of the specified tree model. This representation can be
     * printed to the {@linkplain System#out standard output stream} (for example) if it uses a
     * monospaced font and supports unicode.
     *
     * <p>This method should not be defined here, since this class is about optional dependencies.
     * It should be defined in {@link org.geotools.gui.swing.tree.Trees} instead. However we put it
     * here (for now) because it is used in some module that don't want to depend on widgets.
     *
     * @param tree The tree to format.
     * @return A string representation of the tree, or {@code null} if it doesn't contain any node.
     */
    public static String toString(final TreeModel tree) {
        final Object root = tree.getRoot();
        if (root == null) {
            return null;
        }
        final StringBuilder buffer = new StringBuilder();
        final String lineSeparator = System.getProperty("line.separator", "\n");
        try {
            format(tree, root, buffer, 0, new boolean[64], lineSeparator);
        } catch (IOException e) {
            // Should never happen when writting into a StringBuilder.
            throw new AssertionError(e);
        }
        return buffer.toString();
    }

