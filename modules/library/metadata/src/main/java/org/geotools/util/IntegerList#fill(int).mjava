    /**
     * Fills the list with the given value. Every existing values are overwritten from index 0
     * inclusive up to {@link #size} exclusive.
     *
     * @param value The value to set.
     */
    @SuppressWarnings("fallthrough")
    public void fill(int value) {
        if (value < 0 || value > mask) {
            throw new IllegalArgumentException(
                    Errors.format(ErrorKeys.VALUE_OUT_OF_BOUNDS_$3, value, 0, mask));
        }
        final long p;
        if (value == 0) {
            p = 0; // All bits set to 0.
        } else if (value == mask) {
            p = -1L; // All bits set to 1.
        } else
            switch (bitCount) {
                case 1:
                    value |= (value << 1); // Fall through
                case 2:
                    value |= (value << 2); // Fall through
                case 4:
                    value |= (value << 4); // Fall through
                case 8:
                    value |= (value << 8); // Fall through
                case 16:
                    value |= (value << 16); // Fall through
                case 32:
                    p = (value & 0xFFFFFFFFL) | ((long) value << 32);
                    break;
                default:
                    { // General case (unoptimized)
                        for (int i = 0; i < size; i++) {
                            setUnchecked(i, value);
                        }
                        return;
                    }
            }
        Arrays.fill(values, 0, length(size), p);
    }

