    /**
     * Constructs a range with the same values than the specified range, casted to the specified
     * type.
     *
     * @param type The element class, usually one of {@link Byte}, {@link Short}, {@link Integer},
     *     {@link Long}, {@link Float} or {@link Double}.
     * @param range The range to copy. The elements must be {@link Number} instances.
     * @throws IllegalArgumentException if the values are not convertible to the specified class.
     */
    NumberRange(final Class<T> type, final Range<? extends Number> range)
            throws IllegalArgumentException {
        // TODO: remove the (Number) casts when we will be allowed to compile for Java 6.
        this(
                type,
                ClassChanger.cast(range.getMinValue(), type),
                range.isMinIncluded(),
                ClassChanger.cast(range.getMaxValue(), type),
                range.isMaxIncluded());
    }

