    /**
     * Writes a portion of an array of a string.
     *
     * @param string String to be written.
     * @param offset Offset from which to start reading characters.
     * @param length Number of characters to be written.
     * @throws IOException If an I/O error occurs.
     */
    @Override
    public void write(final String string, int offset, int length) throws IOException {
        if (offset < 0 || length < 0 || (offset + length) > string.length()) {
            throw new IndexOutOfBoundsException();
        }
        if (length == 0) {
            return;
        }
        synchronized (lock) {
            if (skipCR && string.charAt(offset) == '\n') {
                offset++;
                length--;
            }
            int upper = offset;
            for (; length != 0; length--) {
                switch (string.charAt(upper++)) {
                    case '\r':
                        {
                            writeLine(string, offset, upper - 1);
                            writeEOL();
                            if (length > 1 && string.charAt(upper) == '\n') {
                                upper++;
                                length--;
                            }
                            offset = upper;
                            break;
                        }
                    case '\n':
                        {
                            writeLine(string, offset, upper - 1);
                            writeEOL();
                            offset = upper;
                            break;
                        }
                }
            }
            skipCR = (string.charAt(upper - 1) == '\r');
            /*
             * Write the remainding characters and
             * put trailing blanks into the buffer.
             */
            for (int i = upper; --i >= offset; ) {
                if (!isWhitespace(string.charAt(i))) {
                    writeLine(string, offset, offset = i + 1);
                    break;
                }
            }
            length = upper - offset;
            final int newCount = count + length;
            if (newCount > buffer.length) {
                buffer = XArray.resize(buffer, newCount);
            }
            while (--length >= 0) {
                buffer[count++] = string.charAt(offset++);
            }
            assert count == newCount : newCount;
        }
    }

