    /**
     * Replaces the element at the specified position in this list with the specified element.
     *
     * @param  index   index of element to replace.
     * @param  element element to be stored at the specified position.
     * @return the element previously at the specified position.
     * @throws IndexOutOfBoundsException if index out of range.
     * @throws IllegalArgumentException if the specified element is not of the expected type.
     * @throws UnsupportedOperationException if this collection is unmodifiable.
     */
    @Override
    public E set(final int index, final E element)
            throws IllegalArgumentException, UnsupportedOperationException
    {
        ensureValidType(element);
        synchronized (getLock()) {
            checkWritePermission();
            return super.set(index, element);
        }
    }

