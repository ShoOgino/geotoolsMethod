    /**
     * Returns {@code true} if the specified level is loggable.
     *
     * <p><b>Implementation tip</b><br>
     * Given that {@link Level#intValue} for all predefined levels are documented in the {@link
     * Level} specification and are multiple of 100, given that integer divisions are rounded toward
     * zero and given rule documented in this class javadoc, then logging levels can be efficiently
     * mapped to predefined levels using {@code switch} statements as below. This statement has good
     * chances to be compiled to the {@code tableswitch} bytecode rather than {@code lookupswitch}
     * (see <a
     * href="http://java.sun.com/docs/books/jvms/second_edition/html/Compiling.doc.html#14942">Compiling
     * Switches</a> in <cite>The Java Virtual Machine Specification</cite>).
     *
     * <blockquote>
     *
     * <pre>
     * @SuppressWarnings("fallthrough")
     * public boolean isLoggable(Level level) {
     *     final int n = level.intValue();
     *     switch (n / 100) {
     *         default: {
     *             // MAX_VALUE is a special value for Level.OFF. Otherwise and
     *             // if positive, fallthrough since we are greater than SEVERE.
     *             switch (n) {
     *                 case Integer.MIN_VALUE: return true;  // Level.ALL
     *                 case Integer.MAX_VALUE: return false; // Level.OFF
     *                 default: if (n &lt; 0) return false;
     *             }
     *         }
     *         case 10: return isSevereEnabled();
     *         case  9: return isWarningEnabled();
     *         case  8: return isInfoEnabled();
     *         case  7: return isConfigEnabled();
     *         case  6: // fallthrough
     *         case  5: return isFineEnabled();
     *         case  4: return isFinerEnabled();
     *         case  3: return isFinestEnabled();
     *         case  2: // fallthrough
     *         case  1: // fallthrough
     *         case  0: return false;
     *     }
     * }
     * </pre>
     *
     * </blockquote>
     */
    @Override
    public abstract boolean isLoggable(Level level);

