    /**
     * Creates a new {@code CommandLine} instance from the given arguments. If this constructor
     * fails because of a programming error (for example a type not handled by {@link #parse parse}
     * method), then an exception is thrown like usual. If this constructor fails because of some
     * user error (e.g. if a mandatory argument is not provided) or some other external conditions
     * (e.g. an {@link IOException}), then it prints a short error message and invokes {@link
     * System#exit} with one the {@code EXIT_CODE} constants.
     *
     * @param args The command-line arguments.
     * @param maximumRemaining The maximum number of arguments that may remain after processing of
     *     annotated fields. This is the maximum length of the {@link #arguments} array. The default
     *     value is 0.
     */
    protected CommandLine(final String[] args, final int maximumRemaining) {
        final Arguments arguments = new Arguments(args);
        out = arguments.out;
        err = arguments.err;
        locale = arguments.locale;
        if (arguments.getFlag(OPTION_PREFIX + "help")) {
            help();
            System.exit(0);
        }
        setArgumentValues(getClass(), arguments);
        this.arguments = arguments.getRemainingArguments(maximumRemaining, OPTION_PREFIX.charAt(0));
    }

