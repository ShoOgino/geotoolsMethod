    /**
     * Returns the type of minimum and maximum values.
     */
    private static Class<? extends Number> getElementClass(final Range<?> range)
            throws IllegalArgumentException
    {
        ensureNonNull("range", range);
        final Class<?> type = range.elementClass;
        ensureNumberClass(type);
        /*
         * Safe because we checked in the above line. We could have used Class.asSubclass(Class)
         * instead but we want an IllegalArgumentException in case of failure rather than a
         * ClassCastException.
         */
        @SuppressWarnings("unchecked")
        final Class<? extends Number> result = (Class<? extends Number>) type;
        return result;
    }

