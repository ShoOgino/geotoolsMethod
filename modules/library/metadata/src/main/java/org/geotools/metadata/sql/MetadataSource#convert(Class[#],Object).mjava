    /**
     * Converts the specified non-metadata value into an object of the expected type.
     * The expected value is an instance of a class outside the metadata package, for
     * example {@link String}, {@link InternationalString}, {@link URI}, etc.
     */
    private static Object convert(final Class<?> valueType, final Object value) {
        if (value!=null && !valueType.isAssignableFrom(value.getClass())) {
            if (InternationalString.class.isAssignableFrom(valueType)) {
               return new SimpleInternationalString(value.toString());
            }
            if (URL.class.isAssignableFrom(valueType)) try {
                return new URL(value.toString());
            } catch (MalformedURLException exception) {
                // TODO: localize and provides more details.
                throw new MetadataException("Illegal value.", exception);
            }
            if (URI.class.isAssignableFrom(valueType)) try {
                return new URI(value.toString());
            } catch (URISyntaxException exception) {
                // TODO: localize and provides more details.
                throw new MetadataException("Illegal value.", exception);
            }
        }
        return value;
    }

