    /**
     * Returns {@code data[index]} as a number.
     *
     * @param index Index of the value to returns.
     * @return The value as a {@link Number}.
     * @throws ParseException if the value can not be converted to a {@link Number}.
     */
    @SuppressWarnings("unchecked")
    private Number getNumber(final int index) throws ParseException {
        Exception error = null;
        if (data[index] instanceof Comparable) {
            try {
                return ClassChanger.toNumber((Comparable<Number>) data[index]);
            } catch (ClassNotFoundException exception) {
                error = exception;
            }
        }
        ParseException exception =
                new ParseException(
                        Errors.format(ErrorKeys.UNPARSABLE_NUMBER_$1, data[index]), limits[index]);
        if (error != null) {
            exception.initCause(error);
        }
        throw exception;
    }

