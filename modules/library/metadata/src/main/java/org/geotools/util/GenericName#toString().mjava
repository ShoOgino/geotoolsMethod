    /**
     * Returns a string representation of this generic name. This string representation is
     * local-independant. It contains all elements listed by {@link #getParsedNames} separated by an
     * arbitrary character (usually {@code :} or {@code /}). This rule implies that the {@code
     * toString()} method for a {@linkplain ScopedName scoped name} will contains the scope, while
     * the {@code toString()} method for the {@linkplain LocalName local version} of the same name
     * will not contains the scope.
     *
     * @return A string representation of this name.
     */
    @Override
    public String toString() {
        final StringBuilder buffer = new StringBuilder();
        final List<? extends LocalName> parsedNames = getParsedNames();
        final char separator = getSeparator();
        for (final Iterator<? extends LocalName> it = parsedNames.iterator(); it.hasNext(); ) {
            if (buffer.length() != 0) {
                buffer.append(separator);
            }
            buffer.append(it.next());
        }
        return buffer.toString();
    }

