    /**
     * Returns the target class for the specified source class, if a suitable transformation is
     * known. The source class is a {@link Comparable} subclass that will be specified as input to
     * {@link #convert}. The target class is a {@link Number} subclass that will be returned as
     * output by {@link #convert}. If no suitable mapping is found, then {@code source} is returned.
     */
    public static synchronized Class<?> getTransformedClass(final Class<?> source) {
        if (source != null) {
            for (int i = 0; i < changers.length; i++) {
                if (changers[i].source.isAssignableFrom(source)) {
                    return changers[i].target;
                }
            }
        }
        return source;
    }

