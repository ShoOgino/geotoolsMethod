    /**
     * Logs a record. The default implementation delegates to {@link
     * #logrb(Level,String,String,String,String,Object[]) logrb}.
     */
    @Override
    public void log(final LogRecord record) {
        /*
         * The filter should always be null since we overrode the 'setFilter' method as a no-op.
         * But we check it anyway as matter of principle just in case some subclass overrides the
         * 'getFilter()' method. This is the only method where we can do this check cheaply. Note
         * that this is NOT the check for logging level; Filters are for user-specified criterions.
         */
        final Filter filter = getFilter();
        if (filter != null && !filter.isLoggable(record)) {
            return;
        }
        Level level = record.getLevel();
        String sourceClass = record.getSourceClassName();
        String sourceMethod = record.getSourceMethodName();
        String bundleName = record.getResourceBundleName();
        String message = record.getMessage();
        Object[] params = record.getParameters();
        Throwable thrown = record.getThrown();
        ResourceBundle bundle = record.getResourceBundle();
        boolean localized = false;
        if (bundle != null)
            try {
                message = bundle.getString(message);
                localized = true; // Sets only if the above succeed.
            } catch (MissingResourceException e) {
                // The default Formatter.messageFormat implementation ignores this exception
                // and uses the bundle key as the message, so we mimic its behavior here.
            }
        final boolean useThrown = (thrown != null) && (params == null || params.length == 0);
        if (localized) {
            // The message is already localized.
            if (useThrown) {
                logp(level, sourceClass, sourceMethod, message, thrown);
            } else {
                logp(level, sourceClass, sourceMethod, message, params);
            }
        } else {
            // The message needs to be localized. The bundle was null but maybe bundleName is not.
            // Futhermore subclass may have overriden the 'logrb' methods.
            if (useThrown) {
                logrb(level, sourceClass, sourceMethod, bundleName, message, thrown);
            } else {
                logrb(level, sourceClass, sourceMethod, bundleName, message, params);
            }
        }
    }

