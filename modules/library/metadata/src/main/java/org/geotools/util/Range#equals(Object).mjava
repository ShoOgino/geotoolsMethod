    /**
     * Compares this range with the given object for equality.
     *
     * @param object The object to compare with this range for equality.
     * @return {@code true} if the given object is equals to this range.
     */
    @Override
    public boolean equals(final Object object) {
        if (object == this) {
            return true;
        }
        if (object != null && object.getClass().equals(getClass())) {
            final Range<?> other = (Range<?>) object;
            if (Utilities.equals(elementClass, other.elementClass)) {
                if (isEmpty()) {
                    return other.isEmpty();
                }
                return Utilities.equals(minValue, other.minValue)
                        && Utilities.equals(maxValue, other.maxValue)
                        && isMinIncluded == other.isMinIncluded
                        && isMaxIncluded == other.isMaxIncluded;
            }
        }
        return false;
    }

