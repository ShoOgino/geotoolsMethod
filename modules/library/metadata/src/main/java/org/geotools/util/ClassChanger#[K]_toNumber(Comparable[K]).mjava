    /**
     * Returns the numeric value for the specified object. For example the code <code>
     * toNumber(new&nbsp;Date())</code> returns the {@link Date#getTime()} value of the specified
     * date object as a {@link Long}.
     *
     * @param object Object to convert (may be null).
     * @return {@code null} if {@code object} was null; otherwise {@code object} if the supplied
     *     object is already an instance of {@link Number}; otherwise a new number with the
     *     numerical value.
     * @throws ClassNotFoundException if {@code object} is not an instance of a registered class.
     */
    @SuppressWarnings("unchecked")
    public static <K> K toNumber(final Comparable<K> object) throws ClassNotFoundException {
        if (object != null) {
            if (object instanceof Number) {
                return (K) object;
            }
            @SuppressWarnings("rawtypes")
            ClassChanger changer = getClassChanger(object.getClass());
            return (K) changer.convert(object);
        }
        return null;
    }

