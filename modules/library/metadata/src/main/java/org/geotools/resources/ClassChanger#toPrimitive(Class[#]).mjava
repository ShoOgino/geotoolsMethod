    /**
     * Converts a wrapper class to a primitive class. For example this method converts <code>
     * {@linkplain Double}.class</code> to <code>Double.{@linkplain Double#TYPE TYPE}</code>.
     *
     * @param c The wrapper class.
     * @return The primitive class.
     * @throws IllegalArgumentException if the specified class is not a wrapper for a primitive.
     */
    public static Class<?> toPrimitive(final Class<?> c) throws IllegalArgumentException {
        if (Double.class.equals(c)) return Double.TYPE;
        if (Float.class.equals(c)) return Float.TYPE;
        if (Long.class.equals(c)) return Long.TYPE;
        if (Integer.class.equals(c)) return Integer.TYPE;
        if (Short.class.equals(c)) return Short.TYPE;
        if (Byte.class.equals(c)) return Byte.TYPE;
        if (Boolean.class.equals(c)) return Boolean.TYPE;
        if (Character.class.equals(c)) return Character.TYPE;
        throw unknownType(c);
    }

