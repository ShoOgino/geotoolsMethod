    /**
     * Creates a new registry with the specified Registers the specified category. If the same
     * category is registered multiple times, all instances previously registered for that category
     * are lost.
     *
     * @param factoryRegistry The {@link FactoryRegistry} this registry belongs to.
     * @param categories The categories to register; must not be {@code null} but can contain {@code
     *     null}.
     */
    public CategoryRegistry(
            final FactoryRegistry factoryRegistry, final Iterable<Class<?>> categories) {
        ensureArgumentNonNull("factoryRegistry", factoryRegistry);
        ensureArgumentNonNull("categories", categories);
        // use an unmodifiable map to guarantee immutability
        this.categories =
                stream(categories)
                        .collect(
                                collectingAndThen(
                                        toMap(
                                                category -> category,
                                                category ->
                                                        new InstanceRegistry<>(
                                                                factoryRegistry, category),
                                                (firstRegistry, secondRegistry) -> secondRegistry),
                                        Collections::unmodifiableMap));
    }

