    /**
     * Brings up a "Ok/Cancel/Reset" dialog with no icon. This method can be invoked from any thread
     * and blocks until the user click on "Ok" or "Cancel".
     *
     * @param owner The parent component. Dialog will apears on top of this owner.
     * @param dialog The dialog content to show.
     * @param title The title string for the dialog.
     * @param reset Action to execute when user press "Reset", or {@code null} if there is no
     *     "Reset" button. If {@code reset} is an instance of {@link Action}, the button label will
     *     be set according the action's properties.
     * @return {@code true} if user clicked "Ok", {@code false} otherwise.
     */
    public static boolean showOptionDialog(
            final Component owner,
            final Object dialog,
            final String title,
            final ActionListener reset) {
        // Delegates to Swing thread if this method is invoked from an other thread.
        if (!EventQueue.isDispatchThread()) {
            final boolean[] result = new boolean[1];
            invokeAndWait(() -> result[0] = showOptionDialog(owner, dialog, title, reset));
            return result[0];
        }
        // Constructs the buttons bar.
        Object[] options = null;
        Object initialValue = null;
        int okChoice = JOptionPane.OK_OPTION;
        if (reset != null) {
            final Vocabulary resources =
                    Vocabulary.getResources(owner != null ? owner.getLocale() : null);
            final JButton button;
            if (reset instanceof Action) {
                button = new JButton((Action) reset);
            } else {
                button = new JButton(resources.getString(VocabularyKeys.RESET));
                button.addActionListener(reset);
            }
            options =
                    new Object[] {
                        resources.getString(VocabularyKeys.OK),
                        resources.getString(VocabularyKeys.CANCEL),
                        button
                    };
            initialValue = options[okChoice = 0];
        }

        // Brings ups the dialog box.
        final int choice;
        if (JOptionPane.getDesktopPaneForComponent(owner) != null) {
            choice =
                    JOptionPane.showInternalOptionDialog(
                            owner, // Composante parente
                            dialog, // Message
                            title, // Titre de la boîte de dialogue
                            JOptionPane.OK_CANCEL_OPTION, // Boutons à placer
                            JOptionPane.PLAIN_MESSAGE, // Type du message
                            null, // Icone
                            options, // Liste des boutons
                            initialValue); // Bouton par défaut
        } else {
            choice =
                    JOptionPane.showOptionDialog(
                            owner, // Composante parente
                            dialog, // Message
                            title, // Titre de la boîte de dialogue
                            JOptionPane.OK_CANCEL_OPTION, // Boutons à placer
                            JOptionPane.PLAIN_MESSAGE, // Type du message
                            null, // Icone
                            options, // Liste des boutons
                            initialValue); // Bouton par défaut
        }
        return choice == okChoice;
    }

