    /**
     * Factories for the provided category type.
     * 
     * @param category The category to look for. Usually an interface class
     *                 (not the actual implementation class).
     * @param factoryFilter Predicate to filter factories, null for all factories
     * @param useOrdering true to use provided pairwise orderings
     * @return factories registered for category
     * @since 19
     */
    public <T> Stream<T> getFactories(final Class<T> category,
            final Predicate<? super T> factoryFilter, final boolean useOrdering) {
        Stream<T> factories = getFactories(category, useOrdering);
        return factoryFilter == null ? factories : factories.filter(factoryFilter);
    }

