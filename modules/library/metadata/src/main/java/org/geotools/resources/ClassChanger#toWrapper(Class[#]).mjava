    /**
     * Converts a primitive class to a wrapper class. For example this method converts <code>
     * Double.{@linkplain Double#TYPE TYPE}</code> to <code>{@linkplain Double}.class</code>.
     *
     * @param c The primitive class.
     * @return The wrapper class.
     * @throws IllegalArgumentException if the specified class is not a primitive.
     */
    public static Class<?> toWrapper(final Class<?> c) throws IllegalArgumentException {
        if (Double.TYPE.equals(c)) return Double.class;
        if (Float.TYPE.equals(c)) return Float.class;
        if (Long.TYPE.equals(c)) return Long.class;
        if (Integer.TYPE.equals(c)) return Integer.class;
        if (Short.TYPE.equals(c)) return Short.class;
        if (Byte.TYPE.equals(c)) return Byte.class;
        if (Boolean.TYPE.equals(c)) return Boolean.class;
        if (Character.TYPE.equals(c)) return Character.class;
        throw unknownType(c);
    }

