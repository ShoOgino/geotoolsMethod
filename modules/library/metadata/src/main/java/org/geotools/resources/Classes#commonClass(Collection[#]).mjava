    /**
     * Returns the most specific class which is a common parent of all specified objects.
     *
     * @param objects A collection of objects. May contains duplicated values and null values.
     * @return The most specific class common to all supplied objects.
     */
    public static Class<?> commonClass(final Collection<?> objects) {
        final Set<Class<?>> types = getClasses(objects);
        /*
         * First check if a type is assignable from all other types. At most one such
         * type can exists. We check for it first in order to avoid the creation of a
         * temporary HashSet if such type is found.
         */
        search:
        for (final Class<?> candidate : types) {
            for (final Class<?> type : types) {
                if (!candidate.isAssignableFrom(type)) {
                    continue search;
                }
            }
            return candidate;
        }
        return commonSuperClass(types);
    }

