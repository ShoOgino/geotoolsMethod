    /**
     * Tests the redirection to Log4J.
     */
    @Test
    public void testLog4J() throws ClassNotFoundException {
        try {
            Logging.GEOTOOLS.setLoggerFactory("org.geotools.util.logging.Log4JLoggerFactory");
            Logger logger = Logging.getLogger("org.geotools");
            assertTrue(logger instanceof Log4JLogger);
            /*
             * Tests level setting, ending with OFF in order to avoid
             * polluting the standard output stream with this test.
             */
            final Level oldLevel = logger.getLevel();

            logger.setLevel(Level.WARNING);
            assertEquals(Level.WARNING, logger.getLevel());
            assertTrue (logger.isLoggable(Level.WARNING));
            assertTrue (logger.isLoggable(Level.SEVERE));
            assertFalse(logger.isLoggable(Level.CONFIG));

            logger.setLevel(Level.FINER);
            assertEquals(Level.FINER, logger.getLevel());
            assertEquals(Level.FINER, logger.getLevel());
            assertTrue (logger.isLoggable(Level.FINER));
            assertTrue (logger.isLoggable(Level.SEVERE));

            logger.setLevel(Level.OFF);
            assertEquals(Level.OFF, logger.getLevel());
            /*
             * WARNING: Don't test logging at FINEST level. For some mysterious reason,
             * Maven 2.0.6 executes the tests using Log4J 1.2.6 even if we declared and
             * compiled successfully the module with Log4J 1.2.12. Because the TRACE level
             * was not yet available in Log4J 1.2.6, attempts to test this level result in
             * a NoSuchMethodError: org.apache.log4j.Logger.trace(Ljava/lang/Object;)V
             */
            logger.finer  ("Message to Log4J at FINER level.");
            logger.fine   ("Message to Log4J at FINE level.");
            logger.config ("Message to Log4J at CONFIG level.");
            logger.info   ("Message to Log4J at INFO level.");
            logger.warning("Message to Log4J at WARNING level.");
            logger.severe ("Message to Log4J at SEVERE level.");
            logger.setLevel(oldLevel);
        } finally {
            Logging.GEOTOOLS.setLoggerFactory((String) null);
            assertEquals(Logger.class, Logging.getLogger("org.geotools").getClass());
        }
    }

