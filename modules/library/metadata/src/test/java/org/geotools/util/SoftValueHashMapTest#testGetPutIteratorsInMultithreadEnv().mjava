    /**
     * Tests the {@link SoftValueHashMap} with threads that perform a sequence of put and get
     * and threads that access elements in cache through the iterator
     * @throws InterruptedException 
     */
    @Test
    public void testGetPutIteratorsInMultithreadEnv() throws InterruptedException {
        final Random random = getRandom();
        SoftValueHashMap<Integer, Integer> cache = new SoftValueHashMap<Integer, Integer>();
       
        // create threads
        ExecutorService executor = Executors.newFixedThreadPool(NUMTHREADS);        
        
        for (int iter = 0; iter < TEST_CYCLES; iter++) {
           
            final CountDownLatch latch = new CountDownLatch(NUMTHREADS);
            
            // Threads that fill the cache with random values
            for(int i=0; i < NUMTHREADS/2; i++) {
                Runnable th = new CacheTestThreadGetPut(cache, random,latch);
                executor.execute(th);
            }
            
            // Threads that use the iterator on the cache
            for(int i=0; i < NUMTHREADS/2; i++) {
                Runnable th = new CacheTestThreadIterators(cache, latch);
                executor.execute(th);
            }
            
            latch.await();     
        }
        
        executor.shutdown();
        executor.awaitTermination(3, TimeUnit.SECONDS);
    }

