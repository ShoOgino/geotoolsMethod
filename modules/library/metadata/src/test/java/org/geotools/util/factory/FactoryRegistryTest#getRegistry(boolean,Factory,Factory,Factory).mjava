    /**
     * Creates the factory registry to test. The tests performed in this method are more J2SE tests
     * than Geotools implementation tests. We basically just ensure that we have setup the service
     * registry properly.
     *
     * <p>Factories are specified in arguments as {@link org.geotools.util.factory.Factory} objects
     * in order to avoid the {@link DummyClass} to be initialized before {@link
     * org.geotools.util.factory.Hints}. This is not a problem for normal execution, but Maven seems
     * to mess with class loaders.
     *
     * @param creator {@code true} if the registry should be an instance of {@link
     *     org.geotools.util.factory.FactoryCreator}.
     */
    private FactoryRegistry getRegistry(
            final boolean creator,
            final Factory factory1,
            final Factory factory2,
            final Factory factory3) {
        @SuppressWarnings("unchecked")
        final Set<Class<?>> categories = (Set) Collections.singleton(DummyFactory.class);
        // The above line fails without the cast, I don't know why...
        final FactoryRegistry registry;
        if (creator) {
            registry = new FactoryCreator(categories);
        } else {
            registry = new FactoryRegistry(categories);
        }
        registry.registerFactory(factory1);
        registry.registerFactory(factory2);
        registry.registerFactory(factory3);
        assertTrue(
                registry.setOrdering(
                        DummyFactory.class, (DummyFactory) factory1, (DummyFactory) factory2));
        assertTrue(
                registry.setOrdering(
                        DummyFactory.class, (DummyFactory) factory2, (DummyFactory) factory3));
        assertTrue(
                registry.setOrdering(
                        DummyFactory.class, (DummyFactory) factory1, (DummyFactory) factory3));

        final List<?> factories =
                registry.getFactories(DummyFactory.class, null, null).collect(toList());
        assertTrue(factories.contains(factory1));
        assertTrue(factories.contains(factory2));
        assertTrue(factories.contains(factory3));
        assertTrue(factories.indexOf(factory1) < factories.indexOf(factory2));
        assertTrue(factories.indexOf(factory2) < factories.indexOf(factory3));
        return registry;
    }

