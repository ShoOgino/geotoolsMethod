    /**
     * Constructs a B-spline curve. If the {@code knotSpec} is {@code null}, then the {@link
     * KnotType} is uniform and the knots are evenly spaced, and except for the first and last have
     * multiplicity = 1. At the ends the knots are of multiplicity = {@code degree}+1. If the {@code
     * knotType} is uniform they need not be specified.
     *
     * <p><strong>NOTE:</strong> If the B-spline curve is uniform and degree = 1, the B-spline is
     * equivalent to a polyline ({@link LineString}). If the {@code knotType} is {@linkplain
     * KnotType#PIECEWISE_BEZIER piecewise Bezier}, then the knots are defaulted so that they are
     * evenly spaced, and except for the first and last have multiplicity equal to degree. At the
     * ends the knots are of multiplicity = {@code degree}+1.
     *
     * @param degree The algebraic degree of the basis functions.
     * @param points An array of points that are used in the interpolation in this spline curve.
     * @param knots The sequence of distinct knots used to define the spline basis functions.
     * @param knotSpec The type of knot distribution used in defining this spline.
     * @throws MismatchedReferenceSystemException If geometric objects given in argument don't use
     *     compatible {@linkplain CoordinateReferenceSystem coordinate reference system}.
     * @throws MismatchedDimensionException If geometric objects given in argument don't have the
     *     expected dimension.
     */
    @UML(
        identifier = "GM_BSplineCurve(Integer,GM_PointArray,Sequence<GM_Knot>,GM_KnotType)",
        obligation = MANDATORY,
        specification = ISO_19107
    )
    BSplineCurve createBSplineCurve(
            int degree, PointArray points, List<Knot> knots, KnotType knotSpec)
            throws MismatchedReferenceSystemException, MismatchedDimensionException;

