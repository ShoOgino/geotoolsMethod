    /**
     * Indicates ability of XPath to notice this attribute.
     * <p>
     * This facility is used to "hide" an attribute from XPath searches, while the compelx contents will still
     * be navigated no additional nesting will be considered. It will be as if the content were "folded" inline
     * resulting in a flatter nesting structure.
     * </p>
     * <p>
     * Construct described using Java Interfaces:<pre><code>
     * interface TestSample {
     *     String name;
     *     List<Measurement> measurement;
     * }
     * interface Measurement {
     *     long timestamp;
     *     Point point;
     *     long reading;
     * }
     * </code></pre>
     * The above is can hold the following information:<pre><code>
     * [ name="survey1",
     *   measurements=(
     *       [timestamp=3,point=(2,3), reading=4200],
     *       [timestamp=9,point=(2,4), reading=445600],
     *   )
     * ]
     * </code></pre>
     * Out of the box this is represented to XPath as the following tree:<pre><code>
     * root/name: survey1
     * root/measurement[0]/timestamp:3
     * root/measurement[0]/point: (2,3)
     * root/measurement[0]/reading: 4200
     * root/measurement[1]/timestamp:9
     * root/measurement[2]/point: (2,4)
     * root/measurement[3]/reading: 445600
     * </code></pre>
     *
     * By inlining Measurement we can achive the following:<pre><code>
     * root/name: survey1
     * root/timestamp[0]:3
     * root/point[0]: (2,3)
     * root/reading[0]: 4200
     * root/timestamp[1]:9
     * root/point[1]: (2,4)
     * root/reading[1] 445600
     * </code></pre>
     *
     * @return true if  attribute is to be considered transparent by XPath queries
     */
    boolean isInline();

