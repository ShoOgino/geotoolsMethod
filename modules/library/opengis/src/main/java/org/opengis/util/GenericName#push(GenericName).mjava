    /**
     * Returns this name expanded with the specified scope. One may represent this operation as a
     * concatenation of the specified {@code scope} with {@code this}. In pseudo-code, the following
     * relationships must hold (the last one is specific to {@link ScopedName}):
     *
     * <p>
     *
     * <ul>
     *   <li><code>push(</code><var>foo</var><code> : LocalName).{@linkplain #head}</code>
     *       {@linkplain #equals equals} <var>foo</var>
     *   <li><code>push(</code><var>foo</var><code> : LocalName).{@linkplain ScopedName#tail tail()}
     *       </code> {@linkplain #equals equals} <var>this</var>
     *   <li><code>push(</code><var>foo</var><code> : GenericName).{@linkplain #scope}</code>
     *       {@linkplain #equals equals} <var>foo</var>.{@link #scope()}
     *   <li><code>push(</code><var>foo</var><code> : GenericName).{@linkplain #getParsedNames}
     *       </code> {@linkplain List#equals equals} <var>foo</var>.<code>
     *       getParsedNames().{@linkplain
     *       List#addAll addAll}(</code><var>this</var>.<code>getParsedNames())</code>
     * </ul>
     *
     * <p>This method is similar in purpose to <code>
     * {@linkplain javax.naming.Name#addAll(int,javax.naming.Name)
     * Name.addAll}(0,name)</code> from the <cite>Java Naming and Directory Interface</cite>.
     *
     * <p><b>Example</b>: If {@code this} name is {@code "util.Record"} and the given {@code scope}
     * argument is {@code "org.opengis"}, then {@code this.push(scope)} shall returns {@code
     * "org.opengis.util.Record"}.
     *
     * @param scope The name to use as prefix.
     * @return A concatenation of the given name with this name.
     * @since GeoAPI 2.1
     */
    @UML(identifier = "push", obligation = MANDATORY, specification = ISO_19103)
    ScopedName push(GenericName scope);

