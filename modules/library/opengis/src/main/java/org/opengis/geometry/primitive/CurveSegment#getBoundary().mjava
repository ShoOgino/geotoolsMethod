    /**
     * Returns an ordered pair of points, which are the start point and end point of the curve.
     * This method operates with the same semantics as that on {@linkplain Curve#getBoundary curve}
     * except that the end points of a {@code CurveSegment} are not necessarily existing
     * {@linkplain Point points} and thus the boundary may contain transient {@linkplain Point points}.
     *
     * <blockquote><font size=2>
     * <strong>NOTE:</strong> The above {@linkplain CurveBoundary curve boundary} will almost always
     * be two distinct positions, but, like {@linkplain Curve curves}, {@code CurveSegment}s can
     * be cycles in themselves. The most likely scenario is that all of the points used will be transients
     * (constructed to support the return value), except for the start point and end point of the aggregated
     * {@linkplain Curve curve}. These two positions, in the case where the {@linkplain Curve curve} is
     * involved in a {@linkplain org.opengis.geometry.complex.Complex complex}, will be represented as
     * {@linkplain Point points} in the same {@linkplain org.opengis.geometry.complex.Complex complex}.
     * </font></blockquote>
     *
     * @return The sets of positions on the boundary.
     */
    @UML(identifier="boundary", obligation=MANDATORY, specification=ISO_19107)
    CurveBoundary getBoundary();

