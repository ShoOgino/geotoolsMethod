    /**
     * Returns the distance between this {@code Geometry} and another {@code Geometry}. This
     * distance is defined to be the greatest lower bound of the set of distances between all pairs
     * of points that include one each from each of the two {@code Geometry}s. A "distance" value
     * shall be a positive number associated to a distance unit such as meter or standard foot. If
     * necessary, the second geometric object shall be transformed into the same coordinate
     * reference system as the first before the distance is calculated.
     *
     * <p>If the geometric objects overlap, or touch, then their distance apart shall be zero. Some
     * current implementations use a "negative" distance for such cases, but the approach is neither
     * consistent between implementations, nor theoretically viable.
     *
     * <p><strong>NOTE:</strong> The role of the reference system in distance calculations is
     * important. Generally, there are at least three types of distances that may be defined between
     * points (and therefore between geometric objects): map distance, geodesic distance, and
     * terrain distance.
     *
     * <ul>
     *   <li>Map distance is the distance between the points as defined by their positions in a
     *       coordinate projection (such as on a map when scale is taken into account). Map distance
     *       is usually accurate for small areas where scale functions have well-behaved
     *       derivatives.
     *   <li>Geodesic distance is the length of the shortest curve between those two points along
     *       the surface of the earth model being used by the coordinate reference system. Geodesic
     *       distance behaves well for wide areas of coverage, and takes the earth's curvature into
     *       account. It is especially handy for air and sea navigation, although care should be
     *       taken to distinguish between rhumb line (curves of constant bearing) and geodesic curve
     *       distance.
     *   <li>Terrain distance takes into account the local vertical displacements (hypsography).
     *       Terrain distance can be based either on a geodesic distance or a map distance.
     * </ul>
     *
     * @param geometry The other object.
     * @return The distance between the two objects.
     * @unitof Distance
     * @since GeoAPI 2.1
     * @see #getBoundary
     * @see #getBuffer
     * @see org.opengis.referencing.cs.CoordinateSystem#getAxis
     */
    @UML(identifier = "distance", obligation = MANDATORY, specification = ISO_19107)
    double distance(Geometry geometry);

