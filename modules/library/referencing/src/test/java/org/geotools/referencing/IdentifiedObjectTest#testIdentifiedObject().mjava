    /** Test {@link IdentifiedObject}. */
    @Test
    public void testIdentifiedObject() {
        final Map<String, Object> properties = new HashMap<String, Object>();
        assertNull(properties.put("name", "This is a name"));
        assertNull(properties.put("remarks", "There is remarks"));
        assertNull(properties.put("remarks_fr", "Voici des remarques"));
        assertNull(properties.put("dummy", "Doesn't matter"));
        assertNull(properties.put("dummy_fr", "Rien d'intéressant"));
        assertNull(properties.put("local", "A custom localized string"));
        assertNull(properties.put("local_fr", "Une chaîne personalisée"));
        assertNull(properties.put("anchorPoint", "Anchor point"));
        assertNull(properties.put("realizationEpoch", "Realization epoch"));
        assertNull(properties.put("validArea", "Valid area"));

        final Map<String, Object> remaining = new HashMap<String, Object>();
        final AbstractIdentifiedObject reference =
                new AbstractIdentifiedObject(properties, remaining, new String[] {"local"});
        assertEquals("name", "This is a name", reference.getName().getCode());
        assertEquals("remarks", "There is remarks", reference.getRemarks().toString(null));
        assertEquals(
                "remarks_fr",
                "Voici des remarques",
                reference.getRemarks().toString(Locale.FRENCH));

        // Check extra properties
        assertEquals("Size:", 6, remaining.size());
        assertEquals("dummy", "Doesn't matter", remaining.get("dummy"));
        assertEquals("dummy_fr", "Rien d'intéressant", remaining.get("dummy_fr"));
        assertEquals(
                "local",
                "A custom localized string",
                ((InternationalString) remaining.get("local")).toString(null));
        assertEquals(
                "local_fr",
                "Une chaîne personalisée",
                ((InternationalString) remaining.get("local")).toString(Locale.FRENCH));
        assertFalse("local_fr", remaining.containsKey("local_fr"));

        // Check the case of some special property keys
        assertEquals("anchorPoint", "Anchor point", remaining.get("anchorPoint"));
        assertEquals("realizationEpoch", "Realization epoch", remaining.get("realizationEpoch"));
        assertEquals("validArea", "Valid area", remaining.get("validArea"));
    }

