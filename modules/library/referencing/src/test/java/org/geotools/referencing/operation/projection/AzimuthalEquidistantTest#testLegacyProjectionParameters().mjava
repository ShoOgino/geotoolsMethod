    @Test
    public void testLegacyProjectionParameters() throws Exception {
        CoordinateReferenceSystem azeq =
                CRS.parseWKT(
                        "PROJCS[\"Azeq test\", GEOGCS[\"WGS 84\", "
                                + "DATUM[\"World Geodetic System 1984\", "
                                + "SPHEROID[\"WGS 84\", 6378137.0, 298.257223563, "
                                + "AUTHORITY[\"EPSG\",\"7030\"]], "
                                + "AUTHORITY[\"EPSG\",\"6326\"]], "
                                + "PRIMEM[\"Greenwich\", 0.0, "
                                + "AUTHORITY[\"EPSG\",\"8901\"]], "
                                + "UNIT[\"degree\", 0.017453292519943295], "
                                + "AUTHORITY[\"EPSG\",\"4326\"]], "
                                + "PROJECTION[\"Azimuthal Equidistant\"], "
                                + "PARAMETER[\"latitude_of_origin\", 42.56], "
                                + "PARAMETER[\"longitude_of_origin\", -71.43], "
                                + "PARAMETER[\"scale_factor\", 1.0], "
                                + "PARAMETER[\"false_easting\", 0.0], "
                                + "PARAMETER[\"false_northing\", 0.0], "
                                + "UNIT[\"m\", 1.0],  AUTHORITY[\"EPSG\",\"741002\"]]");

        MathTransform transform = CRS.findMathTransform(azeq, DefaultGeographicCRS.WGS84);
        Point2D out = doTransform(transform, new Point2D.Double(0, 0));
        assertEquals(-71.43, out.getX(), 0.0001);
        assertEquals(42.56, out.getY(), 0.0001);

        Point2D out2 = doTransform(transform.inverse(), out);
        assertEquals(0, out2.getX(), 0.0001);
        assertEquals(0, out2.getY(), 0.0001);

        Point2D point = doTransform(transform.inverse(), new Point2D.Double(20, 60));
        assertEquals(3740188.0147449127, point.getX(), 0.0001);
        assertEquals(4831302.159548063, point.getY(), 0.0001);

        // transform object should be serializable
        byte[] serialized = SerializationUtils.serialize((java.io.Serializable) transform);
        MathTransform trans2 = SerializationUtils.deserialize(serialized);
        Point2D point2 = doTransform(trans2.inverse(), new Point2D.Double(20, 60));
        assertEquals(3740188.0147449127, point2.getX(), 0.0001);
        assertEquals(4831302.159548063, point2.getY(), 0.0001);
    }

