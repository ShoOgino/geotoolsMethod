    /**
     * Run the test in the flipped or unflipped case.
     *
     * @param f -1 for the flipped case, or +1 for the unflipped case.
     */
    private static void runTest(final int f) {
        // Test identity
        final AffineTransform tr = new AffineTransform();
        tr.setToScale(1, f);
        assertEquals( 1, XAffineTransform.getScaleX0 (tr), EPS);
        assertEquals( 1, XAffineTransform.getScaleY0 (tr), EPS);
        assertEquals( 0, XAffineTransform.getRotation(tr), EPS);
        assertEquals( 1, XAffineTransform.getSwapXY  (tr));
        assertEquals( f, XAffineTransform.getFlip    (tr));
        assertEquals( f, getFlipFromType             (tr));

        // Tests rotation (< 45°)
        double r = Math.toRadians(25);
        tr.rotate(r);
        assertEquals( 1, XAffineTransform.getScaleX0 (tr), EPS);
        assertEquals( 1, XAffineTransform.getScaleY0 (tr), EPS);
        assertEquals( r, XAffineTransform.getRotation(tr), EPS);
        assertEquals( 1, XAffineTransform.getSwapXY  (tr));
        assertEquals( f, XAffineTransform.getFlip    (tr));
        assertEquals( f, getFlipFromType             (tr));

        // Tests more rotation (> 45°)
        r = Math.toRadians(65);
        tr.rotate(Math.toRadians(40));
        assertEquals( 1, XAffineTransform.getScaleX0 (tr), EPS);
        assertEquals( 1, XAffineTransform.getScaleY0 (tr), EPS);
        assertEquals( r, XAffineTransform.getRotation(tr), EPS);
        assertEquals(-1, XAffineTransform.getSwapXY  (tr));
        assertEquals( f, XAffineTransform.getFlip    (tr));
        assertEquals( f, getFlipFromType             (tr));

        // Tests scale
        tr.setToScale(2, 3*f);
        assertEquals( 2, XAffineTransform.getScaleX0 (tr), EPS);
        assertEquals( 3, XAffineTransform.getScaleY0 (tr), EPS);
        assertEquals( 0, XAffineTransform.getRotation(tr), EPS);
        assertEquals( 1, XAffineTransform.getSwapXY  (tr));
        assertEquals( f, XAffineTransform.getFlip    (tr));
        assertEquals( f, getFlipFromType             (tr));

        // Tests rotation + scale
        tr.rotate(r);
        assertEquals( 2, XAffineTransform.getScaleX0 (tr), EPS);
        assertEquals( 3, XAffineTransform.getScaleY0 (tr), EPS);
        assertEquals( r, XAffineTransform.getRotation(tr), EPS);
        assertEquals(-1, XAffineTransform.getSwapXY  (tr));
        assertEquals( f, XAffineTransform.getFlip    (tr));
        assertEquals( 1, getFlipFromType(tr)); // Always unflipped according Java 1.5.0_09...

        // Tests axis swapping
        r = Math.toRadians(-90 * f);
        tr.setTransform(0, 1, f, 0, 0, 0);
        assertEquals( 1, XAffineTransform.getScaleX0 (tr), EPS);
        assertEquals( 1, XAffineTransform.getScaleY0 (tr), EPS);
        assertEquals( r, XAffineTransform.getRotation(tr), EPS);
        assertEquals(-1, XAffineTransform.getSwapXY  (tr));
        assertEquals(-f, XAffineTransform.getFlip    (tr));
        assertEquals(-f, getFlipFromType             (tr));

        // Tests axis swapping + scale
        tr.scale(2, 3);
        assertEquals( 3, XAffineTransform.getScaleX0 (tr), EPS);
        assertEquals( 2, XAffineTransform.getScaleY0 (tr), EPS);
        assertEquals( r, XAffineTransform.getRotation(tr), EPS);
        assertEquals(-1, XAffineTransform.getSwapXY  (tr));
        assertEquals(-f, XAffineTransform.getFlip    (tr));
        assertEquals(-f, getFlipFromType             (tr));
    }

