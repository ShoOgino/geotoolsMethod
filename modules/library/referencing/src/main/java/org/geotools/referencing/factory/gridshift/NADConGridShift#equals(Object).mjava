    /**
     * Compares the specified object with this math transform for equality.
     *
     * @param object the object to compare to
     * @return {@code true} if the objects are equal.
     */
    @Override
    public final boolean equals(final Object object) {
        if (object == this) {
            // Slight optimization
            return true;
        }

        if (super.equals(object)) {
            final NADConGridShift that = (NADConGridShift) object;

            return (Double.doubleToLongBits(this.minX) == Double.doubleToLongBits(that.minX))
                    && (Double.doubleToLongBits(this.minY) == Double.doubleToLongBits(that.minY))
                    && (Double.doubleToLongBits(this.maxX) == Double.doubleToLongBits(that.maxX))
                    && (Double.doubleToLongBits(this.maxY) == Double.doubleToLongBits(that.maxY))
                    && (Double.doubleToLongBits(this.dx) == Double.doubleToLongBits(that.dx))
                    && (Double.doubleToLongBits(this.dy) == Double.doubleToLongBits(that.dy));
        }

        return false;
    }

