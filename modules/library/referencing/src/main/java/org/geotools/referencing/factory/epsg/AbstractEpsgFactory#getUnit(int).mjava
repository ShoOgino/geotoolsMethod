    //////////////////////////////////////////////////////////////////////////////////////////////
    //////                                                                                 ///////
    //////   HARD CODED VALUES (other than SQL statements) RELATIVE TO THE EPSG DATABASE   ///////
    //////                                                                                 ///////
    //////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Returns a hard-coded unit from an EPSG code. We do not need to provide all units here, but we
     * must at least provide all base units declared in the [TARGET_UOM_CODE] column of table [Unit
     * of Measure]. Other units will be derived automatically if they are not listed here.
     *
     * @param code The code.
     * @return The unit, or {@code null} if the code is unrecognized.
     */
    private static Unit<?> getUnit(final int code) {
        switch (code) {
            case 9001:
                return METRE;
            case 9002:
                return FOOT;
            case 9030:
                return NAUTICAL_MILE;
            case 9036:
                return KILOMETER;
            case 9101:
                return RADIAN;
            case 9122: // Fall through
            case 9102:
                return DEGREE_ANGLE;
            case 9103:
                return MINUTE_ANGLE;
            case 9104:
                return SECOND_ANGLE;
            case 9105:
                return GRADE;
            case 9107:
                return DEGREE_MINUTE_SECOND;
            case 9108:
                return DEGREE_MINUTE_SECOND;
            case 9109:
                return MICRORADIAN;
            case 9110:
                return SEXAGESIMAL_DMS;
                // TODO case 9111: return NonSI.SEXAGESIMAL_DM;
            case 9203: // Fall through
            case 9201:
                return ONE;
            case 9202:
                return PPM;
            default:
                return null;
        }
    }

