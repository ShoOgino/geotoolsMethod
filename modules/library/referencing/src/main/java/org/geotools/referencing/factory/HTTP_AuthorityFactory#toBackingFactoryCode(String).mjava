    /**
     * Removes the URL base ({@value #BASE_URL}) from the specified code
     * before to pass it to the wrapped factories.
     *
     * @param  code The code given to this factory.
     * @return The code to give to the underlying factories.
     * @throws FactoryException if the code can't be converted.
     */
    @Override
    protected String toBackingFactoryCode(String code) throws FactoryException {
        code = code.trim();
        final int length = BASE_URL.length();
        if (code.regionMatches(true, 0, BASE_URL, 0, length)) {
            code = code.substring(length);
            if (code.indexOf('/') < 0) {
                final int split = code.indexOf('#');
                if (split >= 0 && code.indexOf('#', split+1) < 0) {
                    String authority = code.substring(0, split).trim();
                    final int ext = authority.lastIndexOf('.');
                    if (ext > 0) {
                        // Removes the extension part (typically ".xml")
                        authority = authority.substring(0, ext);
                    }
                    code = code.substring(split + 1).trim();
                    code = authority + GenericName.DEFAULT_SEPARATOR + code;
                    return code;
                }
            }
        }
        throw new NoSuchAuthorityCodeException(Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$2,
                "code", code), BASE_URL, code);
    }

