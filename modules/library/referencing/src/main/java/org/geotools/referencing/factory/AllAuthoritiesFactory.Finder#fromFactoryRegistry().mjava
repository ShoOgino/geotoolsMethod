        /** Returns all factories to try. */
        private Set<AuthorityFactory> fromFactoryRegistry() {
            final ManyAuthoritiesFactory factory =
                    (ManyAuthoritiesFactory) getProxy().getAuthorityFactory();
            @SuppressWarnings("unchecked")
            final Class<? extends AuthorityFactory> type =
                    (Class<? extends AuthorityFactory>) getProxy().getType();
            final Set<AuthorityFactory> factories = new LinkedHashSet<>();
            for (final String authority : ReferencingFactoryFinder.getAuthorityNames()) {
                factory.fromFactoryRegistry(authority, type, factories);
            }
            // Removes the factories already tried by super-class.
            final Collection<AuthorityFactory> done = getFactories();
            if (done != null) {
                factories.removeAll(done);
            }
            return factories;
        }

