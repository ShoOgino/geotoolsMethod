    /**
     * Put the identifiers into a properties map suitable for {@link IdentifiedObject} constructor.
     */
    protected static Map<String, Object> toMap(final ReferenceIdentifier[] identifiers) {
        ensureNonNull("identifiers", identifiers);
        if (identifiers.length == 0) {
            throw new IllegalArgumentException(Errors.format(ErrorKeys.EMPTY_ARRAY));
        }
        int idCount = 0;
        int aliasCount = 0;
        ReferenceIdentifier[] id = new ReferenceIdentifier[identifiers.length];
        GenericName[] alias = new GenericName[identifiers.length];
        for (int i = 0; i < identifiers.length; i++) {
            final ReferenceIdentifier candidate = identifiers[i];
            if (candidate instanceof GenericName) {
                alias[aliasCount++] = (GenericName) candidate;
            } else {
                id[idCount++] = candidate;
            }
        }
        id = XArray.resize(id, idCount);
        alias = XArray.resize(alias, aliasCount);
        final Map<String, Object> properties = new HashMap<>(4, 0.8f);
        properties.put(NAME_KEY, identifiers[0]);
        properties.put(IDENTIFIERS_KEY, id);
        properties.put(ALIAS_KEY, alias);
        return properties;
    }

