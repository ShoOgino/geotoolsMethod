    /**
     * Affiche la position du soleil à la date et coordonnées spécifiée. Cette application peut être
     * lancée avec la syntaxe suivante:
     *
     * <pre>SunRelativePosition <var>[longitude]</var> <var>[latitude]</var> <var>[date]</var></pre>
     *
     * où <var>date</var> est un argument optionel spécifiant la date et l'heure. Si cet argument
     * est omis, la date et heure actuelles seront utilisées.
     */
    @SuppressWarnings("PMD.SystemPrintln")
    public static void main(final String[] args) throws ParseException {
        final DateFormat format =
                DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT);
        format.setTimeZone(TimeZone.getTimeZone("UTC"));
        double longitude = 0;
        double latitude = 0;
        Date time = new Date();
        switch (args.length) {
            case 3:
                time = format.parse(args[2]); // fall through
            case 2:
                latitude = Double.parseDouble(args[1]); // fall through
            case 1:
                longitude = Double.parseDouble(args[0]); // fall through
        }
        final SunRelativePosition calculator = new SunRelativePosition();
        calculator.setDate(time);
        calculator.setCoordinate(longitude, latitude);
        System.out.print("Date (UTC): ");
        System.out.println(format.format(time));
        System.out.print("Longitude:  ");
        System.out.println(longitude);
        System.out.print("Latitude:   ");
        System.out.println(latitude);
        System.out.print("Elevation:  ");
        System.out.println(calculator.getElevation());
        System.out.print("Azimuth:    ");
        System.out.println(calculator.getAzimuth());
        System.out.print("Noon date:  ");
        System.out.println(format.format(calculator.getNoonDate()));
    }

