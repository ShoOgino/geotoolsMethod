    /**
     * Determines the axis ordering of a specified crs object.
     * <p>
     * If called with a projected crs object the base crs will be used for the axis 
     * order determination.
     * </p>
     * @param crs The coordinate reference system.
     * 
     * @return One of {@link AxisOrder#LON_LAT}, {@link AxisOrder@LAT_LON}, or 
     *  {@link AxisOrder#INAPPLICABLE}
     * 
     * @see AxisOrder
     * @since 2.7
     */
    public static AxisOrder getAxisOrder(CoordinateReferenceSystem crs) {
        CoordinateSystem cs = null;

        if (crs instanceof ProjectedCRS) {
            ProjectedCRS pcrs = (ProjectedCRS) crs;
            cs = pcrs.getBaseCRS().getCoordinateSystem();
        } else if (crs instanceof GeographicCRS) {
            cs = crs.getCoordinateSystem();
        } else {
            return AxisOrder.INAPPLICABLE;
        }

        int dimension = cs.getDimension();
        int longitudeDim = -1;
        int latitudeDim = -1;

        for (int i = 0; i < dimension; i++) {
            AxisDirection dir = cs.getAxis(i).getDirection().absolute();

            if (dir.equals(AxisDirection.EAST)) {
                longitudeDim = i;
            }

            if (dir.equals(AxisDirection.NORTH)) {
                latitudeDim = i;
            }
        }

        if ((longitudeDim >= 0) && (latitudeDim >= 0)) {
            if (longitudeDim < latitudeDim) {
                return AxisOrder.LON_LAT;
            } else {
                return AxisOrder.LAT_LON;
            }
        }

        return AxisOrder.INAPPLICABLE;
    }

