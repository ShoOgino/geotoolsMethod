    /**
     * Concatenate two operation steps. If an operation is an {@link #AXIS_CHANGES}, it will be
     * included as part of the second operation instead of creating an {@link
     * ConcatenatedOperation}. If a concatenated operation is created, it will get an automatically
     * generated name.
     *
     * @param candidatesStep1 The first step, or {@code null} for the identity operation.
     * @param candidatesStep2 The second step, or {@code null} for the identity operation.
     * @return A concatenated operation, or {@code null} if all arguments was nul.
     * @throws FactoryException if the operation can't be constructed.
     */
    protected Set<CoordinateOperation> concatenate(
            final Set<CoordinateOperation> candidatesStep1,
            final Set<CoordinateOperation> candidatesStep2)
            throws FactoryException {
        HashSet<CoordinateOperation> result = new HashSet<CoordinateOperation>();
        for (CoordinateOperation step1 : candidatesStep1) {
            for (CoordinateOperation step2 : candidatesStep2) {
                result.add(concatenate(step1, step2));
            }
        }
        return result;
    }

