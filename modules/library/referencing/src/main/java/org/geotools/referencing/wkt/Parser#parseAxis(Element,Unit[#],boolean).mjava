    /**
     * Parses an "AXIS" element.
     * This element has the following pattern:
     *
     * <blockquote><code>
     * AXIS["<name>", NORTH | SOUTH | EAST | WEST | UP | DOWN | OTHER]
     * </code></blockquote>
     *
     * Note: there is no AUTHORITY element for AXIS element in OGC specification. However, we
     *       accept it anyway in order to make the parser more tolerant to non-100% compliant
     *       WKT. Note that AXIS is really the only element without such AUTHORITY clause and
     *       the EPSG database provides authority code for all axis.
     *
     * @param  parent The parent element.
     * @param  unit The contextual unit. Usually {@link NonSI#DEGREE_ANGLE} or {@link SI#METRE}.
     * @param  required {@code true} if the axis is mandatory,
     *         or {@code false} if it is optional.
     * @return The "AXIS" element as a {@link CoordinateSystemAxis} object, or {@code null}
     *         if the axis was not required and there is no axis object.
     * @throws ParseException if the "AXIS" element can't be parsed.
     */
    private CoordinateSystemAxis parseAxis(final Element parent,
                                           final Unit<?> unit,
                                           final boolean required)
            throws ParseException
    {
        final Element element;
        if (required) {
            element = parent.pullElement("AXIS");
        } else {
            element = parent.pullOptionalElement("AXIS");
            if (element == null) {
                return null;
            }
        }
        final String  name        = element.pullString     ("name");
        final Element orientation = element.pullOptionalVoidElement();
        final AxisDirection direction;
        if(orientation != null) {
            direction = directions.get(orientation.keyword.trim().toUpperCase());
        } else {
            String directionName = element.pullString("orientation");
            direction = DirectionAlongMeridian.parse(directionName).getDirection();
        }
        final Map<String,?> properties = parseAuthority(element, name); // See javadoc
        element.close();
        
        if (direction == null) {
            throw element.parseFailed(null, Errors.format(ErrorKeys.UNKNOW_TYPE_$1, orientation));
        }
        try {
            return createAxis(properties, name, direction, unit);
        } catch (FactoryException exception) {
            throw element.parseFailed(exception, null);
        }
    }

