    /**
     * Constructs a parameter descriptor from a set of alias. The parameter is identified by codes
     * provided by one or more authorities. Common authorities are {@link Citations#OGC OGC} and
     * {@link Citations#EPSG EPSG} for example.
     *
     * <p>The first entry in the {@code identifiers} array is both the {@linkplain
     * ParameterDescriptor#getName main name} and the {@linkplain ParameterDescriptor#getIdentifiers
     * identifiers}. All others are {@linkplain ParameterDescriptor#getAlias aliases}.
     *
     * @param identifiers The parameter identifiers. Most contains at least one entry.
     * @param defaultValue The default value for the parameter, or {@link Double#NaN} if none.
     * @param minimum The minimum parameter value, or {@link Double#NEGATIVE_INFINITY} if none.
     * @param maximum The maximum parameter value, or {@link Double#POSITIVE_INFINITY} if none.
     * @param unit The unit for default, minimum and maximum values.
     * @return The descriptor for the given identifiers.
     */
    protected static ParameterDescriptor<Double> createDescriptor(
            final ReferenceIdentifier[] identifiers,
            final double defaultValue,
            final double minimum,
            final double maximum,
            final Unit<?> unit) {
        return DefaultParameterDescriptor.create(
                toMap(identifiers), defaultValue, minimum, maximum, unit, true);
    }

