    /**
     * Creates a new matrix initialized to the same value than the specified one. The specified
     * matrix size must be {@value #SIZE}&times;{@value #SIZE}.
     */
    public AffineTransform2D(final Matrix matrix) {
        if (matrix.getNumRow() != SIZE || matrix.getNumCol() != SIZE) {
            throw new IllegalArgumentException(Errors.format(ErrorKeys.ILLEGAL_MATRIX_SIZE));
        }
        for (int i = 0; i < SIZE; i++) {
            checkLastRow(i, matrix.getElement(SIZE - 1, i));
        }
        int c = 0;
        final double[] values = new double[6];
        for (int j = 0; j < SIZE - 1; j++) {
            for (int i = 0; i < SIZE; i++) {
                values[c++] = matrix.getElement(j, i);
            }
        }
        assert c == values.length : c;
        // TODO: invokes the super constructor instead if Sun fixes RFE #4093999
        setTransform(values);
    }

