    /**
     * Parses the specified text. The default implementation delegates the work to the {@linkplain
     * #parser}.
     *
     * @param text The text, as a name, a WKT to parse, or an authority code.
     * @param type The expected type for the object to be parsed (usually a <code>
     *     {@linkplain CoordinateReferenceSystem}.class</code> or <code>
     *     {@linkplain MathTransform}.class</code>).
     * @return The object.
     * @throws ParseException if parsing the specified WKT failed.
     * @throws FactoryException if the object is not of the expected type.
     */
    public Object parseObject(final String text, final Class type)
            throws ParseException, FactoryException {
        if (parser instanceof Preprocessor) {
            final Preprocessor parser = (Preprocessor) this.parser;
            parser.offset = (line != null) ? Math.max(0, line.indexOf(text)) : 0;
            return parser.parseObject(text, type);
        } else {
            return parser.parseObject(text);
        }
    }

