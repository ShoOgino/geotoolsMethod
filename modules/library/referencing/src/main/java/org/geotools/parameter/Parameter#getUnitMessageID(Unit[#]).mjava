    /**
     * Returns the unit type as one of error message code. Used for checking unit with a better
     * error message formatting if needed.
     *
     * <p>Note: It is difficult to differentiate scale and angular units, since both of them are
     * dimensionless. However, in EPSG database version 6.7, there is only 3 scale units and all of
     * them maps to {@link AbstractUnit#ONE} or {@link Units#PPM}. Consequently, they are hard-coded
     * and treated especially by this method.
     *
     * @todo Provides a better way to differentiate scale units (currently AbstractUnit.ONE) and
     *     angular units. Both are dimensionless...
     */
    static int getUnitMessageID(final Unit<?> unit) {
        // Note: ONE must be tested before RADIAN.
        if (AbstractUnit.ONE.isCompatible(unit) || Units.PPM.equals(unit))
            return ErrorKeys.NON_SCALE_UNIT_$1;
        if (SI.METRE.isCompatible(unit)) return ErrorKeys.NON_LINEAR_UNIT_$1;
        if (SI.SECOND.isCompatible(unit)) return ErrorKeys.NON_TEMPORAL_UNIT_$1;
        if (SI.RADIAN.isCompatible(unit)) return ErrorKeys.NON_ANGULAR_UNIT_$1;
        return ErrorKeys.INCOMPATIBLE_UNIT_$1;
    }

