    /**
     * Replaces the {@code "epsg_"} prefix by the specified schema name. If the removal of the
     * {@code "epsg_"} prefix is not wanted, append it to the schema name (e.g. {@code
     * "myschema.epsg_"}). This method should be invoked at construction time only.
     *
     * @param schema The database schema in which the epsg tables are stored.
     * @since 2.2
     */
    public void setSchema(String schema) {
        schema = schema.trim();
        final int length = schema.length();
        if (length == 0) {
            throw new IllegalArgumentException(schema);
        }
        final char separator = schema.charAt(length - 1);
        if (separator != '.' && separator != '_') {
            schema += '.';
        } else if (length == 1) {
            throw new IllegalArgumentException(schema);
        }
        for (final Iterator<Map.Entry<String, String>> it = map.entrySet().iterator();
                it.hasNext(); ) {
            final Map.Entry<String, String> entry = it.next();
            final String tableName = entry.getValue();
            /**
             * Update the map, prepending the schema name to the table name so long as the value is
             * a table name and not a field. This algorithm assumes that all old table names start
             * with "epsg_".
             */
            if (tableName.startsWith(prefix)) {
                entry.setValue(schema + tableName.substring(prefix.length()));
            }
        }
        prefix = schema;
    }

