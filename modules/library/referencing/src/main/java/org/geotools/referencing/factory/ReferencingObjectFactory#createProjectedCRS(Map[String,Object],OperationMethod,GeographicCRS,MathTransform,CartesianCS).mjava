    /**
     * Creates a projected coordinate reference system from a transform.
     *
     * <p><b>NOTE:</b> It is the user's responsability to ensure that the {@code baseToDerived}
     * transform performs all required steps, including {@linkplain AbstractCS#swapAndScaleAxis unit
     * conversions and change of axis order}, if needed. The {@link ReferencingFactoryContainer}
     * class provides conveniences methods for this task.
     *
     * @param properties Name and other properties to give to the new object.
     * @param method A description of the {@linkplain Conversion#getMethod method for the
     *     projection}.
     * @param base Geographic coordinate reference system to base projection on.
     * @param baseToDerived The transform from the geographic to the projected CRS.
     * @param derivedCS The coordinate system for the projected CRS.
     * @throws FactoryException if the object creation failed.
     */
    public ProjectedCRS createProjectedCRS(
            Map<String, Object> properties,
            OperationMethod method,
            GeographicCRS base,
            MathTransform baseToDerived,
            CartesianCS derivedCS)
            throws FactoryException {
        ProjectedCRS crs;
        try {
            crs = new DefaultProjectedCRS(properties, method, base, baseToDerived, derivedCS);
        } catch (IllegalArgumentException exception) {
            throw new FactoryException(exception);
        }
        crs = pool.unique(crs);
        return crs;
    }

