        /**
         * Maximal error tolerated for assertions in the spherical case. When assertions
         * are enabled, every projection using spherical formulas is followed by a projection
         * using the ellipsical formulas, and the results are compared. If a distance greater
         * than the tolerance level is found, then an {@link AssertionError} will be thrown.
         * Subclasses may override this method if they need to relax the tolerance level.
         * <p>
         * The default implementation allows a larger tolerance when comparing spherical to
         * elliptical calculations when we are far from the central meridian (elliptical
         * calculations are not valid here).
         *
         * @param  longitude The longitude standardized (in radians) with
         *         {@linkplain #centralMeridian} already removed from it.
         * @return The tolerance level for assertions, in meters.
         */
        protected double getToleranceForSphereAssertions(final double longitude) {
            if (abs(abs(longitude)- PI/2) < EPSILON_LATITUDE) {  // 90 degrees
                // elliptical equations are at their worst here
                return 1E+18;
            }
            if (abs(longitude) > 0.26) {   // 15 degrees
                // When far from the valid area, use a very larger tolerance.
                return 1E+6;
            }
            // a normal tolerance
            return 1E-6;
        }

