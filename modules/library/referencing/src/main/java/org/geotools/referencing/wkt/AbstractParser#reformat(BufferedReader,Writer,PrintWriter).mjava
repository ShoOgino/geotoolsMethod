    /**
     * Read WKT strings from an input stream and reformat them to the specified
     * output stream. WKT strings are read until the the end-of-stream, or until
     * an unparsable WKT has been hit. In this later case, an error message is
     * formatted to the specified error stream.
     *
     * @param  in  The input stream.
     * @param  out The output stream.
     * @param  err The error stream.
     * @throws IOException if an error occured while reading from the input stream
     *         or writting to the output stream.
     */
    public void reformat(final BufferedReader in, final Writer out, final PrintWriter err)
            throws IOException
    {
        final String lineSeparator = System.getProperty("line.separator", "\n");
        String line = null;
        try {
            while ((line=in.readLine()) != null) {
                if ((line=line.trim()).length() != 0) {
                    out.write(lineSeparator);
                    out.write(format(parseObject(line)));
                    out.write(lineSeparator);
                    out.write(lineSeparator);
                    out.flush();
                }
            }
        } catch (ParseException exception) {
            err.println(exception.getLocalizedMessage());
            if (line != null) {
                reportError(err, line, exception.getErrorOffset());
            }
        } catch (InvalidParameterValueException exception) {
            err.print(Errors.format(ErrorKeys.IN_$1, exception.getParameterName()));
            err.print(' ');
            err.println(exception.getLocalizedMessage());
        }
    }

