    /**
     * Creates an operation between a geographic and a vertical coordinate reference systems. The
     * default implementation accepts the conversion only if the geographic CRS is a tri dimensional
     * one and the vertical CRS is for {@linkplain VerticalDatumType#ELLIPSOIDAL height above the
     * ellipsoid}. More elaborated operation, like transformation from ellipsoidal to geoidal
     * height, should be implemented here.
     *
     * @param sourceCRS Input coordinate reference system.
     * @param targetCRS Output coordinate reference system.
     * @return A coordinate operation from {@code sourceCRS} to {@code targetCRS}.
     * @throws FactoryException If the operation can't be constructed.
     * @todo Implement GEOT-352 here.
     */
    protected CoordinateOperation createOperationStep(
            final GeographicCRS sourceCRS, final VerticalCRS targetCRS) throws FactoryException {
        if (VerticalDatumType.ELLIPSOIDAL.equals(targetCRS.getDatum().getVerticalDatumType())) {
            final Matrix matrix =
                    swapAndScaleAxis(
                            sourceCRS.getCoordinateSystem(), targetCRS.getCoordinateSystem());
            return createFromAffineTransform(AXIS_CHANGES, sourceCRS, targetCRS, matrix);
        }
        throw new OperationNotFoundException(getErrorMessage(sourceCRS, targetCRS));
    }

