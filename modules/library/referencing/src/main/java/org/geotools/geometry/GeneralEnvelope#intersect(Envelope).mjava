    /**
     * Sets this envelope to the intersection if this envelope with the specified one.
     * <p>
     * This method assumes that the specified envelope uses the same CRS than this envelope. For
     * performance reason, it will no be verified unless J2SE assertions are enabled.
     * 
     * @param envelope
     *            the {@code Envelope} to intersect to this envelope.
     * @throws MismatchedDimensionException
     *             if the specified envelope doesn't have the expected dimension.
     */
    public void intersect(final Envelope envelope) throws MismatchedDimensionException {
        ensureNonNull("envelope", envelope);
        final int dim = ordinates.length / 2;
        AbstractDirectPosition.ensureDimensionMatch("envelope", envelope.getDimension(), dim);
        assert equalsIgnoreMetadata(crs, envelope.getCoordinateReferenceSystem()) : envelope;
        for (int i = 0; i < dim; i++) {
            double min = Math.max(ordinates[i], envelope.getMinimum(i));
            double max = Math.min(ordinates[i + dim], envelope.getMaximum(i));
            if (min > max) {
                // Make an empty envelope (min==max)
                // while keeping it legal (min<=max).
                min = max = 0.5 * (min + max);
            }
            ordinates[i] = min;
            ordinates[i + dim] = max;
        }
    }

