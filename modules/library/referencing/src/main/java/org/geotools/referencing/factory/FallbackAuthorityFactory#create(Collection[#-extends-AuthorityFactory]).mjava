    /**
     * Wraps the specified authority factories. If the specified collection contains more than one
     * element, then a chain of {@code FallbackAuthorityFactory} instances is created. The type is
     * inferred from the factories found in the collection.
     *
     * <p>Consider using <code>{@linkplain #create(Class, Collection) create}(type, factories)
     * </code> instead when the type is known at compile time.
     *
     * @param factories The factories to wrap, in iteration order.
     * @return The given factories as a chain of fallback factories.
     * @throws FactoryNotFoundException if the collection doesn't contains at least one element.
     * @since 2.4
     */
    public static AuthorityFactory create(final Collection<? extends AuthorityFactory> factories)
            throws FactoryNotFoundException {
        ensureNonNull("factories", factories);
        if (factories.isEmpty()) {
            throw new FactoryNotFoundException(
                    Errors.format(ErrorKeys.FACTORY_NOT_FOUND_$1, AuthorityFactory.class));
        }
        return create(false, interfaceMask(factories), factories.iterator());
    }

