    /**
     * Invoked automatically when the {@code target pt} instruction were executed and a
     * {@code test tolerance} were previously set. The default implementation compares
     * the transformed source point with the expected target point. If a mismatch greater than
     * the tolerance error is found, an exception is thrown. Subclasses may overrides this
     * method in order to performs more tests.
     *
     * @throws TransformException if the source point can't be transformed, or a mistmatch is found.
     * @throws MismatchedDimensionException if the transformed source point doesn't have the
     *         expected dimension.
     */
    protected void test() throws TransformException, MismatchedDimensionException {
        final DirectPosition transformedSource = transform.transform(sourcePosition, null);
        final int sourceDim = transformedSource.getDimension();
        final int targetDim =    targetPosition.getDimension();
        if (sourceDim != targetDim) {
            throw new MismatchedDimensionException(Errors.format(ErrorKeys.MISMATCHED_DIMENSION_$2,
                        sourceDim, targetDim));
        }
        for (int i=0; i<sourceDim; i++) {
            // Use '!' for catching NaN.
            if (!(Math.abs(transformedSource.getOrdinate(i) -
                              targetPosition.getOrdinate(i))
                  <= tolerance[Math.min(i, tolerance.length-1)]))
            {
                throw new TransformException("Expected " + targetPosition + " but got " + transformedSource);
            }
        }
    }

