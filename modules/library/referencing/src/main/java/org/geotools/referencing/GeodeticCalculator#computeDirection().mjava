    /**
     * Computes the azimuth and orthodromic distance from the {@linkplain
     * #getStartingGeographicPoint starting point} and the {@linkplain
     * #getDestinationGeographicPoint destination point}.
     *
     * @throws IllegalStateException if the destination point has not been set.
     * @see #getAzimuth
     * @see #getOrthodromicDistance
     */
    private void computeDirection() throws IllegalStateException {
        if (!destinationValid) {
            throw new IllegalStateException(Errors.format(ErrorKeys.DESTINATION_NOT_SET));
        }
        GeodesicData g = geod.Inverse(lat1, long1, lat2, long2);
        azimuth = g.azi1;
        distance = g.s12;
        directionValid = true;
        return;
    }

