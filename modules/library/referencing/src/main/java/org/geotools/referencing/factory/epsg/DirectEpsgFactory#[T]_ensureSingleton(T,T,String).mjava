    /**
     * Make sure that an object constructed from the database is not incoherent. If the code
     * supplied to a {@code createFoo} method exists in the database, then we should find only one
     * record. However, we will do a paranoiac check and verify if there is more records, using a
     * {@code while (results.next())} loop instead of {@code if (results.next())}. This method is
     * invoked in the loop for making sure that, if there is more than one record (which should
     * never happen), at least they have identical contents.
     *
     * @param newValue The newly constructed object.
     * @param oldValue The object previously constructed, or {@code null} if none.
     * @param code The EPSG code (for formatting error message).
     * @throws FactoryException if a duplication has been detected.
     * @todo Use generic type when we will be allowed to compile for J2SE 1.5.
     */
    private static <T> T ensureSingleton(final T newValue, final T oldValue, final String code)
            throws FactoryException {
        if (oldValue == null) {
            return newValue;
        }
        if (oldValue.equals(newValue)) {
            return oldValue;
        }
        throw new FactoryException(Errors.format(ErrorKeys.DUPLICATED_VALUES_$1, code));
    }

