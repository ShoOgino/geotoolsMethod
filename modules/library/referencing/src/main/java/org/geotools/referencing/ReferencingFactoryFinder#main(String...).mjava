    /**
     * Dump to the standard output stream a list of available factory implementations. This method
     * can be invoked from the command line. It provides a mean to verify if some implementations
     * were found in the classpath. The syntax is: <br>
     *
     * <BLOCKQUOTE>
     *
     * <CODE>
     * java org.geotools.referencing.FactoryFinder <VAR>&lt;options&gt;</VAR>
     * </CODE>
     *
     * </BLOCKQUOTE>
     *
     * <p>where options are:
     *
     * <TABLE CELLPADDING='0' CELLSPACING='0'>
     *   <TR><TD NOWRAP><CODE>-encoding</CODE> <VAR>&lt;code&gt;</VAR></TD>
     *       <TD NOWRAP>&nbsp;Set the character encoding</TD></TR>
     *   <TR><TD NOWRAP><CODE>-locale</CODE> <VAR>&lt;language&gt;</VAR></TD>
     *       <TD NOWRAP>&nbsp;Set the language for the output (e.g. "fr" for French)</TD></TR>
     * </TABLE>
     *
     * <p><strong>Note for Windows users:</strong> If the output contains strange symbols, try to
     * supply an "{@code -encoding}" argument. Example:
     *
     * <blockquote>
     *
     * <code>
     * java org.geotools.referencing.FactoryFinder -encoding Cp850
     * </code>
     *
     * </blockquote>
     *
     * <p>The codepage number (850 in the previous example) can be obtained from the DOS commande
     * line using the "{@code chcp}" command with no arguments.
     *
     * @param args Command line arguments.
     */
    public static void main(String... args) {
        final Arguments arguments = new Arguments(args);
        arguments.getRemainingArguments(0);
        try {
            listProviders(arguments.out, arguments.locale);
        } catch (Exception exception) {
            java.util.logging.Logger.getGlobal().log(java.util.logging.Level.INFO, "", exception);
        }
    }

