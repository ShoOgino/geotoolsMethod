    /**
     * Transforms source coordinates (usually pixel indices) into destination coordinates (usually
     * "real world" coordinates).
     */
    @Override
    public void transform(
            final float[] srcPts, int srcOff, final float[] dstPts, int dstOff, int numPts) {
        final int postIncrement;
        if (srcPts == dstPts && srcOff < dstOff) {
            srcOff += (numPts - 1) * 2;
            dstOff += (numPts - 1) * 2;
            postIncrement = -4;
        } else {
            postIncrement = 0;
        }
        final Point2D.Float ptSrc = new PointFloat();
        final float[] ptDst = new float[2];
        while (--numPts >= 0) {
            ptSrc.x = srcPts[srcOff++] - 0.5f; // See the comment in transform(Point2D...)
            ptSrc.y = srcPts[srcOff++] - 0.5f; // for an explanation about the 0.5 shift.
            final Point2D result = warp.mapDestPoint(ptSrc);
            dstPts[dstOff++] = (float) (result.getX() + 0.5);
            dstPts[dstOff++] = (float) (result.getY() + 0.5);
            dstOff += postIncrement;
        }
    }

