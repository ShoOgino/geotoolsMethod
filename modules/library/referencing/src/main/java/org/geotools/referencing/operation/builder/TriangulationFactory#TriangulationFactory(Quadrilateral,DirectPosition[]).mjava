    /**
     * Constructs the TriangulationFactory.
     *
     *    @param quad of location to be triangulated.
     *    @param pt Array of points for triangulation.
     *    @throws TriangulationException when the vertices are outside of the specified quad.
     */
    protected TriangulationFactory(Quadrilateral quad, DirectPosition[] pt)
        throws TriangulationException {
        List <DirectPosition> vertices = new ArrayList<DirectPosition>();

        for (int i = 0; i < pt.length; i++) {
            vertices.add(pt[i]);
        }

        if (quad.containsAll(vertices) == false) {
            throw new TriangulationException("Point is outside triangles");
        }

        this.triangles = quad.getTriangles();

        for (Iterator<DirectPosition> i = vertices.iterator(); i.hasNext();) {
            DirectPosition vertex = (DirectPosition) i.next();
            insertPoint(vertex);
        }
    }

