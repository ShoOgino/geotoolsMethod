    /**
     * Append the identifier for the specified object name (possibly {@code null}) to the specified
     * formatter.
     *
     * @param formatter The formatter where to append the object name.
     * @param object The object to append, or {@code null} if none.
     * @param type The label to put in front of the object name.
     */
    @SuppressWarnings("serial")
    static void append(
            final Formatter formatter, final IdentifiedObject object, final String type) {
        if (object != null) {
            final Map<String, Object> properties = new HashMap<String, Object>(4);
            properties.put(IdentifiedObject.NAME_KEY, formatter.getName(object));
            properties.put(IdentifiedObject.IDENTIFIERS_KEY, formatter.getIdentifier(object));
            formatter.append(
                    (IdentifiedObject)
                            new AbstractIdentifiedObject(properties) {
                                @Override
                                protected String formatWKT(final Formatter formatter) {
                                    /*
                                     * Do not invoke super.formatWKT(formatter), since it doesn't do anything
                                     * more than invoking 'formatter.setInvalidWKT(...)' (we ignore the value
                                     * returned). This method will rather be invoked by the enclosing class.
                                     */
                                    return type;
                                }
                            });
        }
    }

