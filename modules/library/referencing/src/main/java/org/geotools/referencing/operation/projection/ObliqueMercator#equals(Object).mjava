    /**
     * Compares the specified object with this map projection for equality.
     */
    @Override
    public boolean equals(final Object object) {
        if (object == this) {
            // Slight optimization
            return true;
        }
        if (super.equals(object)) {
            final ObliqueMercator that = (ObliqueMercator) object;
            return this.twoPoint == that.twoPoint &&
                   equals(this.latitudeOfCentre   , that.latitudeOfCentre   ) &&
                   equals(this.longitudeOfCentre  , that.longitudeOfCentre  ) &&
                   // normalizing angles here
                   equals(rollLongitude(this.azimuth),  rollLongitude(that.azimuth)) &&
                   equals(rollLongitude(this.rectifiedGridAngle) , rollLongitude(that.rectifiedGridAngle) ) &&
                   equals(this.latitudeOf1stPoint , that.latitudeOf1stPoint ) &&
                   equals(this.longitudeOf1stPoint, that.longitudeOf1stPoint) &&
                   equals(this.latitudeOf2ndPoint , that.latitudeOf2ndPoint ) &&
                   equals(this.longitudeOf2ndPoint, that.longitudeOf2ndPoint) &&
                   equals(this.u_c,                 that.u_c);
            // Note: "u_c" is a derived parameter, so in theory we don't need to compare it.
            //        However we still compare it as a safety, because it takes a different
            //        value in the "hotine" case.
        }
        return false;
    }

