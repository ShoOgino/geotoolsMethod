    /**
     * Returns a set of available methods for {@linkplain MathTransform math transforms}. For each
     * element in this set, the {@linkplain OperationMethod#getName operation method name} must be
     * known to the {@link #getDefaultParameters} method in this factory. The set of available
     * methods is implementation dependent.
     *
     * @param type <code>{@linkplain Operation}.class</code> for fetching all operation methods, or
     *     <code>{@linkplain Projection}.class</code> for fetching only map projection methods.
     * @return All {@linkplain MathTransform math transform} methods available in this factory.
     * @see #getDefaultParameters
     * @see #createParameterizedTransform
     */
    public Set<OperationMethod> getAvailableMethods(final Class<? extends Operation> type) {
        return new LazySet<OperationMethod>(
                registry.getFactories(
                        MathTransformProvider.class,
                        (type != null) ? new MethodFilter(type) : null,
                        HINTS));
    }

