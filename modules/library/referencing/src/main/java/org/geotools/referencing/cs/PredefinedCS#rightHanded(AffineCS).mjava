    /**
     * Reorder the axis in the specified Affine CS in an attempt to get a right-handed system. Units
     * are standardized to meters in the process. If no axis change is needed, then this method
     * returns {@code cs} unchanged.
     */
    private static AffineCS rightHanded(final AffineCS cs) {
        boolean changed = false;
        final int dimension = cs.getDimension();
        final CoordinateSystemAxis[] axis = new CoordinateSystemAxis[dimension];
        for (int i = 0; i < dimension; i++) {
            /*
             * Gets the axis and replaces it by one of the predefined constants declared in
             * DefaultCoordinateSystemAxis, if possible. The predefined constants use ISO 19111
             * names with metres or degrees units, so it is pretty close to the "standard" axis
             * we are looking for.
             */
            CoordinateSystemAxis axe = axis[i] = cs.getAxis(i);
            DefaultCoordinateSystemAxis standard = DefaultCoordinateSystemAxis.getPredefined(axe);
            if (standard != null) {
                axe = standard;
            }
            /*
             * Changes units to meters. Every units in an affine CS should be linear or
             * dimensionless (the later is used for grid coordinates).  The 'usingUnit'
             * method will thrown an exception if the unit is incompatible. See
             * DefaultAffineCS.isCompatibleUnit(Unit).
             */
            final Unit<?> unit = axe.getUnit();
            if (!AbstractUnit.ONE.equals(unit) && !SI.METRE.equals(unit)) {
                if (!(axe instanceof DefaultCoordinateSystemAxis)) {
                    axe = new DefaultCoordinateSystemAxis(axe);
                }
                axe = ((DefaultCoordinateSystemAxis) axe).usingUnit(SI.METRE);
            }
            changed |= (axe != axis[i]);
            axis[i] = axe;
        }
        /*
         * Sorts the axis in an attempt to create a right-handed system
         * and creates a new Coordinate System if at least one axis changed.
         */
        changed |= ComparableAxisWrapper.sort(axis);
        if (!changed) {
            return cs;
        }
        final Map<String, ?> properties = DefaultAffineCS.getProperties(cs, null);
        if (cs instanceof CartesianCS) {
            return new DefaultCartesianCS(properties, axis);
        }
        return new DefaultAffineCS(properties, axis);
    }

