    /**
     * Create a pass through transform.
     *
     * @param firstAffectedOrdinate Index of the first affected ordinate.
     * @param subTransform The sub transform.
     * @param numTrailingOrdinates Number of trailing ordinates to pass through. Affected ordinates
     *     will range from {@code firstAffectedOrdinate} inclusive to {@code
     *     dimTarget-numTrailingOrdinates} exclusive.
     */
    protected PassThroughTransform(
            final int firstAffectedOrdinate,
            final MathTransform subTransform,
            final int numTrailingOrdinates) {
        if (firstAffectedOrdinate < 0) {
            throw new IllegalArgumentException(
                    Errors.format(
                            ErrorKeys.ILLEGAL_ARGUMENT_$2,
                            "firstAffectedOrdinate",
                            firstAffectedOrdinate));
        }
        if (numTrailingOrdinates < 0) {
            throw new IllegalArgumentException(
                    Errors.format(
                            ErrorKeys.ILLEGAL_ARGUMENT_$2,
                            "numTrailingOrdinates",
                            numTrailingOrdinates));
        }
        if (subTransform instanceof PassThroughTransform) {
            final PassThroughTransform passThrough = (PassThroughTransform) subTransform;
            this.firstAffectedOrdinate = passThrough.firstAffectedOrdinate + firstAffectedOrdinate;
            this.numTrailingOrdinates = passThrough.numTrailingOrdinates + numTrailingOrdinates;
            this.subTransform = passThrough.subTransform;
        } else {
            this.firstAffectedOrdinate = firstAffectedOrdinate;
            this.numTrailingOrdinates = numTrailingOrdinates;
            this.subTransform = subTransform;
        }
    }

