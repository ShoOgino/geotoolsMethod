        @Override
        protected Point2D transformNormalized(double lam, double phi, Point2D ptDst)
                throws ProjectionException {
            double x, y;
            if (abs(phi) <= EPSILON) {
                x = lam;
                y = ml0;
            } else {
                double cot = 1. / tan(phi);
                double E = lam * sin(phi);
                x = sin(E) * cot;
                y = phi - latitudeOfOrigin + cot * (1. - cos(E));
            }
            if (ptDst != null) {
                ptDst.setLocation(x, y);
                return ptDst;
            }
            return new Point2D.Double(x, y);
        }

