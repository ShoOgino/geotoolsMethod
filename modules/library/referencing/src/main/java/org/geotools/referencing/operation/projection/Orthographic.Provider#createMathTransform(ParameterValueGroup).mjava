        /**
         * Creates a transform from the specified group of parameter values.
         *
         * @param parameters The group of parameter values.
         * @return The created math transform.
         * @throws ParameterNotFoundException if a required parameter was not found.
         */
        protected MathTransform createMathTransform(final ParameterValueGroup parameters)
                throws ParameterNotFoundException, FactoryException {
            // Values here are in radians (the standard units for the map projection package)
            final double latitudeOfOrigin =
                    abs(AbstractProvider.doubleValue(LATITUDE_OF_ORIGIN, parameters));
            if (!isSpherical(parameters)) {
                LOGGER.log(
                        Level.FINE,
                        "GeoTools Orthographic is defined only on the sphere, "
                                + "we're going to use spherical equations even if the projection is using an ellipsoid");
            }
            // Polar case.
            if (abs(latitudeOfOrigin - PI / 2) < EPSILON) {
                return new PolarOrthographic(parameters);
            }
            // Equatorial case.
            else if (latitudeOfOrigin < EPSILON) {
                return new EquatorialOrthographic(parameters);
            }
            // Generic (oblique) case.
            else {
                return new ObliqueOrthographic(parameters);
            }
        }

