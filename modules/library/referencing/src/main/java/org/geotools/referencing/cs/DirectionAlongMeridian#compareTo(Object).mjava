    /**
     * Compares this direction with the specified one for order. This method tries to reproduce the
     * ordering used for the majority of coordinate systems in the EPSG database, i.e. the ordering
     * of a right-handed coordinate system. Examples of ordered pairs that we should get (extracted
     * from the EPSG database):
     *
     * <table>
     *   <tr><td>North along 90 deg East,</td>  <td>North along 0 deg</td></tr>
     *   <tr><td>North along 75 deg West,</td>  <td>North along 165 deg West</td></tr>
     *   <tr><td>South along 90 deg West,</td>  <td>South along 0 deg</td></tr>
     *   <tr><td>South along 180 deg,</td>      <td>South along 90 deg West</td></tr>
     *   <tr><td>North along 130 deg West</td>  <td>North along 140 deg East</td></tr>
     * </table>
     */
    public int compareTo(final Object object) {
        final DirectionAlongMeridian that = (DirectionAlongMeridian) object;
        final int c = baseDirection.compareTo(that.baseDirection);
        if (c != 0) {
            return c;
        }
        final double angle = getAngle(that);
        if (angle < 0) return +1; // Really the opposite sign.
        if (angle > 0) return -1; // Really the opposite sign.
        return 0;
    }

