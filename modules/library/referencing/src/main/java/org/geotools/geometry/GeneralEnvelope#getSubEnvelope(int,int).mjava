    /**
     * Returns a new envelope that encompass only some dimensions of this envelope. This method copy
     * this envelope's ordinates into a new envelope, beginning at dimension <code>lower</code> and
     * extending to dimension <code>upper-1</code>. Thus the dimension of the subenvelope is
     * <code>upper-lower</code>.
     * 
     * @param lower
     *            The first dimension to copy, inclusive.
     * @param upper
     *            The last dimension to copy, exclusive.
     * @return The subenvelope.
     * @throws IndexOutOfBoundsException
     *             if an index is out of bounds.
     */
    public GeneralEnvelope getSubEnvelope(final int lower, final int upper)
            throws IndexOutOfBoundsException {
        final int curDim = ordinates.length / 2;
        final int newDim = upper - lower;
        if (lower < 0 || lower > curDim) {
            throw new IndexOutOfBoundsException(Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$2,
                    "lower", lower));
        }
        if (newDim < 0 || upper > curDim) {
            throw new IndexOutOfBoundsException(Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$2,
                    "upper", upper));
        }
        final GeneralEnvelope envelope = new GeneralEnvelope(newDim);
        System.arraycopy(ordinates, lower, envelope.ordinates, 0, newDim);
        System.arraycopy(ordinates, lower + curDim, envelope.ordinates, newDim, newDim);
        return envelope;
    }

