    /**
     * Work around for RFE #4093999 in Sun's bug database ("Relax constraint on placement of
     * this()/super() call in constructors").
     */
    private static AbstractAuthorityFactory getBackingFactory(final boolean longitudeFirst) {
        final Hints hints = GeoTools.getDefaultHints();
        if (longitudeFirst) {
            hints.put(Hints.FORCE_LONGITUDE_FIRST_AXIS_ORDER, Boolean.TRUE);
            /*
             * Otherwise do NOT set the hint to false. If 'longitudeFirst' is false, this means
             * "use the system default", not "latitude first". The longitude may or may
             * not be first depending the value of "org.geotools.referencing.forcexy"
             * system property. This state is included in GeoTools.getDefaultHints().
             */
        }

        Collection<CRSAuthorityFactory> factories =
                ReferencingFactoryFinder.getCRSAuthorityFactories(hints);
        if (Boolean.TRUE.equals(hints.put(Hints.FORCE_LONGITUDE_FIRST_AXIS_ORDER, Boolean.FALSE))) {
            /*
             * If hints contain a requirement for "longitude first", then we may loose some
             * authorities like "URN:OGC:...". Search again without such requirement and add
             * any new authorities found.
             */
            factories = new ArrayList<CRSAuthorityFactory>(factories);
            final Set<Citation> authorities = new LinkedHashSet<Citation>();
            for (final CRSAuthorityFactory factory : factories) {
                authorities.add(factory.getAuthority());
            }
            searchNews:
            for (final CRSAuthorityFactory factory :
                    ReferencingFactoryFinder.getCRSAuthorityFactories(hints)) {
                final Citation authority = factory.getAuthority();
                if (authorities.contains(authority)) {
                    continue;
                }
                for (final Citation check : authorities) {
                    if (Citations.identifierMatches(authority, check)) {
                        continue searchNews;
                    }
                }
                factories.add(factory);
            }
        }
        return new ManyAuthoritiesFactory(factories);
    }

