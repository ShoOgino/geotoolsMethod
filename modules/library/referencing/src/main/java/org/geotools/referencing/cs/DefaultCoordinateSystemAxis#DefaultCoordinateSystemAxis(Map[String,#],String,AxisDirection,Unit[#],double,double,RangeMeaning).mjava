    /**
     * Constructs an axis from a set of properties. The properties map is given unchanged to the
     * {@linkplain AbstractIdentifiedObject#AbstractIdentifiedObject(Map) super-class constructor}.
     *
     * @param properties Set of properties. Should contains at least {@code "name"}.
     * @param abbreviation The {@linkplain #getAbbreviation abbreviation} used for this coordinate
     *     system axes.
     * @param direction The {@linkplain #getDirection direction} of this coordinate system axis.
     * @param unit The {@linkplain #getUnit unit of measure} used for this coordinate system axis.
     * @param minimum The minimum value normally allowed for this axis.
     * @param maximum The maximum value normally allowed for this axis.
     * @param rangeMeaning The meaning of axis value range specified by the minimum and maximum
     *     values.
     * @since 2.3
     */
    public DefaultCoordinateSystemAxis(
            final Map<String, ?> properties,
            final String abbreviation,
            final AxisDirection direction,
            final Unit<?> unit,
            final double minimum,
            final double maximum,
            final RangeMeaning rangeMeaning) {
        super(properties);
        this.abbreviation = abbreviation;
        this.direction = direction;
        this.unit = unit;
        this.minimum = minimum;
        this.maximum = maximum;
        this.rangeMeaning = rangeMeaning;
        ensureNonNull("abbreviation", abbreviation);
        ensureNonNull("direction", direction);
        ensureNonNull("unit", unit);
        ensureNonNull("rangeMeaning", rangeMeaning);
        if (!(minimum < maximum)) { // Use '!' for catching NaN
            throw new IllegalArgumentException(
                    Errors.format(ErrorKeys.BAD_RANGE_$2, minimum, maximum));
        }
    }

