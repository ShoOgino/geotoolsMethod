    /**
     * Parse a vector of values. Vectors are used for coordinate points. Example:
     *
     * <pre>
     * (46.69439222, 13.91405611, 41.21)
     * </pre>
     *
     * @param text The vector to parse.
     * @return The vector as floating point numbers.
     * @throws ParseException if a number can't be parsed.
     */
    private double[] parseVector(String text) throws ParseException {
        text = removeDelimitors(text, '(', ')');
        final StringTokenizer st = new StringTokenizer(text, numberSeparator);
        final double[] values = new double[st.countTokens()];
        for (int i = 0; i < values.length; i++) {
            // Note: we need to convert the number to upper-case because
            //       NumberParser seems to accepts "1E-10" but not "1e-10".
            final String token = st.nextToken().trim().toUpperCase(locale);
            final ParsePosition position = new ParsePosition(0);
            final Number result = numberFormat.parse(token, position);
            if (position.getIndex() != token.length()) {
                throw new ParseException(
                        Errors.format(ErrorKeys.UNPARSABLE_NUMBER_$1, token),
                        position.getErrorIndex());
            }
            values[i] = result.doubleValue();
        }
        return values;
    }

