    /** Creates the inverse transform of this object. */
    @Override
    public synchronized MathTransform inverse() throws NoninvertibleTransformException {
        if (inverse == null) {
            if (isIdentity()) {
                inverse = this;
            } else {
                final XMatrix matrix = getGeneralMatrix();
                try {
                    matrix.invert();
                } catch (SingularMatrixException
                        | IllegalArgumentException
                        | MatrixDimensionException exception) {
                    throw new NoninvertibleTransformException(
                            Errors.format(ErrorKeys.NONINVERTIBLE_TRANSFORM), exception);
                }
                inverse = createInverse(matrix);
                inverse.inverse = this;
            }
        }
        return inverse;
    }

