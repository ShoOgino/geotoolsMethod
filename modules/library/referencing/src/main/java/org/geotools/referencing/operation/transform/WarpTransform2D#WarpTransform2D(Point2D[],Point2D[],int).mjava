    /**
     * Constructs a warp transform that approximatively maps the given source coordinates to the
     * given destination coordinates. The transformation is performed using some polynomial warp
     * with the degree supplied in argument. The number of points required for each degree of warp
     * are as follows:
     *
     * <p>
     *
     * <table>
     * <tr><th>Degree of Warp</th><th>Number of Points</th></tr>
     * <tr><td>1</td><td>3</td></tr>
     * <tr><td>2</td><td>6</td></tr>
     * <tr><td>3</td><td>10</td></tr>
     * <tr><td>4</td><td>15</td></tr>
     * <tr><td>5</td><td>21</td></tr>
     * <tr><td>6</td><td>28</td></tr>
     * <tr><td>7</td><td>36</td></tr>
     * </table>
     *
     * @param srcCoords Source coordinates.
     * @param dstCoords Desination coordinates.
     * @param degree The desired degree of the warp polynomials.
     */
    public WarpTransform2D(final Point2D[] srcCoords, final Point2D[] dstCoords, final int degree) {
        this(
                null,
                srcCoords,
                0,
                null,
                dstCoords,
                0,
                Math.min(srcCoords.length, dstCoords.length),
                degree);
    }

