        /**
         * Creates a transform from the specified group of parameter values.
         *
         * @param parameters The group of parameter values.
         * @return The created math transform.
         * @throws ParameterNotFoundException if a required parameter was not found.
         */
        protected MathTransform createMathTransform(final ParameterValueGroup parameters)
                throws ParameterNotFoundException {
            // switch sp1 and sp2 so that we get a consistent ordering, this allows to recognize
            // t Lambert conformal with the same standard parallels declared in opposite order
            ParameterValue<Double> sp1 = getParameter(STANDARD_PARALLEL_1, parameters);
            ParameterValue<Double> sp2 = getParameter(STANDARD_PARALLEL_2, parameters);
            if (sp1 != null && sp2 != null) {
                if (sp1.doubleValue() < sp2.doubleValue()) {
                    final double temp = sp1.doubleValue();
                    sp1.setValue(sp2.doubleValue());
                    sp2.setValue(temp);
                }
            }

            return new LambertConformal2SP(parameters);
        }

