    /**
     * Checks if inverse transform using spherical formulas produces the same result
     * than ellipsoidal formulas. This method is invoked during assertions only.
     * <p>
     * <strong>Note:</strong> this method ignores the longitude if the latitude is
     * at a pole, because in such case the longitude is meanless.
     *
     * @param longitude The longitude computed by spherical formulas, in radians.
     * @param latitude  The latitude computed by spherical formulas, in radians.
     * @param expected  The (longitude,latitude) computed by ellipsoidal formulas.
     * @param tolerance The tolerance (optional).
     */
    static boolean checkInverseTransform(final double longitude, final double latitude,
                                         final Point2D expected, final double tolerance)
    {
        compare("latitude", expected.getY(), latitude, tolerance);
        if (abs(PI/2 - abs(latitude)) > EPSILON) {
            compare("longitude", expected.getX(), longitude, tolerance);
        }
        return tolerance < Double.POSITIVE_INFINITY;
    }

