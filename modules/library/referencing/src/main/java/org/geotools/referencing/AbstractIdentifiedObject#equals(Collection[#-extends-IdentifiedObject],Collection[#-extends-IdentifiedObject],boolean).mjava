    /**
     * Compares two collectionss of OpenGIS's {@code IdentifiedObject} objects for equality. The
     * comparaison take order in account, which make it more appropriate for {@link java.util.List}
     * or {@link LinkedHashSet} comparaisons. This convenience method is provided for implementation
     * of {@code equals} method in subclasses.
     *
     * @param collection1 The first collection to compare (may be {@code null}).
     * @param collection2 The second collection to compare (may be {@code null}).
     * @param compareMetadata {@code true} for performing a strict comparaison, or {@code false} for
     *     comparing only properties relevant to transformations.
     * @return {@code true} if both collections are equal.
     */
    protected static boolean equals(
            final Collection<? extends IdentifiedObject> collection1,
            final Collection<? extends IdentifiedObject> collection2,
            final boolean compareMetadata) {
        if (collection1 == collection2) {
            return true;
        }
        if (collection1 == null || collection2 == null) {
            return false;
        }
        final Iterator<? extends IdentifiedObject> it1 = collection1.iterator();
        final Iterator<? extends IdentifiedObject> it2 = collection2.iterator();
        while (it1.hasNext()) {
            if (!it2.hasNext() || !equals(it1.next(), it2.next(), compareMetadata)) {
                return false;
            }
        }
        return !it2.hasNext();
    }

