    /**
     * Parses an "UNIT" element. This element has the following pattern:
     *
     * <blockquote>
     *
     * <code>
     * UNIT["<name>", <conversion factor> {,<authority>}]
     * </code>
     *
     * </blockquote>
     *
     * @param parent The parent element.
     * @param unit The contextual unit. Usually {@link SI#METRE} or {@link SI#RADIAN}.
     * @return The "UNIT" element as an {@link Unit} object.
     * @throws ParseException if the "UNIT" can't be parsed.
     * @todo Authority code is currently ignored. We may consider to create a subclass of {@link
     *     Unit} which implements {@link IdentifiedObject} in a future version.
     */
    @SuppressWarnings("unchecked")
    private <T extends Quantity<T>> Unit<T> parseUnit(final Element parent, final Unit<T> unit)
            throws ParseException {
        final Element element = parent.pullElement("UNIT");
        final String name = element.pullString("name");
        final double factor = element.pullDouble("factor");
        parseAuthority(element, name);
        element.close();
        Unit<T> finalUnit = (factor != 1) ? unit.multiply(factor) : unit;
        return Units.autoCorrect(finalUnit);
    }

