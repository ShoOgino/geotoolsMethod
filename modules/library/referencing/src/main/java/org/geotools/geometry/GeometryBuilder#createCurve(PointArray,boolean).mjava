    public Curve createCurve(PointArray points, boolean closed)
            throws MismatchedReferenceSystemException, MismatchedDimensionException {
        if (points == null)
            throw new NullPointerException("Points are required to create a curve");
        if (points.size() < 2)
            throw new IllegalArgumentException(
                    "At least two points are required to create a curve");

        // A curve will be created
        // - The curve will be set as parent curves for the Curve segments
        // - Start and end params for the CurveSegments will be set
        List/* <LineSegment> */ segmentList = new ArrayList/* <LineSegment> */();
        for (int i = 0; i < points.size() - 1; i++) {
            int start = i;
            int end = i + 1;
            DirectPosition point1 = points.getDirectPosition(start, null);
            DirectPosition point2 = points.getDirectPosition(end, null);
            LineSegment segment = createLineSegment(point1, point2);
            segmentList.add(segment);
        }

        if (closed) {
            LineSegment first = (LineSegment) segmentList.get(0);
            LineSegment last = (LineSegment) segmentList.get(segmentList.size() - 1);

            if (!first.getStartPoint().equals(last.getEndPoint())) {
                LineSegment segment = createLineSegment(last.getEndPoint(), first.getStartPoint());
                segmentList.add(segment);
            }
        }

        return getPrimitiveFactory().createCurve(segmentList);
    }

