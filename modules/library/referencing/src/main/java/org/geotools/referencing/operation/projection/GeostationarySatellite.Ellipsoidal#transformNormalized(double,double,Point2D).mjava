        @Override
        protected Point2D transformNormalized(double lambda, double phi, Point2D p2d) throws ProjectionException {
            // from https://github.com/OSGeo/proj.4/blob/4.9/src/PJ_geos.c
            /* Calculation of geocentric latitude. */
            phi = Math.atan(radius_p2 * Math.tan(phi));
            /* Calculation of the three components of the vector from satellite to
            ** position on earth surface (lon,lat).*/
            double r = radius_p / Math.hypot(radius_p * Math.cos(phi), Math.sin(phi));
            double Vx = r * Math.cos(lambda) * Math.cos(phi);
            double Vy = r * Math.sin(lambda) * Math.cos(phi);
            double Vz = r * Math.sin(phi);
            /* Check visibility. */
            if (((radius_g - Vx) * Vx - Vy * Vy - Vz * Vz * radius_p_inv2) < 0.) {
                throw new ProjectionException();
            }
            /* Calculation based on view angles from satellite. */
            double tmp = radius_g - Vx;
            double x = radius_g_1 * Math.atan(Vy / tmp);
            double y = radius_g_1 * Math.atan(Vz / Math.hypot(Vy, tmp));

            p2d.setLocation(x, y);

            return p2d;
        }

