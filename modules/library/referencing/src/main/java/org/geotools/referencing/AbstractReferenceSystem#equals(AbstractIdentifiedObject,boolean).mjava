    /**
     * Compare this reference system with the specified object for equality. If {@code
     * compareMetadata} is {@code true}, then all available properties are compared including
     * {@linkplain #getDomainOfValidity()} valid area} and {@linkplain #getScope scope}.
     *
     * @param object The object to compare to {@code this}.
     * @param compareMetadata {@code true} for performing a strict comparaison, or {@code false} for
     *     comparing only properties relevant to transformations.
     * @return {@code true} if both objects are equal.
     */
    @Override
    public boolean equals(final AbstractIdentifiedObject object, final boolean compareMetadata) {
        if (super.equals(object, compareMetadata)) {
            if (!compareMetadata) {
                return true;
            }
            final AbstractReferenceSystem that = (AbstractReferenceSystem) object;
            return Utilities.equals(domainOfValidity, that.domainOfValidity)
                    && Utilities.equals(scope, that.scope);
        }
        return false;
    }

