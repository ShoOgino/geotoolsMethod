    /**
     * Creates the inverse transform of this object.
     *
     * @throws NoninvertibleTransformException if this transform can't be inverted.
     */
    public MathTransform2D inverse() throws NoninvertibleTransformException {
        if (inverse == null) {
            if (isIdentity()) {
                inverse = this;
            } else
                try {
                    synchronized (this) {
                        inverse = new AffineTransform2D(createInverse());
                        inverse.inverse = this;
                    }
                } catch (java.awt.geom.NoninvertibleTransformException exception) {
                    throw new NoninvertibleTransformException(
                            exception.getLocalizedMessage(), exception);
                }
        }
        return inverse;
    }

