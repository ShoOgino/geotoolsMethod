    /**
     * Tests whether there is a alien vertex in the circumcircle of
     * triangle. When there is, the diagonal of quad made by these triangles
     * changes.
     *
     * @param triangle to be tested
     *
     * @return List of changed triangles
     *
     * @throws TriangulationException DOCUMENT ME!
     */
    private List delaunayCircleTest(TINTriangle triangle)
        throws TriangulationException {
        List changedTriangles = new ArrayList();

        Iterator j = triangle.getAdjacentTriangles().iterator();
        int ct = changedTriangles.size();

        while (j.hasNext() && (changedTriangles.size() == ct)) {
            TINTriangle adjacent = (TINTriangle) j.next();

            List NewTriangles = new ArrayList();

            // The delaunay test
            if (triangle.getCircumCicle().contains(adjacent.p1)
                    || triangle.getCircumCicle().contains(adjacent.p0)
                    || triangle.getCircumCicle().contains(adjacent.p2)) {
                triangles.remove(triangle);
                triangles.remove(adjacent);

                NewTriangles.addAll(alternativeTriangles(triangle, adjacent));

                triangles.addAll(NewTriangles);
                changedTriangles = NewTriangles;
            } else if (!triangles.contains(triangle)) {
                triangles.add(triangle);
            }
        }

        return changedTriangles;
    }

