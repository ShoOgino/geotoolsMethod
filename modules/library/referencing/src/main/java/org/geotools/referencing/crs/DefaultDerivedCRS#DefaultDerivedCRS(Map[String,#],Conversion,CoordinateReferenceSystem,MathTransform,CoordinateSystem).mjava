    /**
     * Constructs a derived CRS from a {@linkplain DefiningConversion defining conversion}. The
     * properties are given unchanged to the {@linkplain AbstractDerivedCRS#AbstractDerivedCRS(Map,
     * Conversion, CoordinateReferenceSystem, MathTransform, CoordinateSystem) super-class
     * constructor}.
     *
     * @param properties Name and other properties to give to the new derived CRS object.
     * @param conversionFromBase The {@linkplain DefiningConversion defining conversion}.
     * @param base Coordinate reference system to base the derived CRS on.
     * @param baseToDerived The transform from the base CRS to returned CRS.
     * @param derivedCS The coordinate system for the derived CRS. The number of axes must match the
     *     target dimension of the transform {@code baseToDerived}.
     * @throws MismatchedDimensionException if the source and target dimension of {@code
     *     baseToDerived} don't match the dimension of {@code base} and {@code derivedCS}
     *     respectively.
     */
    public DefaultDerivedCRS(
            final Map<String, ?> properties,
            final Conversion conversionFromBase,
            final CoordinateReferenceSystem base,
            final MathTransform baseToDerived,
            final CoordinateSystem derivedCS)
            throws MismatchedDimensionException {
        super(properties, conversionFromBase, base, baseToDerived, derivedCS);
    }

