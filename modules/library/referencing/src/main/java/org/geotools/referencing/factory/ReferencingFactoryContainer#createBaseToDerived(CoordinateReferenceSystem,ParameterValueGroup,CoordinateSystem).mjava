    /**
     * Creates a {@linkplain #createParameterizedTransform parameterized transform} from a base CRS
     * to a derived CS. If the {@code "semi_major"} and {@code "semi_minor"} parameters are not
     * explicitly specified, they will be inferred from the {@linkplain Ellipsoid ellipsoid} and
     * added to {@code parameters}. In addition, this method performs axis switch as needed.
     *
     * <p>The {@linkplain OperationMethod operation method} used can be obtained by a call to {@link
     * #getLastUsedMethod}.
     *
     * @param baseCRS The source coordinate reference system.
     * @param parameters The parameter values for the transform.
     * @param derivedCS the target coordinate system.
     * @return The parameterized transform.
     * @throws NoSuchIdentifierException if there is no transform registered for the method.
     * @throws FactoryException if the object creation failed. This exception is thrown if some
     *     required parameter has not been supplied, or has illegal value.
     * @see MathTransformFactory#createBaseToDerived
     * @deprecated Moved to the {@link MathTransformFactory} interface.
     */
    @Deprecated
    public MathTransform createBaseToDerived(
            final CoordinateReferenceSystem baseCRS,
            final ParameterValueGroup parameters,
            final CoordinateSystem derivedCS)
            throws NoSuchIdentifierException, FactoryException {
        return getMathTransformFactory().createBaseToDerived(baseCRS, parameters, derivedCS);
    }

