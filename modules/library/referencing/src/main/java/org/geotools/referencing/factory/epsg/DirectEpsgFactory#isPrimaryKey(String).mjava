    /**
     * Returns {@code true} if the specified code may be a primary key in some table. This method do
     * not needs to checks any entry in the database. It should just checks from the syntax if the
     * code looks like a valid EPSG identifier. The default implementation returns {@code true} if
     * all non-space characters are {@linkplain Character#isDigit(char) digits}.
     *
     * <p>When this method returns {@code false}, some {@code createFoo(...)} methods look for the
     * code in the name column instead of the primary key column. This allows to accept the
     * "<cite>NTF (Paris) / France I</cite>" string (for example) in addition to the {@code "27581"}
     * primary key. Both should fetch the same object.
     *
     * <p>If this method returns {@code true} in all cases, then this factory never search for
     * matching names. In such case, an appropriate exception will be thrown in {@code
     * createFoo(...)} methods if the code is not found in the primary key column. Subclasses can
     * overrides this method that way if this is the intended behavior.
     *
     * @param code The code the inspect.
     * @return {@code true} if the code is probably a primary key.
     * @throws FactoryException if an unexpected error occured while inspecting the code.
     */
    protected boolean isPrimaryKey(final String code) throws FactoryException {
        final int length = code.length();
        for (int i = 0; i < length; i++) {
            final char c = code.charAt(i);
            if (!Character.isDigit(c) && !Character.isSpaceChar(c)) {
                return false;
            }
        }
        return true;
    }

