    /**
     * Replace consecutive singularity by linear values in sub-array.
     *
     * Example (we consider a grid of five element with singularity) :
     *
     *                  before
     *              *--*--*--*--*--*
     *              |07|08|08|08|11|
     *              *--*--*--*--*--*
     *
     * Params are : offset = 0, num = 5, step = 1
     *
     *                  after
     *              *--*--*--*--*--*
     *              |07|08|09|10|11|
     *              *--*--*--*--*--*
     *                |           |
     *                |           |
     *              linear values are
     *              computed with these
     *              values
     *
     * @param grid The {link #grid} array.
     * @param offset The first element.
     * @param num    The number of element.
     * @param step   The amount to increment {@code offset} in order to reach the next element.
     */
    private static void replaceSingularity(final double[] grid, int offset, int num, final int step) {
        final double increment = (grid[offset+(num-1)*step] - grid[offset])/((double)(num-1));
        final double value = grid[offset];
        offset+= step;
        for (int i=0; i<(num-2); i++, offset += step) {
            grid[offset] = value + (increment * (i+1));
        }
    }

