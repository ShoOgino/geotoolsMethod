    /**
     * Returns which (if any) axis in <cite>user</cite> space (not grid space) should have their
     * direction reversed. If <code>
     * {@linkplain #isAutomatic isAutomatic}({@linkplain #REVERSE_AXIS})</code> returns {@code true}
     * (which is the default), then this method make the following assumptions:
     *
     * <p>
     *
     * <ul>
     *   <li>Axis should be reverted if needed in order to point toward their "{@linkplain
     *       AxisDirection#absolute absolute}" direction.
     *   <li>An exception to the above rule is the second axis in grid space, which is assumed to be
     *       the <var>y</var> axis on output device (usually the screen). This axis is reversed
     *       again in order to match the bottom direction often used with such devices.
     * </ul>
     *
     * @return The reversal state of each axis, or {@code null} if unspecified.
     */
    public boolean[] getReverseAxis() {
        if (reverseAxis == null) {
            final CoordinateSystem cs = getCoordinateSystem();
            if (cs != null) {
                final int dimension = cs.getDimension();
                reverseAxis = new boolean[dimension];
                if (isAutomatic(REVERSE_AXIS)) {
                    for (int i = 0; i < dimension; i++) {
                        final AxisDirection direction = cs.getAxis(i).getDirection();
                        final AxisDirection absolute = direction.absolute();
                        reverseAxis[i] =
                                direction != AxisDirection.OTHER
                                        && direction.equals(absolute.opposite());
                    }
                    if (dimension >= 2) {
                        final int i = getSwapXY() ? 0 : 1;
                        reverseAxis[i] = !reverseAxis[i];
                    }
                }
            } else {
                // No coordinate system. Reverse the second axis inconditionnaly
                // (except if there is not enough dimensions).
                int length = 0;
                if (gridRange != null) {
                    length = gridRange.getDimension();
                } else if (envelope != null) {
                    length = envelope.getDimension();
                }
                if (length >= 2) {
                    reverseAxis = new boolean[length];
                    reverseAxis[1] = true;
                }
            }
        }
        return reverseAxis;
    }

