    /**
     * Sets the parameter value as an integer.
     *
     * @param value The parameter value.
     * @throws InvalidParameterValueException if the integer type is inappropriate for this
     *     parameter, or if the value is illegal for some other reason (for example a value out of
     *     range).
     * @see #intValue
     */
    @Override
    public void setValue(final int value) throws InvalidParameterValueException {
        @SuppressWarnings("unchecked") // Checked by constructor.
        final ParameterDescriptor<T> descriptor = (ParameterDescriptor) this.descriptor;
        final Class<T> type = descriptor.getValueClass();
        if (Double.class.equals(type) || Double.TYPE.equals(type)) {
            setValue((double) value);
            return;
        }
        final Integer check = value;
        this.value = ensureValidValue(descriptor, check);
    }

