    /**
     * Searchs for a factory of the given type. This method first search in user-supplied
     * factories. If no user factory is found, then this method request for a factory using
     * {@link GeometryFactoryFinder}. The authority name is inferred from the specified code.
     *
     * @param  type The interface to be implemented.
     * @param  code The code of the object to create.
     * @return The factory.
     * @throws NoSuchAuthorityCodeException if no suitable factory were found.
     */
    @Override
    final <T extends AuthorityFactory> T getAuthorityFactory(final Class<T> type, final String code)
            throws NoSuchAuthorityCodeException
    {
        ensureNonNull("code", code);
        String authority = null;
        FactoryRegistryException cause = null;
        final Collection<AuthorityFactory> factories = getFactories();
        final char separator = getSeparator(code);
        for (int split = code.lastIndexOf(separator); split >= 0;
                 split = code.lastIndexOf(separator, split-1))
        {
            if (!canSeparateAt(code, split)) {
                continue;
            }
            /*
             * Try all possible authority names, begining with the most specific ones.
             * For example if the code is "urn:ogc:def:crs:EPSG:6.8:4326", then we will
             * try "urn:ogc:def:crs:EPSG:6.8" first, "urn:ogc:def:crs:EPSG" next, etc.
             * until a suitable factory is found (searching into user-supplied factories
             * first).
             */
            authority = code.substring(0, split).trim();
            if (factories != null) {
                for (final AuthorityFactory factory : factories) {
                    if (type.isAssignableFrom(factory.getClass())) {
                        if (Citations.identifierMatches(factory.getAuthority(), authority)) {
                            return type.cast(factory);
                        }
                    }
                }
            }
            /*
             * No suitable user-supplied factory. Now query FactoryFinder.
             */
            final AuthorityFactory factory;
            try {
                factory = fromFactoryRegistry(authority, type);
            } catch (FactoryRegistryException exception) {
                cause = exception;
                continue;
            }
            if (factory != null) {
                return type.cast(factory);
            }
        }
        /*
         * No factory found. Creates an error message from the most global authority name
         * (for example "urn" if the code was "urn:ogc:def:crs:EPSG:6.8:4326") and the
         * corresponding cause. Both the authority and cause may be null if the code didn't
         * had any authority part.
         */
        throw noSuchAuthority(code, authority, cause);
    }

