    /**
     * Splits the Quadrilateral into two triangles.
     *
     * @return two Triangles: p0-p1-p2 and p0-p3-p2
     */
    public List<TINTriangle> getTriangles() {
        // Assert.isTrue(this.isValid());
        ArrayList<TINTriangle> triangles = new ArrayList<TINTriangle>();
        TINTriangle trigA = new TINTriangle(p0, p1, p2);
        TINTriangle trigB = new TINTriangle(p0, p3, p2);

        try {
            trigA.addAdjacentTriangle(trigB);
            trigB.addAdjacentTriangle(trigA);
        } catch (TriangulationException e) {
            // should never reach here
            java.util.logging.Logger.getGlobal().log(java.util.logging.Level.INFO, "", e);
        }

        triangles.add(trigA);
        triangles.add(trigB);

        return triangles;
    }

