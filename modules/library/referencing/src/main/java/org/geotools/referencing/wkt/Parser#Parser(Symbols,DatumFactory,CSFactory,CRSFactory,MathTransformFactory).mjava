    /**
     * Constructs a parser for the specified set of symbols using the specified factories.
     *
     * @param symbols The symbols for parsing and formatting numbers.
     * @param datumFactory The factory to use for creating {@linkplain Datum datum}.
     * @param csFactory The factory to use for creating {@linkplain CoordinateSystem coordinate
     *     systems}.
     * @param crsFactory The factory to use for creating {@linkplain CoordinateReferenceSystem
     *     coordinate reference systems}.
     * @param mtFactory The factory to use for creating {@linkplain MathTransform math transform}
     *     objects.
     */
    public Parser(
            final Symbols symbols,
            final DatumFactory datumFactory,
            final CSFactory csFactory,
            final CRSFactory crsFactory,
            final MathTransformFactory mtFactory) {
        super(symbols, mtFactory);
        this.datumFactory = datumFactory;
        this.csFactory = csFactory;
        this.crsFactory = crsFactory;
        final AxisDirection[] values = AxisDirection.values();
        directions = new HashMap<>((int) Math.ceil((values.length + 1) / 0.75f), 0.75f);
        for (AxisDirection value : values) {
            directions.put(value.name().trim().toUpperCase(), value);
        }
    }

