    /**
     * Constructs an {@link AffineTransform2D} math transform from the specified group of parameter
     * values.
     *
     * <p>The similarity transform is a particular case of Affine Transform 2D where:
     *
     * <blockquote>
     *
     * <pre>
     * m00 = SCALE * cos(ROTATION)
     * m01 = SCALE * sin(ROTATION)
     * m02 = TRANSLATION_1
     * m10 = -m01
     * m11 = m00
     * m12 = TRANSLATION_2
     * </pre>
     *
     * </blockquote>
     *
     * @param values The group of parameter values {@link #PARAMETERS}.
     * @return an {@link AffineTransform2D}.
     * @throws ParameterNotFoundException if a required parameter was not found.
     */
    protected MathTransform createMathTransform(ParameterValueGroup values)
            throws ParameterNotFoundException {

        // The four parameters
        double t1 = doubleValue(TRANSLATION_1, values);
        double t2 = doubleValue(TRANSLATION_2, values);
        double scale = doubleValue(SCALE, values);
        double rotation = doubleValue(ROTATION, values);

        // Calculate affine transform coefficients
        double theta = Math.PI * rotation / 648000; // arcsec to rad
        double p1 = scale * Math.cos(theta);
        double p2 = scale * Math.sin(theta);

        return new AffineTransform2D(p1, -p2, p2, p1, t1, t2);
    }

