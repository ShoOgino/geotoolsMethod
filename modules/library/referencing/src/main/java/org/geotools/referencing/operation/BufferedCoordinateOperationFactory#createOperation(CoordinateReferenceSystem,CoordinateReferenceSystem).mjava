    /**
     * Returns an operation for conversion or transformation between two coordinate reference
     * systems. If an operation was already created and still in the cache, the cached operation is
     * returned. Otherwise the operation creation is delegated to the {@linkplain
     * CoordinateOperationFactory coordinate operation factory} specified at construction time and
     * the result is cached.
     *
     * @param sourceCRS Input coordinate reference system.
     * @param targetCRS Output coordinate reference system.
     * @return A coordinate operation from {@code sourceCRS} to {@code targetCRS}.
     * @throws OperationNotFoundException if no operation path was found from {@code sourceCRS} to
     *     {@code targetCRS}.
     * @throws FactoryException if the operation creation failed for some other reason.
     */
    public CoordinateOperation createOperation(
            final CoordinateReferenceSystem sourceCRS, final CoordinateReferenceSystem targetCRS)
            throws OperationNotFoundException, FactoryException {
        ensureNonNull("sourceCRS", sourceCRS);
        ensureNonNull("targetCRS", targetCRS);
        final CRSPair key = new CRSPair(sourceCRS, targetCRS);
        CoordinateOperation op = pool.get(key);
        if (op == null) {
            op = getBackingFactory().createOperation(sourceCRS, targetCRS);
            pool.put(key, op);
        }
        return op;
    }

