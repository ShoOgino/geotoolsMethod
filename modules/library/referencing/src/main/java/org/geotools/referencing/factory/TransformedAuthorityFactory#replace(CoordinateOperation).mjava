    /**
     * Replaces (if needed) the specified coordinate operation. The default implementation checks if
     * there is a source or target {@linkplain #replace(CoordinateReferenceSystem) CRS replacement}.
     * If there is at least one of those, then this method returns a new coordinate operation using
     * the new CRS.
     *
     * @param operation The coordinate operation to replace.
     * @return A new operation, or {@code operation} if no change were needed.
     * @throws FactoryException if an error occured while creating the new operation object.
     */
    // @Override
    @Override
    protected CoordinateOperation replace(final CoordinateOperation operation)
            throws FactoryException {
        final CoordinateReferenceSystem oldSrcCRS = operation.getSourceCRS();
        final CoordinateReferenceSystem oldTgtCRS = operation.getTargetCRS();
        final CoordinateReferenceSystem sourceCRS = (oldSrcCRS != null) ? replace(oldSrcCRS) : null;
        final CoordinateReferenceSystem targetCRS = (oldTgtCRS != null) ? replace(oldTgtCRS) : null;
        if (Utilities.equals(oldSrcCRS, sourceCRS) && Utilities.equals(oldTgtCRS, targetCRS)) {
            return operation;
        }
        if (opFactory == null) {
            opFactory = getCoordinateOperationFactory();
        }
        CoordinateOperation modified;
        modified = opFactory.createOperation(sourceCRS, targetCRS);
        modified = pool.unique(modified);
        return modified;
    }

