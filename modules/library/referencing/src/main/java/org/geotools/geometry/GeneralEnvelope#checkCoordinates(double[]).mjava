    /**
     * Checks if ordinate values in the minimum point are less than or equal to the corresponding
     * ordinate value in the maximum point.
     * <p>
     * This code will recognize the following exceptions:
     * <ul>
     * <li>ordinates encoding isNil</li>
     * <li>ordinates encoding isEmpty</li>
     * </ul>
     * @throws IllegalArgumentException
     *             if an ordinate value in the minimum point is not less than or equal to the
     *             corresponding ordinate value in the maximum point.
     */
    private static void checkCoordinates(final double[] ordinates) throws IllegalArgumentException {
        if( isNilCoordinates( ordinates )){
            return; // null ordinates are okay            
        }
        if( isEmptyOrdinates(ordinates)){
            return; // empty ordinates are also a valid encoding....
        }
        final int dimension = ordinates.length / 2;
        for (int i = 0; i < dimension; i++) {
            if (!(ordinates[i] <= ordinates[dimension + i])) { // Use '!' in order to catch 'NaN'.
                throw new IllegalArgumentException(Errors.format(
                        ErrorKeys.ILLEGAL_ENVELOPE_ORDINATE_$1, i));
            }
        }
    }

