    @Test
    public void testFME2StreamsFeatures() throws IOException {
        if (!TestData.isExtensiveTest()) return;
        String path = "xml/fme/lakes/lakes.xml";
        File f = TestData.copy(this, path);
        TestData.copy(this, "xml/fme/lakes/lakes.xsd");
        URI u1 = f.toURI();

        path = "xml/fme/roads/roads.xml";
        f = TestData.copy(this, path);
        TestData.copy(this, "xml/geoserver/roadSchema.xsd");
        URI u2 = f.toURI();

        try (FeatureReader<SimpleFeatureType, SimpleFeature> fr1 =
                        FCBuffer.getFeatureReader(u1, 10, 10000);
                FeatureReader<SimpleFeatureType, SimpleFeature> fr2 =
                        FCBuffer.getFeatureReader(u2, 10, 10000)) {

            Assert.assertNotNull("FeatureReader missing", fr1);
            Assert.assertNotNull("FeatureReader missing", fr2);

            boolean cont = true;
            int count1, count2;
            count1 = count2 = 0;
            while (cont) {
                cont = false;
                for (int i = 0; i < 10 && fr1.hasNext(); i++) {
                    SimpleFeature ftr = fr1.next();
                    Assert.assertNotNull("Feature Null", ftr);
                    //                    System.out.println(ftr);
                    cont = true;
                    count1++;
                }
                for (int i = 0; i < 10 && fr2.hasNext(); i++) {
                    SimpleFeature ftr = fr2.next();
                    Assert.assertNotNull("Feature Null", ftr);
                    //                    System.out.println(ftr);
                    cont = true;
                    count2++;
                }
            }
            Assert.assertTrue("Must have used both readers", (count1 > 20 && count2 > 20));
            // System.out.println("\n# Features: " + count1 + " , " + count2);

        } catch (Throwable e) {
            java.util.logging.Logger.getGlobal().log(java.util.logging.Level.INFO, "", e);
            Assert.fail(e.toString());
        }
    }

