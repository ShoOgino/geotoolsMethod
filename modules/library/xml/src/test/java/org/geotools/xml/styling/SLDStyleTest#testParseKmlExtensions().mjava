    public void testParseKmlExtensions() throws IOException {
        Style[] styles = getStyles("kmlSymbolizer.sld");
        assertEquals(1, styles.length);
        assertEquals(1, styles[0].featureTypeStyles().size());
        assertEquals(1, styles[0].featureTypeStyles().get(0).rules().size());
        final Rule rule = styles[0].featureTypeStyles().get(0).rules().get(0);
        assertEquals(1, rule.symbolizers().size());
        TextSymbolizer2 ts = (TextSymbolizer2) rule.symbolizers().get(0);

        // abstract == property name
        assertEquals("propertyOne", ((PropertyName) ts.getSnippet()).getPropertyName());

        // abstract == mixed literal + propertyName
        Expression desc = ts.getFeatureDescription();
        assertTrue(desc instanceof Function);
        assertEquals("strConcat", ((Function) desc).getName());
        assertEquals(2, ((Function) desc).getParameters().size());
        assertTrue(((Function) desc).getParameters().get(0) instanceof Literal);
        assertTrue(((Function) desc).getParameters().get(1) instanceof PropertyName);

        // other text -> target & literal
        assertEquals("extrude", ts.getOtherText().getTarget());
        assertTrue(ts.getOtherText().getText() instanceof Literal);
    }

