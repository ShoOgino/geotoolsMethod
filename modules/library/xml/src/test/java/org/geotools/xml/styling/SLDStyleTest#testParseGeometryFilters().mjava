    /**
     * Verifies that geometry filters inside SLD documents are correctly parsed.
     *
     * @throws IOException boom
     */
    public void testParseGeometryFilters() throws IOException {
        final String TYPE_NAME = "testType";
        final String GEOMETRY_ATTR = "Polygons";
        Style[] styles = getStyles("spatialFilter.xml");

        final int expectedStyleCount = 1;
        assertEquals(expectedStyleCount, styles.length);

        Style notDisjoint = styles[0];
        assertEquals(1, notDisjoint.featureTypeStyles().size());

        FeatureTypeStyle fts = notDisjoint.featureTypeStyles().get(0);
        assertEquals(TYPE_NAME, fts.featureTypeNames().iterator().next().getLocalPart());
        assertEquals(1, fts.rules().size());

        Filter filter = fts.rules().get(0).getFilter();
        assertTrue(filter instanceof Not);

        Filter spatialFilter = ((Not) filter).getFilter();
        assertTrue(spatialFilter instanceof Disjoint);

        Disjoint disjoint = (Disjoint) spatialFilter;
        Expression left = disjoint.getExpression1();
        Expression right = disjoint.getExpression2();

        assertTrue(left instanceof PropertyName);

        assertTrue(right instanceof Literal);
        assertTrue(right.evaluate(null) instanceof Geometry);

        assertEquals(GEOMETRY_ATTR, ((PropertyName) left).getPropertyName());
        assertTrue(right.evaluate(null) instanceof Polygon);

        Envelope bbox = ((Polygon) right.evaluate(null)).getEnvelopeInternal();
        assertEquals(-10D, bbox.getMinX(), 0);
        assertEquals(-10D, bbox.getMinY(), 0);
        assertEquals(10D, bbox.getMaxX(), 0);
        assertEquals(10D, bbox.getMaxY(), 0);
    }

