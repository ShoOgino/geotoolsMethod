    /**
     * Test for encoding of null values. No exception must occur if features containing a null
     * geometry are encoded.
     *
     * @throws Exception
     */
    @Test
    public void testEncodeFeatureWithNullAttributes() throws Exception {
        // given: Feature with null geometry
        GeometryBuilder geomBuilder = new GeometryBuilder();
        MultiPolygon multiPolygon =
                geomBuilder.multiPolygon(geomBuilder.polygon(0, 0, 0, 1, 1, 1, 0, 0));
        GMLComplexType instance = GMLComplexTypes.AbstractFeatureType.getInstance();
        SimpleFeatureTypeBuilder typeBuilder = new SimpleFeatureTypeBuilder();
        typeBuilder.setName("person");
        typeBuilder.add("mpolygon", MultiPolygon.class);
        typeBuilder.add("name", MultiPolygon.class);
        SimpleFeatureType type = typeBuilder.buildFeatureType();
        SimpleFeatureBuilder featureBuilder = new SimpleFeatureBuilder(type);
        SimpleFeature lFeature = featureBuilder.buildFeature(null);

        Element element = mock(Element.class);
        Element element_mpolygon = mock(Element.class);
        Element element_name = mock(Element.class);
        when(element.getType()).thenReturn(GMLComplexTypes.AbstractFeatureType.getInstance());
        when(element.findChildElement(eq("mpolygon"))).thenReturn(element_mpolygon);
        when(element.findChildElement(eq("name"))).thenReturn(element_name);
        when(element_mpolygon.getType())
                .thenReturn(GMLComplexTypes.MultiPolygonPropertyType.getInstance());
        when(element_name.getType()).thenReturn(XSISimpleTypes.String.getInstance());

        Map<?, ?> hints = new HashedMap();
        PrintHandler printHandler = mock(PrintHandler.class);

        // when: encode is called to serialize empty feature
        instance.encode(element, lFeature, printHandler, hints);

        // then:
        // - no exception must occur
        // - start*() and end*() must be called once for feature itself and once for empty "name"
        // attr
        verify(printHandler, Mockito.times(2)).startElement(any(), any(), any());
        verify(printHandler, Mockito.times(2)).endElement(any(), any());

        // when: encode is called to serialize feature with "mpolygon" and "name"
        lFeature.setAttribute("name", "Pink Panther");
        lFeature.setAttribute("mpolygon", multiPolygon);
        printHandler = mock(PrintHandler.class);
        instance.encode(element, lFeature, printHandler, hints);

        // then:
        // - no exception must occur
        // - start*() and end*() must be called several times for feature, "name" and "mpolygon"
        verify(printHandler, Mockito.times(9)).startElement(any(), any(), any());
        verify(printHandler, Mockito.times(9)).endElement(any(), any());
    }

