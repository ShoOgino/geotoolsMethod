    /** Test of createStroke method, of class org.geotools.styling.StyleFactoryImpl. */
    @Test
    public void testCreateStroke() {
        LOGGER.finer("testCreateStroke");

        Stroke s =
                styleFactory.createStroke(
                        filterFactory.literal("#000000"), filterFactory.literal(2.0));

        Assert.assertNotNull("Failed to build stroke ", s);

        s =
                styleFactory.createStroke(
                        filterFactory.literal("#000000"),
                        filterFactory.literal(2.0),
                        filterFactory.literal(0.5));

        Assert.assertNotNull("Failed to build stroke ", s);

        s =
                styleFactory.createStroke(
                        filterFactory.literal("#000000"),
                        filterFactory.literal(2.0),
                        filterFactory.literal(0.5),
                        filterFactory.literal("bevel"),
                        filterFactory.literal("square"),
                        new float[] {1.1f, 2.1f, 6f, 2.1f, 1.1f, 5f},
                        filterFactory.literal(3),
                        null,
                        null);

        Assert.assertNotNull("Failed to build stroke ", s);

        Assert.assertEquals("Wrong color ", "#000000", s.getColor().evaluate(feature).toString());
        Assert.assertEquals("Wrong width ", "2.0", s.getWidth().evaluate(feature).toString());
        Assert.assertEquals("Wrong opacity ", "0.5", s.getOpacity().evaluate(feature).toString());
        Assert.assertEquals(
                "Wrong linejoin ", "bevel", s.getLineJoin().evaluate(feature).toString());
        Assert.assertEquals(
                "Wrong linejoin ", "square", s.getLineCap().evaluate(feature).toString());
        Assert.assertEquals("Broken dash array", 2.1f, s.getDashArray()[1], 0.001f);
        Assert.assertEquals(
                "Wrong dash offset ", "3", s.getDashOffset().evaluate(feature).toString());
    }

