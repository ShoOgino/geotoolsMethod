    /** Tests the parsing of a raster symbolizer sld */
    @Test
    public void testParseRasterSymbolizerWithExpressionGammaValue() throws IOException {
        Style[] styles = getStyles("rasterSymbolizerGammaValue.sld");
        Assert.assertEquals(1, styles.length);
        Assert.assertEquals(1, styles[0].featureTypeStyles().size());
        Assert.assertEquals(1, styles[0].featureTypeStyles().get(0).rules().size());

        Rule r = styles[0].featureTypeStyles().get(0).rules().get(0);
        Assert.assertEquals(1, r.symbolizers().size());

        RasterSymbolizer rs = (RasterSymbolizer) r.symbolizers().get(0);

        // opacity
        Assert.assertEquals(0.75, SLD.opacity(rs), 0d);

        // channels
        ChannelSelection cs = rs.getChannelSelection();
        SelectedChannelType redChannel = cs.getRGBChannels()[0];
        SelectedChannelType greenChannel = cs.getRGBChannels()[1];
        SelectedChannelType blueChannel = cs.getRGBChannels()[2];

        // channel names
        Assert.assertEquals("1", redChannel.getChannelName().evaluate(null, String.class));
        Assert.assertEquals("2", greenChannel.getChannelName().evaluate(null, String.class));
        Assert.assertEquals("6", blueChannel.getChannelName().evaluate(null, String.class));

        // contrast enhancement
        ContrastEnhancement rcs = redChannel.getContrastEnhancement();

        Assert.assertEquals("histogram", rcs.getMethod().name().toLowerCase());

        ContrastEnhancement gcs = greenChannel.getContrastEnhancement();
        Double ggamma = gcs.getGammaValue().evaluate(null, Double.class);
        Assert.assertEquals(3.8, ggamma.doubleValue(), 0d);

        ContrastEnhancement bcs = blueChannel.getContrastEnhancement();
        ContrastMethod m = bcs.getMethod();
        Assert.assertEquals("normalize", m.name().toLowerCase());

        // overlap behaviour
        Expression overlapExpr = rs.getOverlap();
        String type = (String) overlapExpr.evaluate(null);
        Assert.assertEquals("LATEST_ON_TOP", type);

        org.opengis.style.OverlapBehavior overlapBehavior = rs.getOverlapBehavior();
        type = overlapBehavior.name();
        Assert.assertEquals("LATEST_ON_TOP", type);

        // ContrastEnhancement
        ContrastEnhancement ce = rs.getContrastEnhancement();
        Double v = ce.getGammaValue().evaluate(null, Double.class);
        Assert.assertEquals(1.5, v.doubleValue(), 0d);
    }

