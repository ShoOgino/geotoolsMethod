    @Test
    public void testParseMarkFileReference() throws Exception {
        SLDParser parser = new SLDParser(styleFactory, input(SLD_MARK_FILE));
        parser.setOnLineResourceLocator(
                uri -> {
                    if ("file://foo.svg".equals(uri)) {
                        try {
                            return new URL("file://test/foo.svg");
                        } catch (MalformedURLException e) {
                            throw new RuntimeException(e);
                        }
                    } else {
                        return null;
                    }
                });
        Style[] styles = parser.readXML();

        assertEquals(1, styles.length);
        List<FeatureTypeStyle> fts = styles[0].featureTypeStyles();
        assertEquals(1, fts.size());
        List<Rule> rules = fts.get(0).rules();
        assertEquals(1, rules.size());
        List<Symbolizer> symbolizers = rules.get(0).symbolizers();
        assertEquals(1, symbolizers.size());
        PointSymbolizer ps = (PointSymbolizer) symbolizers.get(0);
        // here we would have had two instead of one
        List<GraphicalSymbol> graphicalSymbols = ps.getGraphic().graphicalSymbols();
        assertEquals(1, graphicalSymbols.size());
        Mark mark = (Mark) graphicalSymbols.get(0);
        assertEquals("file://test/foo.svg", mark.getWellKnownName().evaluate(null, String.class));
    }

