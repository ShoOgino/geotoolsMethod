    @Test
    public void testNOTANDFids() throws Exception {
        FilterFactory2 factory = CommonFactoryFinder.getFilterFactory2(null);
        String fid1 = "FID.1";

        Filter fidFilter = factory.not(factory.id(Collections.singleton(factory.featureId(fid1))));

        PropertyIsNull nullFilter = factory.isNull(factory.property("name"));

        Filter filter = factory.and(nullFilter, fidFilter);

        FilterEncodingPreProcessor visitor =
                new FilterEncodingPreProcessor(XMLHandlerHints.VALUE_FILTER_COMPLIANCE_LOW);
        filter.accept(visitor, null);

        Assert.assertEquals(filter, visitor.getFilter());
        Assert.assertTrue(visitor.getFidFilter().getIdentifiers().isEmpty());
        Assert.assertFalse(visitor.requiresPostProcessing());

        // Test MEDIUM compliance
        visitor = new FilterEncodingPreProcessor(XMLHandlerHints.VALUE_FILTER_COMPLIANCE_MEDIUM);
        filter.accept(visitor, null);

        Assert.assertEquals(nullFilter, visitor.getFilter());
        Assert.assertTrue(visitor.getFidFilter().getIdentifiers().isEmpty());
        Assert.assertTrue(visitor.requiresPostProcessing());

        // Test HIGH compliance
        visitor = new FilterEncodingPreProcessor(XMLHandlerHints.VALUE_FILTER_COMPLIANCE_HIGH);
        filter.accept(visitor, null);

        Assert.assertEquals(nullFilter, visitor.getFilter());
        Assert.assertTrue(visitor.getFidFilter().getIdentifiers().isEmpty());
        Assert.assertTrue(visitor.requiresPostProcessing());
    }

