    /**
     * Tests the following filter:
     *
     * <p>and { nullFilter or{ fidFilter nullFilter } }
     *
     * <p>for medium it should end up as:
     *
     * <p>and{ nullFilter nullFilter }
     *
     * <p>and the fids should be included.
     */
    public void testMixedAndOr() throws Exception {
        FilterFactory2 factory = CommonFactoryFinder.getFilterFactory2(null);
        String fid1 = "FID.1";
        Filter nullFilter1 = factory.isNull(factory.property("att"));

        Filter filter = factory.or(createFidFilter(fid1), nullFilter1);
        Filter nullFilter2 = factory.isNull(factory.property("name"));

        filter = factory.and(nullFilter2, filter);

        // Test Low compliance
        FilterEncodingPreProcessor visitor =
                new FilterEncodingPreProcessor(XMLHandlerHints.VALUE_FILTER_COMPLIANCE_LOW);
        filter.accept(visitor, null);

        assertEquals(filter, visitor.getFilter());

        Filter fidFilter = createFidFilter();
        assertEquals(fidFilter, visitor.getFidFilter());
        assertFalse(visitor.requiresPostProcessing());

        // Test Medium level compliance.
        visitor = new FilterEncodingPreProcessor(XMLHandlerHints.VALUE_FILTER_COMPLIANCE_MEDIUM);
        filter.accept(visitor, null);

        assertEquals(factory.and(nullFilter1, nullFilter2), visitor.getFilter());
        fidFilter = createFidFilter(fid1);
        assertEquals(fidFilter, visitor.getFidFilter());
        assertTrue(visitor.requiresPostProcessing());

        // Test High compliance
        visitor = new FilterEncodingPreProcessor(XMLHandlerHints.VALUE_FILTER_COMPLIANCE_HIGH);

        try {
            filter.accept(visitor, null);

            fail("This is not a legal filter for this compliance level");
        } catch (UnsupportedFilterException e) {
            // good
        }
    }

