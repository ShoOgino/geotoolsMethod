    private static Class findCommon(Class c1, Class c2) {
        if (Object.class == c1) return c2;
        if (Object.class == c2) return c1;

        Class<?> p1 = c1.getSuperclass();
        if (p1.isAssignableFrom(c2)) return p1;
        Class<?> p2 = c2.getSuperclass();
        if (p2.isAssignableFrom(c1)) return p2;

        Class<?> t = findCommon(p1, p2);
        if (!(t == Object.class)) return t;

        // interfaces?
        Class<?>[] it1 = c1.getInterfaces();
        Class<?>[] it2 = c2.getInterfaces();

        if (it1 != null && it1.length > 0 && it2 != null && it2.length > 0) {
            for (Class<?> value : it1) {
                for (Class<?> aClass : it2) {
                    if (value.isAssignableFrom(aClass)) return value;
                    if (aClass.isAssignableFrom(value)) return aClass;
                }
            }
        }

        return Object.class;
    }

