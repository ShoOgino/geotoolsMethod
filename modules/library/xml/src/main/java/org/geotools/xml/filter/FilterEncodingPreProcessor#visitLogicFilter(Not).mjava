    public void visitLogicFilter(Not filter) {
        int startSize = current.size();

        try {
            switch (this.complianceInt) {
                case LOW:
                    current.push(new Data(filter));

                    break;

                case MEDIUM:
                    filter.getFilter().accept(this, null);
                    current.push(createMediumLevelLogicFilter(filter, startSize));

                    break;

                case HIGH:
                    filter.getFilter().accept(this, null);
                    current.push(createHighLevelLogicFilter(filter, startSize));

                    break;

                default:
                    break;
            }
        } catch (Exception e) {
            if (e instanceof UnsupportedFilterException) {
                throw (UnsupportedFilterException) e;
            }

            throw new UnsupportedFilterException("Exception creating filter", e);
        }
    }

