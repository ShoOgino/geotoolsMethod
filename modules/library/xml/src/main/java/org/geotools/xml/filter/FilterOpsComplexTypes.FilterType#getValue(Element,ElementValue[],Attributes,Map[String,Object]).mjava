        /**
         * @see org.geotools.xml.schema.Type#getValue(org.geotools.xml.schema.Element,
         *     org.geotools.xml.schema.ElementValue[], org.xml.sax.Attributes, java.util.Map)
         */
        public Object getValue(
                Element element,
                ElementValue[] value,
                Attributes attrs,
                Map<String, Object> hints) {
            if (value.length == 1) return value[0].getValue();
            if (value.length == 0) return Filter.EXCLUDE;
            try {
                FilterFactory2 fac = CommonFactoryFinder.getFilterFactory2(null);
                // LogicFilter filter=fac.createLogicFilter(FilterType.LOGIC_OR);
                List<org.opengis.filter.Filter> filters = new ArrayList<>();
                Set<Identifier> ids = new HashSet<>();
                boolean isOnlyFids = true;
                for (ElementValue elementValue : value) {
                    Filter value2 = (Filter) elementValue.getValue();
                    if (value2 == Filter.EXCLUDE) continue;
                    if (value2 instanceof Id) {
                        Id idFilter = (Id) value2;
                        ids.addAll(idFilter.getIdentifiers());
                    } else {
                        isOnlyFids = false;
                    }
                    filters.add(value2);
                }
                if (isOnlyFids && !ids.isEmpty()) {
                    return fac.id(ids);
                } else if (filters.isEmpty()) {
                    return Filter.EXCLUDE;
                } else if (filters.size() == 1) {
                    return filters.iterator().next();
                } else {
                    return fac.or(filters);
                }
                // return filter;
            } catch (IllegalFilterException e) {
                return value[0].getValue();
            }
        }

