        /* (non-Javadoc)
         * @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)
         */
        public int compare( Object arg0, Object arg1 ) {
            // attribute
            if (arg0 instanceof Attribute && arg1 instanceof Attribute)
                return compareAttribute((Attribute) arg0, (Attribute) arg1);
            // attrbute group
            if (arg0 instanceof AttributeGroup && arg1 instanceof AttributeGroup)
                return compareAttributeGroup((AttributeGroup) arg0, (AttributeGroup) arg1);
            // complex type
            if (arg0 instanceof ComplexType && arg1 instanceof ComplexType)
                return compareComplexType((ComplexType) arg0, (ComplexType) arg1);
            // simpletype
            if (arg0 instanceof SimpleType && arg1 instanceof SimpleType)
                return compareSimpleType((SimpleType) arg0, (SimpleType) arg1);
            // group
            if (arg0 instanceof Group && arg1 instanceof Group)
                return compareGroup((Group) arg0, (Group) arg1);
            // element
            if (arg0 instanceof Element && arg1 instanceof Element)
                return compareElement((Element) arg0, (Element) arg1);
            // imports
            if (arg0 instanceof Schema && arg1 instanceof Schema)
                return compareImport((Schema) arg0, (Schema) arg1);

            return -1; // hack for unresolved portions
            // throw new ClassCastException("Unknown type "+arg0.getClass().getName());
        }

