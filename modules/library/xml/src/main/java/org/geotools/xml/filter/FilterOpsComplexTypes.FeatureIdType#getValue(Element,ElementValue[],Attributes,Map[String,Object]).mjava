        /**
         * @see org.geotools.xml.schema.Type#getValue(org.geotools.xml.schema.Element,
         *     org.geotools.xml.schema.ElementValue[], org.xml.sax.Attributes, java.util.Map)
         */
        @Override
        public Object getValue(
                Element element, ElementValue[] value, Attributes attrs1, Map<String, Object> hints)
                throws SAXException, SAXNotSupportedException {
            if ((element == null) || (value == null) || (element.getType() == null)) {
                throw new SAXException("Invalid parameters : null found");
            }

            if (value.length != 0) {
                throw new SAXException("Invalid children: more than 0 ... " + value.length);
            }

            if (!getName().equals(element.getType().getName())) {
                throw new SAXException("Invalid type name for element provided");
            }

            String fid = attrs1.getValue("", FeatureIdType.attrs[0].getName());

            if ((fid == null) || "".equals(fid)) {
                fid =
                        attrs1.getValue(
                                FeatureIdType.attrs[0].getNamespace().toString(),
                                FeatureIdType.attrs[0].getName());
            }
            FilterFactory2 ff = CommonFactoryFinder.getFilterFactory2(null);
            Set<FeatureId> fids = new HashSet<>();
            fids.add(ff.featureId(fid));

            return ff.id(fids);
            // FidFilter r = FilterFactoryFinder.createFilterFactory().createFidFilter(fid);
            // return r;
        }

