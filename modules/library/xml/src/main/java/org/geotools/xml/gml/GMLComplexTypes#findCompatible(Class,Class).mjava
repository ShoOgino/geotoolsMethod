    /**
     * This is a bit of a hack to allow certain special cases. This is required because the feature
     * model does not support choices and making a Choice (Polygon, MultiPolygon) a Geometry is
     * terrible because editing will allow all types to be added but really that is incorrect.
     *
     * <p>For example: Polygon and MultiPolygon are compatible. Polygons can be made MultiPolygons
     * easily.
     *
     * @return 0 if no compatibility is possible, 1 if c1 is a good choice, 2 if c2 is a good
     *     choice.
     */
    private static int findCompatible(Class c1, Class c2) {
        if (c1 == Polygon.class && c2 == MultiPolygon.class) {
            return 2;
        }
        if (c2 == Polygon.class && c1 == MultiPolygon.class) {
            return 1;
        }
        if (c1 == Point.class && c2 == MultiPoint.class) {
            return 2;
        }
        if (c2 == Point.class && c1 == MultiPoint.class) {
            return 1;
        }
        if (c1 == LineString.class && c2 == MultiLineString.class) {
            return 2;
        }
        if (c2 == LineString.class && c1 == MultiLineString.class) {
            return 1;
        }
        if (c1 == Geometry.class && c2 == GeometryCollection.class) {
            return 2;
        }
        if (c2 == Geometry.class && c1 == GeometryCollection.class) {
            return 1;
        }

        return 0;
    }

