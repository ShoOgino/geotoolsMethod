        @SuppressWarnings("unchecked")
        public void encode(Object o) throws IllegalArgumentException {
            try {
                if (o instanceof FeatureCollection) {
                    SimpleFeatureCollection fc = (SimpleFeatureCollection) o;
                    FeatureCollectionIteration.iteration(this, fc);
                } else if (o instanceof FeatureCollection[]) {
                    // Did FeatureResult[] so that we are sure they're all the same type.
                    // Could also consider collections here...
                    FeatureCollection[] results = (FeatureCollection[]) o;
                    startFeatureCollection();
                    if (collectionBounding) {
                        ReferencedEnvelope bounds = null;
                        for (FeatureCollection result : results) {
                            ReferencedEnvelope more = result.getBounds();
                            if (bounds == null) {
                                bounds = new ReferencedEnvelope(more);
                            } else {
                                bounds.expandToInclude(more);
                            }
                        }
                        writeBounds(bounds);
                    } else {
                        writeNullBounds();
                    }

                    for (FeatureCollection<SimpleFeatureType, SimpleFeature> result : results) {
                        handleFeatureIterator(DataUtilities.simple(result).features());
                    }
                    endFeatureCollection();
                } else if (o instanceof FeatureReader) {
                    // THIS IS A HACK FOR QUICK USE
                    @SuppressWarnings({"PMD.CloseResource", "unchecked"}) // the caller must close
                    FeatureReader<SimpleFeatureType, SimpleFeature> r =
                            (FeatureReader<SimpleFeatureType, SimpleFeature>) o;

                    startFeatureCollection();

                    handleFeatureReader(r);

                    endFeatureCollection();
                    //                } else if (o instanceof FeatureResults) {
                    //                    FeatureResults fr = (FeatureResults) o;
                    //                    startFeatureCollection();
                    //                    writeBounds(fr.getBounds());
                    //                    handleFeatureReader(fr.reader());
                    //                    endFeatureCollection();
                    //                } else if (o instanceof FeatureResults[]) {
                    //                    //Did FeatureResult[] so that we are sure they're all the
                    // same type.
                    //                    //Could also consider collections here...
                    //                    FeatureResults[] results = (FeatureResults[]) o;
                    //                    Envelope bounds = new Envelope();
                    //
                    //                    for (int i = 0; i < results.length; i++) {
                    //                        bounds.expandToInclude(results[i].getBounds());
                    //                    }
                    //
                    //                    startFeatureCollection();
                    //                    writeBounds(bounds);
                    //
                    //                    for (int i = 0; i < results.length; i++) {
                    //                        handleFeatureReader(results[i].reader());
                    //                    }
                    //
                    //                    endFeatureCollection();
                } else {
                    throw new IllegalArgumentException("Cannot encode " + o);
                }
            } catch (IOException ioe) {
                java.util.logging.Logger.getGlobal().log(java.util.logging.Level.INFO, "", ioe);
                throw new RuntimeException("error reading FeatureResults", ioe);
            }
        }

