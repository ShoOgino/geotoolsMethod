        /** @see schema.Type#getValue(java.util.List) */
        @Override
        public Object getValue(
                Element element, ElementValue[] value, Attributes attrs, Map<String, Object> hints)
                throws SAXException, OperationNotSupportedException {
            Element e = value[0].getElement();

            if (e == null) {
                if (!element.isNillable())
                    throw new SAXException(
                            "Internal error, ElementValues require an associated Element.");
                return null;
            }

            GeometryFactory gf = new GeometryFactory(CoordinateArraySequenceFactory.instance());

            LineString[] geoms = new LineString[value.length];

            for (int i = 0; i < value.length; i++) {
                geoms[i] = (LineString) value[i].getValue();
            }

            MultiLineString mp = gf.createMultiLineString(geoms);

            ElementValue[] ev = new ElementValue[1];
            ev[0] = new DefaultElementValue(element, mp);

            return AbstractGeometryType.getInstance().getValue(element, ev, attrs, hints);
        }

