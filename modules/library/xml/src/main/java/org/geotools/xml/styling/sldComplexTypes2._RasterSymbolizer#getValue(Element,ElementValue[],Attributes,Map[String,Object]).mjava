        /**
         * getValue ...
         *
         * @see org.geotools.xml.schema.Type#getValue(org.geotools.xml.schema.Element,
         *     org.geotools.xml.schema.ElementValue[], org.xml.sax.Attributes, java.util.Map)
         */
        public Object getValue(
                Element element, ElementValue[] value, Attributes attrs1, Map<String, Object> hints)
                throws OperationNotSupportedException {
            RasterSymbolizer symbol =
                    CommonFactoryFinder.getStyleFactory().getDefaultRasterSymbolizer();
            // symbol.setGraphic(null);

            for (ElementValue elementValue : value) {
                if ((elementValue == null) || elementValue.getElement() == null) {
                    continue;
                }

                Element e = elementValue.getElement();
                if (elems[GEOMETRY].getName().equals(e.getName()))
                    symbol.setGeometryPropertyName((String) elementValue.getValue());

                if (elems[OPACITY].getName().equals(e.getName()))
                    symbol.setOpacity((Expression) elementValue.getValue());

                if (elems[CHANNELSELECTION].getName().equals(e.getName()))
                    symbol.setChannelSelection((ChannelSelection) elementValue.getValue());

                if (elems[OVERLAPBEHAVIOR].getName().equals(e.getName()))
                    symbol.setOverlap((Expression) elementValue.getValue());

                if (elems[COLORMAP].getName().equals(e.getName()))
                    symbol.setColorMap((ColorMap) elementValue.getValue());

                if (elems[CONTRASTENHANCEMENT].getName().equals(e.getName()))
                    symbol.setContrastEnhancement((ContrastEnhancement) elementValue.getValue());

                if (elems[SHADEDRELIEF].getName().equals(e.getName()))
                    symbol.setShadedRelief((ShadedRelief) elementValue.getValue());

                if (elems[IMAGEOUTLINE].getName().equals(e.getName()))
                    symbol.setImageOutline((Symbolizer) elementValue.getValue());
            }

            return symbol;
        }

