    /*
     * helper method that merges the provided Schema into this Schema
     */
    private void addSchema(Schema s) {

        Object[] objs = s.getAttributes();

        if (objs != null) {
            if ((attributes == null) && (objs.length > 0)) {
                attributes = new LinkedList<>();
            }

            for (Object obj : objs) attributes.add(obj);
        }

        objs = s.getAttributeGroups();

        if (objs != null) {
            if ((attributeGroups == null) && (objs.length > 0)) {
                attributeGroups = new LinkedList<>();
            }

            for (Object obj : objs) attributeGroups.add(obj);
        }

        objs = s.getComplexTypes();

        if (objs != null) {
            if ((complexTypes == null) && (objs.length > 0)) {
                complexTypes = new LinkedList<>();
            }

            for (Object obj : objs) complexTypes.add(obj);
        }

        objs = s.getElements();

        if (objs != null) {
            if ((elements == null) && (objs.length > 0)) {
                elements = new LinkedList<>();
            }

            for (Object obj : objs) elements.add(obj);
        }

        objs = s.getGroups();

        if (objs != null) {
            if ((groups == null) && (objs.length > 0)) {
                groups = new LinkedList<>();
            }

            for (Object obj : objs) groups.add(obj);
        }

        objs = s.getImports();

        if (objs != null) {
            if ((imports == null) && (objs.length > 0)) {
                imports = new LinkedList<>();
            }

            for (Object obj : objs) imports.add(obj);
        }

        objs = s.getSimpleTypes();

        if (objs != null) {
            if ((simpleTypes == null) && (objs.length > 0)) {
                simpleTypes = new LinkedList<>();
            }

            for (Object obj : objs) simpleTypes.add(obj);
        }

        URI tempuri = s.getURI();

        if (uri == null) {
            uri = tempuri;
        } else {
            if (tempuri != null) {
                uri = tempuri.resolve(uri);
            }
        }
    }

