        /**
         * @see org.geotools.xml.schema.Type#getValue(org.geotools.xml.schema.Element,
         *     org.geotools.xml.schema.ElementValue[], org.xml.sax.Attributes, java.util.Map)
         */
        public Object getValue(
                Element element, ElementValue[] value, Attributes attrs, Map<String, Object> hints)
                throws SAXException {

            FilterFactory2 factory = FilterSchema.filterFactory(hints);
            String name = element.getName();
            short type;
            if ("and".equalsIgnoreCase(name)) {
                type = FilterType.LOGIC_AND;
            } else if ("or".equalsIgnoreCase(name)) {
                type = FilterType.LOGIC_OR;
            } else {
                throw new SAXException("Expected AND or OR logic filter");
            }
            try {
                ArrayList<org.opengis.filter.Filter> children = new ArrayList<>(value.length);
                Set<Identifier> ids = new HashSet<>(value.length);
                boolean fidOnly = true;

                // LogicFilter filter = factory.createLogicFilter( type );
                for (ElementValue elementValue : value) {
                    Filter filter = (Filter) elementValue;
                    if (filter instanceof Id) {
                        Id id = (Id) filter;
                        ids.addAll(id.getIdentifiers());
                    } else {
                        fidOnly = false;
                    }
                    children.add(filter);
                }
                if (type == FilterType.LOGIC_OR) {
                    if (fidOnly) {
                        return factory.id(ids);
                    } else {
                        return factory.or(children);
                    }
                } else {
                    return factory.and(children);
                }
            } catch (ClassCastException filterRequired) {
                throw new SAXException("Illegal filter for " + element, filterRequired);
            } catch (IllegalFilterException e) {
                throw new SAXException("Illegal filter for " + element);
            }
        }

