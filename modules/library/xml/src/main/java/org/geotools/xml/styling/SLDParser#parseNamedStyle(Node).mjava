    /**
     * Parses a NamedStyle from node.
     *
     * <p>A NamedStyle is used to refer to a style that has a name in a WMS, and is defined as:
     *
     * <pre>
     * &lt;code&gt;
     * &lt;xsd:element name=&quot;NamedStyle&quot;&gt;
     *  &lt;xsd:annotation&gt;
     *   &lt;xsd:documentation&gt; A NamedStyle is used to refer to a style that has a name in a WMS. &lt;/xsd:documentation&gt;
     *  &lt;/xsd:annotation&gt;
     *  &lt;xsd:complexType&gt;
     *   &lt;xsd:sequence&gt;
     *    &lt;xsd:element ref=&quot;sld:Name&quot;/&gt;
     *   &lt;/xsd:sequence&gt;
     *  &lt;/xsd:complexType&gt;
     * &lt;/xsd:element&gt;
     * &lt;/code&gt;
     * </pre>
     */
    public NamedStyle parseNamedStyle(Node n) {
        if (dom == null) {
            try {
                dom = newDocumentBuilder(false).newDocument();
            } catch (javax.xml.parsers.ParserConfigurationException pce) {
                throw new RuntimeException(pce);
            }
        }

        NamedStyle style = factory.createNamedStyle();

        NodeList children = n.getChildNodes();
        final int length = children.getLength();
        if (LOGGER.isLoggable(Level.FINEST)) {
            LOGGER.finest("" + children.getLength() + " children to process");
        }

        for (int j = 0; j < length; j++) {
            Node child = children.item(j);

            if ((child == null)
                    || (child.getNodeType() != Node.ELEMENT_NODE)
                    || (child.getFirstChild() == null)) {
                continue;
            }
            if (LOGGER.isLoggable(Level.FINEST)) {
                LOGGER.finest("processing " + child.getLocalName());
            }
            String childName = child.getLocalName();
            if (childName == null) {
                childName = child.getNodeName();
            }
            if (childName.equalsIgnoreCase("Name")) {
                style.setName(getFirstChildValue(child));
            }
        }
        return style;
    }

