    private Data createHighLevelLogicFilter(Filter filter, int startOfFilterStack)
            throws IllegalFilterException {
        if (hasFidFilter(startOfFilterStack)) {
            Set fids;

            if (filter instanceof And) {
                fids = andFids(startOfFilterStack);

                Data data = buildFilter(filter, startOfFilterStack);
                data.fids.addAll(fids);

                return data;

            } else if (filter instanceof Or) {
                if (hasNonFidFilter(startOfFilterStack)) {
                    throw new UnsupportedFilterException(
                            "Maximum compliance does not allow Logic filters to contain FidFilters");
                }

                fids = orFids(startOfFilterStack);

                pop(startOfFilterStack);

                Data data = new Data();
                data.fids.addAll(fids);

                return data;
            } else if (filter instanceof Not) {
                return buildFilter(filter, startOfFilterStack);
            } else {

                return Data.ALL;
            }

        } else {
            return buildFilter(filter, startOfFilterStack);
        }
    }

