    /*
     */
    private Map<URI, Schema> loadSchemas() {
        schemas = new HashMap<>();

        ClassLoader[] cls = findLoaders();
        String serviceId = "META-INF/services/" + Schema.class.getName();

        for (ClassLoader cl : cls) {
            try {
                Enumeration e = cl.getResources(serviceId);

                while (e.hasMoreElements()) {
                    URL res = (URL) e.nextElement();
                    try (BufferedReader rd =
                            new BufferedReader(
                                    new InputStreamReader(res.openStream(), "UTF" + "-8"))) {

                        while (rd.ready()) {
                            String factoryClassName = rd.readLine().trim();

                            try {
                                Schema s =
                                        (Schema)
                                                cl.loadClass(factoryClassName)
                                                        .getDeclaredMethod(
                                                                "getInstance", new Class[0])
                                                        .invoke(null, new Object[0]);
                                schemas.put(s.getTargetNamespace(), s);
                            } catch (IllegalArgumentException
                                    | ClassNotFoundException
                                    | NoSuchMethodException
                                    | InvocationTargetException
                                    | IllegalAccessException
                                    | SecurityException e1) {
                                XSISAXHandler.logger.warning(e1.toString());
                            }
                        }
                    }
                }
            } catch (IOException e) {
                XSISAXHandler.logger.warning(e.toString());
            }
        }

        return schemas;
    }

