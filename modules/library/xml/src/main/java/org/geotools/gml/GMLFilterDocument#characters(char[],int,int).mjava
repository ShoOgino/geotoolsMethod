    /**
     * Reads the only internal characters read by pure GML parsers, which are coordinates. These
     * coordinates are sent to the coordinates reader class, which interprets them appropriately,
     * depending on its current state.
     *
     * <p>Modified by Sean Geoghegan to append character data to buffer when inside a coordinate or
     * coord element. SAX doesn't guarentee that all the character data of an element will be passed
     * to the character method in one call, it may be split up into chunks.
     *
     * @param ch Raw coordinate string from the GML document.
     * @param start Beginning character position of raw coordinate string.
     * @param length Length of the character string.
     * @throws SAXException Some parsing error occurred while reading coordinates.
     */
    @Override
    public void characters(char[] ch, int start, int length) throws SAXException {
        LOGGER.entering(
                "GMLFilterDocument",
                "characters",
                new Object[] {ch, Integer.valueOf(start), Integer.valueOf(length)});

        /* the methods here read in both coordinates and coords and
         * take the grunt-work out of this task for geometry handlers
         * see the documentation for CoordinatesReader to see what this entails
         */
        String rawCoordinates = new String(ch, start, length);

        /* determines how to read coordinates, depending on
         * what element we are currently inside
         */
        if (coordinateReader.insideCoordinates()) {
            buffer.append(rawCoordinates);

            // coordinateReader.readCoordinates(rawCoordinates);
        } else if (coordinateReader.insideCoord()) {
            buffer.append(rawCoordinates);

            // coordinateReader.readCoord(rawCoordinates);
        } else {
            /* all non-coordinate data passed on down the
             * filter chain without modification
             */
            parent.characters(ch, start, length);
        }

        LOGGER.exiting("GMLFilterDocument", "characters");
    }

