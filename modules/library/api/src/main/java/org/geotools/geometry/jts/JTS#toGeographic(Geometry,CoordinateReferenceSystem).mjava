    /**
     * Transforms the geometry from its current crs to {@link DefaultGeographicCRS#WGS84}. If the
     * specified geometry is already in WGS84, then it is returned unchanged.
     * <p>
     * The method {@link CRS#equalsIgnoreMetadata(Object, Object)} is used to compare the numeric values
     * and axis order (so {@code CRS.decode("CRS.84")} or {@code CRS.decode("4326",true)} 
     * provide an appropriate match).
     * @param geom
     *            The geometry to transform.
     * @param crs
     *            The CRS the geometry is currently in.
     * @return The geometry transformed to be in {@link DefaultGeographicCRS#WGS84}.
     * @throws TransformException
     *             If at least one coordinate can't be transformed.
     */
    public static Geometry toGeographic( Geometry geom, final CoordinateReferenceSystem crs ) throws TransformException {
        if( crs == null ){
            return geom;
        }
        if( crs.getCoordinateSystem().getDimension() >= 3 ){
            try {
                MathTransform transform = CRS.findMathTransform( crs,  DefaultGeographicCRS.WGS84_3D );
                Geometry geometry = transform( geom, transform );
                
                return geometry; // The extra Z values will be ignored
            } catch (FactoryException exception) {
                throw new TransformException(Errors.format(
                        ErrorKeys.CANT_REPROJECT_$1, crs));
            }
        }
        else if ( CRS.equalsIgnoreMetadata( crs,  DefaultGeographicCRS.WGS84 ) ){
            return geom;
        }
        else {
            try {
                MathTransform transform = CRS.findMathTransform( crs,  DefaultGeographicCRS.WGS84 );
                return transform( geom, transform );
            } catch (FactoryException exception) {
                throw new TransformException(Errors.format(
                        ErrorKeys.CANT_REPROJECT_$1, crs));
            }
        }
    }

