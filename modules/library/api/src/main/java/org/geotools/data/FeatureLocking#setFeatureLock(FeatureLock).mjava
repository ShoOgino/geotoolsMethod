    /**
     * All locking operations will operate against the provided <code>lock</code>.
     *
     * <p>This in in keeping with the stateful spirit of DataSource in which operations are against
     * the "current" transaction. If a FeatureLock is not provided lock operations will only be
     * applicable for the current transaction (they will expire on the next commit or rollback).
     *
     * <p>That is lockFeatures() operations will:
     *
     * <ul>
     *   <li>Be recorded against the provided FeatureLock.
     *   <li>Be recorded against the current transaction if no FeatureLock is provided.
     * </ul>
     *
     * <p>Calling this method with <code>setFeatureLock( FeatureLock.TRANSACTION
     * )</code> will revert to per transaction operation.
     *
     * <p>This design allows for the following:
     *
     * <ul>
     *   <li>cross DataSource FeatureLock usage
     *   <li>not having pass in the same FeatureLock object multiple times
     * </ul>
     *
     * @param lock FeatureLock configuration including authorization and requested duration
     */
    void setFeatureLock(FeatureLock lock);

