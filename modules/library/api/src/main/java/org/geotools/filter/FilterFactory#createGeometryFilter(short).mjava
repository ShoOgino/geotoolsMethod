    /**
     * Creates a Geometry Filter.
     *
     * @param filterType the type to create, must be a geometry type.
     *
     * @return The new Geometry Filter.
     *
     * @throws IllegalFilterException if the filterType is not a geometry.
     *
     * @deprecated use one of
     *         {@link org.opengis.filter.FilterFactory#bbox(String, double, double, double, double, String)}
     *  {@link org.opengis.filter.FilterFactory#beyond(String, Geometry, double, String)}
     *  {@link org.opengis.filter.FilterFactory#contains(String, Geometry)}
     *  {@link org.opengis.filter.FilterFactory#crosses(String, Geometry)}
     *  {@link org.opengis.filter.FilterFactory#disjoint(String, Geometry)}
     *  {@link org.opengis.filter.FilterFactory#dwithin(String, Geometry, double, String)}
     *  {@link org.opengis.filter.FilterFactory#equals(String, Geometry)}
     *  {@link org.opengis.filter.FilterFactory#intersects(String, Geometry)}
     *  {@link org.opengis.filter.FilterFactory#overlaps(String, Geometry)}
     *  {@link org.opengis.filter.FilterFactory#touches(String, Geometry)}
     *  {@link org.opengis.filter.FilterFactory#within(String, Geometry)}
     */
    public GeometryFilter createGeometryFilter(short filterType)
        throws IllegalFilterException;

