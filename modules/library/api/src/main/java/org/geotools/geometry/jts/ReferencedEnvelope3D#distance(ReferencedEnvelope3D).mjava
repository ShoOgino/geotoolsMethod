    /**
     * Computes the distance between this and another <code>Envelope</code>. The distance between
     * overlapping Envelopes is 0. Otherwise, the distance is the Euclidean distance between the
     * closest points.
     */
    public double distance(ReferencedEnvelope3D env) {
        if (intersects(env)) return 0;

        double dx = 0.0;
        if (getMaxX() < env.getMinX()) dx = env.getMinX() - getMaxX();
        else if (getMinX() > env.getMaxX()) dx = getMinX() - env.getMaxX();

        double dy = 0.0;
        if (getMaxY() < env.getMinY()) dy = env.getMinY() - getMaxY();
        else if (getMinY() > env.getMaxY()) dy = getMinY() - env.getMaxY();

        double dz = 0.0;
        if (maxz < env.minz) dz = env.minz - maxz;
        else if (minz > env.maxz) dz = minz - env.maxz;

        // if either is zero, the envelopes overlap either vertically or
        // horizontally
        if (dx == 0.0 && dz == 0) return dy;
        if (dy == 0.0 && dz == 0) return dx;
        if (dx == 0 && dy == 0) return dz;
        return Math.sqrt(dx * dx + dy * dy + dz * dz);
    }

