    /**
     *  The number of arguments this <Function> requires.
     *
     *  For example &lt;Function name="strCat"&gt; [arg1][arg2]&lt;/Function&gt;.
     *  This function must have EXACTLY 2 arguments, so this function
     *  would return 2.
     *  <p>
     *  The parser might use this information to ensure validity,
     *  and its also for reporting <Function> capabilities. Users interfaces also
     *  use this information to prompt users for an appropriate number of parameters.
     *  <p>
     *  Update: This same information is available from FunctionName getArgumentCount()
     *  with the following description:
     * <ul>
     * <li>Use a positive number to indicate the number of arguments.
     *     Example: <code>add( number1, number2 ) = 2 </code></li>
     * <li>Use a negative number to indicate a minimum number:
     *    Example:  <code>concat( str1, str2,... ) has -2 </code></li>
     * </ul> 
     * FunctionName provides is part of the Filter 2.0 specification and provides
     * argument name information - in addition to this simple cunt.
     *
     * @return the number of arguments required, same as FunctionName getArgumentCount()
     */
    int getArgCount();

