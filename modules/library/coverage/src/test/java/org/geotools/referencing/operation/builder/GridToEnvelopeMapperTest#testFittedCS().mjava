    @Test
    public void testFittedCS() throws FactoryException {
        CoordinateReferenceSystem crs =
                CRS.parseWKT(
                        "FITTED_CS[\"rotated_latitude_longitude\", INVERSE_MT[PARAM_MT[\"Rotated_Pole\", "
                                + " PARAMETER[\"semi_major\", 6371229.0],  PARAMETER[\"semi_minor\", "
                                + "6371229.0],  PARAMETER[\"central_meridian\", -106.0],  "
                                + "PARAMETER[\"latitude_of_origin\", 54.0],  PARAMETER[\"scale_factor\", "
                                + "1.0],  PARAMETER[\"false_easting\", 0.0],  "
                                + "PARAMETER[\"false_northing\", 0.0]]],  GEOGCS[\"unknown\", "
                                + "DATUM[\"unknown\",  SPHEROID[\"unknown\", 6371229.0, 0.0]],  "
                                + "PRIMEM[\"Greenwich\", 0.0],  UNIT[\"degree\", 0.017453292519943295],  "
                                + "AXIS[\"Geodetic longitude\", EAST],  AXIS[\"Geodetic latitude\", NORTH]]]");
        ReferencedEnvelope envelope = new ReferencedEnvelope(-35, 35, -10, 10, crs);
        GridToEnvelopeMapper mapper = new GridToEnvelopeMapper();
        mapper.setEnvelope(envelope);
        mapper.setGridRange(new GridEnvelope2D(0, 0, 70, 20));

        assertFalse(mapper.getSwapXY());

        // the x axis should not be reversed, the y one does to account for different grid/screen
        // orientation (grid goes upwards, screen goes downwards)
        boolean[] reverseAxis = mapper.getReverseAxis();
        assertEquals(false, reverseAxis[0]);
        assertEquals(true, reverseAxis[1]);

        MathTransform mt = mapper.createTransform();
        assertThat(mt, instanceOf(AffineTransform2D.class));
        AffineTransform2D at = (AffineTransform2D) mt;
        assertEquals(1, at.getScaleX(), 0d);
        assertEquals(-1, at.getScaleY(), 0d);
    }

