    @Test
    public void testRemoveColorModel() {
        // cheap way to get a binary image, a ROI is always represented as one
        Area area = new Area(new Rectangle(0, 0, 32, 16));
        area.add(new Area(new Rectangle(128, 0, 16, 32)));
        ROI roi = new ROIShape(area);
        PlanarImage image = roi.getAsImage();
        assertThat(image.getColorModel(), instanceOf(IndexColorModel.class));
        ImageWorker worker = new ImageWorker(image);
        double[] maximumBefore = worker.getMaximums();
        assertTrue(worker.isBinary());
        // remove
        worker.removeIndexColorModel();
        RenderedImage result = worker.getRenderedImage();
        assertThat(result, not(is(image)));
        assertThat(result.getColorModel(), instanceOf(ComponentColorModel.class));
        // subtract the original
        double[] maximums = worker.getMaximums();
        assertThat(maximums, equalTo(maximumBefore));
    }

