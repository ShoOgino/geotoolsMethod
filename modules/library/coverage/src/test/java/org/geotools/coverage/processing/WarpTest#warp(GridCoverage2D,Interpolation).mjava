    /**
     * Applies a scale on the photographic view of the given coverage.
     *
     * @param coverage The coverage to scale.
     * @param interp The interpolation to use.
     */
    private void warp(final GridCoverage2D coverage, final Interpolation interp) {
        // Caching initial properties.
        final RenderedImage originalImage = coverage.getRenderedImage();
        final int w = originalImage.getWidth();
        final int h = originalImage.getHeight();

        // Getting parameters for doing a scale.
        final ParameterValueGroup param = processor.getOperation("Warp").getParameters();
        param.parameter("Source").setValue(coverage);
        param.parameter("warp").setValue(new WarpAffine(AffineTransform.getScaleInstance(2, 2)));
        param.parameter("Interpolation").setValue(interp);

        // Doing a first scale.
        final ImageLayout2 layout = new ImageLayout2(0, 0, (int) (w / 2.0), (int) (h / 2.0));
        GridCoverage2D scaled =
                (GridCoverage2D)
                        processor.doOperation(param, new Hints(JAI.KEY_IMAGE_LAYOUT, layout));
        assertEnvelopeEquals(coverage, scaled);
        RenderedImage scaledImage = scaled.getRenderedImage();
        assertEquals(w / 2.0, scaledImage.getWidth(), EPS);
        assertEquals(h / 2.0, scaledImage.getHeight(), EPS);
        if (SHOW) {
            Viewer.show(coverage);
            Viewer.show(scaled);
        } else {
            // Force computation
            assertNotNull(coverage.getRenderedImage().getData());
            assertNotNull(scaledImage.getData());
        }

        //        // Doing another scale using the default processor.
        //        scaled = (GridCoverage2D) Operations.DEFAULT.scale(scaled, 3, 3, 0, 0, interp);
        //        scaledImage = scaled.getRenderedImage();
        //        assertEnvelopeEquals(coverage, scaled);
        //        assertEquals(w * 1.5, scaledImage.getWidth(),  EPS);
        //        assertEquals(h * 1.5, scaledImage.getHeight(), EPS);
        //        if (SHOW) {
        //            Viewer.show(scaled);
        //        } else {
        //            // Force computation
        //            assertNotNull(scaledImage.getData());
        //        }
    }

