    @Test
    public void testOversamplingOnReprojection() throws Exception {
        // &BBOX=-10000000,10000000,0,20000000&WIDTH=256&HEIGHT=256
        final CoordinateReferenceSystem requestCRS = CRS.decode("EPSG:3857", true);
        final CoordinateReferenceSystem nativeCRS = CRS.decode("EPSG:4326", true);
        final ReferencedEnvelope requestBounds =
                new ReferencedEnvelope(-10000000, -5000000, 10000000, 15000000, requestCRS);
        GridGeometry2D gg = new GridGeometry2D(new GridEnvelope2D(0, 0, 256, 256), requestBounds);
        ReferencedEnvelope readBounds = requestBounds.transform(nativeCRS, true);

        // calculation with high oversampling, but not above the default limits
        ReadResolutionCalculator calcDefault =
                new ReadResolutionCalculator(gg, nativeCRS, new double[] {1, 1});
        calcDefault.setAccurateResolution(true);
        double[] resolutionsDefault = calcDefault.computeRequestedResolution(readBounds);
        // due to high stretch this far up north, should be using almost the native resolution
        assertEquals(0.0331, resolutionsDefault[0], 1e-4);
        assertEquals(0.0331, resolutionsDefault[1], 1e-4);

        // limit oversampling factor and try again
        ReadResolutionCalculator calcLimited =
                new ReadResolutionCalculator(gg, nativeCRS, new double[] {1, 1});
        calcLimited.setAccurateResolution(true);
        calcLimited.setMaxOversamplingFactor(10);
        double[] resolutionsLimited = calcLimited.computeRequestedResolution(readBounds);
        // this time it should be limited to oversampling 10 times the native resolution
        assertEquals(0.1, resolutionsLimited[0], 1e-4);
        assertEquals(0.1, resolutionsLimited[1], 1e-4);
    }

