    /**
     * Applies a subsample operation on the given coverage.
     *
     * @param coverage The coverage on which to apply the operation.
     * @param photographic {@code true} if the operation should be applied on the photographic view.
     */
    private void subsampleAverage(final GridCoverage2D coverage) {
        /*
         * Caching initial properties.
         */
        final RenderedImage originalImage = coverage.getRenderedImage();
        int w = originalImage.getWidth();
        int h = originalImage.getHeight();
        /*
         * Get the processor and prepare the first operation.
         */
        final CoverageProcessor processor = defaultProcessor;
        final ParameterValueGroup param =
                processor.getOperation("SubsampleAverage").getParameters();
        param.parameter("Source").setValue(coverage);
        param.parameter("scaleX").setValue(Double.valueOf(0.5));
        param.parameter("scaleY").setValue(Double.valueOf(0.5));
        GridCoverage2D scaled = (GridCoverage2D) processor.doOperation(param);
        RenderedImage scaledImage = scaled.getRenderedImage();
        assertEquals(w / 2.0, scaledImage.getWidth(), EPS);
        assertEquals(h / 2.0, scaledImage.getHeight(), EPS);
        w = scaledImage.getWidth();
        h = scaledImage.getHeight();
        /*
         * Check that the final envelope is close enough to the initial envelope.
         * In a perfect world they should be the same exact thing but in practice
         * this is quite hard to achieve when doing scaling due to the fact that
         * the various JAI operations use some complex laws to compute the final
         * image bounds.
         */
        assertEnvelopeEquals(scaled, coverage);
        /*
         * Show the result.
         */
        if (SHOW) {
            Viewer.show(coverage);
            Viewer.show(scaled);
        } else {
            // Force computation
            assertNotNull(coverage.getRenderedImage().getData());
            assertNotNull(scaled.getRenderedImage().getData());
        }
        /*
         * Use the default processor and then scale again.
         */
        scaled = (GridCoverage2D) Operations.DEFAULT.subsampleAverage(scaled, 0.3333, 0.3333);
        assertEnvelopeEquals(scaled, coverage);
        scaledImage = scaled.getRenderedImage();
        /*
         * I had to comment this out since sometimes this evaluation fails
         * unexpectedly. I think it is a JAI issue because here below I am using
         * the rule they claim to follow.
         */
        if (false) {
            assertEquals(w / 3.0, scaledImage.getWidth(), EPS);
            assertEquals(h / 3.0, scaledImage.getHeight(), EPS);
        }
        if (SHOW) {
            Viewer.show(scaled);
        } else {
            // Force computation
            assertNotNull(scaled.getRenderedImage().getData());
        }
    }

