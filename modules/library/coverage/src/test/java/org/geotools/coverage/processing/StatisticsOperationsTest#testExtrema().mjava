    /**
     * Tests the "Extrema" operation with a raster of floating point values.
     * This test compare the operation results with the expected ones using
     * different subsampling values.
     */
    @Test
    public void testExtrema() {
        final GridCoverage2D sampleFloatCoverage = createRaster(DataBuffer.TYPE_FLOAT);
        assertEquals(DataBuffer.TYPE_FLOAT, sampleFloatCoverage.getRenderedImage().getSampleModel().getDataType());
        final AffineTransform gridToCRS = getAffineTransform(sampleFloatCoverage);
        assertNotNull(gridToCRS);
        /*
         * Create the ROI as a JTS polygon.
         */
        final PrecisionModel   pm = new PrecisionModel();
        final GeometryFactory  gf = new GeometryFactory(pm, 0);
        final Envelope2D envelope = sampleFloatCoverage.getEnvelope2D();
        final double minX = envelope.getMinX();
        final double minY = envelope.getMinY();
        final double maxX = envelope.getCenterX();
        final double maxY = envelope.getCenterY();
        final Coordinate[] corners = new Coordinate[] {
                new Coordinate(minX, minY),
                new Coordinate(maxX, minY),
                new Coordinate(maxX, maxY),
                new Coordinate(minX, maxY),
                new Coordinate(minX, minY)
        };
        final LinearRing ring = gf.createLinearRing(corners);
        final Polygon roi = new Polygon(ring, null, gf);
        /*
         * Create the operation for the Extrema with a ROI.
         * No subsampling should be applied.
         */
        final CoverageProcessor processor = CoverageProcessor.getInstance();
        final AbstractOperation op = (AbstractOperation) processor.getOperation("Extrema");
        assertTrue(op instanceof Extrema);
        final ParameterValueGroup params = op.getParameters();
        params.parameter("Source") .setValue(sampleFloatCoverage);
        params.parameter("xPeriod").setValue(1 * XAffineTransform.getScaleX0(gridToCRS));
        params.parameter("yPeriod").setValue(1 * XAffineTransform.getScaleY0(gridToCRS));
        params.parameter("roi").setValue(roi);
        GridCoverage2D coverage = (GridCoverage2D) op.doOperation(params, null);
        double[] minimum = (double[]) coverage.getProperty("minimum");
        double[] maximum = (double[]) coverage.getProperty("maximum");
        assertEquals(1, minimum.length);
        assertEquals(1, maximum.length);
        assertEquals(250.0, minimum[0], 0);
        assertEquals(748.0, maximum[0], 0);
        /*
         * Create the operation for the Extrema with a ROI and subsampling by 2. The
         * source and the ROI are left unchanged. The maximal value is expected to be
         * slightly different than the above test because of the change in subsampling.
         */
        params.parameter("xPeriod").setValue(2 * XAffineTransform.getScaleX0(gridToCRS));
        params.parameter("yPeriod").setValue(2 * XAffineTransform.getScaleY0(gridToCRS));
        coverage = (GridCoverage2D) op.doOperation(params, null);
        minimum = (double[]) coverage.getProperty("minimum");
        maximum = (double[]) coverage.getProperty("maximum");
        assertEquals(1, minimum.length);
        assertEquals(1, maximum.length);
        assertEquals(250.0, minimum[0], 0);
        assertEquals(746.0, maximum[0], 0);
    }

