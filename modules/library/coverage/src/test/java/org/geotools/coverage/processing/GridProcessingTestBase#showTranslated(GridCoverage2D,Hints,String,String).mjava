    /**
     * Performs an affine transformation on the provided coverage. The transformation is
     * a translation by 5 units along x and y axes. The result will be displayed in a window
     * if {@link #SHOW} is set to {@code true}.
     *
     * @param coverage
     *          The coverage to apply the operation on.
     * @param hints
     *          An optional set of hints, or {@code null} if none.
     * @param asCRS
     *          The expected operation name if the resampling is performed as a CRS change.
     * @param asGG
     *          The expected operation name if the resampling is perofrmed as a Grid Geometry change.
     */
    protected static void showTranslated(GridCoverage2D coverage,
                                   final Hints    hints,
                                   final String   asCRS,
                                   final String   asGG)
    {
        final AffineTransform atr = AffineTransform.getTranslateInstance(5, 5);
        atr.concatenate(getAffineTransform(coverage));
        final MathTransform tr = ProjectiveTransform.create(atr);
        CoordinateReferenceSystem crs = coverage.getCoordinateReferenceSystem();
        crs = new DefaultDerivedCRS("Translated", crs, tr, crs.getCoordinateSystem());
        assertEquals(asCRS,
                showProjected(coverage, crs, null, hints));

        // Same operation, given the translation in the GridGeometry argument rather than the CRS.
        final GridGeometry2D gg = new GridGeometry2D(null, tr, null);
        assertEquals(asGG,
                showProjected(coverage, null, gg, hints));

        // TODO: we should probably invoke "assertRasterEquals" with both coverages.
    }

