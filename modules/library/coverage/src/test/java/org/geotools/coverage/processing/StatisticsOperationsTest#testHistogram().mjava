    /**
     * Tests the "Histogram" operation with a raster of byte values. This test compare the operation
     * results with the expected ones using different subsampling values.
     */
    @Test
    public void testHistogram() {
        final GridCoverage2D sampleByteCoverage = createRaster(DataBuffer.TYPE_BYTE);
        assertEquals(
                DataBuffer.TYPE_BYTE,
                sampleByteCoverage.getRenderedImage().getSampleModel().getDataType());
        final AffineTransform gridToCRS = getAffineTransform(sampleByteCoverage);
        assertNotNull(gridToCRS);
        /*
         * Create the ROI as a JTS polygon.
         */
        final PrecisionModel pm = new PrecisionModel();
        final GeometryFactory gf = new GeometryFactory(pm, 0);
        final Envelope2D envelope = sampleByteCoverage.getEnvelope2D();
        final double minX = envelope.getMinX();
        final double maxY = envelope.getMaxY();
        final double minY = maxY - envelope.getHeight() / 16;
        final double maxX = minX + envelope.getWidth() / 16;
        final Coordinate[] coord = {
            new Coordinate(minX, maxY),
            new Coordinate(maxX, maxY),
            new Coordinate(maxX, minY),
            new Coordinate(minX, minY),
            new Coordinate(minX, maxY)
        };
        final LinearRing ring = gf.createLinearRing(coord);
        final Polygon roi = new Polygon(ring, null, gf);
        /*
         * Create the operation for the Histogram with a ROI.
         * No subsampling should be applied.
         */
        final CoverageProcessor processor = CoverageProcessor.getInstance();
        final AbstractOperation op = (AbstractOperation) processor.getOperation("Histogram");
        assertTrue(op instanceof Histogram);
        final ParameterValueGroup params = op.getParameters();
        params.parameter("Source").setValue(sampleByteCoverage);
        params.parameter("xPeriod").setValue(1 * XAffineTransform.getScaleX0(gridToCRS));
        params.parameter("yPeriod").setValue(1 * XAffineTransform.getScaleY0(gridToCRS));

        params.parameter("roi").setValue(roi);

        GridCoverage2D coverage = (GridCoverage2D) op.doOperation(params, null);
        javax.media.jai.Histogram histogram =
                (javax.media.jai.Histogram)
                        coverage.getProperty(Histogram.GT_SYNTHETIC_PROPERTY_HISTOGRAM);
        assertEquals(0, histogram.getBinSize(0, 255));
        assertEquals(1, histogram.getBinSize(0, 60));
        /*
         * Create the operation for the Histogram with a ROI and subsampling by 7. The
         * source and the ROI are left unchanged. The histogram values are expected to
         * be slightly different than the above test because of the change in subsampling.
         */
        params.parameter("xPeriod").setValue(7 * XAffineTransform.getScaleX0(gridToCRS));
        params.parameter("yPeriod").setValue(7 * XAffineTransform.getScaleY0(gridToCRS));
        coverage = (GridCoverage2D) op.doOperation(params, null);
        histogram =
                (javax.media.jai.Histogram)
                        coverage.getProperty(Histogram.GT_SYNTHETIC_PROPERTY_HISTOGRAM);
        assertEquals(0, histogram.getBinSize(0, 255));
        assertEquals(0, histogram.getBinSize(0, 60));
        assertEquals(1, histogram.getBinSize(0, 56));
    }

