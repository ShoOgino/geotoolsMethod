    /**
     * Tests the "FilteredSubsamble" operation using the given hints.
     *
     * @param coverage The coverage on which to apply the operation.
     * @param interp The interpolation to use.
     * @param filter The filter to be used.
     * @param hints An optional set of hints, or {@code null} if none.
     */
    private void filteredSubsample(
            final GridCoverage2D coverage,
            final Interpolation interp,
            final float[] filter,
            final Hints hints) {
        // Caching initial properties.
        RenderedImage originalImage = coverage.getRenderedImage();
        boolean isIndexed = originalImage.getColorModel() instanceof IndexColorModel;
        int w = originalImage.getWidth();
        int h = originalImage.getHeight();

        // Creating a default processor.
        final CoverageProcessor processor =
                (hints != null) ? CoverageProcessor.getInstance(hints) : this.processor;

        // Getting parameters for the FilteredSubsample operation.
        final ParameterValueGroup param =
                processor.getOperation("FilteredSubsample").getParameters();
        param.parameter("Source").setValue(coverage);
        param.parameter("scaleX").setValue(Integer.valueOf(2));
        param.parameter("scaleY").setValue(Integer.valueOf(2));
        param.parameter("qsFilterArray").setValue(filter);
        param.parameter("Interpolation").setValue(interp);

        // Scale a first time by 2.
        GridCoverage2D scaled = (GridCoverage2D) processor.doOperation(param);
        RenderedImage scaledImage = scaled.getRenderedImage();
        assertEquals(w / 2.0, scaledImage.getWidth(), EPS);
        assertEquals(h / 2.0, scaledImage.getHeight(), EPS);
        assertTrue(
                (interp instanceof InterpolationNearest)
                        || !(scaledImage.getColorModel() instanceof IndexColorModel));

        isIndexed = scaledImage.getColorModel() instanceof IndexColorModel;
        w = scaledImage.getWidth();
        h = scaledImage.getHeight();
        assertEnvelopeEquals(coverage, scaled);
        if (SHOW) {
            Viewer.show(coverage);
            Viewer.show(scaled);
        } else {
            // Force computation
            assertNotNull(coverage.getRenderedImage().getData());
            assertNotNull(scaled.getRenderedImage().getData());
        }

        // Scale a second time by 3.
        scaled =
                (GridCoverage2D) Operations.DEFAULT.filteredSubsample(scaled, 3, 3, filter, interp);
        scaledImage = scaled.getRenderedImage();
        assertEquals(w / 3.0, scaledImage.getWidth(), 1.0 / 3 + EPS);
        assertEquals(h / 3.0, scaledImage.getHeight(), 1.0 / 3 + EPS);
        assertTrue(
                !isIndexed
                        || (interp instanceof InterpolationNearest)
                        || !(scaledImage.getColorModel() instanceof IndexColorModel));
        assertEnvelopeEquals(coverage, scaled);
        if (SHOW) {
            Viewer.show(scaled);
        } else {
            // Force computation
            assertNotNull(scaledImage.getData());
        }
    }

