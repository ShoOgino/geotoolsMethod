    /**
     * Returns a sequence of float values for a given point in the coverage.
     *
     * @param  point The coordinate point where to evaluate.
     * @param  time  The date where to evaluate.
     * @param  dest  An array in which to store values, or {@code null} to create a new array.
     * @return The {@code dest} array, or a newly created array if {@code dest} was null.
     * @throws PointOutsideCoverageException if {@code point} or {@code time} is outside coverage.
     * @throws CannotEvaluateException if the computation failed for some other reason.
     */
    public final float[] evaluate(final Point2D point, final Date time, float[] dest)
            throws CannotEvaluateException
    {
        try {
            return evaluate(toDirectPosition(point, time), dest);
        } catch (OrdinateOutsideCoverageException exception) {
            if (exception.getOutOfBoundsDimension() == temporalDimension) {
                exception = new OrdinateOutsideCoverageException(exception, time);
            }
            throw exception;
        }
    }

