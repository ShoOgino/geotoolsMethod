    /**
     * Replaces all occurences of the given color (usually opaque) by a fully transparent color. Currents implementation supports image backed by any
     * {@link IndexColorModel}, or by {@link ComponentColorModel} with {@link DataBuffer#TYPE_BYTE TYPE_BYTE}. More types may be added in future
     * GeoTools versions.
     * 
     * @param transparentColor The color to make transparent.
     * @return this image worker.
     * 
     * @throws IllegalStateException if the current {@linkplain #image} has an unsupported color model.
     */
    public final ImageWorker makeColorTransparent(final Color transparentColor)
            throws IllegalStateException {
        if (transparentColor == null) {
            throw new IllegalArgumentException(Errors.format(ErrorKeys.NULL_ARGUMENT_$1,
                    "transparentColor"));
        }
        final ColorModel cm = image.getColorModel();
        if (cm instanceof IndexColorModel) {
            return maskIndexColorModel(transparentColor);
        } else if (cm instanceof ComponentColorModel) {
            switch (image.getSampleModel().getDataType()) {
            case DataBuffer.TYPE_BYTE: {
                return maskComponentColorModelByte(transparentColor);
            }
            // Add other types here if we support them...
            }
        }
        throw new IllegalStateException(Errors.format(ErrorKeys.UNSUPPORTED_DATA_TYPE));
    }

