    public ImageWorker mosaic(RenderedImage[] images, MosaicType type, PlanarImage[] alphas, ROI[] rois, double[][] thresholds,
            Range[] nodata) {
        // ParameterBlock creation
        ParameterBlock pb = new ParameterBlock();
        int srcNum = 0;
        //pb.addSource(image);
        if(images != null && images.length > 0){
            for(int i = 0; i < images.length; i++){
                if(images[i] != null){
                    pb.addSource(images[i]);
                    srcNum++;
                }
            }
        }
        // Setting ROIs
        ROI[] roisNew = null;
        if(rois != null && srcNum > 0){
            roisNew = new ROI[srcNum];
            System.arraycopy(rois, 0, roisNew, 0, rois.length);
        }
        // Setting Alphas
        PlanarImage[] alphasNew = null;
        if(alphas != null && srcNum > 0){
            alphasNew = new PlanarImage[srcNum];
            System.arraycopy(alphas, 0, alphasNew, 0, alphas.length);
        }
        // Setting NoData
        Range[] nodataNew = null;
        boolean noInternalNoData = true;
        if(nodata != null && srcNum > 0){
            nodataNew = new Range[srcNum];
            System.arraycopy(nodata, 0, nodataNew, 0, nodata.length);
        } else {
            nodataNew = new Range[srcNum];
            for(int i = 0; i < srcNum; i++){
                RenderedImage img = pb.getRenderedSource(i);
                Range nodProp = extractNoDataProperty(img);
                noInternalNoData &= (nodProp == null);
                nodataNew[i] = nodProp;
            }
        }
        
        if(noInternalNoData && thresholds != null){
            nodataNew = handleMosaicThresholds(thresholds, srcNum);
        }
        // Setting the parameters
        pb.add(type);
        pb.add(alphasNew);
        pb.add(roisNew);
        pb.add(thresholds);
        pb.add(background);
        pb.add(nodataNew);
        image = JAI.create("Mosaic", pb, getRenderingHints());
        // Setting the final ROI as union of the older ROIs, assuming
        // we did not apply a background color, in that case, there is no more ROI to
        // care for
        if(background == null) {
            if(roisNew != null ) {
                ROI finalROI = mosaicROIs(pb.getSources(), roisNew);
                setROI(finalROI);
            }
        } else {
            setROI(null);
        }
        
        return this;
    }

