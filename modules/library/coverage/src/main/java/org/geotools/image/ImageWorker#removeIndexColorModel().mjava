    /**
     * If the image has an indexed color model, removes it, and replaces it with a component color
     * model. can be useful before a band-merge if the image in question is not meant to be color
     * expanded.
     */
    public final ImageWorker removeIndexColorModel() {
        if (image.getColorModel() instanceof IndexColorModel) {
            LookupTable lut = null;
            SampleModel sampleModel = image.getSampleModel();
            int dataType = sampleModel.getDataType();
            switch (dataType) {
                case DataBuffer.TYPE_BYTE:
                    lut = LookupTableFactory.create(IDENTITY_BYTE);
                    break;

                case DataBuffer.TYPE_USHORT:
                    boolean unsigned = dataType == DataBuffer.TYPE_SHORT;
                    lut = LookupTableFactory.create(IDENTITY_SHORT, unsigned);
                    break;

                default:
                    throw new IllegalArgumentException(
                            Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$2, "datatype", dataType));
            }

            // prepare color model and sample model
            final ComponentColorModel destinationColorModel =
                    new ComponentColorModel(
                            ColorSpace.getInstance(ColorSpace.CS_GRAY),
                            false,
                            false,
                            Transparency.OPAQUE,
                            dataType);
            final SampleModel destinationSampleModel =
                    destinationColorModel.createCompatibleSampleModel(
                            sampleModel.getWidth(), sampleModel.getHeight());
            ImageLayout layout = new ImageLayout(image);
            layout.setColorModel(destinationColorModel);
            layout.setSampleModel(destinationSampleModel);

            // perform the lookup
            final RenderingHints oldRi = this.getRenderingHints();
            final RenderingHints newRi = (RenderingHints) oldRi.clone();
            newRi.add(new RenderingHints(JAI.KEY_IMAGE_LAYOUT, layout));
            try {
                setRenderingHints(newRi);
                lookup(lut);
            } finally {
                // restore RI
                this.setRenderingHints(oldRi);
            }
        }

        return this;
    }

