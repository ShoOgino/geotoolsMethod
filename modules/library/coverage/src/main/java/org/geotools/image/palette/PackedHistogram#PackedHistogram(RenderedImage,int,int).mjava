    PackedHistogram(RenderedImage image, int stepX, int stepY) {
        // build a reduced map of the colors
        colorMap = new ColorMap();

        final int minX = image.getMinTileX();
        final int maxX = minX + image.getNumXTiles();
        final int minY = image.getMinTileY();
        final int maxY = minY + image.getNumYTiles();
        this.shift = 0;
        for (int x = minX; x < maxX; x++) {
            for (int y = minY; y < maxY; y++) {
                Raster tile = image.getTile(x, y);
                shift = updateColorMap(image, tile, colorMap, shift, stepX, stepY);
            }
        }

        // turn it into an array for indexed access and reduced memory consumption
        histogram = new HistogramBin[colorMap.size()];
        int i = 0;
        for (ColorEntry ce : colorMap) {
            histogram[i++] = new HistogramBin(ce.color, ce.value);
        }
        // System.out.println("Histogram stats");
        // colorMap.printStats();
    }

