	/**
	 * Forces the {@linkplain #image} color model to the
	 *  IHS color space. If the current color
	 * space is already of IHS type, then this
	 * method does nothing. This operation may loose the alpha channel.
	 *
	 * @return this {@link ImageWorker}.
	 *
	 * @see ColorConvertDescriptor
	 */
	public final ImageWorker forceColorSpaceIHS() {
		if (!(image.getColorModel().getColorSpace() instanceof IHSColorSpace)) {
			forceComponentColorModel();
			 // Create a ColorModel to convert the image to IHS.
			final IHSColorSpace ihs = IHSColorSpace.getInstance();
			final int numBits=image.getColorModel().getComponentSize(0);
			final ColorModel ihsColorModel = new ComponentColorModel(ihs, new int[] {
					numBits, numBits, numBits }, false, false, Transparency.OPAQUE,
					image.getSampleModel().getDataType());
			// Create a ParameterBlock for the conversion.
			final ParameterBlock pb = new ParameterBlock();
			pb.addSource(image);
			pb.add(ihsColorModel);
			// Do the conversion.
			image = JAI.create("colorconvert", pb);
			invalidateStatistics();
		}

		// All post conditions for this method contract.
		assert image.getColorModel().getColorSpace() instanceof IHSColorSpace;
		return this;
	}

