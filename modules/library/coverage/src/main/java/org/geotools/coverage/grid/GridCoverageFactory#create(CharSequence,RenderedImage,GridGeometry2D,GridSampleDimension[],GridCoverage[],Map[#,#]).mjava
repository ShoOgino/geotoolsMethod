    /**
     * Constructs a grid coverage from the specified {@linkplain RenderedImage image} and
     * {@linkplain GridGeometry2D grid geometry}. The {@linkplain Envelope envelope} (including the
     * {@linkplain CoordinateReferenceSystem coordinate reference system}) is inferred from the grid
     * geometry.
     *
     * <p>This is the most general constructor, the one that gives the maximum control on the grid
     * coverage to be created. Every {@code create} methods will ultimately delegate their work this
     * master method. Developpers can override this method if they want to intercept the creation of
     * all {@link GridCoverage2D} objects in this factory.
     *
     * @param name The grid coverage name.
     * @param image The image.
     * @param gridGeometry The grid geometry (must contains an {@linkplain
     *     GridGeometry2D#getEnvelope envelope} with its {@linkplain
     *     GridGeometry2D#getCoordinateReferenceSystem coordinate reference system} and a
     *     "{@linkplain GridGeometry2D#getGridToCoordinateSystem grid to CRS}" transform).
     * @param bands Sample dimensions for each image band, or {@code null} for default sample
     *     dimensions. If non-null, then this array's length must matches the number of bands in
     *     {@code image}.
     * @param sources The sources for this grid coverage, or {@code null} if none.
     * @param properties The set of properties for this coverage, or {@code null} none.
     * @return The new grid coverage.
     * @since 2.2
     */
    public GridCoverage2D create(
            final CharSequence name,
            final RenderedImage image,
            GridGeometry2D gridGeometry,
            final GridSampleDimension[] bands,
            final GridCoverage[] sources,
            final Map<?, ?> properties) {
        /*
         * Makes sure that the specified grid geometry has a CRS.
         * If no CRS were specified, a default one is used.
         */
        if (!gridGeometry.isDefined(GridGeometry2D.CRS_BITMASK)) {
            final int dimension = gridGeometry.getDimension();
            gridGeometry = new GridGeometry2D(gridGeometry, getDefaultCRS(dimension));
        }
        final GridCoverage2D coverage =
                new GridCoverage2D(
                        name,
                        PlanarImage.wrapRenderedImage(image),
                        gridGeometry,
                        bands,
                        sources,
                        properties,
                        userHints);
        coverage.tileEncoding = (String) hints.get(Hints.TILE_ENCODING);
        return coverage;
    }

