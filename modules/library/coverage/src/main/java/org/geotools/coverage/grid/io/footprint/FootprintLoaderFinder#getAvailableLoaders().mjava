    /**
     * Finds all available implementations of {@link FootprintLoaderSpi} which have registered 
     * using the services mechanism.
     *
     * @return An unmodifiable {@link Set} of all discovered modules which have registered factories
     */
    public static synchronized Set<FootprintLoaderSpi> getAvailableLoaders() {
        // get all FootprintLoaderSpi implementations
        scanForPlugins();
        final Iterator<FootprintLoaderSpi> it = getServiceRegistry().getServiceProviders(
                FootprintLoaderSpi.class, true);
        final Set<FootprintLoaderSpi> loaders = new HashSet<FootprintLoaderSpi>();
        while (it.hasNext()) {
            loaders.add(it.next());
        }
        return Collections.unmodifiableSet(loaders);
    }

