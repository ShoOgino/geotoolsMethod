    /**
     * Returns the range of values in this sample dimension. This is the union of the range of
     * values of every categories, excluding {@code NaN} values. A {@link NumberRange} object gives
     * more informations than {@link #getMinimumValue} and {@link #getMaximumValue} methods since it
     * contains also the data type (integer, float, etc.) and inclusion/exclusion informations.
     *
     * @return The range of values. May be {@code null} if this sample dimension has no quantitative
     *     category.
     * @see Category#getRange
     * @see #getMinimumValue
     * @see #getMaximumValue
     * @todo We should do a better job in {@code CategoryList.getRange()} when selecting the
     *     appropriate data type. {@link TypeMap#getSampleDimensionType} may be of some help.
     */
    public NumberRange<? extends Number> getRange() {
        return (categories != null) ? categories.getRange() : null;
    }

