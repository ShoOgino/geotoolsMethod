    /**
     * Returns a string representation of this category.
     * The returned string is implementation dependent.
     * It is usually provided for debugging purposes.
     */
    @Override
    public String toString() {
        final StringBuilder buffer = new StringBuilder(Classes.getShortClassName(this));
        buffer.append("(\"").append(name).append("\":[");
        if (Double.isNaN(minimum) && Double.isNaN(maximum)) {
            buffer.append("NaN(").append(Math.round(inverse.minimum))
                  .append("...") .append(Math.round(inverse.maximum)).append(')');
        } else {
            if (Classes.isInteger(getRange().getElementClass())) {
                buffer.append(Math.round(minimum)).append("...")
                      .append(Math.round(maximum)); // Inclusive
            } else {
                buffer.append(minimum).append(" ... ")
                      .append(maximum); // Inclusive
            }
        }
        return buffer.append("])").toString();
    }

