    /**
     * Set the <cite>region of interest</cite> (ROI). A {@code null} set the ROI to the whole {@linkplain #image}. The ROI is used by statistical
     * methods like {@link #getMinimums} and {@link #getMaximums}.
     * 
     * @param roi The new region of interest.
     * @return This ImageWorker
     * 
     * @see #getMinimums
     * @see #getMaximums
     */
    public final ImageWorker setROI(final ROI roi) {
        this.roi = roi;
        // If ROI == null remove it also from the image properties
        PlanarImage pl = getPlanarImage();
        if (roi == null) {
            pl.removeProperty("ROI");
            // get it back, in some ops like mosaic setting it to null has no effect,
            // will just make it pick from the first source...
            final Object property = pl.getProperty("ROI");
            if(property != null && property != Image.UndefinedProperty) {
                // a ROIGeometry from a rectangle is a good substitute in this case
                pl.setProperty("ROI", new ROIGeometry(JTS.toPolygon(new Rectangle(image.getMinX(), image.getMinY(), image.getWidth(), image.getHeight()))));
            }
        } else {
            pl.setProperty("ROI", roi);
        }
        image = pl;

        invalidateStatistics();
        return this;
    }

