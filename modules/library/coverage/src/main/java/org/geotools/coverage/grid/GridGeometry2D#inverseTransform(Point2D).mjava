    /**
     * Transforms a point using the inverse of {@link #getGridToCRS2D()}.
     *
     * @param point The point in logical coordinate system.
     * @return A new point in the grid coordinate system.
     * @throws InvalidGridGeometryException if a two-dimensional inverse transform is not available
     *     for this grid geometry.
     * @throws CannotEvaluateException if the transformation failed.
     */
    final Point2D inverseTransform(final Point2D point) throws InvalidGridGeometryException {
        if (gridFromCRS2D != null) {
            try {
                return gridFromCRS2D.transform(point, null);
            } catch (TransformException exception) {
                throw new CannotEvaluateException(
                        Errors.format(
                                ErrorKeys.CANT_EVALUATE_$1,
                                AbstractGridCoverage.toString(point, Locale.getDefault()),
                                exception));
            }
        }
        throw new InvalidGridGeometryException(ErrorKeys.NO_TRANSFORM2D_AVAILABLE);
    }

