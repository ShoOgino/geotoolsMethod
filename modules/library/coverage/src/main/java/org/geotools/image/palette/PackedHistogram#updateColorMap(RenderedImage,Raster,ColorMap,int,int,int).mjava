    private int updateColorMap(RenderedImage image, Raster tile, ColorMap colorMap, int shift,
            int stepX, int stepY) {
        final int minX = Math.max(tile.getMinX(), image.getMinX());
        final int maxX = Math.min(tile.getWidth() + tile.getMinX(),
                image.getMinX() + image.getWidth());
        final int minY = Math.max(tile.getMinY(), image.getMinY());
        final int maxY = Math.min(tile.getHeight() + tile.getMinY(),
                image.getMinY() + image.getHeight());
        int bands = tile.getNumBands();
        int[] pixel = new int[bands];
        for (int x = minX; x < maxX; x += stepX) {
            for (int y = minY; y < maxY; y += stepY) {
                // grab the pixel and the color
                tile.getPixel(x, y, pixel);
                int red, green, blue, alpha;

                if(bands == 1 || bands == 2) {
                    red = green = blue = pixel[0];
                    alpha = bands == 2 ? pixel[1] : 255;
                } else  {
                    red = pixel[0];
                    green = pixel[1];
                    blue = pixel[2];
                    alpha = bands == 4 ? pixel[3] : 255;
                }

                // normalize colors with very low alpha = 0 to just one
                if (alpha <= ALPHA_THRESHOLD) {
                    red = 255;
                    green = 255;
                    blue = 255;
                    alpha = 0;
                }

                if (shift > 0) {
                    red = shift(red, shift);
                    green = shift(green, shift);
                    blue = shift(blue, shift);
                    alpha = shift(alpha, shift);
                }
                colorMap.increment(red, green, blue, alpha);

                if (colorMap.size() > Short.MAX_VALUE) {
                    shift++;
                    shiftColorMap(colorMap);
                }
            }
        }

        return shift;
    }

