    /**
     * Constructs a grid coverage from the specified matrix and {@linkplain Envelope envelope}.
     * A default color palette is built from the minimal and maximal values found in the matrix.
     *
     * @param name     The grid coverage name.
     * @param matrix   The matrix data in a {@code [row][column]} layout.
     *                 {@linkplain Float#NaN NaN} values are mapped to a transparent color.
     * @param envelope The envelope.
     * @return The new grid coverage.
     *
     * @since 2.2
     */
    public GridCoverage2D create(final CharSequence name,
                                 final float[][]    matrix,
                                 final Envelope     envelope)
    {
        int width  = 0;
        int height = matrix.length;
        for (int j=0; j<height; j++) {
            final float[] row = matrix[j];
            if (row != null) {
                if (row.length > width) {
                    width = row.length;
                }
            }
        }
        final WritableRaster raster;
        // Need to use JAI raster factory, since WritableRaster
        // does not supports TYPE_FLOAT as of J2SE 1.5.0_06.
        raster = RasterFactory.createBandedRaster(DataBuffer.TYPE_FLOAT, width, height, 1, null);
        for (int j=0; j<height; j++) {
            int i = 0;
            final float[] row = matrix[j];
            if (row != null) {
                for (; i<row.length; i++) {
                    raster.setSample(i, j, 0, row[i]);
                }
            }
            for (; i<width; i++) {
                raster.setSample(i, j, 0, Float.NaN);
            }
        }
        return create(name, raster, envelope);
    }

