    /**
     * Read the current grid coverage from the stream.
     *
     * <p>Example:
     *
     * <pre>
     * <code>
     * </code>
     * </pre>
     *
     * @param parameters Optional parameters matching {@link Format#getReadParameters}.
     * @return a {@linkplain GridCoverage grid coverage} from the input source.
     * @throws InvalidParameterNameException if a parameter in {@code parameters} doesn't have a
     *     recognized name.
     * @throws InvalidParameterValueException if a parameter in {@code parameters} doesn't have a
     *     valid value.
     * @throws ParameterNotFoundException if a parameter was required for the operation but was not
     *     provided in the {@code parameters} list.
     * @throws CannotCreateGridCoverageException if the coverage can't be created for a logical
     *     reason (for example an unsupported format, or an inconsistency found in the data).
     * @throws IOException if a read operation failed for some other input/output reason, including
     *     {@link FileNotFoundException} if no file with the given {@code name} can be found, or
     *     {@link javax.imageio.IIOException} if an error was thrown by the underlying image
     *     library.
     */
    public abstract GridCoverage2D read(GeneralParameterValue[] parameters)
            throws IllegalArgumentException, IOException;

