    public int getNumOverviews(SourceSPIProvider sourceSpiProvider) {
        ImageInputStream imageStream = null;
        ImageReader reader = null;
        int numOverviews;
        try {
            // Creating stream
            imageStream = sourceSpiProvider.getStream();
            // Creating reader
            reader = sourceSpiProvider.getReader();
            // Setting input
            reader.setInput(imageStream, false, false);
            // Getting number of images
            numOverviews = reader.getNumImages(true) - 1;
        } catch (Exception e) {
            if (LOGGER.isLoggable(Level.WARNING)) {
                LOGGER.log(
                        Level.WARNING,
                        "Unable to create a Reader for: " + sourceSpiProvider.getSource(),
                        e);
            }
            throw new IllegalArgumentException(e);
        } finally {
            if (imageStream != null) {
                try {
                    imageStream.close();
                } catch (Exception e) {
                    if (LOGGER.isLoggable(Level.SEVERE)) {
                        LOGGER.log(Level.SEVERE, e.getMessage(), e);
                    }
                } finally {
                    if (reader != null) {
                        reader.dispose();
                    }
                }
            }
        }
        return numOverviews;
    }

