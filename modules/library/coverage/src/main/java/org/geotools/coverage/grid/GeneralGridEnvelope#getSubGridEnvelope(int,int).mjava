    /**
     * Returns a new grid envelope that encompass only some dimensions of this grid envelope. This
     * method copies this grid range into a new grid envelope, beginning at dimension {@code lower}
     * and extending to dimension {@code upper-1} inclusive. Thus the dimension of the sub grid
     * envelope is {@code upper - lower}.
     *
     * @param lower The first dimension to copy, inclusive.
     * @param upper The last dimension to copy, exclusive.
     * @return The sub grid envelope.
     * @throws IndexOutOfBoundsException if an index is out of bounds.
     */
    public GeneralGridEnvelope getSubGridEnvelope(final int lower, final int upper)
            throws IndexOutOfBoundsException {
        final int curDim = index.length / 2;
        final int newDim = upper - lower;
        if (lower < 0 || lower > curDim) {
            throw new IndexOutOfBoundsException(
                    Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$2, "lower", lower));
        }
        if (newDim < 0 || upper > curDim) {
            throw new IndexOutOfBoundsException(
                    Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$2, "upper", upper));
        }
        final GeneralGridEnvelope sub = new GeneralGridEnvelope(newDim);
        System.arraycopy(index, lower, sub.index, 0, newDim);
        System.arraycopy(index, lower + curDim, sub.index, newDim, newDim);
        return sub;
    }

