    /**
     * Returns a sample dimension using new {@link #getScale scale} and {@link #getOffset offset}
     * coefficients. Other properties like the {@linkplain #getRange sample value range},
     * {@linkplain #getNoDataValues no data values} and {@linkplain #getColorModel colors}
     * are unchanged.
     *
     * @param scale  The value which is multiplied to grid values for the new sample dimension.
     * @param offset The value to add to grid values for the new sample dimension.
     * @return The scaled sample dimension.
     *
     * @see #getScale
     * @see #getOffset
     * @see Category#rescale
     */
    public GridSampleDimension rescale(final double scale, final double offset) {
        final MathTransform1D sampleToGeophysics = Category.createLinearTransform(scale, offset);
        final Category[] categories = (Category[]) getCategories().toArray();
        boolean changed = false;
        for (int i=0; i<categories.length; i++) {
            Category category = categories[i];
            if (category.isQuantitative()) {
                category = category.rescale(sampleToGeophysics);
            }
            category = category.geophysics(isGeophysics);
            if (!categories[i].equals(category)) {
                categories[i] = category;
                changed = true;
            }
        }
        return changed ? new GridSampleDimension(description, categories, getUnits()) : this;
    }

