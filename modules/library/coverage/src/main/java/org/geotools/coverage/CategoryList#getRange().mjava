    /**
     * Returns the range of values in this category list. This is the union of the range of values
     * of every categories, excluding {@code NaN} values. A {@link NumberRange} object give more
     * informations than {@link org.opengis.CV_SampleDimension#getMinimum} and {@link
     * org.opengis.CV_SampleDimension#getMaximum} since it contains also the type (integer, float,
     * etc.) and inclusion/exclusion informations.
     *
     * @return The range of values. May be {@code null} if this category list has no quantitative
     *     category.
     * @see Category#getRange
     */
    public final NumberRange<?> getRange() {
        if (range == null) {
            NumberRange<?> range = null;
            for (int i = 0; i < categories.length; i++) {
                final NumberRange extent = categories[i].getRange();
                if (!Double.isNaN(extent.getMinimum()) && !Double.isNaN(extent.getMaximum())) {
                    if (range != null) {
                        range = range.union(extent);
                    } else {
                        range = extent;
                    }
                }
            }
            this.range = range;
        }
        return range;
    }

