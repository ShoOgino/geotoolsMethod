    /**
	 * Constructs a new grid envelope.
	 *
	 * @param low
	 *          The valid minimum inclusive grid coordinate. The array contains a minimum
	 *          value (inclusive) for each dimension of the grid coverage. The lowest valid
	 *          grid coordinate is often zero, but this is not mandatory.
	 * @param high
	 *          The valid maximum grid coordinate. The array contains a maximum
	 *          value for each dimension of the grid coverage.
	 * @param isHighIncluded
	 *          {@code true} if the {@code high} values are inclusive (as in ISO 19123
	 *          specification), or {@code false} if they are exclusive (as in Java usage).
	 *          This argument does not apply to low values, which are always inclusive.
	 *
	 * @see #getLow
	 * @see #getHigh
	 */
	public GeneralGridEnvelope(final int[] low, final int[] high, final boolean isHighIncluded) {
	    if (low.length != high.length) {
	        throw new IllegalArgumentException(Errors.format(
	                ErrorKeys.MISMATCHED_DIMENSION_$2, low.length, high.length));
	    }
	    index = new int[low.length + high.length];
	    System.arraycopy(low,  0, index, 0,           low.length);
	    System.arraycopy(high, 0, index, low.length, high.length);
	    if (isHighIncluded) {
	        for (int i=low.length; i<index.length; i++) {
	            index[i]++;
	        }
	    }
	    checkCoherence();
	}

