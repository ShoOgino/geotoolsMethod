    /**
     * Takes one rendered or renderable image and an array of integer constants, and performs a bit-wise logical "xor" between every pixel in the same
     * band of the source and the constant from the corresponding array entry. See JAI {@link XorConstDescriptor} for details.
     * 
     * @see XorConstDescriptor
     */
    public final ImageWorker xorConst(int[] values) {
        ParameterBlock pb = new ParameterBlock();
        pb.setSource(image, 0);
        if (JAIExt.isJAIExtOperation(OPERATION_CONST_OP_NAME)) {
            double[] valuesD = new double[values.length];
            for (int i = 0; i < values.length; i++) {
                valuesD[i] = values[i];
            }
            prepareOpConstOperation(Operator.XOR, valuesD, pb, roi, nodata, true);
            image = JAI.create(OPERATION_CONST_OP_NAME, pb, getRenderingHints());
        } else {
            image = JAI.create("XorConst", pb, getRenderingHints());
        }
        // image = XorConstDescriptor.create(image, values, getRenderingHints());
        invalidateStatistics();
        return this;
    }

