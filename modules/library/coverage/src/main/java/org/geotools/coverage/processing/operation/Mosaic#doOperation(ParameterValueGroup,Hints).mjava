    public Coverage doOperation(final ParameterValueGroup parameters, final Hints hints)
            throws CoverageProcessingException {
        /*
         * Extracts the source grid coverages now as a List. The sources will be set in the ParameterBlockJAI (as RenderedImages) later.
         */
        final Collection<GridCoverage2D> sourceCollection = new ArrayList<GridCoverage2D>();
        // The ViewType is used in post processing
        ViewType primarySourceType = extractSources(parameters, sourceCollection);
        // Selection of the source number
        int numSources = sourceCollection.size();
        GridCoverage2D[] sources = new GridCoverage2D[numSources];
        // Creation of an array of GridCoverage2D from the input collection
        sourceCollection.toArray(sources);
        // Selection of the CRS of the first coverage in order to check that the CRS is the same for all the GridCoverages
        GridCoverage2D firstCoverage = sources[PRIMARY_SOURCE_INDEX];
        CoordinateReferenceSystem crs = firstCoverage.getCoordinateReferenceSystem();

        for (int i = 0; i < sources.length; i++) {
            final GridCoverage2D source = sources[i];
            CoordinateReferenceSystem crsSource = source.getCoordinateReferenceSystem();
            if (!CRS.equalsIgnoreMetadata(crs, crsSource)) {
                throw new CoverageProcessingException("Input Coverages have different CRS");
            }
        }
        // Preparation of the input parameters and resampling of the source images
        final Params params = prepareParameters(parameters, sources, hints);

        /*
         * Applies the operation. This delegates the work to the chain of 'deriveXXX' methods.
         */
        GridCoverage2D coverage = deriveGridCoverage(sources, params);
        if (primarySourceType != null) {
            coverage = coverage.view(primarySourceType);
        }
        return coverage;
    }

