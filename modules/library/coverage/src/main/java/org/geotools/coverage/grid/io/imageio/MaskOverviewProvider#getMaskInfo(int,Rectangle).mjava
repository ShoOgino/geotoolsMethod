    /**
     * Returns a new {@link MaskInfo} instance containing all the parameters to set for accessing the desired image index
     */
    public MaskInfo getMaskInfo(int imageIndex, Rectangle sourceRegion) {
        MaskInfo info = null;
        if (numInternalMasks + numExternalMasks > 0) {
            // Create a new MaskInfo instance
            info = new MaskInfo();
            // Parameter definiton
            ImageReadParam readParam = new ImageReadParam();
            readParam.setSourceSubsampling(1, 1, 0, 0);
            readParam.setSourceRegion(sourceRegion);
            info.readParameters = readParam;
            // Checks on the overviews
            if (imageIndex > 0) {
                // Check if the ImageChoice is contained inside internal or external masks
                if (imageIndex < numInternalMasks) {
                    info.file = DataUtilities.urlToFile(fileURL);
                    info.readerSpi = readerSpi;
                    info.streamSpi = streamSpi;
                    info.index = imageIndex != 0 ? layout.getInternalMaskImageIndex(imageIndex) - 1
                            : layout.getInternalMaskImageIndex(imageIndex);
                } else if (hasExternalMasks) {
                    if (imageIndex < numExternalMasks) {
                        info.file = DataUtilities.urlToFile(maskURL);
                        info.readerSpi = maskReaderSpi;
                        info.streamSpi = maskStreamSpi;
                        info.index = imageIndex;
                    } else if (imageIndex < numExternalMasks + numExternalMasksOverviews) {
                        info.file = DataUtilities.urlToFile(maskOvrURL);
                        info.readerSpi = maskOvrReaderSpi;
                        info.streamSpi = maskOvrStreamSpi;
                        info.index = imageIndex - numExternalMasks;
                    } else {
                        // Read a bigger image
                        if (numExternalMasksOverviews > 0) {
                            // reading External Mask External Overviews
                            info.file = DataUtilities.urlToFile(maskOvrURL);
                            info.readerSpi = maskOvrReaderSpi;
                            info.streamSpi = maskOvrStreamSpi;
                            info.index = numExternalMasksOverviews - 1;
                        } else {
                            // reading External Mask Overviews
                            info.file = DataUtilities.urlToFile(maskURL);
                            info.readerSpi = maskReaderSpi;
                            info.streamSpi = maskStreamSpi;
                            info.index = numExternalMasks - 1;
                        }
                    }
                } else {
                    // Reading Internal Mask Overview
                    info.file = DataUtilities.urlToFile(fileURL);
                    info.readerSpi = readerSpi;
                    info.streamSpi = streamSpi;
                    info.index = numInternalMasks - 1;
                }
                // Checks on the native image data
            } else if (imageIndex == 0) {
                // Checking for external Masks
                if (numInternalMasks == 0 && hasExternalMasks) {
                    // reading External Mask Overviews
                    info.file = DataUtilities.urlToFile(maskURL);
                    info.readerSpi = maskReaderSpi;
                    info.streamSpi = maskStreamSpi;
                    info.index = 0;
                    // Check for internal Masks
                } else if (numInternalMasks > 0) {
                    // Reading Internal Mask Overview
                    info.file = DataUtilities.urlToFile(fileURL);
                    info.readerSpi = readerSpi;
                    info.streamSpi = streamSpi;
                    info.index = layout.getInternalMaskImageIndex(0);
                }
            }
        }

        return info;
    }

