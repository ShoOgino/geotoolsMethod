    /**
     * Returns the set of views that this coverage represents. The same coverage may be used for
     * more than one view. For example a coverage could be valid both as a {@link ViewType#PACKED
     * PACKED} and {@link ViewType#RENDERED RENDERED} view.
     *
     * @return The set of views that this coverage represents.
     *
     * @since 2.5
     */
    public synchronized Set<ViewType> getViewTypes() {
        if (viewTypes == null) {
            final Set<ViewType> vtSet = EnumSet.allOf(ViewType.class);
            vtSet.remove(ViewType.SAME); // Removes trivial view.
            for (final Iterator<ViewType> it=vtSet.iterator(); it.hasNext();) {
                if (view(it.next()) != this) {
                    it.remove();
                }
            }
            // Assign only in successful.
            this.viewTypes = Collections.unmodifiableSet(vtSet);
        }
        return viewTypes;
    }

