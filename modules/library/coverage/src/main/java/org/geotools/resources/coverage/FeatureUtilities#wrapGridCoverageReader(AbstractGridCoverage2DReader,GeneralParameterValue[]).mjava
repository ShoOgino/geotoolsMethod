    /**
     * Wraps a grid coverage into a Feature. Code lifted from ArcGridDataSource
     * (temporary).
     *
     * @param  reader the grid coverage reader.
     * @return a feature with the grid coverage envelope as the geometry and the
     *         grid coverage itself in the "grid" attribute.
     */
    @SuppressWarnings("unchecked")
    public static SimpleFeatureCollection wrapGridCoverageReader(final AbstractGridCoverage2DReader gridCoverageReader,
			GeneralParameterValue[] params) throws TransformException,
			FactoryRegistryException, SchemaException {

		// create surrounding polygon
		final PrecisionModel pm = new PrecisionModel();
		final GeometryFactory gf = new GeometryFactory(pm, 0);
		final Rectangle2D rect = gridCoverageReader.getOriginalEnvelope()
				.toRectangle2D();
		final CoordinateReferenceSystem sourceCrs = CRS
			.getHorizontalCRS(gridCoverageReader.getCrs());
		if(sourceCrs==null)
			throw new UnsupportedOperationException(
					Errors.format(
		                    ErrorKeys.CANT_SEPARATE_CRS_$1,gridCoverageReader.getCrs()));


		final Coordinate[] coord = new Coordinate[5];
		coord[0] = new Coordinate(rect.getMinX(), rect.getMinY());
		coord[1] = new Coordinate(rect.getMaxX(), rect.getMinY());
		coord[2] = new Coordinate(rect.getMaxX(), rect.getMaxY());
		coord[3] = new Coordinate(rect.getMinX(), rect.getMaxY());
		coord[4] = new Coordinate(rect.getMinX(), rect.getMinY());

		// }
		final LinearRing ring = gf.createLinearRing(coord);
		final Polygon bounds = new Polygon(ring, null, gf);

		SimpleFeatureTypeBuilder ftb = new SimpleFeatureTypeBuilder(getTypeFactory());
        ftb.setName("GridCoverage");
        ftb.add("geom", Polygon.class, sourceCrs);
        ftb.add("grid", AbstractGridCoverage2DReader.class);
        ftb.add("params", GeneralParameterValue[].class);
        SimpleFeatureType schema = ftb.buildFeatureType();

        // create the feature
        SimpleFeatureBuilder fb = new SimpleFeatureBuilder(schema, getFeatureFactory());
        fb.add(bounds);
        fb.add(gridCoverageReader);
        fb.add(params);
        SimpleFeature feature = fb.buildFeature(null);

        final SimpleFeatureCollection collection = FeatureCollections.newCollection();
        if( collection instanceof Collection ){
            ((Collection<SimpleFeature>)collection).add(feature);
            return collection;
        }
        else {
            throw new IllegalStateException("Require access to SimpleFeatureCollection implementing Collecion.add");
        }
    }

