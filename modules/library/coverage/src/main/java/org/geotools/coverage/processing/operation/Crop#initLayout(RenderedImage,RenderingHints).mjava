    /**
     * Initialize a layout object using the provided {@link RenderedImage} and the provided {@link
     * Hints}.
     *
     * @param sourceImage {@link RenderedImage} to use for initializing the returned layout.
     * @param hints {@link Hints} to use for initializing the returned layout.
     * @return an {@link ImageLayout} instance.
     */
    private static ImageLayout initLayout(
            final RenderedImage sourceImage, final RenderingHints hints) {

        ImageLayout layout = (ImageLayout) hints.get(JAI.KEY_IMAGE_LAYOUT);
        if (layout != null) {
            layout = (ImageLayout) layout.clone();
        } else {
            layout = new ImageLayout(sourceImage);
            layout.unsetTileLayout();
            // At this point, only the color model and sample model are left
            // valid.
        }
        // crop will ignore minx, miny width and height
        if ((layout.getValidMask()
                        & (ImageLayout.TILE_WIDTH_MASK
                                | ImageLayout.TILE_HEIGHT_MASK
                                | ImageLayout.TILE_GRID_X_OFFSET_MASK
                                | ImageLayout.TILE_GRID_Y_OFFSET_MASK))
                == 0) {
            layout.setTileGridXOffset(layout.getMinX(sourceImage));
            layout.setTileGridYOffset(layout.getMinY(sourceImage));
            final int width = layout.getWidth(sourceImage);
            final int height = layout.getHeight(sourceImage);
            if (layout.getTileWidth(sourceImage) > width) layout.setTileWidth(width);
            if (layout.getTileHeight(sourceImage) > height) layout.setTileHeight(height);
        }
        return layout;
    }

