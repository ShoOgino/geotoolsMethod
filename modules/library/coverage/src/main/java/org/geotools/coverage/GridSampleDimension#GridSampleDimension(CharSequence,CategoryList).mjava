    /**
     * Constructs a sample dimension with the specified list of categories.
     *
     * @param description
     *            The sample dimension title or description, or {@code null} for the default
     *            (the name of what looks like the "main" category). This is the value to be
     *            returned by {@link #getDescription}.
     * @param list
     *            The list of categories, or {@code null}.
     */
    private GridSampleDimension(final CharSequence description, final CategoryList list) {
        /*
         * Checks the supplied description to see if it is null. In such a case it builds up a new
         * description by using the list of categories supplied. This second description may be less
         * human readable and it is therefore better if the user provide a meaningful name for this
         * sample dimension.
         */
        if (description != null) {
            this.description = SimpleInternationalString.wrap(description);
        } else {
            // we need to build one. Let's use the category list in
            // order to build the name of the sample dimension
            if (list != null) {
                this.description = list.getName();
            } else {
                this.description = Vocabulary.formatInternational(VocabularyKeys.UNTITLED);
            }
        }
        /*
         * Now process to the category examination.
         */
        MathTransform1D main = null;
        boolean isMainValid = true;
        boolean qualitative = false;
        if (list != null) {
            for (int i=list.size(); --i >= 0;) {
                final MathTransform1D candidate = list.get(i).getSampleToGeophysics();
                if (candidate == null) {
                    qualitative = true;
                    continue;
                }
                if (main != null) {
                    isMainValid &= main.equals(candidate);
                }
                main = candidate;
            }
            this.isGeophysics = list.isGeophysics(true);
        } else {
            this.isGeophysics = false;
        }
        this.categories = list;
        this.hasQualitative = qualitative;
        this.hasQuantitative = (main != null);
        this.sampleToGeophysics = isMainValid ? main : null;
    }

