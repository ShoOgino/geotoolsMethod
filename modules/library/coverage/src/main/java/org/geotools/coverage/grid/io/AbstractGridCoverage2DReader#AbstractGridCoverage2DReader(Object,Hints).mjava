    /**
     * Creates a new instance of a {@link AIGReader}. I assume nothing about file extension.
     * 
     * @param input
     *            Source object for which we want to build an {@link AIGReader}.
     * @param hints
     *            Hints to be used by this reader throughout his life.
     * @throws DataSourceException
     */
    public AbstractGridCoverage2DReader(Object input, Hints hints) throws DataSourceException {
        
        // 
        // basic management of hints
        //
        if (hints == null)
            this.hints = new Hints();
        if (hints != null) {
            this.hints.add(hints);

        }

        // GridCoverageFactory initialization
        if (this.hints.containsKey(Hints.GRID_COVERAGE_FACTORY)) {
            final Object factory = this.hints.get(Hints.GRID_COVERAGE_FACTORY);
            if (factory != null && factory instanceof GridCoverageFactory) {
                this.coverageFactory = (GridCoverageFactory) factory;
            }
        }
        if (this.coverageFactory == null) {
            this.coverageFactory = CoverageFactoryFinder.getGridCoverageFactory(this.hints);
        }


        //
        // Setting input
        //
        if (input == null) {
            final IOException ex = new IOException(Errors.format(ErrorKeys.NULL_ARGUMENT_$1,"input"));
            throw new DataSourceException(ex);
        }
        this.source = input;
       
    }

