    /**
     * Checks if two geometries are equal, ignoring unspecified fields. If one or both
     * geometries has no "gridToCRS" transform, then this properties is not taken in account.
     * Same apply for the grid range.
     *
     * @param  sourceGG The source geometry (never {@code null}).
     * @param  targetGG The target geometry. May be {@code null}, which is considered as equivalent.
     * @return {@code true} if the two geometries are equal, ignoring unspecified fields.
     */
    private static boolean equivalent(final GridGeometry2D sourceGG, final GridGeometry2D targetGG) {
        if (targetGG == null || targetGG.equals(sourceGG)) {
            return true;
        }
        if (targetGG.isDefined(GridGeometry2D.GRID_RANGE_BITMASK) &&
            sourceGG.isDefined(GridGeometry2D.GRID_RANGE_BITMASK))
        {
            if (!targetGG.getGridRange().equals(sourceGG.getGridRange())) {
                return false;
            }
        }
        if (targetGG.isDefined(GridGeometry2D.GRID_TO_CRS_BITMASK) &&
            sourceGG.isDefined(GridGeometry2D.GRID_TO_CRS_BITMASK))
        {
            // No needs to ask for a transform relative to a corner
            // since we will not apply a transformation here.
            if (!targetGG.getGridToCRS().equals(sourceGG.getGridToCRS())) {
                return false;
            }
        }
        return true;
    }

