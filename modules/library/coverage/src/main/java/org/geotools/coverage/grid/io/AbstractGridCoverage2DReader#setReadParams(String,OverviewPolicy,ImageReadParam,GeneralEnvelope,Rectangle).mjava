    /**
     * This method is responsible for preparing the read param for doing an {@link
     * ImageReader#read(int, ImageReadParam)}.
     *
     * <p>This method is responsible for preparing the read param for doing an {@link
     * ImageReader#read(int, ImageReadParam)}. It sets the passed {@link ImageReadParam} in terms of
     * decimation on reading using the provided requestedEnvelope and requestedDim to evaluate the
     * needed resolution. It also returns and {@link Integer} representing the index of the raster
     * to be read when dealing with multipage raster.
     *
     * @param overviewPolicy it can be one of {@link Hints#VALUE_OVERVIEW_POLICY_IGNORE}, {@link
     *     Hints#VALUE_OVERVIEW_POLICY_NEAREST}, {@link Hints#VALUE_OVERVIEW_POLICY_QUALITY} or
     *     {@link Hints#VALUE_OVERVIEW_POLICY_SPEED}. It specifies the policy to compute the
     *     overviews level upon request.
     * @param readP an instance of {@link ImageReadParam} for setting the subsampling factors.
     * @param requestedEnvelope the {@link GeneralEnvelope} we are requesting.
     * @param requestedDim the requested dimensions.
     * @return the index of the raster to read in the underlying data source.
     * @throws IOException
     * @throws TransformException
     */
    protected Integer setReadParams(
            String coverageName,
            OverviewPolicy overviewPolicy,
            ImageReadParam readP,
            GeneralEnvelope requestedEnvelope,
            Rectangle requestedDim)
            throws IOException, TransformException {

        // //
        //
        // Default image index 0
        //
        // //
        Integer imageChoice = Integer.valueOf(0);

        // //
        //
        // Init overview policy
        //
        // //
        // when policy is explictly provided it overrides the policy provided
        // using hints.
        if (overviewPolicy == null) overviewPolicy = extractOverviewPolicy();

        // //
        //
        // Resolution requested. I am here computing the resolution required by
        // the user.
        //
        double[] requestedRes =
                getResolution(
                        requestedEnvelope,
                        requestedDim,
                        getCoordinateReferenceSystem(coverageName));

        // Decimation on reading (done here because it alters the read params allowing subsampling)
        decimationOnReadingControl(coverageName, imageChoice, readP, requestedRes);

        if (requestedRes == null) return imageChoice;

        // //
        //
        // requested to ignore overviews
        //
        // //
        if (overviewPolicy.equals(OverviewPolicy.IGNORE)) return imageChoice;

        // //
        //
        // Am I going to decimate or to use overviews? If this file has only
        // one page we use decimation, otherwise we use the best page available.
        // Future versions should use both.
        //
        // //
        final boolean useOverviews = (numOverviews > 0) ? true : false;

        // //
        //
        // overviews or decimation
        //
        // //
        if (useOverviews) {
            int newImageChoice = pickOverviewLevel(coverageName, overviewPolicy, requestedRes);

            // if image choice has changed due to using overviews, recalculate subsamping factors
            if (imageChoice != newImageChoice) {
                imageChoice = newImageChoice; // update
                // recalculate subsampling factors if overview number has changed
                decimationOnReadingControl(coverageName, imageChoice, readP, requestedRes);
            }
        }

        return imageChoice;
    }

