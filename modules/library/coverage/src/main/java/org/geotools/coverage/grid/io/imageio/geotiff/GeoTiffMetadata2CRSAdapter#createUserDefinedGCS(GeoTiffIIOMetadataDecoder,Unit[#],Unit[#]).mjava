    /**
     * The GeoTIFFWritingUtilities spec requires that a user defined GCS be comprised of the
     * following:
     *
     * <ul>
     *   <li>a citation
     *   <li>a datum definition
     *   <li>a prime meridian definition (if not Greenwich)
     *   <li>an angular unit definition (if not degrees)
     * </ul>
     *
     * @param metadata to use for building this {@link GeographicCRS}.
     * @return a {@link GeographicCRS}.
     */
    private GeographicCRS createUserDefinedGCS(
            final GeoTiffIIOMetadataDecoder metadata, Unit<?> linearUnit, Unit<?> angularUnit)
            throws IOException {
        // //
        //
        // coordinate reference system name (GeogCitationGeoKey)
        //
        // //
        String name = metadata.getGeoKey(GeoTiffGCSCodes.GeogCitationGeoKey);
        if (name == null) {
            name = "unnamed";
        } else {
            name = cleanName(name);
            String[] values = name.split("\\|");
            if (values != null && values.length >= 1) {
                name = values[0];
            }
        }

        // lookup the Geodetic datum
        final GeodeticDatum datum = createGeodeticDatum(linearUnit, metadata);

        // coordinate reference system
        // property map is reused
        final Map<String, String> props = new HashMap<String, String>();
        // make the user defined GCS from all the components...
        props.put("name", name);
        return new DefaultGeographicCRS(
                props, datum, DefaultEllipsoidalCS.GEODETIC_2D.usingUnit(angularUnit));
    }

