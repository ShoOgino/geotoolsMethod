    /**
     * Constructs a grid coverage from the specified {@linkplain WritableRaster raster} and
     * {@linkplain Envelope envelope}. This convenience constructor performs the same assumptions on
     * axis order than the {@linkplain #create(CharSequence, RenderedImage, Envelope,
     * GridSampleDimension[], GridCoverage[], Map) rendered image variant}.
     *
     * <p>The {@linkplain CoordinateReferenceSystem coordinate reference system} is inferred from
     * the supplied envelope. The envelope must have at least two dimensions. The two first
     * dimensions describe the image location along <var>x</var> and <var>y</var> axis. The other
     * dimensions are optional and may be used to locate the image on a vertical axis or on the time
     * axis.
     *
     * @param name The grid coverage name.
     * @param raster The raster.
     * @param envelope The grid coverage cordinates.
     * @param bands Sample dimensions for each image band, or {@code null} for default sample
     *     dimensions. If non-null, then this array's length must matches the number of bands in
     *     {@code image}.
     * @return The new grid coverage.
     * @since 2.2
     */
    public GridCoverage2D create(
            final CharSequence name,
            final WritableRaster raster,
            final Envelope envelope,
            GridSampleDimension[] bands) {
        if (bands == null) {
            bands = RenderedSampleDimension.create(name, raster, null, null, null, null, null);
        }
        final ColorModel model =
                bands[0].getColorModel(0, bands.length, raster.getDataBuffer().getDataType());
        final RenderedImage image = new BufferedImage(model, raster, false, null);
        return create(name, image, envelope, bands, null, null);
    }

