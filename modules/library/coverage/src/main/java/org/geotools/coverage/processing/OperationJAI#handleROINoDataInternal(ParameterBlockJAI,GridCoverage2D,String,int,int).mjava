    /**
     * This method can be used for merging input coverage properties (ROI and NoData) with the ones
     * provided as input in the ParameterBlock instance. If a ROI instance is already present as a
     * coverage property, it will be intersected with an eventual ROI object defined as a parameter
     * inside the ParameterBlock. If no NoData Range is defined in the parameters but is defined as
     * coverage property, it will be set in the input ParameterBlock
     *
     * @param parameters
     * @param sourceCoverage
     * @param operationName
     * @param roiIndex
     * @param noDataIndex
     */
    protected static void handleROINoDataInternal(
            ParameterBlockJAI parameters,
            GridCoverage2D sourceCoverage,
            String operationName,
            int roiIndex,
            int noDataIndex) {
        // Getting the internal ROI property
        ROI innerROI = CoverageUtilities.getROIProperty(sourceCoverage);
        // Checking if it canbe set as parameter
        if (JAIExt.isJAIExtOperation(operationName) && roiIndex >= 0) {
            // Definition of the nwe ROI
            ROI roiParam = (ROI) parameters.getObjectParameter(roiIndex);
            ROI newROI = null;
            if (innerROI == null) {
                newROI = roiParam;
            } else {
                newROI = roiParam != null ? innerROI.intersect(roiParam) : innerROI;
            }
            // Setting of the new ROI
            parameters.set(newROI, roiIndex);
        }

        // Getting NoData propery
        NoDataContainer nodataProp = CoverageUtilities.getNoDataProperty(sourceCoverage);
        Range innerNodata = (Range) ((nodataProp != null) ? nodataProp.getAsRange() : null);
        // Setting the NoData Range parameter if not present
        if (JAIExt.isJAIExtOperation(operationName) && noDataIndex >= 0) {
            Range noDataParam = (Range) parameters.getObjectParameter(noDataIndex);
            if (noDataParam == null) {
                parameters.set(innerNodata, noDataIndex);
            }
        }
    }

