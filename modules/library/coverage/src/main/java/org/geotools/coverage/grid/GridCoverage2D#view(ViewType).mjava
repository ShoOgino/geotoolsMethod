    /**
     * Returns a view of the specified type. Valid types are:
     * <ul>
     *   <li><p>
     *     {@link ViewType#GEOPHYSICS GEOPHYSICS}: all sample values are equals to geophysics
     *     ("<cite>real world</cite>") values without the need for any transformation. The
     *     {@linkplain SampleDimension#getSampleToGeophysics sample to geophysics} transform
     *     {@linkplain org.opengis.referencing.operation.MathTransform1D#isIdentity is identity}
     *     for all sample dimensions. "<cite>No data</cite>" values (if any) are expressed as
     *     {@linkplain Float#NaN NaN} numbers. This view is suitable for computation, but usually
     *     not for rendering.
     *   </p></li>
     *   <li><p>
     *     {@link ViewType#PACKED PACKED}: sample values are typically integers. A
     *     {@linkplain SampleDimension#getSampleToGeophysics sample to geophysics} transform may
     *     exists for converting them to "<cite>real world</cite>" values.
     *   </p></li>
     *   <li><p>
     *     {@link ViewType#RENDERED RENDERED}: synonymous of {@code PACKED} for now. Will be
     *     improved in a future version.
     *   </p></li>
     *   <li><p>
     *     {@link ViewType#PHOTOGRAPHIC PHOTOGRAPHIC}: synonymous of {@code RENDERED} for now.
     *     Will be improved in a future version.
     *   </p></li>
     *   <li><p>
     *     {@link ViewType#SAME SAME}: returns {@code this} coverage unchanged.
     *   </p></li>
     * </ul>
     *
     * This method may be understood as applying the JAI's
     * {@linkplain javax.media.jai.operator.PiecewiseDescriptor piecewise} operation with
     * breakpoints specified by the {@link org.geotools.coverage.Category} objects in each
     * sample dimension. However, it is more general in that the transformation specified
     * with each breakpoint doesn't need to be linear. On an implementation note, this method
     * tries to use the first of the following operations which is found applicable:
     * <cite>identity</cite>,
     * {@linkplain javax.media.jai.operator.LookupDescriptor lookup},
     * {@linkplain javax.media.jai.operator.RescaleDescriptor rescale},
     * {@linkplain javax.media.jai.operator.PiecewiseDescriptor piecewise} and in
     * last ressort a more general (but slower) <cite>sample transcoding</cite> algorithm.
     *
     * @param  type The kind of view wanted.
     * @return The grid coverage. Never {@code null}, but may be {@code this}.
     *
     * @see GridSampleDimension#geophysics
     * @see org.geotools.coverage.Category#geophysics
     * @see javax.media.jai.operator.LookupDescriptor
     * @see javax.media.jai.operator.RescaleDescriptor
     * @see javax.media.jai.operator.PiecewiseDescriptor
     *
     * @since 2.5
     */
    public GridCoverage2D view(final ViewType type) {
        if (ViewType.SAME.equals(type)) {
            return this;
        }
        synchronized (this) {
            if (views == null) {
                views = ViewsManager.create(this);
            }
        }
        // Do not synchronize past this point, because ViewsManager.get is already
        // synchronized. We need to rely on ViewsManager locking because the views
        // are shared among many GridCoverage2D instances.
        final Hints hints = null; // We may revisit that later.
        return views.get(this, type, hints);
    }

