    /**
     * Suggests a tile size for the specified image size. On input, {@code size} is the image's
     * size. On output, it is the tile size. This method write the result directly in the supplied
     * object and returns {@code size} for convenience.
     *
     * <p>This method it aimed to computing a tile size such that the tile grid would have
     * overlapped the image bound in order to avoid having tiles crossing the image bounds and being
     * therefore partially empty. This method will never returns a tile size smaller than {@value
     * ImageUtilities#GEOTOOLS_MIN_TILE_SIZE}. If this method can't suggest a size, then it left the
     * corresponding {@code size} field ({@link Dimension#width width} or {@link Dimension#height
     * height}) unchanged.
     *
     * <p>The {@link Dimension#width width} and {@link Dimension#height height} fields are processed
     * independently in the same way. The following discussion use the {@code width} field as an
     * example.
     *
     * <p>This method inspects different tile sizes close to the {@linkplain
     * JAI#getDefaultTileSize() default tile size}. Lets {@code width} be the default tile width.
     * Values are tried in the following order: {@code width}, {@code width+1}, {@code width-1},
     * {@code width+2}, {@code width-2}, {@code width+3}, {@code width-3}, <cite>etc.</cite> until
     * one of the following happen:
     *
     * <p>
     *
     * <ul>
     *   <li>A suitable tile size is found. More specifically, a size is found which is a dividor of
     *       the specified image size, and is the closest one of the default tile size. The {@link
     *       Dimension} field ({@code width} or {@code height}) is set to this value.
     *   <li>An arbitrary limit (both a minimum and a maximum tile size) is reached. In this case,
     *       this method <strong>may</strong> set the {@link Dimension} field to a value that
     *       maximize the remainder of <var>image size</var> / <var>tile size</var> (in other words,
     *       the size that left as few empty pixels as possible).
     * </ul>
     */
    public static Dimension toTileSize(final Dimension size) {
        Dimension defaultSize = JAI.getDefaultTileSize();
        if (defaultSize == null) {
            defaultSize = GEOTOOLS_DEFAULT_TILE_SIZE;
        }
        int s;
        if ((s = toTileSize(size.width, defaultSize.width)) != 0) size.width = s;
        if ((s = toTileSize(size.height, defaultSize.height)) != 0) size.height = s;
        return size;
    }

