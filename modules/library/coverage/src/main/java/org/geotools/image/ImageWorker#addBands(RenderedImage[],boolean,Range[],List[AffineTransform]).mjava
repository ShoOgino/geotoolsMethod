    /**
     * Perform a BandMerge operation between the underlying image and the provided one.
     *
     * @param bands images to merge with the underlying one.
     * @param addAlpha <code>true</code> if we want to set the last image as alpha, <code>false
     *     </code> otherwise.
     * @param transformationList List of AffineTransformation that can be applied to the input
     *     rasters in order to repoject them to the same CRS.
     * @return this {@link ImageWorker}.
     */
    public final ImageWorker addBands(
            RenderedImage[] bands,
            boolean addAlpha,
            Range[] nodata2,
            List<AffineTransform> transformationList) {
        ParameterBlock pb = new ParameterBlock();
        for (RenderedImage band : bands) {
            pb.addSource(band);
        }
        Range[] newRange = new Range[bands.length + 1];
        newRange[0] = nodata;
        if (nodata2 != null) {
            System.arraycopy(nodata2, 0, newRange, 1, nodata2.length);
        }
        pb.set(newRange, 0);
        if (isNoDataNeeded()) {
            if (background != null && background.length > 0) {
                double dest = background[0];
                pb.set(dest, 1);
            }
        }
        pb.set(transformationList, 3);
        pb.set(roi, 3);
        pb.set(addAlpha, 4);
        this.image = JAI.create("BandMerge", pb, this.getRenderingHints());
        invalidateStatistics();

        return this;
    }

