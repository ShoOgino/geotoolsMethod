    /**
     * Returns a source CRS compatible with the given target CRS. This method try to returns a CRS
     * which would not thrown an {@link NoninvertibleTransformException} if attempting to transform
     * from "target" to "source" (reminder: Warp works on <strong>inverse</strong> transforms).
     *
     * @param sourceCRS2D The two-dimensional source CRS. Actually, this method accepts arbitrary
     *     dimension provided that are not greater than {@code sourceCRS}, but in theory it is 2D.
     * @param sourceCRS The n-dimensional source CRS.
     * @param targetCRS The n-dimensional target CRS.
     */
    private static CoordinateReferenceSystem compatibleSourceCRS(
            final CoordinateReferenceSystem sourceCRS2D,
            final CoordinateReferenceSystem sourceCRS,
            final CoordinateReferenceSystem targetCRS) {
        final int dim2D = sourceCRS2D.getCoordinateSystem().getDimension();
        return (targetCRS.getCoordinateSystem().getDimension() == dim2D
                        && sourceCRS.getCoordinateSystem().getDimension() > dim2D)
                ? sourceCRS2D
                : sourceCRS;
    }

