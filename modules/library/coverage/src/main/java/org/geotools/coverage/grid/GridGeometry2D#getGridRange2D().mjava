    /**
     * Returns the two-dimensional part of the {@linkplain #getGridRange grid range}
     * as a rectangle. Note that the returned object is a {@link Rectangle} subclass.
     *
     * @return The grid range (never {@code null}).
     * @throws InvalidGridGeometryException if this grid geometry has no grid range (i.e.
     *         <code>{@linkplain #isDefined isDefined}({@linkplain #GRID_RANGE_BITMASK GRID_RANGE_BITMASK})</code>
     *         returned {@code false}).
     *
     * @see #getGridRange
     */
    public GridEnvelope2D getGridRange2D() throws InvalidGridGeometryException {
        if (gridRange != null) {
            assert isDefined(GRID_RANGE_BITMASK);
            return new GridEnvelope2D(gridRange.getLow (gridDimensionX),
                                   gridRange.getLow (gridDimensionY),
                                   gridRange.getSpan (gridDimensionX),
                                   gridRange.getSpan (gridDimensionY));
        }
        assert !isDefined(GRID_RANGE_BITMASK);
        throw new InvalidGridGeometryException(ErrorKeys.UNSPECIFIED_IMAGE_SIZE);
    }

