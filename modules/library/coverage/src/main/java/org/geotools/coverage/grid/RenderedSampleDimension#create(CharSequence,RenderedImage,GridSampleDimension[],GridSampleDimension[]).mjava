    /**
     * Creates a set of sample dimensions for the given image. The array length of both
     * arguments must matches the number of bands in the supplied {@code image}.
     *
     * @param  name  The name for data (e.g. "Elevation").
     * @param  image The image for which to create a set of sample dimensions.
     * @param  src   User-provided sample dimensions, or {@code null} if none.
     * @param  dst   The array where to put sample dimensions.
     * @return {@code true} if all sample dimensions are geophysics (quantitative), or
     *         {@code false} if all sample dimensions are non-geophysics (qualitative).
     * @throws IllegalArgumentException if geophysics and non-geophysics dimensions are mixed.
     */
    static boolean create(final CharSequence        name,
                          final RenderedImage       image,
                          final GridSampleDimension[] src,
                          final GridSampleDimension[] dst)
    {
        final int numBands = image.getSampleModel().getNumBands();
        if (src!=null && src.length!=numBands) {
            throw new IllegalArgumentException(Errors.format(ErrorKeys.NUMBER_OF_BANDS_MISMATCH_$3,
                      numBands, src.length, "SampleDimension"));
        }
        if (dst.length != numBands) {
            throw new IllegalArgumentException(Errors.format(ErrorKeys.NUMBER_OF_BANDS_MISMATCH_$3,
                      numBands, dst.length, "SampleDimension"));
        }
        /*
         * Now, we know that the number of bands and the array length are consistent.
         * Search if there is any null SampleDimension. If any, replace the null value
         * by a default SampleDimension. 
         */
        int count = 0;
        GridSampleDimension[] defaultSD = null;
        for (int i=0; i<numBands; i++) {
            GridSampleDimension sd = (src!=null) ? src[i] : null;
            if (sd == null) {
                /*
                 * If the user didn't provided explicitly a SampleDimension, create a default one.
                 * We will creates a SampleDimension for all bands in one step, even if only a few
                 * of them are required.
                 */
                if (defaultSD == null) {
                    defaultSD = new GridSampleDimension[numBands];
                    create(name, RectIterFactory.create(image, null), image.getSampleModel(),
                           null, null, null, null, defaultSD, null);
                }
                sd = defaultSD[i];
            }
            sd = new RenderedSampleDimension(sd, image, i);
            dst[i] = sd;
            count++;
        }
        if (count == numBands) {
            return true;
        }
        throw new IllegalArgumentException(Errors.format(ErrorKeys.MIXED_CATEGORIES));
    }

