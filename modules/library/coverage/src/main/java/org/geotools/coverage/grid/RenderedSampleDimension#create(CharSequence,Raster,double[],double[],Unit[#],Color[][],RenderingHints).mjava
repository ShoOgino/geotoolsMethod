    /**
     * Creates a set of sample dimensions for the given raster.
     *
     * @param name The name for data (e.g. "Elevation").
     * @param raster The raster.
     * @param min The minimal value for each bands, or {@code null} for computing it automatically.
     * @param max The maximal value for each bands, or {@code null} for computing it automatically.
     * @param units The units of sample values, or {@code null} if unknow.
     * @param colors The colors to use for values from {@code min} to {@code max} for each bands, or
     *     {@code null} for a default color palette. If non-null, each arrays {@code colors[b]} may
     *     have any length; colors will be interpolated as needed.
     * @param hints An optional set of rendering hints, or {@code null} if none. Those hints will
     *     not affect the sample dimensions to be created. The optional hint {@link
     *     Hints#SAMPLE_DIMENSION_TYPE} specifies the {@link SampleDimensionType} to be used at
     *     rendering time, which can be one of {@link SampleDimensionType#UBYTE UBYTE} or {@link
     *     SampleDimensionType#USHORT USHORT}.
     * @return The sample dimension for the given raster.
     */
    static GridSampleDimension[] create(
            final CharSequence name,
            final Raster raster,
            final double[] min,
            final double[] max,
            final Unit<?> units,
            final Color[][] colors,
            final RenderingHints hints) {
        final GridSampleDimension[] dst = new GridSampleDimension[raster.getNumBands()];
        create(
                name,
                (min == null || max == null) ? RectIterFactory.create(raster, null) : null,
                raster.getSampleModel(),
                min,
                max,
                units,
                colors,
                dst,
                hints);
        return dst;
    }

