    /**
     * Formats a sample value. If {@code value} is a real number, then the value may
     * be formatted with the appropriate number of digits and the units symbol. Otherwise,
     * if {@code value} is {@code NaN}, then the category name is returned.
     *
     * @param  value  The sample value (may be {@code NaN}).
     * @param  locale Locale to use for formatting, or {@code null} for the default locale.
     * @return A string representation of the sample value.
     */
    public final String format(final double value, final Locale locale) {
        if (Double.isNaN(value)) {
            Category category = last;
            if (!(value >= category.minimum  &&  value <= category.maximum) &&
                 Double.doubleToRawLongBits(value) != Double.doubleToRawLongBits(category.minimum))
            {
                category = getCategory(value);
                if (category == null) {
                    return Vocabulary.getResources(locale).getString(VocabularyKeys.UNTITLED);
                }
                last = category;
            }
            return category.getName().toString(null);
        }
        return format(value, true, locale, new StringBuffer()).toString();
    }

