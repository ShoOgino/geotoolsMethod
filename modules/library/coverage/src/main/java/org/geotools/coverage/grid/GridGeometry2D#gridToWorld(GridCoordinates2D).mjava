    /**
     * Transforms a point represented by a GridCoordinates2D object from grid to world coordinates.
     * The coordinates returned are those of the centre of the grid cell in which the point lies.
     *
     * <p>Users needing more control over the nature of the conversion (e.g. calculating cell corner
     * coordinates) can use the {@code MathsTransform} provided by {@linkplain
     * GridGeometry2D#getGridToCRS2D(PixelOrientation) } which is accessed via {@linkplain
     * #getGridGeometry()}.
     *
     * @param point The point in world coordinate system.
     * @return A new point in the grid coordinate system as a GridCoordinates2D object
     * @throws TransformException if the transformation failed.
     * @throws IllegalArgumentException if the point lies outside the coverage
     * @since 2.6
     */
    public final DirectPosition gridToWorld(final GridCoordinates2D point)
            throws TransformException {

        if (getGridRange2D().contains(point)) {
            Point2D trPoint = getGridToCRS2D().transform(point, null);
            return new DirectPosition2D(
                    getCoordinateReferenceSystem2D(), trPoint.getX(), trPoint.getY());

        } else {
            throw new IllegalArgumentException(
                    Errors.format(ErrorKeys.POINT_OUTSIDE_COVERAGE_$1, point));
        }
    }

