    /**
     * Builds a new bucket array and redistributes the color entries among it
     *
     * @param newLength
     */
    private void rehash(int newLength) {
        ColorEntry[] oldTable = table;
        this.table = new ColorEntry[newLength];

        for (ColorEntry bucketStart : oldTable) {
            for (ColorEntry e = bucketStart; e != null; e = e.next) {
                // no need for fancy checks, we know each color is unique in the table
                int index = indexFor(hash(e.color), table.length);
                ColorEntry newEntry = new ColorEntry(e.color, e.value, table[index]);
                table[index] = newEntry;
            }
        }
    }

