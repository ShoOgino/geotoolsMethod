    /**
     * Returns the range of value for a single {@linkplain GridSampleDimension sample dimension} in
     * the target {@linkplain GridCoverage2D grid coverage}. This method is invoked automatically by
     * the {@link #deriveCategory deriveCategory} method for each band in the target image.
     * Subclasses should override this method in order to compute the target range of values. For
     * example, the {@code "add"} operation may implements this method as below:
     *
     * <blockquote>
     *
     * <pre>
     * double min = ranges[0].getMinimum() + ranges[1].getMinimum();
     * double max = ranges[0}.getMaximum() + ranges[1}.getMaximum();
     * return new NumberRange(min, max);
     * </pre>
     *
     * </blockquote>
     *
     * @param ranges The range of values from every sources. For unary operations this array has a
     *     length of 1. For binary operations like {@code "add"} and {@code "multiply"}, this array
     *     has a length of 2.
     * @param parameters Parameters, rendering hints and coordinate reference system to use.
     * @return The range of values to use in the destination image, or {@code null} if unknow.
     */
    protected NumberRange deriveRange(final NumberRange[] ranges, final Parameters parameters) {
        return null;
    }

