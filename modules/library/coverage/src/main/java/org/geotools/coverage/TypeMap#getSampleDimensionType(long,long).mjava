    /**
     * Returns the smallest sample dimension type capable to hold the specified range of values.
     *
     * @param min The lower value, inclusive.
     * @param max The upper value, <strong>inclusive</strong> as well.
     * @return The smallest sample dimension type for the specified range.
     */
    public static SampleDimensionType getSampleDimensionType(final long min, final long max) {
        if (min >= 0) {
            if (max < (1L << 1)) return UNSIGNED_1BIT;
            if (max < (1L << 2)) return UNSIGNED_2BITS;
            if (max < (1L << 4)) return UNSIGNED_4BITS;
            if (max < (1L << 8)) return UNSIGNED_8BITS;
            if (max < (1L << 16)) return UNSIGNED_16BITS;
            if (max < (1L << 32)) return UNSIGNED_32BITS;
        } else {
            if (min >= Byte.MIN_VALUE && max <= Byte.MAX_VALUE) return SIGNED_8BITS;
            if (min >= Short.MIN_VALUE && max <= Short.MAX_VALUE) return SIGNED_16BITS;
            if (min >= Integer.MIN_VALUE && max <= Integer.MAX_VALUE) return SIGNED_32BITS;
        }
        return REAL_32BITS;
    }

