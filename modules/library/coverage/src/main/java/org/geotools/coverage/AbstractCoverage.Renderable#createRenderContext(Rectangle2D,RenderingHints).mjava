        /**
         * Initializes a render context with an affine transform that maps the coverage envelope to
         * the specified destination rectangle. The affine transform mays swap axis in order to
         * normalize their order (i.e. make them appear in the (<var>x</var>,<var>y</var>) order),
         * so that the image appears properly oriented when rendered.
         *
         * @param gridBounds The two-dimensional destination rectangle.
         * @param hints The rendering hints, or {@code null} if none.
         * @return A render context initialized with an affine transform from the coverage to the
         *     grid coordinate system. This transform is the inverse of {@link
         *     org.geotools.coverage.grid.GridGeometry2D#getGridToCRS2D}.
         * @see org.geotools.coverage.grid.GridGeometry2D#getGridToCRS2D
         */
        protected RenderContext createRenderContext(
                final Rectangle2D gridBounds, final RenderingHints hints) {
            final GeneralMatrix matrix;
            final GeneralEnvelope srcEnvelope = new GeneralEnvelope(bounds);
            final GeneralEnvelope dstEnvelope = new GeneralEnvelope(gridBounds);
            if (crs != null) {
                final CoordinateSystem cs = crs.getCoordinateSystem();
                final AxisDirection[] axis = {
                    cs.getAxis(xAxis).getDirection(), cs.getAxis(yAxis).getDirection()
                };
                final AxisDirection[] normalized = axis.clone();
                normalized[1] = normalized[1].opposite(); // Image's Y axis is downward.
                matrix = new GeneralMatrix(srcEnvelope, axis, dstEnvelope, normalized);
            } else {
                matrix = new GeneralMatrix(srcEnvelope, dstEnvelope);
            }
            return new RenderContext(matrix.toAffineTransform2D(), hints);
        }

