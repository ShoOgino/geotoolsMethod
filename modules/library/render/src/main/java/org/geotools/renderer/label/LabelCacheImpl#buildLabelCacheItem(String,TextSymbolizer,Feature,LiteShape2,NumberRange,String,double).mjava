    private LabelCacheItem buildLabelCacheItem(
            String layerId,
            TextSymbolizer symbolizer,
            Feature feature,
            LiteShape2 shape,
            NumberRange scaleRange,
            String label,
            double priorityValue) {
        TextStyle2D textStyle =
                (TextStyle2D) styleFactory.createStyle(feature, symbolizer, scaleRange);

        LabelCacheItem item = new LabelCacheItem(layerId, textStyle, shape, label, symbolizer);
        item.setPriority(priorityValue);
        item.setSpaceAround(
                voParser.getIntOption(symbolizer, SPACE_AROUND_KEY, DEFAULT_SPACE_AROUND));
        item.setMaxDisplacement(
                voParser.getIntOption(symbolizer, MAX_DISPLACEMENT_KEY, DEFAULT_MAX_DISPLACEMENT));
        item.setMinGroupDistance(
                voParser.getIntOption(
                        symbolizer, MIN_GROUP_DISTANCE_KEY, DEFAULT_MIN_GROUP_DISTANCE));
        item.setRepeat(voParser.getIntOption(symbolizer, LABEL_REPEAT_KEY, DEFAULT_LABEL_REPEAT));
        item.setLabelAllGroup(
                voParser.getBooleanOption(
                        symbolizer, LABEL_ALL_GROUP_KEY, DEFAULT_LABEL_ALL_GROUP));
        item.setRemoveGroupOverlaps(
                voParser.getBooleanOption(
                        symbolizer, REMOVE_OVERLAPS_KEY, DEFAULT_REMOVE_OVERLAPS));
        item.setAllowOverruns(
                voParser.getBooleanOption(symbolizer, ALLOW_OVERRUNS_KEY, DEFAULT_ALLOW_OVERRUNS));
        item.setFollowLineEnabled(
                voParser.getBooleanOption(symbolizer, FOLLOW_LINE_KEY, DEFAULT_FOLLOW_LINE));
        double maxAngleDelta =
                voParser.getDoubleOption(symbolizer, MAX_ANGLE_DELTA_KEY, DEFAULT_MAX_ANGLE_DELTA);
        item.setMaxAngleDelta(Math.toRadians(maxAngleDelta));
        // follow line and write don't work toghether, disable it while we wait for a fix
        if (!item.isFollowLineEnabled()) {
            item.setAutoWrap(voParser.getIntOption(symbolizer, AUTO_WRAP_KEY, DEFAULT_AUTO_WRAP));
        } else {
            // at fine level cause it would show up for every label with this setup
            LOGGER.log(
                    Level.FINE,
                    "Disabling auto-wrap, it's not supported along with followLine yet");
            item.setAutoWrap(0);
        }
        item.setForceLeftToRightEnabled(
                voParser.getBooleanOption(
                        symbolizer, FORCE_LEFT_TO_RIGHT_KEY, DEFAULT_FORCE_LEFT_TO_RIGHT));
        item.setConflictResolutionEnabled(
                voParser.getBooleanOption(
                        symbolizer, CONFLICT_RESOLUTION_KEY, DEFAULT_CONFLICT_RESOLUTION));
        item.setGoodnessOfFit(
                voParser.getDoubleOption(symbolizer, GOODNESS_OF_FIT_KEY, DEFAULT_GOODNESS_OF_FIT));
        item.setPolygonAlign(
                (PolygonAlignOptions)
                        voParser.getEnumOption(symbolizer, POLYGONALIGN_KEY, DEFAULT_POLYGONALIGN));
        item.setGraphicsResize(
                (GraphicResize)
                        voParser.getEnumOption(symbolizer, "graphic-resize", GraphicResize.NONE));
        item.setGraphicMargin(voParser.getGraphicMargin(symbolizer, "graphic-margin"));
        item.setPartialsEnabled(
                voParser.getBooleanOption(symbolizer, PARTIALS_KEY, DEFAULT_PARTIALS));
        item.setTextUnderlined(
                voParser.getBooleanOption(symbolizer, UNDERLINE_TEXT_KEY, DEFAULT_UNDERLINE_TEXT));
        item.setTextStrikethrough(
                voParser.getBooleanOption(
                        symbolizer, STRIKETHROUGH_TEXT_KEY, DEFAULT_STRIKETHROUGH_TEXT));
        item.setWordSpacing(
                voParser.getDoubleOption(symbolizer, WORD_SPACING_KEY, DEFAULT_WORD_SPACING));
        item.setDisplacementAngles(
                voParser.getDisplacementAngles(symbolizer, DISPLACEMENT_MODE_KEY));

        item.setFontShrinkSizeMin(
                voParser.getIntOption(
                        symbolizer, FONT_SHRINK_SIZE_MIN, DEFAULT_FONT_SHRINK_SIZE_MIN));
        return item;
    }

