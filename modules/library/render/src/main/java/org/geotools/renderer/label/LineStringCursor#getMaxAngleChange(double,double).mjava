    /**
     * Returns the maximum angle change (in radians) between two subsequent segments between the
     * specified curvilinear coordinates.
     */
    public double getMaxAngleChange(double startOrdinate, double endOrdinate) {
        if (startOrdinate > endOrdinate)
            throw new IllegalArgumentException("Invalid arguments, endOrdinate < starOrdinate");

        // compute the begin and end segments
        LineStringCursor delegate = new LineStringCursor(this);
        delegate.moveTo(startOrdinate);
        int startSegment = delegate.segment;
        delegate.moveTo(endOrdinate);
        int endSegment = delegate.segment;

        // everything inside the same segment
        if (startSegment == endSegment) return 0;

        double prevAngle = getSegmentAngle(startSegment);
        MaxAngleDiffenceAccumulator accumulator = new MaxAngleDiffenceAccumulator(prevAngle);
        for (int i = startSegment + 1; i <= endSegment; i++) {
            double currAngle = getSegmentAngle(i);
            accumulator.accumulate(currAngle);
        }

        return accumulator.getMaxDifference();
    }

