    /**
     * Paints the label as a non curved one. The positioning and rotation are provided by the
     * transformation
     *
     * @param transform
     * @throws Exception
     */
    public void paintStraightLabel(AffineTransform transform) throws Exception {
        AffineTransform oldTransform = graphics.getTransform();
        try {
            AffineTransform newTransform = new AffineTransform(oldTransform);
            newTransform.concatenate(transform);
            graphics.setTransform(newTransform);

            // draw the label shield first, underneath the halo
            Style2D graphic = labelItem.getTextStyle().getGraphic();
            if (graphic != null) {
                // take into account the graphic margins, if any
                double offsetY = 0;
                double offsetX = 0;
                final int[] margin = labelItem.getGraphicMargin();
                if (margin != null) {
                    offsetX = margin[1] - margin[3];
                    offsetY = margin[2] - margin[0];
                }
                LineInfo lastLine = lines.get(lines.size() - 1);
                LiteShape2 tempShape =
                        new LiteShape2(
                                gf.createPoint(
                                        new Coordinate(
                                                labelBounds.getMinX()
                                                        + labelBounds.getWidth() / 2.0
                                                        + offsetX,
                                                labelBounds.getMinY()
                                                        + lastLine.getBounds().getHeight()
                                                        - 1.0 * labelBounds.getHeight() / 2.0
                                                        + offsetY)),
                                null,
                                null,
                                false,
                                false);

                // resize graphic and transform it based on the position of the last line
                graphic = resizeGraphic(graphic);
                AffineTransform graphicTx = new AffineTransform(transform);

                graphicTx.translate(lastLine.getComponents().get(0).getX(), lastLine.getY());
                graphics.setTransform(graphicTx);
                shapePainter.paint(graphics, tempShape, graphic, graphic.getMaxScale());
            }

            // 0 is unfortunately an acceptable value if people only want to draw shields
            // (to leverage conflict resolution, priority when placing symbols)
            if (labelItem.getTextStyle().getFont().getSize() == 0) return;

            // draw the label
            if (lines.size() == 1 && lines.get(0).getComponents().size() == 1) {
                LineComponent component = lines.get(0).getComponents().get(0);
                drawGlyphVector(component);

            } else {
                // for multiline labels we have to go thru the lines and apply
                // the proper transformation
                // to position each row within the label bounds
                AffineTransform lineTx = new AffineTransform();
                for (LineInfo line : lines) {
                    for (LineComponent component : line.getComponents()) {
                        lineTx.setTransform(newTransform);
                        lineTx.translate(component.getX(), line.getY());
                        graphics.setTransform(lineTx);
                        drawGlyphVector(component);
                    }
                }
            }
        } finally {
            graphics.setTransform(oldTransform);
        }
    }

