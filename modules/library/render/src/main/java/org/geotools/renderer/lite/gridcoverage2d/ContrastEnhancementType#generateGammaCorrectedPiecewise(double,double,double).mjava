    /** Generate piecewise transformation for gamma correction */
    public static PiecewiseTransform1D<DefaultPiecewiseTransform1DElement>
            generateGammaCorrectedPiecewise(
                    final double minimum, final double maximum, final double gammaValue) {

        final double scale = (maximum - minimum) / (MAX_VALUE - MIN_VALUE);
        final double offset = minimum - MIN_VALUE * scale;
        final DefaultPiecewiseTransform1DElement mainElement =
                DefaultPiecewiseTransform1DElement.create(
                        "gamma-correction-transform",
                        RangeFactory.create(minimum, maximum),
                        new MathTransformationAdapter() {

                            @Override
                            public double derivative(double value) throws TransformException {

                                throw new UnsupportedOperationException(
                                        Errors.format(ErrorKeys.UNSUPPORTED_OPERATION_$1));
                            }

                            @Override
                            public boolean isIdentity() {
                                return false;
                            }

                            @Override
                            public double transform(double value) {
                                value = (value - offset) / scale;
                                return offset + Math.pow(value, gammaValue) * scale;
                            }
                        });

        return new DefaultPiecewiseTransform1D<>(
                new DefaultPiecewiseTransform1DElement[] {mainElement}, 0);
    }

