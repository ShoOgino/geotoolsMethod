    /**
     * Given a font name, returns alternatives for other scripts, based on the assumption they start
     * with the same base name, e.g., "Noto Sans" also has a number of alternative fonts dedicated
     * to specific scripts, like "Noti Sans Urdu", "Noto Sans Arabic", "Noto Sans Javanese" and so
     * on. The code will not return style alterations like "Noto Sans Bold" or "Noto Sans Bold
     * Italic" thought (strips all font names containing "bold" and "italic", case insesitive).
     *
     * @param name
     * @return A list of font names with the same base name
     */
    public List<String> getAlternatives(String name) {
        List<String> result = alternatives.get(name);
        if (result == null) {
            result =
                    FontCache.getDefaultInstance()
                            .getAvailableFonts()
                            .stream()
                            .filter(f -> f.startsWith(name))
                            .filter(
                                    f -> { // leave out alterations, use base fonts
                                        String lc = f.toLowerCase();
                                        return !lc.contains(" bold") && !lc.contains(" italic");
                                    })
                            .sorted() // leave further altered fonts down the line, base ones first
                            .collect(Collectors.toList());
            alternatives.put(name, result);
        }

        return result;
    }

