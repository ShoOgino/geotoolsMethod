    private void drawCurvedLine(LineInfo line, LineStringCursor cursor, double startOrdinate,
            boolean drawingHalo, final float lineOffset, final float lineThickness) {
        // the cursor is in the last char of the label
        double endOrdinate = cursor.getCurrentOrdinate();
        // compute the advance based on the first char of the label
        GlyphVector glyphVector = line.getComponents().get(0).getGlyphVector();
        double advance = glyphVector.getGlyphMetrics(0).getAdvance() * 0.5f;
        // extract from the linestring the portion associated with the layer
        LineString labelLineString = cursor.getSubLineString(startOrdinate - advance, endOrdinate - advance);
        // compute the underline linestring
        
        LiteShape underlineLineString = computeCurvedLine(labelLineString, lineOffset);
        if (drawingHalo) {
            // when drawing the halo we assume that the correct halo configuration has been set
            graphics.draw(underlineLineString);
        } else {
            // string the current stroke to restore it back
            Stroke oldStroke = graphics.getStroke();
            try {
                // if we are not drawing the halo we need to set the proper stroke
                
                graphics.setStroke(new BasicStroke(lineThickness));
                // draw the underline
                graphics.draw(underlineLineString);
            } finally {
                graphics.setStroke(oldStroke);
            }
        }
    }

