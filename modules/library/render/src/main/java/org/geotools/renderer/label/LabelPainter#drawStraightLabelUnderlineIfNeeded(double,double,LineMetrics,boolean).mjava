    /**
     * Draws a line under the text with the same color of the text and with the same width
     * using the provided thickness and offset.
     */
    private void drawStraightLabelUnderlineIfNeeded(double minX, double maxX, LineMetrics metrics, boolean drawingHalo) {
        // let's see if text underline is enabled for this label or we have something to draw
        if (!labelItem.isTextUnderlined() || (Math.abs(maxX - minX) < 0.0000001)) {
            // text underline not enabled or nothing to draw
            return;
        }
        // get needed metrics values
        float underlineThickness = metrics.getUnderlineThickness();
        float underlineOffset = metrics.getUnderlineOffset();
        // let's se if we are drawing the halo around the underline line
        if (drawingHalo) {
            // when drawing the halo we assume that the correct halo configuration has been set
            graphics.draw(new Line2D.Double(minX, underlineOffset * 2, maxX, underlineOffset * 2));
        } else {
            // storing the current stroke and setting the stroke according to underline thickness
            Stroke currentStroke = graphics.getStroke();
            graphics.setStroke(new BasicStroke(underlineThickness));
            // we draw a line with the same color of the text and a stroke of 2
            graphics.draw(new Line2D.Double(minX, underlineOffset * 2, maxX, underlineOffset * 2));
            // we need to restore the previous stroke
            graphics.setStroke(currentStroke);
        }
    }

