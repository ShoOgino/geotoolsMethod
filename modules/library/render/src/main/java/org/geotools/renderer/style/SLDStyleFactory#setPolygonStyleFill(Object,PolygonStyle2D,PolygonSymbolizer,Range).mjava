    /**
     * Sets a polygon style fill, which includes regular color fill, fill composite, and possibly a
     * Style2D fill.
     */
    void setPolygonStyleFill(
            Object feature, PolygonStyle2D style, PolygonSymbolizer symbolizer, Range scaleRange) {
        Fill fill = symbolizer.getFill();
        if (fill == null) return;

        // sets Style2D fill making sure we don't use too much memory for the
        // rasterization
        if (fill.getGraphicFill() != null) {
            double size = evalToDouble(fill.getGraphicFill().getSize(), feature, 0);
            if (isVectorRenderingEnabled() || size > MAX_RASTERIZATION_SIZE) {
                // sets graphic fill if available and vector rendering is
                // enabled
                Style2D style2DFill =
                        createPointStyle(
                                feature, symbolizer, fill.getGraphicFill(), scaleRange, false);
                if (!(style2DFill instanceof GraphicStyle2D)) {
                    style.setGraphicFill(style2DFill);
                    return;
                }
            }
        }
        // otherwise, sets regular fill using Java raster-based Paint objects
        float opacity = 1f;
        if (symbolizer.getFill() != null) {
            opacity = evalOpacity(symbolizer.getFill().getOpacity(), feature);
        }
        Composite composite = getComposite(symbolizer.getOptions(), opacity);
        if (composite == null) {
            composite = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, opacity);
        }
        style.setFill(getPaint(symbolizer.getFill(), feature, symbolizer));
        style.setFillComposite(composite);
    }

