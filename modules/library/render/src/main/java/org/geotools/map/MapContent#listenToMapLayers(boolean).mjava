    /**
     * Listen to the map layers; passing any events on to our own mapListListeners.
     * <p>
     * This method only has an effect if we have any actuall mapListListeners.
     * 
     * @param listen
     *            True to connect to all the layers and listen to events
     */
    protected synchronized void listenToMapLayers(boolean listen) {
        if( mapListeners == null || mapListeners.isEmpty()){
            return; // not worth listening nobody is interested
        }
        if (layerListener == null) {
            layerListener = new MapLayerListener() {
                public void layerShown(MapLayerEvent event) {
                    Layer layer = (Layer) event.getSource();
                    int index = layers().indexOf(layer);
                    fireLayerEvent(layer, index, event);
                }

                public void layerSelected(MapLayerEvent event) {
                    Layer layer = (Layer) event.getSource();
                    int index = layers().indexOf(layer);
                    fireLayerEvent(layer, index, event);
                }

                public void layerHidden(MapLayerEvent event) {
                    Layer layer = (Layer) event.getSource();
                    int index = layers().indexOf(layer);
                    fireLayerEvent(layer, index, event);
                }

                public void layerDeselected(MapLayerEvent event) {
                    Layer layer = (Layer) event.getSource();
                    int index = layers().indexOf(layer);
                    fireLayerEvent(layer, index, event);
                }

                public void layerChanged(MapLayerEvent event) {
                    Layer layer = (Layer) event.getSource();
                    int index = layers().indexOf(layer);
                    fireLayerEvent(layer, index, event);
                }
            };
        }
        if (listen) {
            for (Layer layer : layers()) {
                layer.addMapLayerListener(layerListener);
            }
        } else {
            for (Layer layer : layers()) {
                layer.removeMapLayerListener(layerListener);
            }
        }
    }

