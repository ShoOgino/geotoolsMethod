    /**
     * Returns a BlendComposite with the given mode and opacity. If opacity is 1.0 one of the public
     * constant BlendComposite fields will be returned, incurring in no instantiation cost
     * 
     * @param mode
     * @param opacity
     * @return
     */
    public static Composite getInstance(BlendingMode mode, float opacity) {
        // use common constants when opacity is 1.0 (like AlphaComposite.getInstance() does)
        if (opacity == 1f) {
            switch (mode) {
            case Multiply:
                return MULTIPLY;
            case Screen:
                return SCREEN;
            case Overlay:
                return OVERLAY;
            case Darken:
                return DARKEN;
            case Lighten:
                return LIGHTEN;
            case ColorDodge:
                return COLOR_DODGE;
            case ColorBurn:
                return COLOR_BURN;
            case HardLight:
                return HARD_LIGHT;
            case SoftLight:
                return SOFT_LIGHT;
            case Difference:
                return DIFFERENCE;
            case Exclusion:
                return EXCLUSION;
            }
        }

        return new BlendComposite(mode, opacity);
    }

