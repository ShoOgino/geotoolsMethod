    /**
     * Returns a BlendComposite with the given mode and opacity. If opacity is 1.0 one of the public
     * constant BlendComposite fields will be returned, incurring in no instantiation cost
     *
     * @param mode
     * @param opacity
     * @return
     */
    public static Composite getInstance(BlendingMode mode, float opacity) {
        // use common constants when opacity is 1.0 (like AlphaComposite.getInstance() does)
        if (opacity == 1f) {
            switch (mode) {
                case MULTIPLY:
                    return MULTIPLY_COMPOSITE;
                case SCREEN:
                    return SCREEN_COMPOSITE;
                case OVERLAY:
                    return OVERLAY_COMPOSITE;
                case DARKEN:
                    return DARKEN_COMPOSITE;
                case LIGHTEN:
                    return LIGHTEN_COMPOSITE;
                case COLOR_DODGE:
                    return COLOR_DODGE_COMPOSITE;
                case COLOR_BURN:
                    return COLOR_BURN_COMPOSITE;
                case HARD_LIGHT:
                    return HARD_LIGHT_COMPOSITE;
                case SOFT_LIGHT:
                    return SOFT_LIGHT_COMPOSITE;
                case DIFFERENCE:
                    return DIFFERENCE_COMPOSITE;
                case EXCLUSION:
                    return EXCLUSION_COMPOSITE;
            }
        }

        return new BlendComposite(mode, opacity);
    }

