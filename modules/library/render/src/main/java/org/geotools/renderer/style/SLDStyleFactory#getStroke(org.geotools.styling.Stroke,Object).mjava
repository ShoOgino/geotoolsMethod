	Stroke getStroke(org.geotools.styling.Stroke stroke, Object feature) {
		if (stroke == null) {
			return null;
		}

		// resolve join type into a join code
		String joinType;
		int joinCode;

		joinType = evalToString(stroke.getLineJoin(), feature, "miter");

		if (JOIN_LOOKUP.containsKey(joinType)) {
			joinCode = ((Integer) JOIN_LOOKUP.get(joinType)).intValue();
		} else {
			joinCode = java.awt.BasicStroke.JOIN_MITER;
		}

		// resolve cap type into a cap code
		String capType;
		int capCode;

		capType = evalToString(stroke.getLineCap(), feature, "square");

		if (CAP_LOOKUP.containsKey(capType)) {
			capCode = ((Integer) CAP_LOOKUP.get(capType)).intValue();
		} else {
			capCode = java.awt.BasicStroke.CAP_SQUARE;
		}

		// get the other properties needed for the stroke
		float[] dashes = stroke.getDashArray();
		float width = evalToFloat(stroke.getWidth(), feature, 1);
		float dashOffset = evalToFloat(stroke.getDashOffset(), feature, 0);

		// Simple optimization: let java2d use the fast drawing path if the line
		// width
		// is small enough...
		if (width < 1.5 & lineOptimizationEnabled) {
			width = 0;
		}

		// now set up the stroke
		BasicStroke stroke2d;

		if ((dashes != null) && (dashes.length > 0)) {
			stroke2d = new BasicStroke(width, capCode, joinCode, 1, dashes,
					dashOffset);
		} else {
			stroke2d = new BasicStroke(width, capCode, joinCode, 1);
		}

		return stroke2d;
	}

