    /**
     * Checks if the fill can simply be omitted because it's not going to be visible anyways. It
     * takes a style that has a solid outline and a width or height that's less than the stroke
     * width
     */
    private boolean optimizeOutFill(PolygonStyle2D style, LiteShape2 shape) {
        // if we have a graphic stroke the outline might not be solid, so, not covering
        if (style.getGraphicStroke() != null) {
            return false;
        }

        final Stroke stroke = style.getStroke();
        if (stroke == null || !(stroke instanceof BasicStroke)) {
            return false;
        }
        // we need a solid composite to optimize out
        Composite composite = style.getContourComposite();
        if (!(composite instanceof AlphaComposite)) {
            return false;
        }
        AlphaComposite ac = (AlphaComposite) composite;
        if (ac.getAlpha() < 1) {
            return false;
        }

        // if dashed, it's not covering
        BasicStroke basic = (BasicStroke) stroke;
        if (basic.getDashArray() != null) {
            return false;
        }

        float lineWidth = basic.getLineWidth();
        Rectangle2D bounds = shape.getBounds2D();
        return bounds.getWidth() < lineWidth || bounds.getHeight() < lineWidth;
    }

