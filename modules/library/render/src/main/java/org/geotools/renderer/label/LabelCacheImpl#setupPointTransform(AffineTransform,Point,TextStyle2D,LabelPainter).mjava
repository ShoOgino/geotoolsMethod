    /**
     * Sets up the transformation needed to position the label at the specified point, using the
     * positioning information loaded from the the text style
     *
     * @param tempTransform
     * @param centroid
     * @param textStyle
     * @param painter
     */
    private void setupPointTransform(
            AffineTransform tempTransform,
            Point centroid,
            TextStyle2D textStyle,
            LabelPainter painter) {

        tempTransform.translate(centroid.getX(), centroid.getY());

        double rotation = textStyle.getRotation();
        if (Double.isNaN(rotation) || Double.isInfinite(rotation)) {
            // might legitimately happen if the rotation is computed out of an expression
            rotation = 0.0;
        }

        tempTransform.rotate(rotation);

        Rectangle2D textBounds = painter.getLabelBounds();
        // This now does "centering" taking into account the anchoring
        // and the real positioning of the text bounds (the bounds are placed
        // so that the baseline is in the origin, and the text goes up in
        // the negative coordinates)
        double displacementX =
                (textStyle.getAnchorX() * (-textBounds.getWidth())) + textStyle.getDisplacementX();
        double displacementY =
                (textStyle.getAnchorY() * (textBounds.getHeight()))
                        - textStyle.getDisplacementY()
                        - textBounds.getHeight()
                        + ((painter.lines.size() == 1)
                                ? painter.getLineHeight()
                                : painter.getLineHeightForAnchorY(textStyle.getAnchorY()));
        tempTransform.translate(displacementX, displacementY);
    }

