    private java.awt.Font styleFont(Object feature, Font curr,
        java.awt.Font javaFont, TextSymbolizer symbolizer) {
        String reqStyle = evalToString(curr.getFontStyle(), feature, null);

        int styleCode;

        if (FONT_STYLE_LOOKUP.containsKey(reqStyle)) {
            styleCode = ((Integer) FONT_STYLE_LOOKUP.get(reqStyle)).intValue();
        } else {
            styleCode = java.awt.Font.PLAIN;
        }

        String reqWeight = evalToString(curr.getFontWeight(), feature, null);

        if ("Bold".equalsIgnoreCase(reqWeight)) {
            styleCode = styleCode | java.awt.Font.BOLD;
        }

        float size = evalToFloat(curr.getSize(), feature, 10);
 
        // apply basic styling
        javaFont = javaFont.deriveFont(styleCode, size);
        
        // check vendor options
        boolean kerning = voParser.getBooleanOption(symbolizer, TextSymbolizer.KERNING, 
                TextSymbolizer.DEFAULT_KERNING);
        if(kerning) {
            javaFont = applyKerning(javaFont);
        }
        return javaFont;
    }

