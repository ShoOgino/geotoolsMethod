    private void renderGraphicsStroke(Graphics2D graphics, double x, double y, Style2D style,
            double rotation, double graphicRotation, float opacity, boolean isLabelObstacle) {
        if (LOGGER.isLoggable(Level.FINEST)) {
            LOGGER.finest("drawing GraphicsStroke@" + x + "," + y);
        }
        
        graphics.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, opacity));
        
        if(style instanceof GraphicStyle2D) {
            GraphicStyle2D gstyle = (GraphicStyle2D) style;
            BufferedImage image = gstyle.getImage();
            double dx = -image.getWidth() * gstyle.getAnchorPointX() + gstyle.getDisplacementX();
            double dy = -image.getHeight() * gstyle.getAnchorPointY() + gstyle.getDisplacementY();
            renderImage(graphics, x, y, dx, dy, image, rotation, opacity, isLabelObstacle);
        } else if(style instanceof MarkStyle2D) {
            // almost like the code in the main paint method, but 
            // here we don't use the mark composite
            MarkStyle2D ms2d = (MarkStyle2D) style;
            Shape transformedShape = ms2d.getTransformedShape((float) x, (float) y,
                    (float) rotation, (float) graphicRotation);
            if (transformedShape != null) {
                if (ms2d.getFill() != null) {
                    graphics.setPaint(ms2d.getFill());
                    graphics.fill(transformedShape);
                }

                if (ms2d.getContour() != null) {
                    graphics.setPaint(ms2d.getContour());
                    graphics.setStroke(ms2d.getStroke());
                    graphics.draw(transformedShape);
                }

                if (isLabelObstacle) {
                    labelCache.put(transformedShape.getBounds2D());
                }
            }
        } else if(style instanceof IconStyle2D) {
            IconStyle2D icons = (IconStyle2D) style;
            Icon icon = icons.getIcon();
            
            AffineTransform markAT = new AffineTransform(graphics.getTransform());
            markAT.translate(x, y);
            markAT.rotate(rotation);
            
            // the displacement to be applied to all points, centers the icon and applies the
            // Graphic displacement as well
            float dx = -(icon.getIconWidth() * icons.getAnchorPointX()) + icons.getDisplacementX();
            float dy = -(icon.getIconHeight() * icons.getAnchorPointY()) + icons.getDisplacementY();
            markAT.translate(dx, dy);

            AffineTransform temp = graphics.getTransform();
            try {
                graphics.setTransform(markAT);
                icon.paintIcon(null, graphics, 0, 0);
            } finally {
                graphics.setTransform(temp);
            }
            
            if (isLabelObstacle) {
                labelCache.put(new Rectangle2D.Double(x+dx,y+dy,icon.getIconWidth(),icon.getIconHeight()));
            }
        }
    }

