        /**
         * Replaces the layer at the given position with another. Equivalent to:
         *
         * <pre><code>
         * remove(index);
         * add(index, element);
         * </code></pre>
         *
         * The same events will be sent to {@link MapLayerListListener} objects as if the above code
         * had been called.
         *
         * @param index position of the layer to be replaced
         * @param element the new layer
         * @return the layer that was replaced
         */
        @Override
        public Layer set(int index, Layer element) {
            /*
             * Note: rather than calling the superclass set method here
             * we call remove followed by add to ensure correct event
             * and listener handling.
             */
            Layer removed = remove(index);
            add(index, element);
            checkViewportCRS();
            return removed;
        }

