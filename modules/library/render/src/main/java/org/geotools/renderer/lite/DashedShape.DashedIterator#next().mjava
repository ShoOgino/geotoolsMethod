        public void next() {
            // have we exhausted the previous segment?
            if (segmentLength == 0) {
                if(!delegate.isDone()) {
                    prevCoords[0] = currCoords[0];
                    prevCoords[1] = currCoords[1];
                    lastType = delegate.currentSegment(currCoords);
                    if(lastType == PathIterator.SEG_MOVETO) {
                        // start over and move to the next value
                        segmentOffset = 0;
                        dashOffset = dashPhase;
                        dashIndex = baseDashIndex;
                        dashedSegment[0] = currCoords[0];
                        dashedSegment[1] = currCoords[1];
                        dashedType = PathIterator.SEG_MOVETO;
                        dx = 0;
                        dy = 0;
                        delegate.next();
                        // if no segment after move we're done
                        done = delegate.isDone();
                    } else { 
                        // prepare for the next round of dash array application
                        dx = currCoords[0] - prevCoords[0];
                        dy = currCoords[1] - prevCoords[1];
                        segmentLength = (float) sqrt(pow(dx, 2) + pow(dy, 2));
                        segmentOffset = 0;
                        delegate.next();
                    }
                } else {
                    done = true;
                }
            }
            // if not done move along the dash array
            if (!done && lastType != PathIterator.SEG_MOVETO) {
                float dashResidual = dashOffsets[dashIndex] - dashOffset;
                float segmentResidual = segmentLength - segmentOffset;
                float residual = min(dashResidual, segmentResidual);
                if (abs(segmentLength) > EPS) {
                    dashedSegment[0] = dashedSegment[0] + dx * residual / segmentLength;
                    dashedSegment[1] = dashedSegment[1] + dy * residual / segmentLength;
                }
                // if the lastType is a line to we need to decide if we're pen down or pen
                // up depending on what of the dash segments we're in
                if (lastType == PathIterator.SEG_LINETO) {
                    dashedType = dashIndex % 2 == 0 ? PathIterator.SEG_LINETO
                            : PathIterator.SEG_MOVETO;
                } else {
                    dashedType = lastType;
                }

                // move forward
                dashOffset += residual;
                segmentOffset += residual;

                // move forward along the dash array
                if (abs(dashOffsets[dashIndex] - dashOffset) < EPS) {
                    dashIndex++;
                    if (dashIndex >= dashOffsets.length) {
                        dashIndex = 0;
                        dashOffset = 0;
                    }
                }

                // more forward along the segment
                if (abs(segmentOffset - segmentLength) < EPS) {
                    segmentLength = 0;
                    segmentOffset = 0;
                }
            }
        }

