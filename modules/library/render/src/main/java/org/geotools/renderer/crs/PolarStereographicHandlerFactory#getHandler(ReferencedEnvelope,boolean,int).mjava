    public ProjectionHandler getHandler(ReferencedEnvelope renderingEnvelope, boolean wrap, int maxWraps) {
        MapProjection mapProjection = CRS.getMapProjection(renderingEnvelope
                .getCoordinateReferenceSystem());
        if (renderingEnvelope != null && mapProjection instanceof PolarStereographic) {
            boolean north;
            // variant B uses standard_parallel
            ParameterValue<?> stdParallel = null;
            try {
                stdParallel = mapProjection.getParameterValues().parameter(
                        AbstractProvider.STANDARD_PARALLEL_1.getName().getCode());
            } catch (ParameterNotFoundException e) {
                // ignore
            }
            if(stdParallel != null) {
                north = stdParallel.doubleValue() > 0;
            } else {
                // variant A uses latitude of origin
                ParameterValue<?> latOrigin = null;
                try {
                    latOrigin = mapProjection.getParameterValues().parameter(
                            AbstractProvider.LATITUDE_OF_ORIGIN.getName().getCode());
                } catch (ParameterNotFoundException e) {
                    // ignore
                }
                if(latOrigin != null) {
                    north = latOrigin.doubleValue() > 0;
                } else {
                    return null;
                }
            }

            ReferencedEnvelope validArea;
            if(north) {
                validArea = new ReferencedEnvelope(-Double.MAX_VALUE, Double.MAX_VALUE, -0, 90, DefaultGeographicCRS.WGS84);
            } else {
                validArea = new ReferencedEnvelope(-Double.MAX_VALUE, Double.MAX_VALUE, -90, 0, DefaultGeographicCRS.WGS84);
            }
            
            return new ProjectionHandler(renderingEnvelope, validArea);
        }

        return null;
    }

