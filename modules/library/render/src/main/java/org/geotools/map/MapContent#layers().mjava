    /**
     * Gets the list of layers for this map content. The returned list has the following
     * characteristics:
     *
     * <ul>
     *   <li>It is "live", ie. changes to its contents will be reflected in this map content.
     *   <li>It is thread-safe. Accessing list elements directly or via a {@linkplain
     *       java.util.ListIterator} returns a snapshot view of the list contents (as per Java's
     *       {@linkplain CopyOnWriteArrayList} class).
     *   <li>Adding a layer to the list, or removing a layer from it, results in a {@linkplain
     *       MapLayerListEvent} being published by the map content.
     * </ul>
     *
     * For these reasons, you should always work directly with the list returned by this method and
     * avoid making copies since they will not have the above behaviour.
     *
     * @return a "live" reference to the layer list for this map content
     */
    public List<Layer> layers() {
        monitor.readLock().lock();
        try {
            return layerList;
        } finally {
            monitor.readLock().unlock();
        }
    }

