	/**
	 * We are hacking here a solutions for whenever the user either did not
	 * specify a style or did specify a bad one and the resulting image seems
	 * not be drawable.
	 * @return {@link GridCoverage2D} the result of this operation
	 */
	public synchronized GridCoverage2D execute() {
		///////////////////////////////////////////////////////////////////////
		//
		// We get the non-geophysics view of this coverage in order to try to
		// preserve as much as possible the native color maps applied at reading
		// time. This is especially true if we do not want to use the
		// RasterSymbolizer capabilities; to achieve this we can just use an
		// empty raster symbolizer element.
		//
		///////////////////////////////////////////////////////////////////////
		//get the output coverage and its RenderedImage
		final GridCoverage2D output= (GridCoverage2D) super.execute();
		final GridCoverage2D outputNonGeo=output.geophysics(false);
		//if we have an index color model we are ok, this way we preserve the non geo view or whatever it is now called
		if(outputNonGeo.getRenderedImage().getColorModel() instanceof IndexColorModel)
			return output;
		RenderedImage outputImage=output.getRenderedImage();
		

		
		///////////////////////////////////////////////////////////////////////
		//
		// We are in the more general case hence it might be that we have
		// an image with too many bands and a bogus color space or an image with
		// a data type that is not drawable itself. We have to try and do our
		// best in order to show something as quickly as possible.
		//
		///////////////////////////////////////////////////////////////////////
		//let's check the number of bands
		final SampleModel outputImageSampleModel= outputImage.getSampleModel();
		final int numBands=outputImageSampleModel.getNumBands();
		final int dataType= outputImageSampleModel.getDataType();
		final GridSampleDimension sd[];
		if(numBands>4)
		{
			//get the visible band
			final int visibleBand=CoverageUtilities.getVisibleBand(outputImage);
			outputImage=
				new ImageWorker(outputImage).setRenderingHints(this.getHints()).retainBands(new int[]{visibleBand}).getRenderedImage();
			sd=new GridSampleDimension[]{(GridSampleDimension) output.getSampleDimension(visibleBand)};
		}
		else
			sd=output.getSampleDimensions();

		//more general case, let's check the data type
		switch(dataType){
		case DataBuffer.TYPE_DOUBLE:
			case DataBuffer.TYPE_FLOAT:
			case DataBuffer.TYPE_INT:
			case DataBuffer.TYPE_SHORT:
			//rescale to byte
			outputImage=
				new ImageWorker(outputImage).setRenderingHints(this.getHints()).rescaleToBytes().getRenderedImage();
				
		}
		//create a new grid coverage but preserve as much input as possible
		return this.getCoverageFactory().create(output.getName(), outputImage,(GridGeometry2D)output.getGridGeometry(),sd, new GridCoverage[]{output},output.getProperties());
	}

