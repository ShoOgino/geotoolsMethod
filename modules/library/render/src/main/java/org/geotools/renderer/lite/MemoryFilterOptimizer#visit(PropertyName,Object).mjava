    @Override
    public Object visit(PropertyName expression, Object extraData) {
        Expression replacement = expressionReplacements.get(expression);
        if (replacement == null) {
            if (simpleFeatureType != null
                    && simpleFeatureType.indexOf(expression.getPropertyName()) >= 0) {
                // index access is significantly faster, does not need memoization
                replacement = new IndexPropertyName(simpleFeatureType, expression);
            } else if (memoizeCandidates.contains(expression)) {
                // other accesses can use caching instead
                replacement = new MemoizedPropertyName(expression);
            } else {
                replacement = expression;
            }

            expressionReplacements.put(expression, replacement);
        }

        return replacement;
    }

