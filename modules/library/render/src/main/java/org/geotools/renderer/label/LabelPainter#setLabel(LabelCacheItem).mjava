    /**
     * Sets the current label. The label will be laid out according to the label item settings
     * (curved lines, auto wrapping, curved line usage) and the painter will be ready to draw it.
     *
     * @param labelItem
     */
    public void setLabel(LabelCacheItem labelItem) {
        this.labelItem = labelItem;
        TextStyle2D textStyle = labelItem.getTextStyle();
        textStyle.setLabel(labelItem.getLabel());

        // reset previous caches
        labelBounds = null;
        lines = null;

        // layout the label elements
        lines = splitter.layout(labelItem, graphics);

        // compute the max line length
        double maxWidth = 0;
        for (LineInfo line : lines) {
            maxWidth = Math.max(line.getWidth(), maxWidth);
        }

        // now that we know how big each line and how big is the longest,
        // we can layout the items and compute the total bounds
        double boundsY = 0;
        double labelY = 0;
        LineInfo previous = null;
        for (LineInfo info : lines) {
            Rectangle2D currBounds = info.getBounds();

            // the position at which we start to draw, x and y
            // for x we have to take into consideration alignment as
            // well since that affects the horizontal size of the
            // bounds,
            // for y we don't care right now as we're computing
            // only the total bounds for a text located in the origin
            double minX =
                    (maxWidth - currBounds.getWidth()) * textStyle.getAnchorX()
                            - currBounds.getMinX();
            info.setMinX(minX);

            double descentLeading =
                    previous == null ? info.getDescentLeading() : previous.getDescentLeading();
            double lineOffset = currBounds.getHeight() + descentLeading;
            if (labelBounds == null) {
                labelBounds = currBounds;
                boundsY = currBounds.getMinY() + lineOffset;
            } else {
                Rectangle2D translated =
                        new Rectangle2D.Double(
                                minX, boundsY, currBounds.getWidth(), currBounds.getHeight());
                boundsY += lineOffset;
                labelY += lineOffset;
                labelBounds = labelBounds.createUnion(translated);
            }
            info.setY(labelY);
            previous = info;
        }
        normalizeBounds(labelBounds);
    }

