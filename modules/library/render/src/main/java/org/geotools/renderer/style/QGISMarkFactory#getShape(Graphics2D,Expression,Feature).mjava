    @Override
    public Shape getShape(Graphics2D graphics, Expression symbolUrl, Feature feature)
            throws Exception {
        // cannot handle a null url
        if (symbolUrl == null) return null;

        String wellKnownName = symbolUrl.evaluate(feature, String.class);

        LOGGER.finer("fetching mark of name " + wellKnownName);

        if (wellKnownName.equalsIgnoreCase(PREFIX + "cross")) {
            LOGGER.finer("returning qgis cross");

            return ShapeMarkFactory.shapes.get("plus");
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "circle")) {
            LOGGER.finer("returning qgis circle");

            return WellKnownMarkFactory.circle;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "triangle")) {
            LOGGER.finer("returning qgis triangle");

            return triangle;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "equilateral_triangle")
                || wellKnownName.equalsIgnoreCase("equilateral_triangle")) {
            LOGGER.finer("returning qgis triangle");

            return WellKnownMarkFactory.triangle;
        }

        // Direct conflict with WellKnownMarkFactory star
        if (wellKnownName.equalsIgnoreCase(PREFIX + "star")) {
            LOGGER.finer("returning qgis star");

            return star;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "cross2")
                || wellKnownName.equalsIgnoreCase("cross2")) {
            LOGGER.finer("returning qgis cross2");

            return ShapeMarkFactory.shapes.get("times");
        }

        // This arrow points up, conflicts with WellKnownMarkFactory.arrow pointing right.
        if (wellKnownName.equalsIgnoreCase(PREFIX + "arrow")) {
            LOGGER.finer("returning qgis arrow");

            return arrow;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "diamond")
                || wellKnownName.equalsIgnoreCase("diamond")) {
            LOGGER.finer("returning qgis diamond");

            return diamond;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "pentagon")
                || wellKnownName.equalsIgnoreCase("pentagon")) {
            LOGGER.finer("returning qgis pentagon");

            return pentagon;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "rectangle")
                || wellKnownName.equalsIgnoreCase("rectangle")) {
            LOGGER.finer("returning qgis rectangle");

            return WellKnownMarkFactory.square;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "regular_star")
                || wellKnownName.equalsIgnoreCase("regular_star")) {
            LOGGER.finer("returning qgis regular_star");
            return WellKnownMarkFactory.star;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "line")
                || wellKnownName.equalsIgnoreCase("line")) {
            LOGGER.finer("returning qgis line");

            return ShapeMarkFactory.shapes.get("vertline");
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "arrowhead")
                || wellKnownName.equalsIgnoreCase("arrowhead")) {
            LOGGER.finer("returning qgis arrowhead");

            return arrowhead;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "filled_arrowhead")
                || wellKnownName.equalsIgnoreCase("filled_arrowhead")) {
            LOGGER.finer("returning qgis filled_arrowhead");

            return filled_arrowhead;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "crossfill")
                || wellKnownName.equalsIgnoreCase("crossfill")) {
            LOGGER.finer("returning qgis filled cross");

            return crossFill;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "diagonalhalfsquare")
                || wellKnownName.equalsIgnoreCase("diagonalhalfsquare")) {
            LOGGER.finer("returning qgis diagonal half square");

            return diagonalHalfSquare;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "HalfSquare")
                || wellKnownName.equalsIgnoreCase("HalfSquare")) {
            LOGGER.finer("returning qgis half square");

            return halfSquare;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "hexagon")
                || wellKnownName.equalsIgnoreCase("hexagon")) {
            LOGGER.finer("returning qgis hexagon");

            return hexagon;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "lefthalftriangle")
                || wellKnownName.equalsIgnoreCase("lefthalftriangle")) {
            LOGGER.finer("returning qgis lefthalftriangle");

            return leftHalfTriangle;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "righthalftriangle")
                || wellKnownName.equalsIgnoreCase("righthalftriangle")) {
            LOGGER.finer("returning qgis righthalftriangle");

            return rightHalfTriangle;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "quartercircle")
                || wellKnownName.equalsIgnoreCase("quartercircle")) {
            LOGGER.finer("returning qgis quartercircle");

            return quarterCricle;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "semicircle")
                || wellKnownName.equalsIgnoreCase("semicircle")) {
            LOGGER.finer("returning qgis semicircle");

            return semiCircle;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "thirdcircle")
                || wellKnownName.equalsIgnoreCase("thirdcircle")) {
            LOGGER.finer("returning qgis thirdcircle");

            return thirdCircle;
        }

        if (wellKnownName.equalsIgnoreCase(PREFIX + "quartersquare")
                || wellKnownName.equalsIgnoreCase("quartersquare")) {
            LOGGER.finer("returning qgis quartersquare");

            return quarterSquare;
        }

        return null;
    }

