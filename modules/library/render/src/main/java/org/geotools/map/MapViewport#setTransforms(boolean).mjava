    /**
     * Sets the affine transforms used to convert between screen and world coordinates.
     *
     * <p>If screen area is undefined, the transforms are set to {@code null}.
     *
     * <p>If screen area is defined but not world bounds, the transforms are set to identity.
     *
     * <p>When both screen area and world bounds are defined, the transforms are set as follows. If
     * aspect ratio matching is enabled, the transforms transforms are calculated to centre the
     * world bounds in the screen area, after which the bounds will be adjusted if necessary to have
     * the same aspect ratio as the screen area. If aspect ratio matching is not enabled, basic
     * transforms are calculated without centering or bounds adjustment.
     *
     * @param newBounds indicates whether world bounds have just been changed
     */
    private void setTransforms(boolean newBounds) {
        if (screenArea.isEmpty()) {
            screenToWorld = worldToScreen = null;
            hasCenteringTransforms = false;

        } else if (bounds.isEmpty()) {
            screenToWorld = new AffineTransform();
            worldToScreen = new AffineTransform();
            hasCenteringTransforms = false;

        } else if (matchingAspectRatio) {
            if (newBounds || !hasCenteringTransforms) {
                calculateCenteringTransforms();
            }
            bounds = calculateActualBounds();

        } else {
            calculateSimpleTransforms(bounds);
            hasCenteringTransforms = false;
        }
    }

