        /**
         * Removes the layer at position {@code index} from this list. Note: removing a layer causes
         * its {@code dispose} method to be called, so although a reference to the removed layer is
         * returned by this method it should not be used subsequently.
         *
         * @param index the position of the layer to be removed
         * @return the layer that was removed (will have been disposed)
         */
        @Override
        public Layer remove(int index) {
            Layer removed = super.remove(index);
            fireLayerRemoved(removed, index, index);
            if (layerListener != null) {
                removed.removeMapLayerListener(layerListener);
            }
            removed.dispose();
            return removed;
        }

