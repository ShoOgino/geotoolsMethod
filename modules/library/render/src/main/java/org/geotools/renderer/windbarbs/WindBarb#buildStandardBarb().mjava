    /**
     * @return
     * 
     */
    private Shape buildStandardBarb() {
        int positionOnPath = -windBarbDefinition.vectorLength;

        // Base barb
        Path2D path = new Path2D.Double();

        // Initialize Barb
        if (knots < 5) {
            // let's use a circle for Calm
            return new Ellipse2D.Float(-windBarbDefinition.zeroWindRadius / 2.0f, // the X coordinate of the upper-left corner of the specified
                                                                                  // rectangular area
                    -windBarbDefinition.zeroWindRadius / 2.0f, // the Y coordinate of the upper-left corner of the specified rectangular area
                    windBarbDefinition.zeroWindRadius, windBarbDefinition.zeroWindRadius);
        } else {

            // draw wind barb line
            path.moveTo(0, 0);
            path.lineTo(0, positionOnPath);
        }
        // pennants management
        if (squares > 0) {
            positionOnPath = drawSquare(path, positionOnPath);
            positionOnPath += windBarbDefinition.elementsSpacing; // add spacing
        }

        // pennants management
        if (pennants > 0) {
            positionOnPath = drawPennants(path, positionOnPath);
            positionOnPath += windBarbDefinition.elementsSpacing; // add spacing
        }

        // long barbs management
        if (longBarbs > 0) {
            positionOnPath = drawLongBarbs(path, positionOnPath);
            positionOnPath += windBarbDefinition.elementsSpacing; // add spacing
        }

        // short barbs management
        if (shortBarbs > 0) {
            positionOnPath = drawShortBarb(path, positionOnPath);
        }

        // FLIP for geotools
        final Shape createTransformedShape = path.createTransformedShape(AffineTransform
                .getScaleInstance(1, -1));
        return createTransformedShape;

    }

