    /**
     * add Pennants to the shape
     * 
     * @param path
     * @param positionOnPath
     * @return
     */
    private int drawPennants(Path2D path, int positionOnPath) {
        if (pennants <= 0) {
            return positionOnPath;
        }

        for (int elements = 0; elements < pennants; elements++) {
            // move forward one pennant at a time

            // draw pennant
            path.moveTo(0, positionOnPath);
            positionOnPath += windBarbDefinition.basePennantLength / 2.0;
            path.lineTo(windBarbDefinition.longBarbLength, positionOnPath); // first edge
            positionOnPath += windBarbDefinition.basePennantLength / 2.0;
            path.lineTo(0, positionOnPath); // second edge
            path.closePath();

            // only one square
        }
        return positionOnPath;
    }

