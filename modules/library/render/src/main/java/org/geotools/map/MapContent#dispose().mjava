    /**
     * Clean up any listeners or cached state associated with this MapContent.
     * <p>
     * Please note that open connections (FeatureSources and GridCoverage readers) are
     * the responsibility of your application and are not cleaned up by this method.
     */
    public void dispose() {
        if (this.layerList != null) {
            for (Layer layer : layerList) {
                if (layer != null) {
                    // Layer.dispose will inform listeners of the impending
                    // disposal, then remove listeners from this layer
                    layer.dispose();
                }
            }
            layerList.clear();
            layerList = null;
        }
        
        if (this.mapListeners != null) {
            this.mapListeners.clear();
            this.mapListeners = null;
        }
        
        if (this.layerListener != null) {
            this.layerListener = null;
        }

        if (this.propertyListeners != null) {
            this.propertyListeners.clear();
            this.propertyListeners = null;
        }
        
        this.title = null;
        if (this.userData != null) {
            // remove property listeners prior to removing userData
            this.userData.clear();
            this.userData = null;
        }
    }

