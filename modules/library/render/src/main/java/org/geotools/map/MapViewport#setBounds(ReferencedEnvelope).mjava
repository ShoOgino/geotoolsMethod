    /**
     * Sets the display area in world coordinates. 
     * <p>
     * If {@code bounds} is {@code null} or empty, default identity coordinate
     * transforms will be set. The viewport's existing coordinate reference system
     * will be preserved.
     * <p>
     * If {@code bounds} is not empty, and aspect ratio correction is enabled,
     * the coordinate transforms will be calculated to centre the requested bounds
     * in the current screen area (if defined), after which the world bounds will
     * be adjusted (enlarged) as required to match the screen area's aspect ratio.
     * 
     * @param requestedBounds the requested bounds (may be {@code null})
     */
    public void setBounds(ReferencedEnvelope requestedBounds) {
        ReferencedEnvelope old = this.bounds;
        if (requestedBounds == null || requestedBounds.isEmpty()) {
            this.bounds = new ReferencedEnvelope(this.bounds.getCoordinateReferenceSystem());
            setDefaultTransforms();
            
        } else {
            doSetBounds(requestedBounds);
        }
        
        // Note the bounds communicated by the event are the actual world bounds
        // rather than the user-requested bounds (unless empty)
        fireMapBoundsListenerMapBoundsChanged(Type.BOUNDS, old, this.bounds);
    }

