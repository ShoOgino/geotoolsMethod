    /**
     * Sets the display area in world coordinates. 
     * <p>
     * If {@code bounds} is {@code null} or empty, default identity coordinate
     * transforms and {@linkplain #DEFAULT_CRS} will be set.
     * <p>
     * If {@code bounds} is not empty, and aspect ratio matching is enabled,
     * the coordinate transforms will be calculated to centre the requested bounds
     * in the current screen area (if defined), after which the world bounds will
     * be adjusted (enlarged) as required to match the screen area's aspect ratio.
     * <p>
     * A {@code MapBoundsEvent} will be fired to inform listeners of the change from
     * old to new bounds. Note that when aspect ratio matching is enabled, the new
     * bounds carried by the event will be the viewport's adjusted bounds, not the
     * originally requested bounds.
     * 
     * @param requestedBounds the requested bounds (may be {@code null})
     */
    public synchronized void setBounds(ReferencedEnvelope requestedBounds) {
        if (checkEditable("setBounds")) {
            ReferencedEnvelope old = bounds;
            copyBounds(requestedBounds);
            setTransforms(true);
            fireMapBoundsListenerMapBoundsChanged(Type.BOUNDS, old, bounds);
        }
    }

