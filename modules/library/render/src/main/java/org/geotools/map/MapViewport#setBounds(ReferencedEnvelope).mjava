    /**
     * Sets the display area in world coordinates. If {@code bounds} is not
     * {@code null} or empty, and the current screen area is not empty,
     * the viewport's coordinate transforms will be recalculated.
     * <p>
     * Note: subsequent calls to {@link #getBounds()} can, and usually will,
     * return a larger envelope than the one passed to this method, because
     * the bounds are enlarged as necessary to have the same aspect-ratio
     * as the current viewport screen area.
     * 
     * @param requestedBounds the requested bounds (may be {@code null}
     */
    public void setBounds(ReferencedEnvelope requestedBounds) {
        ReferencedEnvelope old = this.bounds;
        if (requestedBounds == null || requestedBounds.isEmpty()) {
            this.bounds = new ReferencedEnvelope(this.bounds.getCoordinateReferenceSystem());
            setDefaultTransforms();
            
        } else {
            setTransformsAndCorrectedBounds(requestedBounds);
        }
        
        // Note the bounds communicated by the event are the actual world bounds
        // rather than the user-requested bounds (unless empty)
        fireMapBoundsListenerMapBoundsChanged(Type.BOUNDS, old, this.bounds);
    }

