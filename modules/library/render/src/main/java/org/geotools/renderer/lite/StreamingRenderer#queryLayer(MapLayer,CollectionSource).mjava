    /**
     * Queries a given layer's <code>Source</code> instance to be rendered. 
     * <p>
     * <em><strong>Note: This is proof-of-concept quality only!</strong> At 
     * the moment the query is not filtered, that means all objects with all 
     * fields are read from the datastore for every call to this method. This 
     * method should work like 
     * {@link #queryLayer(MapLayer, FeatureSource, SimpleFeatureType, LiteFeatureTypeStyle[], Envelope, CoordinateReferenceSystem, CoordinateReferenceSystem, Rectangle, GeometryAttributeType)} 
     * and eventually replace it.</em>
     * </p>
     * 
     * @param currLayer The actually processed layer for rendering
     * @param source Source to read data from
     */
    //TODO: Implement filtering for bbox and read in only the need attributes 
    Collection queryLayer(MapLayer currLayer, CollectionSource source) {
        //REVISIT: this method does not make sense. Always compares
        //new Query(Query.ALL) for reference equality with Query.All. GR.

        Collection results = null;
        Query query = new Query(Query.ALL);
        Query definitionQuery;

        definitionQuery = currLayer.getQuery();

        if (definitionQuery != Query.ALL) {
            if (query == Query.ALL) {
                query = new Query(definitionQuery);
            } else {
                query = new Query(DataUtilities.mixQueries(definitionQuery, query, "liteRenderer"));
            }
        }

        results = source.content(query.getFilter());

        return results;
    }

