        public DashedIterator(PathIterator delegate, float[] dashArray, float dashPhase) {
            this.delegate = delegate;
            dashOffsets = new float[dashArray.length];
            dashOffsets[0] = dashArray[0];
            for (int i = 1; i < dashArray.length; i++) {
                dashOffsets[i] = dashOffsets[i - 1] + dashArray[i];
            }
            // adjust the phase so that it's not longer than the dash array itself
            dashPhase = dashPhase % dashOffsets[dashOffsets.length - 1];
            // adjust the current index in the dash array
            // so that we start dashing at the requested phase
            for (int i = 0; i < dashArray.length && dashPhase > dashArray[i]; i++) {
                dashIndex++;
            }
            this.baseDashIndex = dashIndex;
            this.dashPhase = dashPhase;
            this.dashOffset = dashPhase;

            if (delegate.isDone()) {
                done = true;
            } else {
                dashedType = delegate.currentSegment(dashedSegment);
                currCoords[0] = dashedSegment[0];
                currCoords[1] = dashedSegment[1];
                delegate.next();
            }
        }

