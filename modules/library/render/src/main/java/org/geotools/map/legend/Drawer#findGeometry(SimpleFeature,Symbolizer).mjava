    /**
     * Finds the geometric attribute requested by the symbolizer
     *
     * @param f The victim
     * @param s The symbolizer
     * @return The geometry requested in the symbolizer, or the default geometry if none is
     *     specified
     */
    private org.locationtech.jts.geom.Geometry findGeometry(SimpleFeature f, Symbolizer s) {
        String geomName = getGeometryPropertyName(s);
        // get the geometry
        org.locationtech.jts.geom.Geometry geom;
        if (geomName == null) {
            geom = (org.locationtech.jts.geom.Geometry) f.getDefaultGeometry();
        } else {
            geom = (org.locationtech.jts.geom.Geometry) f.getAttribute(geomName);
        }
        // if the symbolizer is a point or text symbolizer generate a suitable
        // location to place the
        // point in order to avoid recomputing that location at each rendering
        // step
        if ((s instanceof PointSymbolizer || s instanceof TextSymbolizer)
                && !(geom instanceof Point)) {
            if (geom instanceof LineString && !(geom instanceof LinearRing)) {
                // use the mid point to represent the point/text symbolizer
                // anchor
                Coordinate[] coordinates = geom.getCoordinates();
                Coordinate start = coordinates[0];
                Coordinate end = coordinates[1];
                Coordinate mid = new Coordinate((start.x + end.x) / 2, (start.y + end.y) / 2);
                geom = geom.getFactory().createPoint(mid);
            } else {
                // otherwise use the centroid of the polygon
                geom = geom.getCentroid();
            }
        }
        return geom;
    }

