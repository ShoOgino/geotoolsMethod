	/*
	 * (non-Javadoc)
	 * 
	 * @see org.geotools.renderer.lite.gridcoverage2d.StyleVisitorAdapter#visit(org.geotools.styling.ContrastEnhancement)
	 */
	public void visit(final ContrastEnhancement ce) {
		// /////////////////////////////////////////////////////////////////////
		//
		// Do nothing if we don't have a valid ContrastEnhancement element. This
		// would protect us against bad SLDs
		//
		// /////////////////////////////////////////////////////////////////////
		if (ce == null)
			return;

		// /////////////////////////////////////////////////////////////////////
		//
		// TYPE of the operation to perform
		//
		// /////////////////////////////////////////////////////////////////////
		final Expression expType = ce.getType();
		if (expType != null) {
			final String type = expType.evaluate(null, String.class);
			if (type != null) {
				this.type = type.toUpperCase();
				if (!SUPPORTED_HE_ALGORITHMS.contains(type.toUpperCase()))
					throw new IllegalArgumentException(Errors.format(ErrorKeys.OPERATION_NOT_FOUND_$1, type.toUpperCase()));
			}
		}

		// /////////////////////////////////////////////////////////////////////
		//
		// GAMMA
		//
		// /////////////////////////////////////////////////////////////////////
		final Expression gamma = ce.getGammaValue();
		if (gamma != null) {
			final Number number = gamma.evaluate(null, Double.class);
			if (number != null) {
				gammaValue = number.doubleValue();
				// check the gamma value
				if (gammaValue < 0)
					throw new IllegalArgumentException(Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$2, "Gamma", number));
				if (Double.isNaN(gammaValue) || Double.isInfinite(gammaValue))
					throw new IllegalArgumentException(Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$2, "Gamma", number));
			}
		}

	}

