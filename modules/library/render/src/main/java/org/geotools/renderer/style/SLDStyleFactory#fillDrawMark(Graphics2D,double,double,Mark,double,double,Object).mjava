	void fillDrawMark(Graphics2D g2d, double tx, double ty, Mark mark,
			double size, double rotation, Object feature) {
		if (mark == null)
			return;

		Shape originalShape = getShape(mark, feature);

		// rescale and reposition the original shape so it's centered at tx, ty
		// and has the desired size
		AffineTransform markAT = new AffineTransform();
		markAT.translate(tx, ty);
		markAT.rotate(rotation);
		markAT.scale(size, -size);

		// resize/rotate/rescale the shape
		Shape shape = markAT.createTransformedShape(originalShape);

		// we draw it once, make it look nice
		g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
				RenderingHints.VALUE_ANTIALIAS_ON);
		g2d.setRenderingHint(RenderingHints.KEY_RENDERING,
				RenderingHints.VALUE_RENDER_QUALITY);
		g2d.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL,
				RenderingHints.VALUE_STROKE_PURE);

		if (mark.getFill() != null) {
			if (LOGGER.isLoggable(Level.FINER)) {
				LOGGER.finer("applying fill to mark");
			}

			g2d.setPaint(getPaint(mark.getFill(), feature, null));
			g2d.setComposite(getComposite(mark.getFill(), feature));
			g2d.fill(shape);
		}

		if (mark.getStroke() != null) {
			if (LOGGER.isLoggable(Level.FINER)) {
				LOGGER.finer("applying stroke to mark");
			}

			g2d.setPaint(getStrokePaint(mark.getStroke(), feature));
			g2d.setComposite(getStrokeComposite(mark.getStroke(), feature));
			g2d.setStroke(getStroke(mark.getStroke(), feature));
			g2d.draw(shape);
		}

	}

