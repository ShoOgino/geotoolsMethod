    @Test
    public void testRenderOffDateline() throws Exception {
        File coverageFile =
                URLs.urlToFile(
                        GridCoverageReaderHelperTest.class.getResource(
                                "test-data/off_dateline.tif"));
        assertTrue(coverageFile.exists());
        GeoTiffReader offDatelineReader = new GeoTiffReader(coverageFile);

        ReferencedEnvelope envelope =
                new ReferencedEnvelope(-180, 0, -90, 90, DefaultGeographicCRS.WGS84);
        GridCoverageRenderer renderer =
                new GridCoverageRenderer(
                        DefaultGeographicCRS.WGS84, envelope, new Rectangle(0, 0, 450, 450), null);

        RasterSymbolizer symbolizer = new StyleBuilder().createRasterSymbolizer();
        Interpolation interpolation = Interpolation.getInstance(Interpolation.INTERP_NEAREST);
        RenderedImage image =
                renderer.renderImage(
                        offDatelineReader, null, symbolizer, interpolation, null, 256, 256);
        assertNotNull(image);
        // goes out as indexed, switch to RGB as the image comparison needs it
        // (nodata = 0 in the source, the black in the original image becomes transparent)
        image =
                new ImageWorker(image)
                        .forceComponentColorModel()
                        .forceColorSpaceRGB()
                        .getRenderedImage();
        File reference =
                new File(
                        "src/test/resources/org/geotools/renderer/lite/gridcoverage2d/offDateline.png");
        ImageAssert.assertEquals(reference, image, 0);
    }

