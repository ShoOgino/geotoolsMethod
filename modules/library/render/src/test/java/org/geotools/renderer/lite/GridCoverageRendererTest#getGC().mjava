    /**
     * Returns a {@link GridCoverage} which may be used as a "real world" example.
     *
     * @param number The example number. Numbers are numeroted from 0 to {@link #getNumExamples()}
     *     exclusive.
     * @return The "real world" grid coverage.
     * @throws IOException if an I/O operation was needed and failed.
     */
    private final GridCoverage2D getGC()
            throws IOException, IllegalArgumentException, ParseException {

        // unit = "°C";
        final String path = "TestGridCoverage.tif";
        final CoordinateReferenceSystem crs = DefaultGeographicCRS.WGS84;

        // 41°S - 5°N ; 35°E - 80°E (450 x 460 pixels)
        final Rectangle2D bounds = new Rectangle2D.Double(35, -41, 45, 46);
        final GeneralEnvelope envelope = new GeneralEnvelope(bounds);
        final RenderedImage image = ImageIO.read(TestData.getResource(this, path));
        final int numBands = image.getSampleModel().getNumBands();
        final GridSampleDimension[] bands = new GridSampleDimension[numBands];
        // setting bands names.
        for (int i = 0; i < numBands; i++) {

            bands[i] = new GridSampleDimension("band " + i);
        }
        final String filename = new File(path).getName();
        final GridCoverageFactory factory =
                org.geotools.coverage.CoverageFactoryFinder.getGridCoverageFactory(
                        GeoTools.getDefaultHints());
        envelope.setCoordinateReferenceSystem(crs);
        return factory.create(filename, image, envelope, bands, null, null);
    }

