    @Test
    public void testEquals_OtherObject() {
        try {
            Shape shape = createMock(Shape.class);
            Shape shape2 = createMock(Shape.class);

            ExplicitBoundsShape target = new ExplicitBoundsShape(shape);
            ExplicitBoundsShape other = new ExplicitBoundsShape(shape);
            ExplicitBoundsShape another = new ExplicitBoundsShape(shape2);

            Assert.assertEquals(target, other);
            assertNotEquals(target, another);

            Rectangle bounds = new Rectangle(1, 1, 4, 4);
            target.setBounds(bounds);
            assertNotEquals(target, other);

            another.setBounds(bounds);
            assertNotEquals(target, another);

        } catch (Throwable e) {
            java.util.logging.Logger.getGlobal().log(java.util.logging.Level.INFO, "", e);
            Assert.fail("Should not throw " + e.getClass().getSimpleName());
        }
    }

