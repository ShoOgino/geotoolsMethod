    public void testEqualFeatureTypes() throws Exception {
        String name = "name";
        PropertyName property = ff.property(name);
        SimpleFeatureType subtype1 = SimpleFeatureTypeBuilder.retype(roadType, new String[] {name});
        SimpleFeatureType subtype2 = SimpleFeatureTypeBuilder.retype(roadType, new String[] {name});

        Filter nameR1 = ff.equal(ff.property(name), ff.literal("r1"), false);
        MemoryFilterOptimizer optimizer =
                new MemoryFilterOptimizer(subtype1, Collections.singleton(name));
        PropertyName memoized = (PropertyName) property.accept(optimizer, null);

        // retype the feature with the second subtype
        SimpleFeature retyped = SimpleFeatureBuilder.retype(roadFeatures[0], subtype2);

        // evalute and spy the results, it should still use index based access
        SimpleFeature spy = Mockito.spy(retyped);
        assertSame(retyped.getAttribute(name), memoized.evaluate(spy));
        Mockito.verify(spy, Mockito.times(0)).getAttribute(name);
        Mockito.verify(spy, Mockito.times(1)).getAttribute(0);
    }

