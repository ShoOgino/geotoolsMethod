    /**
     * Tests size calculation of dynamically sized feature, using real-world units combined with DPI-based resizing.
     */
    @Test
    public void testCombinedResizingDpiUom() {
        // given: Point with dynamic size in real-world  units
        int sizeNum = 10;
        double scaleDpi = 2;
        double scaleUom = 3;
        PointSymbolizer symbolizer = sb.createPointSymbolizer();
        Graphic graphic = sb.createGraphic();
        graphic.setSize(ff.function("strConcat", ff.property("size"), ff.literal("m")));
        symbolizer.setGraphic(graphic);

        // when: DPI based resizing is applied
        RescaleStyleVisitor dpiVisitor = new GraphicsAwareDpiRescaleStyleVisitor(scaleDpi);
        symbolizer.accept(dpiVisitor);
        symbolizer = (PointSymbolizer) dpiVisitor.getCopy();
        
        // and: UOM resizing is applied
        UomRescaleStyleVisitor uomVisitor = new UomRescaleStyleVisitor(scaleUom);
        uomVisitor.visit(symbolizer);
        symbolizer = (PointSymbolizer) uomVisitor.getCopy();

        SimpleFeature feature = createFeatureSized(sizeNum);

        // then: only the UOM resizing must have an effect
        Double size = symbolizer.getGraphic().getSize().evaluate(feature, Double.class);
        assertEquals(sizeNum * scaleUom, size.doubleValue(), 0d);
    }

