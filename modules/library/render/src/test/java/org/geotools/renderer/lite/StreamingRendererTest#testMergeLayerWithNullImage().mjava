    @Test
    public void testMergeLayerWithNullImage() {
        BufferedImage finalImage = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);
        Graphics2D finalGraphics = (Graphics2D) finalImage.getGraphics();
        finalGraphics.setColor(Color.RED);
        finalGraphics.fillRect(0, 0, 100, 100);

        List<LiteFeatureTypeStyle> lfts = new ArrayList<>();
        Layer layer =
                new DirectLayer() {

                    @Override
                    public void draw(Graphics2D graphics, MapContent map, MapViewport viewport) {}

                    @Override
                    public ReferencedEnvelope getBounds() {
                        return null;
                    }
                };

        // style with empty (null) image
        DelayedBackbufferGraphic graphics =
                new DelayedBackbufferGraphic(finalGraphics, new Rectangle(100, 100));
        LiteFeatureTypeStyle style1 =
                new LiteFeatureTypeStyle(layer, graphics, new ArrayList(), new ArrayList(), null);
        style1.composite = AlphaComposite.DstIn;
        lfts.add(style1);

        MergeLayerRequestTester renderer = new MergeLayerRequestTester(finalGraphics, lfts);
        renderer.mergeRequest();
        int color = finalImage.getRGB(0, 0);
        int red = (color & 0x00ff0000) >> 16;
        int green = (color & 0x0000ff00) >> 8;
        int blue = color & 0x000000ff;
        assertEquals(0, red);
        assertEquals(0, green);
        assertEquals(0, blue);
    }

