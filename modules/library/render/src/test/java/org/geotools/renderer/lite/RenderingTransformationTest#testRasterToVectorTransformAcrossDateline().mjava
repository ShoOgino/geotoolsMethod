    @Test
    public void testRasterToVectorTransformAcrossDateline() throws Exception {
        Style style = RendererBaseTest.loadStyle(this, "coverageCenter.sld");

        GeoTiffReader reader = new GeoTiffReader(TestData.copy(this, "geotiff/world.tiff"));

        MapContent mc = new MapContent();
        mc.addLayer(new GridCoverageLayer(reader.read(null), style));

        StreamingRenderer renderer = new StreamingRenderer();
        Map<Object, Object> rendererParams = new HashMap<>();
        rendererParams.put(StreamingRenderer.ADVANCED_PROJECTION_HANDLING_KEY, true);
        rendererParams.put(StreamingRenderer.CONTINUOUS_MAP_WRAPPING, true);
        renderer.setRendererHints(rendererParams);
        renderer.setMapContent(mc);

        ReferencedEnvelope reWgs84 =
                new ReferencedEnvelope(-90, 90, 0, 360, CRS.decode("EPSG:4326"));

        BufferedImage image =
                RendererBaseTest.showRender("Lines with circle stroke", renderer, TIME, reWgs84);
        // we are straddling the dateline, so the center of the coverage should be
        // a red dot vertically centered at at the edges of the image
        assertEquals(Color.RED, getPixelColor(image, 0, image.getHeight() / 2));
        assertEquals(Color.RED, getPixelColor(image, image.getWidth() - 1, image.getHeight() / 2));
        // there should NOT be a red dot at the center
        assertEquals(
                Color.WHITE, getPixelColor(image, image.getWidth() / 2, image.getHeight() / 2));
        assertEquals(
                Color.WHITE, getPixelColor(image, image.getWidth() - 1, image.getHeight() / 4));
        assertEquals(Color.WHITE, getPixelColor(image, 0, image.getHeight() / 4));
        assertEquals(
                Color.WHITE, getPixelColor(image, image.getWidth() / 4, image.getHeight() / 4));
    }

