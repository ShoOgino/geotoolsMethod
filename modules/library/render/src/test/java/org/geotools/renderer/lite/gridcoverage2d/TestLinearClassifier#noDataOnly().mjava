	/**
	 * NoData only test-case.
	 * 
	 * @throws IOException
	 * @throws TransformException
	 * @throws TransformationException 
	 */
	@Test
	public void noDataOnly() throws IOException, TransformException, TransformationException {
	
		// /////////////////////////////////////////////////////////////////////
		//
		// We are covering here a case that can often be verified, i.e. the case
		// when only NoData values are known and thus explicitly mapped by the
		// user to a defined nodata DomainElement, but not the same for the
		// others.
		// In such case we want CatrgoryLists automatically map unknown data to
		// a Passthrough DomainElement, which identically maps raster data to
		// category
		// data.
		//
		// /////////////////////////////////////////////////////////////////////
	
		for (int i = 0; i < TEST_NUM; i++) {
	
			final LinearColorMapElement n0 = LinearColorMapElement
					.create("nodata", new Color(0, 0, 0, 0), RangeFactory.create(
							Double.NaN, Double.NaN), 9999);
	
			final LinearColorMap list = new LinearColorMap("",
					new LinearColorMapElement[] { n0 });
	
			double testNum = Math.random();
			try{
				assertEquals(list.transform(testNum), testNum, 0.0);
				assertTrue(false);
			}catch (Exception e) {
				// TODO: handle exception
			}
			assertEquals(list.transform(Double.NaN), 9999, 0.0);
	
	
		}
	}

