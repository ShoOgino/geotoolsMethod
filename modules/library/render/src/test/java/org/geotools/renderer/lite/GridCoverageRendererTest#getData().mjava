    @Before
    public void getData() throws IOException {
        MapProjection.SKIP_SANITY_CHECKS = true;
        File coverageFile = TestData.copy(this, "geotiff/world.tiff");
        assertTrue(coverageFile.exists());
        worldReader = new GeoTiffReader(coverageFile);

        coverageFile = TestData.copy(this, "geotiff/world_0_360.tiff");
        assertTrue(coverageFile.exists());
        worldReader_0_360 = new GeoTiffReader(coverageFile);

        coverageFile = TestData.copy(this, "geotiff/worldPalette.tiff");
        assertTrue(coverageFile.exists());
        worldPaletteReader = new GeoTiffReader(coverageFile);

        // grab also the global precipitation
        File file = TestData.copy(this, "arcgrid/arcgrid.zip");
        assertTrue(file.exists());

        // unzip it
        TestData.unzipFile(this, "arcgrid/arcgrid.zip");
        URL rainURL =
                GridCoverageRendererTest.class.getResource("test-data/arcgrid/precip30min.asc");
        File rainFile = URLs.urlToFile(rainURL);
        rainReader = new ArcGridReader(rainFile);

        // read a image with a roi (mask)
        coverageFile = TestData.copy(this, "geotiff/world-roi.tiff");
        assertTrue(coverageFile.exists());
        worldRoiReader = new GeoTiffReader(coverageFile);

        // sampleGrib.tif has longitudes from 302 to 308 degrees East
        coverageFile =
                DataUtilities.urlToFile(
                        GridCoverageRendererTest.class.getResource("test-data/sampleGrib.tif"));
        assertTrue(coverageFile.exists());
        sampleGribReader = new GeoTiffReader(coverageFile);

        // multi pixel packed sample model test case, two bits per pixel
        coverageFile =
                DataUtilities.urlToFile(
                        GridCoverageRendererTest.class.getResource(
                                "test-data/multi_pixel_packed.tif"));
        assertTrue(coverageFile.exists());
        multiPixelPacked = new GeoTiffReader(coverageFile);
    }

