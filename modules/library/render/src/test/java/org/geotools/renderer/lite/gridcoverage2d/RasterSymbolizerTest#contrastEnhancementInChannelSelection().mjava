    @Test
    public void contrastEnhancementInChannelSelection() throws IOException {

        StyleBuilder sldBuilder = new StyleBuilder();
        RasterSymbolizer symbolizer = sldBuilder.createRasterSymbolizer();
        final ChannelSelection chSel = new ChannelSelectionImpl();
        final SelectedChannelType chTypeRed = new SelectedChannelTypeImpl();
        final SelectedChannelType chTypeBlue = new SelectedChannelTypeImpl();
        final SelectedChannelType chTypeGreen = new SelectedChannelTypeImpl();

        SelectedChannelType[] channels = {chTypeRed, chTypeGreen, chTypeBlue};

        // Assign a different contrast method for each channel
        // by offsetting min and max of 20 on each channel
        // and assigning channels number with increments of 2
        int min = 10;
        int max = 100;
        for (int i = 0; i < 3; i++) {
            final ContrastEnhancement cntEnh = new ContrastEnhancementImpl();
            final ContrastMethodStrategy method = new NormalizeContrastMethodStrategy();
            method.addOption(
                    "algorithm",
                    sldBuilder.literalExpression(
                            ContrastEnhancementType.NORMALIZE_STRETCH_TO_MINMAX_NAME));
            method.addOption("minValue", sldBuilder.literalExpression(min + (20 * i)));
            method.addOption("maxValue", sldBuilder.literalExpression(max + (20 * i)));
            cntEnh.setMethod(method);
            channels[i].setChannelName(Integer.toString((i * 2) + 1));
            channels[i].setContrastEnhancement(cntEnh);
        }
        chSel.setRGBChannels(chTypeRed, chTypeGreen, chTypeBlue);

        symbolizer.setChannelSelection(chSel);
        symbolizer.setOpacity(sldBuilder.literalExpression(1.0));
        symbolizer = GridCoverageRenderer.setupSymbolizerForBandsSelection(symbolizer);

        ChannelSelection cs = symbolizer.getChannelSelection();
        SelectedChannelType[] postBandSelectionChannels = cs.getRGBChannels();
        for (int i = 0; i < 3; i++) {
            SelectedChannelType postBandSelectionChannel = postBandSelectionChannels[i];
            // Before the fix, the following assertion would fail
            assertNotNull(postBandSelectionChannel);
            final ContrastEnhancement cntEnh = postBandSelectionChannel.getContrastEnhancement();
            ContrastMethod method = cntEnh.getMethod();

            // Assert channels number have been re-arranged
            assertTrue(
                    Integer.toString((i) + 1)
                            .equalsIgnoreCase(
                                    postBandSelectionChannel
                                            .getChannelName()
                                            .evaluate(null, String.class)));
            assertTrue(method.name().equalsIgnoreCase(ContrastMethod.NORMALIZE.name()));

            Map<String, Expression> options = cntEnh.getOptions();
            assertTrue(options.containsKey("algorithm"));
            assertTrue(options.containsKey("minValue"));
            assertTrue(options.containsKey("maxValue"));
            assertEquals(
                    options.get("algorithm"),
                    sldBuilder.literalExpression(
                            ContrastEnhancementType.NORMALIZE_STRETCH_TO_MINMAX_NAME));
            assertEquals(options.get("minValue"), sldBuilder.literalExpression(min + (20 * i)));
            assertEquals(options.get("maxValue"), sldBuilder.literalExpression(max + (20 * i)));
        }
    }

