    @Test
    public void testGraphicLegend2() throws Exception {

        StyledShapePainter painter = new StyledShapePainter();
        GraphicImpl legend =
                new GraphicImpl(CommonFactoryFinder.getFilterFactory(GeoTools.getDefaultHints()));
        FilterFactory2 ff = CommonFactoryFinder.getFilterFactory2();
        legend.setRotation(ff.literal(0));
        legend.setOpacity(ff.literal(1));
        URL url = StreamingRenderer.class.getResource("test-data/");
        StyleFactory sf = CommonFactoryFinder.getStyleFactory(null);
        ExternalGraphic eg = sf.createExternalGraphic(url + "icon64.png", "image/png");
        legend.graphicalSymbols().add(eg);
        BufferedImage image = new BufferedImage(100, 100, BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2 = (Graphics2D) image.getGraphics();
        MathTransform transform = ProjectiveTransform.create(new AffineTransform());
        Decimator decimator = new Decimator(transform, new Rectangle());
        Point point = new GeometryFactory().createPoint(new Coordinate(10, 10));
        LiteShape2 pointShape = new LiteShape2(point, transform, decimator, false);
        painter.paint(g2, pointShape, legend, 1, false);
        // check it is correctly painted
        Assert.assertEquals(0, image.getRaster().getSample(0, 0, 0));
        Assert.assertEquals(64, image.getRaster().getSample(0, 0, 1));
        Assert.assertEquals(128, image.getRaster().getSample(0, 0, 2));

        Assert.assertEquals(255, image.getRaster().getSample(30, 30, 0));
        Assert.assertEquals(255, image.getRaster().getSample(30, 30, 1));
        Assert.assertEquals(255, image.getRaster().getSample(30, 30, 2));

        Assert.assertEquals(0, image.getRaster().getSample(90, 30, 0));
        Assert.assertEquals(0, image.getRaster().getSample(90, 30, 1));
        Assert.assertEquals(0, image.getRaster().getSample(90, 30, 2));

        // check with a scaling factor
        image = new BufferedImage(100, 100, BufferedImage.TYPE_INT_ARGB);
        g2 = (Graphics2D) image.getGraphics();
        painter.paint(g2, pointShape, legend, 2, false);
        Assert.assertEquals(255, image.getRaster().getSample(0, 0, 0));
        Assert.assertEquals(255, image.getRaster().getSample(0, 0, 1));
        Assert.assertEquals(192, image.getRaster().getSample(0, 0, 2));

        Assert.assertEquals(0, image.getRaster().getSample(30, 30, 0));
        Assert.assertEquals(0, image.getRaster().getSample(30, 30, 1));
        Assert.assertEquals(0, image.getRaster().getSample(30, 30, 2));

        Assert.assertEquals(0, image.getRaster().getSample(90, 30, 0));
        Assert.assertEquals(0, image.getRaster().getSample(90, 30, 1));
        Assert.assertEquals(0, image.getRaster().getSample(90, 30, 2));
    }

