    @Test
    public void testSetBounds() {
        try {

            Shape shape = createMock(Shape.class);

            reset(shape);

            Rectangle shapeBounds = new Rectangle(8, 7, 9, 3);
            expect(shape.getBounds()).andReturn(shapeBounds);
            expect(shape.getBounds2D()).andReturn(shapeBounds);

            replay(shape);

            ExplicitBoundsShape target = new ExplicitBoundsShape(shape);

            Assert.assertEquals(shapeBounds, target.getBounds());
            Assert.assertEquals(shapeBounds, target.getBounds2D());

            Rectangle bounds = new Rectangle(1, 2, 5, 6);
            target.setBounds(bounds);

            Assert.assertEquals(bounds, target.getBounds());
            Assert.assertEquals(bounds, target.getBounds2D());

            verify(shape);

        } catch (Throwable e) {
            java.util.logging.Logger.getGlobal().log(java.util.logging.Level.INFO, "", e);
            Assert.fail("Should not throw " + e.getClass().getSimpleName());
        }
    }

