    @Test
    public void testDefaultValid() {
        // no module --> x--------
        this.exp = ff.literal(WindBarbsFactory.WINDBARBS_PREFIX + "default(NaN)[kts]");
        Shape shp = (Shape) wbf.getShape(null, this.exp, this.feature);
        assertNotNull(shp);
        assertTrue(shp instanceof Path2D);
        assertEquals(
                WindBarbsFactoryTest.WKT_WRITER.write(JTS.toGeometry(shp)).toString(),
                "MULTILINESTRING ((0 -0, 0 40), (5 45, -5 35), (-5 45, 5 35))");

        // 1 KNOTS --> calm
        this.exp = ff.literal(WindBarbsFactory.WINDBARBS_PREFIX + "default(1)[kts]");
        shp = (Shape) wbf.getShape(null, this.exp, this.feature);
        assertNotNull(shp);
        assertTrue(shp instanceof Ellipse2D);
        assertEquals(((Ellipse2D) shp).getHeight(), ((Ellipse2D) shp).getWidth(), 1E-6); // circle

        // 2.99999999 KNOTS --> calm
        this.exp = ff.literal(WindBarbsFactory.WINDBARBS_PREFIX + "default(2.999999999999)[kts]");
        shp = (Shape) wbf.getShape(null, this.exp, this.feature);
        assertNotNull(shp);
        assertTrue(shp instanceof Ellipse2D);
        assertEquals(((Ellipse2D) shp).getHeight(), ((Ellipse2D) shp).getWidth(), 1E-6); // circle

        // 3 KNOTS --> short barb
        // NORTH
        this.exp = ff.literal(WindBarbsFactory.WINDBARBS_PREFIX + "default(3)[kts]");
        shp = (Shape) wbf.getShape(null, this.exp, this.feature);
        assertNotNull(shp);
        assertTrue(shp instanceof Path2D);
        String shpString = WindBarbsFactoryTest.WKT_WRITER.write(JTS.toGeometry(shp)).toString();
        assertEquals(
                WindBarbsFactoryTest.WKT_WRITER.write(JTS.toGeometry(shp)).toString(),
                "MULTILINESTRING ((0 -0, 0 40), (0 35, 10 36.25))");
        // SOUTH make sure the same shp is flipped on y axis
        this.exp = ff.literal(WindBarbsFactory.WINDBARBS_PREFIX + "default(3)[kts]?emisphere=S");
        Shape shpS = (Shape) wbf.getShape(null, this.exp, this.feature);
        assertNotNull(shpS);
        assertTrue(shpS instanceof Path2D);
        shpS =
                WindBarbsFactory.SOUTHERN_EMISPHERE_FLIP.createTransformedShape(
                        shpS); // flip and check
        assertEquals(
                WindBarbsFactoryTest.WKT_WRITER.write(JTS.toGeometry(shpS)).toString(), shpString);

        // 5 KNOTS --> short barb
        this.exp = ff.literal(WindBarbsFactory.WINDBARBS_PREFIX + "default(5)[kts]");
        shp = (Shape) wbf.getShape(null, this.exp, this.feature);
        assertNotNull(shp);
        assertTrue(shp instanceof Path2D);
        shpString = WindBarbsFactoryTest.WKT_WRITER.write(JTS.toGeometry(shp)).toString();
        assertEquals(shpString, "MULTILINESTRING ((0 -0, 0 40), (0 35, 10 36.25))");

        // SOUTH make sure the same shp is flipped on y axis
        this.exp = ff.literal(WindBarbsFactory.WINDBARBS_PREFIX + "default(5)[kts]?hemisphere=S");
        shpS = (Shape) wbf.getShape(null, this.exp, this.feature);
        assertNotNull(shpS);
        assertTrue(shpS instanceof Path2D);
        shpS =
                WindBarbsFactory.SOUTHERN_EMISPHERE_FLIP.createTransformedShape(
                        shpS); // flip and check
        assertEquals(
                WindBarbsFactoryTest.WKT_WRITER.write(JTS.toGeometry(shpS)).toString(), shpString);

        // 15 KNOTS --> 1 short barb + 1 long barb
        this.exp = ff.literal(WindBarbsFactory.WINDBARBS_PREFIX + "default(15)[kts]");
        shp = (Shape) wbf.getShape(null, this.exp, this.feature);
        assertNotNull(shp);
        assertTrue(shp instanceof Path2D);
        assertEquals(
                WindBarbsFactoryTest.WKT_WRITER.write(JTS.toGeometry(shp)).toString(),
                "MULTILINESTRING ((0 -0, 0 40), (0 40, 20 42.5), (0 35, 10 36.25))");

        // 20 KNOTS --> 2 long barbs
        this.exp = ff.literal(WindBarbsFactory.WINDBARBS_PREFIX + "default(20)[kts]");
        shp = (Shape) wbf.getShape(null, this.exp, this.feature);
        assertNotNull(shp);
        assertTrue(shp instanceof Path2D);
        assertEquals(
                WindBarbsFactoryTest.WKT_WRITER.write(JTS.toGeometry(shp)).toString(),
                "MULTILINESTRING ((0 -0, 0 40), (0 40, 20 42.5), (0 35, 20 37.5))");

        // 25 KNOTS --> 1 short barb + 2 long barbs
        this.exp = ff.literal(WindBarbsFactory.WINDBARBS_PREFIX + "default(25)[kts]");
        shp = (Shape) wbf.getShape(null, this.exp, this.feature);
        assertNotNull(shp);
        assertTrue(shp instanceof Path2D);
        assertEquals(
                WindBarbsFactoryTest.WKT_WRITER.write(JTS.toGeometry(shp)).toString(),
                "MULTILINESTRING ((0 -0, 0 40), (0 40, 20 42.5), (0 35, 20 37.5), (0 30, 10 31.25))");

        // 50 KNOTS --> pennant
        this.exp = ff.literal(WindBarbsFactory.WINDBARBS_PREFIX + "default(50)[kts]");
        shp = (Shape) wbf.getShape(null, this.exp, this.feature);
        assertNotNull(shp);
        assertTrue(shp instanceof Path2D);
        assertEquals(
                WindBarbsFactoryTest.WKT_WRITER.write(JTS.toGeometry(shp)).toString(),
                "MULTILINESTRING ((0 -0, 0 40), (0 40, 20 37, 0 34, 0 40))");

        // 100 KNOTS --> 2 pennants
        this.exp =
                ff.literal(WindBarbsFactory.WINDBARBS_PREFIX + "default(100)[kts]?vectorLength=30");
        shp = (Shape) wbf.getShape(null, this.exp, this.feature);
        assertNotNull(shp);
        assertTrue(shp instanceof Path2D);
        shpString = WindBarbsFactoryTest.WKT_WRITER.write(JTS.toGeometry(shp)).toString();
        assertEquals(
                shpString,
                "MULTILINESTRING ((0 -0, 0 30), (0 30, 20 27, 0 24, 0 30), (0 24, 20 21, 0 18, 0 24))");
        // SOUTH make sure the same shp is flipped on y axis
        this.exp =
                ff.literal(
                        WindBarbsFactory.WINDBARBS_PREFIX
                                + "default(100)[kts]?vectorLength=30&hemisphere=s");
        shpS = (Shape) wbf.getShape(null, this.exp, this.feature);
        assertNotNull(shpS);
        assertTrue(shpS instanceof Path2D);
        shpS =
                WindBarbsFactory.SOUTHERN_EMISPHERE_FLIP.createTransformedShape(
                        shpS); // flip and check
        assertEquals(
                WindBarbsFactoryTest.WKT_WRITER.write(JTS.toGeometry(shpS)).toString(), shpString);

        // 175 KNOTS --> 1 short barb + 2 long barbs + 3 pennants
        this.exp = ff.literal(WindBarbsFactory.WINDBARBS_PREFIX + "default(175)[kts]");
        shp = (Shape) wbf.getShape(null, this.exp, this.feature);
        assertNotNull(shp);
        assertTrue(shp instanceof Path2D);
        shpString = WindBarbsFactoryTest.WKT_WRITER.write(JTS.toGeometry(shp)).toString();
        assertEquals(
                shpString,
                "MULTILINESTRING ((0 -0, 0 40), (0 40, 20 37, 0 34, 0 40), (0 34, 20 31, 0 28, 0 34), (0 28, 20 25, 0 22, 0 28), (0 17, 20 19.5), (0 12, 20 14.5), (0 7, 10 8.25))");
        // SOUTH make sure the same shp is flipped on y axis
        this.exp = ff.literal(WindBarbsFactory.WINDBARBS_PREFIX + "default(175)[kts]?hemisphere=s");
        shpS = (Shape) wbf.getShape(null, this.exp, this.feature);
        assertNotNull(shpS);
        assertTrue(shpS instanceof Path2D);
        shpS =
                WindBarbsFactory.SOUTHERN_EMISPHERE_FLIP.createTransformedShape(
                        shpS); // flip and check
        assertEquals(
                WindBarbsFactoryTest.WKT_WRITER.write(JTS.toGeometry(shpS)).toString(), shpString);
    }

