    private RasterSymbolizer createClippingChannelSelectionSymbolizer(int min, int max) {
        StyleBuilder sldBuilder = new StyleBuilder();

        RasterSymbolizer symbolizer = sldBuilder.createRasterSymbolizer();
        final ChannelSelection chSel = new ChannelSelectionImpl();
        final SelectedChannelType chTypeRed = new SelectedChannelTypeImpl();
        final SelectedChannelType chTypeBlue = new SelectedChannelTypeImpl();
        final SelectedChannelType chTypeGreen = new SelectedChannelTypeImpl();

        SelectedChannelType[] channels =
                new SelectedChannelType[] {chTypeRed, chTypeGreen, chTypeBlue};

        // Assign a different contrast method for each channel
        // by offsetting min and max of 20 on each channel
        // and assigning channels number with increments of 2

        for (int i = 0; i < 3; i++) {
            final ContrastEnhancement cntEnh = new ContrastEnhancementImpl();
            final ContrastMethodStrategy method = new NormalizeContrastMethodStrategy();
            method.addOption(
                    "algorithm",
                    sldBuilder.literalExpression(
                            ContrastEnhancementType.NORMALIZE_CLIP_TO_ZERO_NAME));
            method.addOption("minValue", sldBuilder.literalExpression(min + (20 * i)));
            method.addOption("maxValue", sldBuilder.literalExpression(max + (20 * i)));
            cntEnh.setMethod(method);
            channels[i].setChannelName(Integer.toString((i * 2) + 1));
            channels[i].setContrastEnhancement(cntEnh);
        }
        chSel.setRGBChannels(chTypeRed, chTypeGreen, chTypeBlue);

        symbolizer.setChannelSelection(chSel);
        symbolizer.setOpacity(sldBuilder.literalExpression(1.0));
        return symbolizer;
    }

