    /**
     * Tests band selection with Env Function Expression
     *
     * @throws Exception
     */
    @Test
    public void testBandSelectionExpression() throws Exception {
        // Create a solid color coverage
        BufferedImage bi = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);
        Graphics2D graphics = bi.createGraphics();
        graphics.setColor(Color.BLUE);
        graphics.fillRect(0, 0, bi.getWidth(), bi.getHeight());
        graphics.dispose();

        CoordinateReferenceSystem nativeCrs = CRS.decode("EPSG:4326", true);
        ReferencedEnvelope mapExtent = new ReferencedEnvelope(0, 90, 0, 90, nativeCrs);
        GridCoverage2D coverage =
                CoverageFactoryFinder.getGridCoverageFactory(null)
                        .create("test", bi, new ReferencedEnvelope(0, 90, 0, 90, nativeCrs));

        assertEquals(coverage.getNumSampleDimensions(), 3);

        // Write out as a geotiff
        File coverageFile = new File("./target/blue.tiff");
        GeoTiffWriter writer = new GeoTiffWriter(coverageFile);
        final GeoTiffFormat format = new GeoTiffFormat();
        final GeoTiffWriteParams wp = new GeoTiffWriteParams();

        // setting compression to LZW
        wp.setCompressionMode(GeoTiffWriteParams.MODE_EXPLICIT);
        wp.setCompressionType("LZW");
        wp.setCompressionQuality(0.75F);

        final ParameterValueGroup params = format.getWriteParameters();
        List<GeneralParameterValue> paramsValues = params.values();
        writer.write(
                coverage, params.values().toArray(new GeneralParameterValue[paramsValues.size()]));

        // Get the reader, read with band selection
        assertTrue(coverageFile.exists());
        GridCoverage2DReader reader = new GeoTiffReader(coverageFile);

        String b1 = "B1";
        RasterSymbolizer rasterSymb = buildEnvChannelSelectingSymbolizer(b1, 3);

        // check default env value: 3
        // Render the image selecting blue as default ENV value
        EnvFunction.removeLocalValue(b1);
        GridCoverageRenderer renderer =
                new GridCoverageRenderer(nativeCrs, mapExtent, new Rectangle(0, 0, 100, 100), null);
        RenderedImage image =
                renderer.renderImage(
                        reader,
                        null,
                        rasterSymb,
                        Interpolation.getInstance(Interpolation.INTERP_NEAREST),
                        Color.BLACK,
                        256,
                        256);
        assertEquals(1, image.getSampleModel().getNumBands());
        assertEquals(255, new ImageWorker(image).getMinimums()[0], 0d);

        // check instanced env value B1:1
        EnvFunction.setLocalValue(b1, "1");
        image =
                renderer.renderImage(
                        reader,
                        null,
                        rasterSymb,
                        Interpolation.getInstance(Interpolation.INTERP_NEAREST),
                        Color.BLACK,
                        256,
                        256);
        assertEquals(1, image.getSampleModel().getNumBands());
        assertEquals(0, new ImageWorker(image).getMinimums()[0], 0d);

        EnvFunction.removeLocalValue(b1);
        ImageUtilities.disposeImage(image);
    }

