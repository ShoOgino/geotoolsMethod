    @Test
    public void testCompoundRing() {
        double[] halfCircle = {10, 10, 0, 20, -10, 10};
        CircularString cs = new CircularString(halfCircle, GEOMETRY_FACTORY, Double.MAX_VALUE);
        LineString ls =
                new LineString(
                        new CoordinateArraySequence(
                                new Coordinate[] {
                                    new Coordinate(-10, 10),
                                    new Coordinate(-10, 0),
                                    new Coordinate(10, 0),
                                    new Coordinate(10, 10)
                                }),
                        GEOMETRY_FACTORY);
        CompoundRing ring =
                new CompoundRing(Arrays.asList(cs, ls), GEOMETRY_FACTORY, Double.MAX_VALUE);

        // envelope check
        Envelope env = ring.getEnvelopeInternal();
        assertEnvelopeEquals(new Envelope(-10, 10, 0, 20), env);

        // check linearization
        assertEquals(CircularArc.BASE_SEGMENTS_QUADRANT * 2 + 4, ring.getNumPoints());

        // check cloning
        CompoundRing cloned = (CompoundRing) ring.copy();
        assertEquals(ring, cloned);

        // check perimeter, not enough control points to have a accurate estimate
        assertEquals(10 * Math.PI + 40, ring.getLength(), 1e-1);

        // topological operation check
        assertTrue(ring.intersects(JTS.toGeometry(new Envelope(0, 10, 12, 15))));
        assertTrue(ring.intersects(JTS.toGeometry(new Envelope(8, 12, -2, 2))));

        // check curved WKT generation
        String wkt = ring.toCurvedText();
        assertEquals(
                "COMPOUNDCURVE (CIRCULARSTRING (10.0 10.0, 0.0 20.0, -10.0 10.0), (-10.0 10.0, -10.0 0.0, 10.0 0.0, 10.0 10.0))",
                wkt);
    }

