    @Test
    public void testFromCss() throws Exception {
        Converter converter =
                factory.createConverter(
                        String.class, Color.class, new Hints(Hints.COLOR_DEFINITION, "CSS"));
        Assert.assertEquals("aliceblue", ALICE_BLUE, converter.convert("aliceblue", Color.class));
        Assert.assertEquals("AliceBlue", ALICE_BLUE, converter.convert("AliceBlue", Color.class));
        Assert.assertEquals("gray", GRAY, converter.convert("gray", Color.class));
        Assert.assertEquals(
                "lemonchiffon", LEMON_CHIFFON, converter.convert("lemonchiffon", Color.class));
        Assert.assertEquals("WHITE", WHITE, converter.convert("WHITE", Color.class));
        Assert.assertEquals("black", BLACK, converter.convert("black", Color.class));
        Assert.assertEquals("thistle", THISTLE, converter.convert("thistle", Color.class));
        Assert.assertEquals("hex", GRAY, converter.convert("#808080", Color.class));

        Assert.assertEquals(
                "hex alpha", GRAY_TRANSPARENT, converter.convert("#80808080", Color.class));

        Assert.assertEquals("rgb", GRAY, converter.convert("rgb(128,128,128)", Color.class));

        Assert.assertEquals(
                "rgba", GRAY_TRANSPARENT, converter.convert("rgba(128,128,128, 0.5)", Color.class));

        Assert.assertEquals("rgba", GRAY, converter.convert("rgba(128,128,128, 1)", Color.class));

        Assert.assertEquals(
                "rgba",
                new Color(33, 66, 255, 254),
                converter.convert("rgba(33,66,255,0.99607843)", Color.class));
    }

