    protected void visitPointSymbolizerTest(double scaleMetersToPixel, Unit<Length> uom) {
        try {
            double size = 100;
            double expectedRescaledSize = computeExpectedRescaleSize(size, scaleMetersToPixel, uom);

            StyleBuilder styleBuilder = new StyleBuilder();

            PointSymbolizerImpl pointSymb =
                    (PointSymbolizerImpl) styleBuilder.createPointSymbolizer();
            pointSymb.setUnitOfMeasure(uom);

            FilterFactory2 filterFactory = new FilterFactoryImpl();
            pointSymb.getGraphic().setSize(filterFactory.literal(size));

            UomRescaleStyleVisitor visitor = new UomRescaleStyleVisitor(scaleMetersToPixel);

            pointSymb.accept(visitor);
            PointSymbolizer rescaledPointSymb = (PointSymbolizer) visitor.getCopy();
            double rescaledSize =
                    rescaledPointSymb.getGraphic().getSize().evaluate(null, Double.class);

            assertEquals(Math.round(expectedRescaledSize), Math.round(rescaledSize));
            assertNotSame(rescaledPointSymb, pointSymb);
        } catch (Exception e2) {
            java.util.logging.Logger.getGlobal().log(java.util.logging.Level.INFO, "", e2);
            fail(e2.getClass().getSimpleName() + " should not be thrown.");
        }
    }

