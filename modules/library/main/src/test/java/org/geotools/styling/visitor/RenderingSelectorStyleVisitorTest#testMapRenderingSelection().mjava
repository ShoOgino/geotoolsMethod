    @Test
    public void testMapRenderingSelection() {

        Style noOption = buildStyleWithInclusionOption(null);

        RenderingSelectorStyleVisitor selectorStyleVisitor = new MapRenderingSelectorStyleVisitor();

        selectorStyleVisitor.visit(noOption);
        assertEquals(noOption, selectorStyleVisitor.getCopy());

        Style normal = buildStyleWithInclusionOption(NORMAL.getOption());

        selectorStyleVisitor = new MapRenderingSelectorStyleVisitor();
        selectorStyleVisitor.visit(normal);
        assertEquals(normal, selectorStyleVisitor.getCopy());

        Style mapOnly = buildStyleWithInclusionOption(MAPONLY.getOption());

        selectorStyleVisitor = new MapRenderingSelectorStyleVisitor();

        selectorStyleVisitor.visit(mapOnly);
        assertEquals(mapOnly, selectorStyleVisitor.getCopy());

        Style legendOnly = buildStyleWithInclusionOption(LEGENDONLY.getOption());
        selectorStyleVisitor = new MapRenderingSelectorStyleVisitor();

        selectorStyleVisitor.visit(legendOnly);
        Style renderingSelected = (Style) selectorStyleVisitor.getCopy();

        assertNotEquals(legendOnly, renderingSelected);

        List<FeatureTypeStyle> featureTypeStyles = renderingSelected.featureTypeStyles();
        // original had 2
        assertEquals(1, featureTypeStyles.size());

        List<Rule> rules = featureTypeStyles.get(0).rules();
        // original had 2
        assertEquals(1, rules.size());

        List<Symbolizer> symbolizers = rules.get(0).symbolizers();
        // original had 2
        assertEquals(symbolizers.size(), 1);
    }

