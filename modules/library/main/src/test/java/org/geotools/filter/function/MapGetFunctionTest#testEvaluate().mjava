    @Test
    public void testEvaluate() {
        // evaluating on attributes.name
        Function f = FF.function("mapGet", FF.property("attributes"), FF.literal("name"));
        Assert.assertEquals("firstObject", f.evaluate(features[0], String.class));
        Assert.assertEquals("secondObject", f.evaluate(features[1], String.class));
        Assert.assertEquals("thirdObject", f.evaluate(features[2], String.class));

        PropertyIsGreaterThan gt =
                FF.greater(
                        FF.function("mapGet", FF.property("attributes"), FF.literal("score")),
                        FF.literal(80));
        Assert.assertTrue(gt.evaluate(features[0]));
        Assert.assertFalse(gt.evaluate(features[1]));
        Assert.assertFalse(gt.evaluate(features[2]));

        Function f2 = FF.function("mapGet", FF.property("attributes"), FF.literal("valid"));
        Assert.assertFalse(f2.evaluate(features[0], Boolean.class));
        Assert.assertTrue(f2.evaluate(features[1], Boolean.class));
        Assert.assertNull(f2.evaluate(features[2], Boolean.class));

        Function f3 = FF.function("mapGet", FF.property("attributes"), FF.literal("key1"));
        Assert.assertEquals("value1", f3.evaluate(features[0], String.class));
        Assert.assertEquals(Integer.valueOf(10), f3.evaluate(features[1], Integer.class));
        Assert.assertEquals(Boolean.TRUE, f3.evaluate(features[2], Boolean.class));

        Function f4 = FF.function("mapGet", FF.property("missingMap"), FF.literal("key1"));
        Assert.assertNull(f4.evaluate(features[0], String.class));
    }

