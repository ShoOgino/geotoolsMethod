    public void testSum() throws IllegalFilterException, IOException {
        SumVisitor sumVisitor = new SumVisitor(0, ft);
        fc.accepts(sumVisitor, null); // 1,2,3
        SumVisitor sumVisitor2 = new SumVisitor(3, ft2);
        fc2.accepts(sumVisitor2, null); // 3,4.5
        // 6 is sum
        int value1 = sumVisitor.getResult().toInt();
        assertEquals(6, value1);
        // 7.5 is sum
        double value2 = sumVisitor2.getResult().toDouble();
        assertEquals((double) 7.5, value2, 0);
        // sum of 6 and 7.5 is 13.5
        CalcResult sumResult1 = sumVisitor.getResult();
        CalcResult sumResult2 = sumVisitor2.getResult();
        CalcResult sumResult3 = sumResult1.merge(sumResult2);
        assertEquals((double) 13.5, sumResult3.toDouble(), 0);
        // test a mock optimization
        sumVisitor2.setValue(new Integer(-42));
        CalcResult sumResult4 = sumVisitor2.getResult();
        CalcResult sumResult5 = sumResult3.merge(sumResult4);
        assertEquals(-28.5, sumResult5.toDouble(), 0);
        // test for destruction during merge
        assertEquals(13.5, sumResult3.toDouble(), 0);
        assertEquals(-42.0, sumResult4.toDouble(), 0);
        // test empty collection
        sumVisitor.reset();
        empty.accepts(sumVisitor, null);
        assertEquals(CalcResult.NULL_RESULT, sumVisitor.getResult());
        // test merge
        assertSame(sumResult2, sumVisitor.getResult().merge(sumResult2));
        assertSame(sumResult2, sumResult2.merge(sumVisitor.getResult()));
    }

