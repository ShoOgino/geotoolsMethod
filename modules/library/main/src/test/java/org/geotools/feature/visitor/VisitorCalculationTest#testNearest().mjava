    public void testNearest() throws Exception {
        SimpleFeatureType type =
                DataUtilities.createType(
                        "nearestTest",
                        "name:String,size:int,flow:double,event:java.util.Date,data:java.io.File");
        ListFeatureCollection fc = new ListFeatureCollection(type);
        SimpleDateFormat df = new SimpleDateFormat("yyyy-mm-dd", Locale.ENGLISH);
        df.setTimeZone(TimeZone.getTimeZone("GMT"));
        fc.add(
                SimpleFeatureBuilder.build(
                        type,
                        new Object[] {
                            "abc", 10, 10.5, df.parse("2014-12-10"), new File("/tmp/test.txt")
                        },
                        null));
        fc.add(
                SimpleFeatureBuilder.build(
                        type,
                        new Object[] {
                            "ade", 5, 3.5, df.parse("2012-11-10"), new File("/tmp/abc.txt")
                        },
                        null));
        fc.add(
                SimpleFeatureBuilder.build(
                        type,
                        new Object[] {
                            "zaa", 2, 50.4, df.parse("2010-11-10"), new File("/tmp/zaa.txt")
                        },
                        null));

        // test on integer
        testNearest(fc, "size", 5, 5); // exact match
        testNearest(fc, "size", 1, 2); // below min
        testNearest(fc, "size", 3, 2); // mid
        testNearest(fc, "size", 15, 10); // above max

        // test on double
        testNearest(fc, "flow", 3.5, 3.5); // exact match
        testNearest(fc, "flow", 1d, 3.5); // below min
        testNearest(fc, "flow", 10d, 10.5); // mid
        testNearest(fc, "flow", 100d, 50.4); // above max

        // test on date
        testNearest(fc, "event", df.parse("2014-12-10"), df.parse("2014-12-10")); // exact match
        testNearest(fc, "event", df.parse("2009-11-10"), df.parse("2010-11-10")); // below min
        testNearest(fc, "event", df.parse("2010-11-11"), df.parse("2010-11-10")); // mid
        testNearest(fc, "event", df.parse("2015-12-10"), df.parse("2014-12-10")); // above max

        // test on string
        testNearest(fc, "name", "ade", "ade"); // exact match
        testNearest(fc, "name", "aaa", "abc"); // below min
        testNearest(fc, "name", "mfc", "ade", "zaa"); // mid, both values could match
        testNearest(fc, "name", "zzz", "zaa"); // above max

        // test on random comparable (a file)
        testNearest(
                fc, "data", new File("/tmp/test.txt"), new File("/tmp/test.txt")); // exact match
        testNearest(fc, "data", new File("/tmp/aaa.txt"), new File("/tmp/abc.txt")); // below min
        testNearest(
                fc,
                "data",
                new File("/tmp/mfc.txt"),
                new File("/tmp/abc.txt"),
                new File("/tmp/test.txt")); // mid, both values could match
        testNearest(fc, "data", new File("/tmp/zzz.txt"), new File("/tmp/zaa.txt")); // above max
    }

