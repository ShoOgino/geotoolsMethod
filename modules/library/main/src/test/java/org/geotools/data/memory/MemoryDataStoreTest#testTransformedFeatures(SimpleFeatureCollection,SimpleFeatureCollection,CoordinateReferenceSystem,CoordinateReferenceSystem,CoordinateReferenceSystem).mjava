    /*
     * Utility method used to verify that a collection of features was correctly transformed
     */
    private void testTransformedFeatures(
            SimpleFeatureCollection sourceFeatures,
            SimpleFeatureCollection transformedFeatures,
            CoordinateReferenceSystem nativeCRS,
            CoordinateReferenceSystem forcedCRS,
            CoordinateReferenceSystem reprojectCRS)
            throws TransformException, FactoryException {

        // The expected CRS of the transformed features
        CoordinateReferenceSystem targetCRS = nativeCRS;
        GeometryCoordinateSequenceTransformer transformer =
                new GeometryCoordinateSequenceTransformer();

        if (reprojectCRS != null) {
            targetCRS = reprojectCRS;
            // Set up geometry transform
            if (forcedCRS == null) {
                transformer.setMathTransform(CRS.findMathTransform(nativeCRS, reprojectCRS, true));
            } else {
                transformer.setMathTransform(CRS.findMathTransform(forcedCRS, reprojectCRS, true));
            }
        } else if (forcedCRS != null) {
            targetCRS = forcedCRS;
        }

        SimpleFeatureIterator i = sourceFeatures.features();
        SimpleFeatureIterator j = transformedFeatures.features();

        // Go through all the features
        while (i.hasNext() && j.hasNext()) {
            SimpleFeature sourceFeature = i.next();
            SimpleFeature transformedFeature = j.next();
            assertEquals(
                    targetCRS, transformedFeature.getFeatureType().getCoordinateReferenceSystem());

            for (int k = 0; k < sourceFeature.getAttributes().size(); k++) {
                Object o = sourceFeature.getAttributes().get(k);

                // Check that the geometry was transformed correctly
                if (o instanceof Geometry) {
                    Geometry sourceGeometry = (Geometry) o;
                    Geometry transformedGeometry =
                            (Geometry) transformedFeature.getAttributes().get(k);

                    Geometry expectedGeometry = sourceGeometry.copy();
                    if (reprojectCRS != null) {
                        expectedGeometry = transformer.transform(expectedGeometry);
                    }
                    assertEquals(expectedGeometry, transformedGeometry);
                }
            }
        }
    }

