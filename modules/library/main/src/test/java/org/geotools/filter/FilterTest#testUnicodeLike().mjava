    /**
     * Tests the like operator with unicode chars.
     *
     * @throws IllegalFilterException If the constructed filter is not valid.
     */
    @Test
    public void testUnicodeLike() throws IllegalFilterException {

        // Set up string
        PropertyName testAttribute = new AttributeExpressionImpl(testSchema, "unicodeString");

        PropertyIsLike filter = fac.like(testAttribute, "Barañá*", "*", ".", "!", false);
        Assert.assertTrue(filter.evaluate(testFeature));

        filter = fac.like(testAttribute, "Barañá*", "*", ".", "!", true);
        Assert.assertTrue(filter.evaluate(testFeature));

        filter = fac.like(testAttribute, "barañá*", "*", ".", "!", false);
        Assert.assertTrue(filter.evaluate(testFeature));

        filter = fac.like(testAttribute, "barañá*", "*", ".", "!", true);
        Assert.assertFalse(filter.evaluate(testFeature));

        filter = fac.like(testAttribute, "BARAÑÁ*", "*", ".", "!", false);
        Assert.assertTrue(filter.evaluate(testFeature));

        filter = fac.like(testAttribute, "BARAÑÁ*", "*", ".", "!", true);
        Assert.assertFalse(filter.evaluate(testFeature));
    }

