    /**
     * Tests the math expression over other kind of object than Feature.
     *
     * @throws IllegalFilterException if filter problems
     */
    public void testMathObject() throws IllegalFilterException {
        MockDataObject testObject = new MockDataObject(10, "diez");

        // Test integer attribute
        org.opengis.filter.expression.Expression testAttribute1 =
                new LiteralExpressionImpl(Integer.valueOf(4));
        org.opengis.filter.expression.Expression testAttribute2 =
                new LiteralExpressionImpl(Integer.valueOf(2));

        // Test addition
        MathExpressionImpl mathTest = new AddImpl(null, null);
        mathTest.setExpression1(testAttribute1);
        mathTest.setExpression2(testAttribute2);

        assertEquals(Integer.valueOf(6), mathTest.evaluate(testObject, Integer.class));

        // Test subtraction
        mathTest = new SubtractImpl(null, null);
        mathTest.setExpression1(testAttribute1);
        mathTest.setExpression2(testAttribute2);

        assertEquals(Integer.valueOf(2), mathTest.evaluate(testObject, Integer.class));

        // Test multiplication
        mathTest = new MultiplyImpl(null, null);
        mathTest.setExpression1(testAttribute1);
        mathTest.setExpression2(testAttribute2);

        assertEquals(Integer.valueOf(8), mathTest.evaluate(testObject, Integer.class));

        // Test division
        mathTest = new DivideImpl(null, null);
        mathTest.setExpression1(testAttribute1);
        mathTest.setExpression2(testAttribute2);

        assertEquals(new Double(2), mathTest.evaluate(testObject));
    }

