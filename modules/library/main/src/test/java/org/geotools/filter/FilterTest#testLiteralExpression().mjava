    @Test
    public void testLiteralExpression() {
        LiteralExpressionImpl literal = new LiteralExpressionImpl(1.0D);
        Assert.assertEquals(ExpressionType.LITERAL_DOUBLE, Filters.getExpressionType(literal));
        Assert.assertEquals(Double.valueOf(1.0D), literal.evaluate(null));

        GeometryFactory gf = new GeometryFactory();
        literal = new LiteralExpressionImpl(gf.createPoint(new Coordinate(0, 0)));
        Assert.assertEquals(ExpressionType.LITERAL_GEOMETRY, Filters.getExpressionType(literal));
        Geometry value = (Geometry) literal.evaluate(null);
        Assert.assertTrue(gf.createPoint(new Coordinate(0, 0)).equalsExact(value));

        literal = new LiteralExpressionImpl(1);
        Assert.assertEquals(ExpressionType.LITERAL_INTEGER, Filters.getExpressionType(literal));
        Assert.assertEquals(Integer.valueOf(1), literal.evaluate(null));

        literal = new LiteralExpressionImpl(1L);
        Assert.assertEquals(ExpressionType.LITERAL_LONG, Filters.getExpressionType(literal));
        Assert.assertEquals(Long.valueOf(1), literal.evaluate(null));

        literal = new LiteralExpressionImpl("string value");
        Assert.assertEquals(ExpressionType.LITERAL_STRING, Filters.getExpressionType(literal));
        Assert.assertEquals("string value", literal.evaluate(null));

        literal = new LiteralExpressionImpl(new Date(0));
        Assert.assertEquals(ExpressionType.LITERAL_UNDECLARED, Filters.getExpressionType(literal));
        Assert.assertEquals(new Date(0), literal.evaluate(null));

        literal = new LiteralExpressionImpl(null);
        Assert.assertEquals(ExpressionType.LITERAL_UNDECLARED, Filters.getExpressionType(literal));
        Assert.assertNull(literal.evaluate(null));
    }

