    @Test
    public void testDontDelegateVisitor() throws IOException {
        FilterFactory2 ff = CommonFactoryFinder.getFilterFactory2();
        UniqueVisitor visitor = new UniqueVisitor(ff.property("test"));

        FeatureCollection mock = EasyMock.createMock(FeatureCollection.class);
        SimpleFeatureIterator iterator = EasyMock.createNiceMock(SimpleFeatureIterator.class);
        EasyMock.expect(mock.features()).andReturn(iterator);
        EasyMock.replay(mock, iterator);

        DecoratingFeatureCollection decorator =
                new DecoratingFeatureCollection<FeatureType, Feature>(mock) {
                    @Override
                    protected boolean canDelegate(FeatureVisitor visitor) {
                        return false;
                    }
                };
        decorator.accepts(visitor, null);
        EasyMock.verify(mock);
    }

