    @Test
    public void testFloatToIntegral() throws Exception {
        // to byte
        Assert.assertEquals(Byte.valueOf((byte) 127), convert(Float.valueOf(127.127f), Byte.class));
        Assert.assertEquals(Byte.valueOf((byte) 127), convert(Double.valueOf(127.127), Byte.class));
        Assert.assertEquals(
                Byte.valueOf((byte) 127), convert(BigDecimal.valueOf(127.127), Byte.class));

        // to short
        Assert.assertEquals(
                Short.valueOf((short) 127), convert(Float.valueOf(127.127f), Short.class));
        Assert.assertEquals(
                Short.valueOf((short) 127), convert(Double.valueOf(127.127), Short.class));
        Assert.assertEquals(
                Short.valueOf((short) 127), convert(BigDecimal.valueOf(127.127), Short.class));

        // to integer
        Assert.assertEquals(Integer.valueOf(127), convert(Float.valueOf(127.127f), Integer.class));
        Assert.assertEquals(Integer.valueOf(127), convert(Double.valueOf(127.127), Integer.class));
        Assert.assertEquals(
                Integer.valueOf(127), convert(BigDecimal.valueOf(127.127), Integer.class));

        // to long
        Assert.assertEquals(Long.valueOf(127), convert(Float.valueOf(127.127f), Long.class));
        Assert.assertEquals(Long.valueOf(127), convert(Double.valueOf(127.127), Long.class));
        Assert.assertEquals(Long.valueOf(127), convert(BigDecimal.valueOf(127.127), Long.class));

        // to big integer
        Assert.assertEquals(
                BigInteger.valueOf(127), convert(Float.valueOf(127.127f), BigInteger.class));
        Assert.assertEquals(
                BigInteger.valueOf(127), convert(Double.valueOf(127.127), BigInteger.class));
        Assert.assertEquals(
                BigInteger.valueOf(127), convert(BigDecimal.valueOf(127.127), BigInteger.class));
    }

