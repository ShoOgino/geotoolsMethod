    /**
     * See https://osgeo-org.atlassian.net/browse/GEOT-5613
     *
     * @throws Exception
     */
    @Test
    public void testDefaults() throws Exception {
        StyleBuilder sb = new StyleBuilder();
        LineSymbolizer ls = sb.createLineSymbolizer(Color.BLACK);

        SLDTransformer st = new SLDTransformer();
        st.setExportDefaultValues(true);
        st.setIndentation(2);
        String xml = st.transform(ls);

        Document doc = buildTestDocument(xml);

        assertXpathExists("//sld:LineSymbolizer/sld:Stroke", doc);
        assertXpathEvaluatesTo(
                "#000000", "//sld:LineSymbolizer/sld:Stroke/sld:CssParameter[@name='stroke']", doc);

        st.setExportDefaultValues(false);
        xml = st.transform(ls);
        // System.out.println(xml);
        doc = buildTestDocument(xml);

        assertXpathNotExists(
                "//sld:LineSymbolizer/sld:Stroke/sld:CssParameter[@name='stroke']", doc);

        st.setExportDefaultValues(true);

        PolygonSymbolizer ps = sb.createPolygonSymbolizer(Color.GRAY, Color.black, 1.0);

        xml = st.transform(ps);

        doc = buildTestDocument(xml);

        assertXpathExists("//sld:PolygonSymbolizer/sld:Stroke", doc);
        assertXpathEvaluatesTo(
                "#000000",
                "//sld:PolygonSymbolizer/sld:Stroke/sld:CssParameter[@name='stroke']",
                doc);
        assertXpathExists("//sld:PolygonSymbolizer/sld:Fill", doc);
        assertXpathEvaluatesTo(
                "#808080", "//sld:PolygonSymbolizer/sld:Fill/sld:CssParameter[@name='fill']", doc);

        st.setExportDefaultValues(false);
        xml = st.transform(ps);
        // System.out.println(xml);
        doc = buildTestDocument(xml);
        assertXpathExists("//sld:PolygonSymbolizer/sld:Stroke", doc);
        assertXpathNotExists(
                "//sld:PolygonSymbolizer/sld:Stroke/sld:CssParameter[@name='stroke']", doc);
        assertXpathExists("//sld:PolygonSymbolizer/sld:Fill", doc);
        assertXpathNotExists(
                "//sld:PolygonSymbolizer/sld:Fill/sld:CssParameter[@name='fill']", doc);

        st.setExportDefaultValues(true);
        PointSymbolizer pos =
                sb.createPointSymbolizer(sb.createGraphic(null, sb.createMark("square"), null));

        xml = st.transform(pos);
        // System.out.println(xml);
        doc = buildTestDocument(xml);
        assertXpathExists("//sld:PointSymbolizer/sld:Graphic/sld:Mark/sld:Stroke", doc);
        assertXpathEvaluatesTo(
                "#000000",
                "//sld:PointSymbolizer/sld:Graphic/sld:Mark/sld:Stroke/sld:CssParameter[@name='stroke']",
                doc);
        assertXpathExists("//sld:PointSymbolizer/sld:Graphic/sld:Mark/sld:Fill", doc);
        assertXpathEvaluatesTo(
                "#808080",
                "//sld:PointSymbolizer/sld:Graphic/sld:Mark/sld:Fill/sld:CssParameter[@name='fill']",
                doc);
        assertXpathExists("//sld:WellKnownName", doc);

        st.setExportDefaultValues(false);
        xml = st.transform(pos);
        // System.out.println(xml);
        doc = buildTestDocument(xml);
        assertXpathExists("//sld:PointSymbolizer/sld:Graphic/sld:Mark/sld:Stroke", doc);
        assertXpathNotExists(
                "//sld:PointSymbolizer/sld:Graphic/sld:Mark/sld:Stroke/sld:CssParameter[@name='stroke']",
                doc);
        assertXpathExists("//sld:PointSymbolizer/sld:Graphic/sld:Mark/sld:Fill", doc);
        assertXpathNotExists(
                "//sld:PointSymbolizer/sld:Graphic/sld:Mark/sld:Fill/sld:CssParameter[@name='fill']",
                doc);
        assertXpathNotExists("//sld:WellKnownName", doc);
    }

