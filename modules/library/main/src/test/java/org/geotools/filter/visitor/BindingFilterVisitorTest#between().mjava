    @Test
    public void between() {
        // among two literals
        PropertyIsBetween source = ff.between(ff.property("i"), ff.literal("10"), ff.literal("20"));
        PropertyIsBetween bound = (PropertyIsBetween) source.accept(visitor, null);
        assertEquals(Integer.valueOf(10), ((Literal) bound.getLowerBoundary()).getValue());
        assertEquals(Integer.valueOf(20), ((Literal) bound.getUpperBoundary()).getValue());

        // among two expression
        source = ff.between(ff.literal("10"), ff.property("i"), ff.property("i"));
        bound = (PropertyIsBetween) source.accept(visitor, null);
        assertEquals(Integer.valueOf(10), ((Literal) bound.getExpression()).getValue());

        // among two inconsistent expressions, cannot optimize
        source = ff.between(ff.literal("10"), ff.property("i"), ff.property("d"));
        bound = (PropertyIsBetween) source.accept(visitor, null);
        assertEquals("10", ((Literal) bound.getExpression()).getValue());
    }

