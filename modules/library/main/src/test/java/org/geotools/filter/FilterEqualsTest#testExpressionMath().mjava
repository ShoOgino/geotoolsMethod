    @Test
    public void testExpressionMath() {
        try {
            MathExpressionImpl testMath1;
            MathExpressionImpl testMath2;
            testExp1 = new LiteralExpressionImpl(Double.valueOf(5));
            testExp2 = new LiteralExpressionImpl(Double.valueOf(5));
            testMath1 = new AddImpl(null, null);
            testMath1.setExpression1(testExp1);
            testMath1.setExpression2(testExp2);
            testMath2 = new AddImpl(null, null);
            testMath2.setExpression1(testExp2);
            testMath2.setExpression2(testExp1);
            Assert.assertEquals(testMath1, testMath2);
            testExp3 = new LiteralExpressionImpl(Integer.valueOf(4));
            testExp4 = new LiteralExpressionImpl(Integer.valueOf(4));
            testMath2.setExpression1(testExp3);
            Assert.assertFalse(testMath1.equals(testMath2));
            testMath1.setExpression1(testExp4);
            Assert.assertEquals(testMath1, testMath2);
            testMath1 = new SubtractImpl(null, null);
            testMath1.setExpression1(testExp4);
            testMath1.setExpression1(testExp2);
            Assert.assertFalse(testMath1.equals(testMath2));
            Assert.assertFalse(testMath1.equals("Random Object that happens to be a string"));
        } catch (IllegalFilterException e) {
            LOGGER.warning("bad filter: " + e.getMessage());
        }
    }

