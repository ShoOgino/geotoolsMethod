    /**
     * Checks the output of encoding a default line symbolizer does not include all the default values
     * @throws Exception
     */
    @Test
    public void testMinimumLineSymbolizer() throws Exception {
        StyleBuilder sb = new StyleBuilder();
        LineSymbolizer ls = sb.createLineSymbolizer();
        String xml = transformer.transform(ls);
        // System.out.println(xml);
        Document doc = buildTestDocument(xml);

        // check LineSymbolizer has the stroke element inside, but stroke does not have children
        assertXpathEvaluatesTo("1", "count(/sld:LineSymbolizer/*)", doc);
        assertXpathEvaluatesTo("0", "count(/sld:LineSymbolizer/sld:Stroke/*)", doc);
        
        // setup custom line width and color, and explicitly set the opacity to the default value
        ls.getStroke().setWidth(ff.literal(3));
        ls.getStroke().setColor(ff.literal(Color.YELLOW));
        ls.getStroke().setOpacity(ff.literal(1));
        xml = transformer.transform(ls);
        // System.out.println(xml);
        doc = buildTestDocument(xml);
        
        // same as above, but this time we expect the width and color to be set
        assertXpathEvaluatesTo("1", "count(/sld:LineSymbolizer/*)", doc);
        assertXpathEvaluatesTo("2", "count(/sld:LineSymbolizer/sld:Stroke/*)", doc);
        assertXpathEvaluatesTo("#FFFF00", "/sld:LineSymbolizer/sld:Stroke/sld:CssParameter[@name='stroke']", doc);
        assertXpathEvaluatesTo("3", "/sld:LineSymbolizer/sld:Stroke/sld:CssParameter[@name='stroke-width']", doc);
    }

