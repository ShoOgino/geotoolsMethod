    public void testSafeConversion() throws Exception {
        // byte
        assertEquals(Byte.valueOf((byte) 127), convertSafe(Byte.valueOf((byte) 127), Byte.class));
        assertNull(convertSafe(Short.valueOf((short) 128), Byte.class));
        assertNull(convertSafe(Integer.valueOf(128), Byte.class));
        assertNull(convertSafe(Long.valueOf(128), Byte.class));
        assertNull(convertSafe(BigInteger.valueOf(128), Byte.class));
        assertNull(convertSafe(Double.valueOf(128.1), Byte.class));
        assertNull(convertSafe(new BigDecimal(128.1), Byte.class));
        assertNull(convertSafe(Float.valueOf(128.1f), Byte.class));

        // short
        assertEquals(
                Short.valueOf((short) 127), convertSafe(Byte.valueOf((byte) 127), Short.class));
        assertEquals(
                Short.valueOf((short) 1111), convertSafe(Short.valueOf((short) 1111), Short.class));
        assertNull(convertSafe(Integer.valueOf(128), Short.class));
        assertNull(convertSafe(Long.valueOf(128), Short.class));
        assertNull(convertSafe(BigInteger.valueOf(128), Short.class));
        assertNull(convertSafe(Double.valueOf(128.1), Short.class));
        assertNull(convertSafe(new BigDecimal(128.1), Short.class));
        assertNull(convertSafe(Float.valueOf(128.1f), Short.class));

        // integer
        assertEquals(Integer.valueOf(127), convertSafe(Byte.valueOf((byte) 127), Integer.class));
        assertEquals(
                Integer.valueOf(1111), convertSafe(Short.valueOf((short) 1111), Integer.class));
        assertEquals(Integer.valueOf(12345), convertSafe(Integer.valueOf(12345), Integer.class));
        assertNull(convertSafe(Long.valueOf(128), Integer.class));
        assertNull(convertSafe(BigInteger.valueOf(128), Integer.class));
        assertNull(convertSafe(Double.valueOf(128.1), Integer.class));
        assertNull(convertSafe(new BigDecimal(128.1), Integer.class));
        assertNull(convertSafe(Float.valueOf(128.1f), Integer.class));

        // long
        assertEquals(Long.valueOf(127), convertSafe(Byte.valueOf((byte) 127), Long.class));
        assertEquals(Long.valueOf(1111), convertSafe(Short.valueOf((short) 1111), Long.class));
        assertEquals(Long.valueOf(12345), convertSafe(Integer.valueOf(12345), Long.class));
        assertEquals(Long.valueOf(1234567), convertSafe(Integer.valueOf(1234567), Long.class));
        assertNull(convertSafe(BigInteger.valueOf(128), Long.class));
        assertNull(convertSafe(Double.valueOf(128.1), Long.class));
        assertNull(convertSafe(new BigDecimal(128.1), Long.class));
        assertNull(convertSafe(Float.valueOf(128.1f), Long.class));

        // big integer
        assertEquals(
                BigInteger.valueOf(127), convertSafe(Byte.valueOf((byte) 127), BigInteger.class));
        assertEquals(
                BigInteger.valueOf(1111),
                convertSafe(Short.valueOf((short) 1111), BigInteger.class));
        assertEquals(
                BigInteger.valueOf(12345), convertSafe(Integer.valueOf(12345), BigInteger.class));
        assertEquals(
                BigInteger.valueOf(1234567),
                convertSafe(Integer.valueOf(1234567), BigInteger.class));
        assertEquals(
                BigInteger.valueOf(12345678),
                convertSafe(BigInteger.valueOf(12345678), BigInteger.class));
        assertNull(convertSafe(Double.valueOf(128.1), Long.class));
        assertNull(convertSafe(new BigDecimal(128.1), Long.class));
        assertNull(convertSafe(Float.valueOf(128.1f), Long.class));

        // double
        assertEquals(Double.valueOf(127), convertSafe(Byte.valueOf((byte) 127), Double.class));
        assertEquals(Double.valueOf(1111), convertSafe(Short.valueOf((short) 1111), Double.class));
        assertEquals(Double.valueOf(12345), convertSafe(Integer.valueOf(12345), Double.class));
        assertEquals(Double.valueOf(1234567), convertSafe(Integer.valueOf(1234567), Double.class));
        // assertEquals(Double.valueOf(12345678), convertSafe(BigInteger.valueOf(12345678),
        // Double.class));
        assertEquals(
                Double.valueOf(12.123456), convertSafe(Double.valueOf(12.123456), Double.class));
        assertNull(convertSafe(new BigDecimal(128.1), Long.class));
        assertEquals(Double.valueOf(12.12), convertSafe(Float.valueOf(12.12f), Double.class));

        // float
        assertEquals(Float.valueOf(127), convertSafe(Byte.valueOf((byte) 127), Float.class));
        assertEquals(Float.valueOf(1111), convertSafe(Short.valueOf((short) 1111), Float.class));
        assertEquals(Float.valueOf(12345), convertSafe(Integer.valueOf(12345), Float.class));
        assertEquals(Float.valueOf(1234567), convertSafe(Integer.valueOf(1234567), Float.class));
        assertNull(convertSafe(BigInteger.valueOf(12345678), Float.class));
        assertNull(convertSafe(Double.valueOf(128.1), Float.class));
        assertNull(convertSafe(new BigDecimal(128.1), Float.class));
        assertEquals(Float.valueOf(12.12f), convertSafe(Float.valueOf(12.12f), Float.class));

        // Big Decimal
        assertEquals(new BigDecimal(127), convertSafe(Byte.valueOf((byte) 127), BigDecimal.class));
        assertEquals(
                new BigDecimal(1111), convertSafe(Short.valueOf((short) 1111), BigDecimal.class));
        assertEquals(new BigDecimal(12345), convertSafe(Integer.valueOf(12345), BigDecimal.class));
        assertEquals(
                new BigDecimal(1234567), convertSafe(Integer.valueOf(1234567), BigDecimal.class));
        assertEquals(
                new BigDecimal(12345678),
                convertSafe(BigInteger.valueOf(12345678), BigDecimal.class));
        assertEquals(
                new BigDecimal(Double.valueOf(12.123456).toString()),
                convertSafe(Double.valueOf(12.123456), BigDecimal.class));
        assertEquals(new BigDecimal(128.1), convertSafe(new BigDecimal(128.1), BigDecimal.class));
        assertEquals(
                new BigDecimal(Float.valueOf(12.12f).toString()),
                convertSafe(Float.valueOf(12.12f), BigDecimal.class));

        // test strings
        assertEquals(new BigDecimal(127), convertSafe("127", BigDecimal.class));
        assertNull(convertSafe("127f", BigDecimal.class));
        assertEquals(Double.valueOf(127.123), convertSafe("127.123", Double.class));
        assertNull(convertSafe("123.456.456", Double.class));
        assertEquals(Float.valueOf(127.123f), convertSafe("127.123", Float.class));
        assertNull(convertSafe("123.456.456", Float.class));
        assertEquals(BigInteger.valueOf(1234567), convertSafe("1234567", BigInteger.class));
        assertNull(convertSafe("123.456", BigInteger.class));
        assertEquals(Long.valueOf(54), convertSafe("54", Long.class));
        assertNull(convertSafe("123.6", Long.class));
        assertEquals(Integer.valueOf(54), convertSafe("54", Integer.class));
        assertNull(convertSafe("123.6", Integer.class));
        assertEquals(Short.valueOf((short) 54), convertSafe("54", Short.class));
        assertNull(convertSafe("123.6", Short.class));
        assertEquals(Byte.valueOf("1"), convertSafe("1", Byte.class));
        assertNull(convertSafe("123.6", Byte.class));
    }

