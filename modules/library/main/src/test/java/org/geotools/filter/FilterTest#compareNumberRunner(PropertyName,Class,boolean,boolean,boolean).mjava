    /**
     * Helper class for the integer compare operators.
     *
     * @param testAttribute DOCUMENT ME!
     * @param filterType DOCUMENT ME!
     * @param test1 DOCUMENT ME!
     * @param test2 DOCUMENT ME!
     * @param test3 DOCUMENT ME!
     * @throws IllegalFilterException If the constructed filter is not valid.
     */
    public void compareNumberRunner(
            PropertyName testAttribute,
            Class filterType,
            boolean test1,
            boolean test2,
            boolean test3)
            throws IllegalFilterException {
        Literal testLiteral = new LiteralExpressionImpl(Integer.valueOf(1001));
        org.opengis.filter.Filter filter = compare(filterType, testAttribute, testLiteral);

        // LOGGER.finer( filter.toString());
        // LOGGER.finer( "contains feature: " + filter.contains(testFeature));
        assertEquals(filter.evaluate(testFeature), test1);

        testLiteral = new LiteralExpressionImpl(Integer.valueOf(1002));
        filter = compare(filterType, testAttribute, testLiteral);

        // LOGGER.finer( filter.toString());
        // LOGGER.finer( "contains feature: " + filter.contains(testFeature));
        assertEquals(filter.evaluate(testFeature), test2);

        testLiteral = new LiteralExpressionImpl(Integer.valueOf(1003));
        filter = compare(filterType, testAttribute, testLiteral);

        // LOGGER.finer( filter.toString());
        // LOGGER.finer( "contains feature: " + filter.contains(testFeature));
        assertEquals(filter.evaluate(testFeature), test3);
    }

