    /** Test that the a Transaction is removed from state when the Transaction is closed. */
    @Test
    public void transactionCacheClearedOnTransactionClose() {
        ContentDataStore dataStore =
                new ContentDataStore() {

                    @Override
                    protected List<Name> createTypeNames() throws IOException {
                        return null;
                    }

                    @Override
                    protected ContentFeatureSource createFeatureSource(ContentEntry entry)
                            throws IOException {
                        return null;
                    }
                };

        @SuppressWarnings("PMD.CloseResource") // need to test after closing
        Transaction transaction = new DefaultTransaction();

        ContentEntry entry = new ContentEntry(dataStore, new NameImpl("test"));
        ContentState state = entry.getState(transaction);
        new DiffTransactionState(state);

        // state is extracted from state cache
        assertSame(state, entry.getState(transaction));
        // and contains our transaction
        assertSame(state.getTransaction(), transaction);

        try {
            transaction.close();

            // after transaction closing, the old state has been cleared, so
            // a new one is built and returned
            ContentState stateForClosedTransaction = entry.getState(transaction);
            assertNotSame(stateForClosedTransaction, state);
        } catch (IOException e) {
            fail("Cannot close transaction: " + e.getLocalizedMessage());
        }
    }

