    @Test
    public void testSequenceWithEmptyCodes() throws Exception {
        ServiceException exception = ServiceExceptionParser.parse(
                mockStream(
                          "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n"
                        + "<ServiceExceptionReport>\n"
                        + "  <ServiceException>test</ServiceException>\n"
                        + "  <ServiceException code=\"\">another test</ServiceException>\n"
                        + "  <ServiceException code=\"60\">yet another test</ServiceException>\n"
                        + "  <ServiceException code=\"20\">still another test</ServiceException>\n"
                        + "</ServiceExceptionReport>"));
        
        Assert.assertThat(exception, 
                both(hasProperty("message", equalTo("yet another test")))
                .and(hasProperty("code", equalTo("60"))));
        Assert.assertThat(exception.getNext(), 
                both(hasProperty("message", equalTo("still another test")))
                .and(hasProperty("code", equalTo("20"))));
        Assert.assertThat(exception.getNext().getNext(), 
                both(hasProperty("message", equalTo("test")))
                .and(hasProperty("code", nullValue())));
        Assert.assertThat(exception.getNext().getNext().getNext(), 
                both(hasProperty("message", equalTo("another test")))
                .and(hasProperty("code", equalTo(""))));
        Assert.assertThat(exception.getNext().getNext().getNext().getNext(), 
                nullValue());
    }

