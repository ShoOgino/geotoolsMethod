    public void testAbstractType() throws Exception {

        SimpleFeatureTypeBuilder tb = new SimpleFeatureTypeBuilder();
        tb.setName("AbstractThing");
        tb.setAbstract(true);
        tb.setNamespaceURI(new URI("http://www.nowhereinparticular.net"));

        SimpleFeatureType abstractType = tb.buildFeatureType();
        tb.setName("AbstractType2");
        tb.setSuperType(abstractType);
        tb.add("X", String.class);
        SimpleFeatureType abstractType2 = tb.buildFeatureType();

        assertTrue(abstractType.isAbstract());
        assertTrue(abstractType2.isAbstract());

        // assertTrue("extends gml feature", FeatureTypes.isDecendedFrom(abstractType, new
        // URI("http://www.opengis.net/gml"),"Feature"));
        // assertTrue("extends gml feature", FeatureTypes.isDecendedFrom(abstractType2, new
        // URI("http://www.opengis.net/gml"),"Feature"));
        assertTrue(
                "abstractType2 --|> abstractType",
                FeatureTypes.isDecendedFrom(abstractType2, abstractType));
        assertFalse(
                "abstractType2 !--|> abstractType",
                FeatureTypes.isDecendedFrom(abstractType, abstractType2));

        try {
            SimpleFeatureBuilder.build(abstractType, new Object[0], null);
            fail("abstract type allowed create");
        } catch (IllegalArgumentException | UnsupportedOperationException iae) {
        }

        try {
            SimpleFeatureBuilder.build(abstractType2, new Object[0], null);
            fail("abstract type allowed create");
        } catch (IllegalArgumentException | UnsupportedOperationException iae) {
        }
    }

