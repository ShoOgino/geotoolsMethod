    /** Test for ticket GEOT-5682 ListFeatureCollection handling of ReferencedEnvelope3D */
    @Test
    public void threeDimensionalFeatureBounds() {
        GeometryFactory gf = new GeometryFactory(new PrecisionModel());
        SimpleFeatureType type = null;
        try {
            type = DataUtilities.createType("testSchema", "name:String,*geom:Geometry");
        } catch (SchemaException e) {
            // TODO Auto-generated catch block
            java.util.logging.Logger.getGlobal().log(java.util.logging.Level.INFO, "", e);
        }

        // initialize FC with test features
        featureCollection = new ListFeatureCollection(TYPE, featureList);
        SimpleFeature f1 =
                SimpleFeatureBuilder.build(
                        type,
                        new Object[] {"testFeature1", gf.createPoint(new Coordinate(10, 20, 30))},
                        null);
        SimpleFeature f2 =
                SimpleFeatureBuilder.build(
                        type,
                        new Object[] {"testFeature2", gf.createPoint(new Coordinate(10, 10, 60))},
                        null);
        SimpleFeature f3 =
                SimpleFeatureBuilder.build(
                        type,
                        new Object[] {"testFeature2", gf.createPoint(new Coordinate(1, 10, 6))},
                        null);
        featureCollection.add(f1);
        featureCollection.add(f2);

        // get the bounds with two features, remove and add another feature
        ReferencedEnvelope origBounds = featureCollection.getBounds();
        featureCollection.remove(f2);
        featureCollection.add(f3);
        ReferencedEnvelope postRemoveBounds = featureCollection.getBounds();
        assertNotEquals(origBounds, postRemoveBounds);
        assertNotEquals(postRemoveBounds, f3.getBounds());
        assertTrue(postRemoveBounds.contains(f1.getBounds()));
        assertTrue(postRemoveBounds.contains(f3.getBounds()));
    }

