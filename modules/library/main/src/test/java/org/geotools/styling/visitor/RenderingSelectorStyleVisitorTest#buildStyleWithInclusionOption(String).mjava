    private Style buildStyleWithInclusionOption(String inclusionValue) {
        Style style = sb.createStyle("FTSName", sf.createPolygonSymbolizer());
        if (inclusionValue != null)
            style.featureTypeStyles()
                    .get(0)
                    .getOptions()
                    .put(FeatureTypeStyle.VENDOR_OPTION_INCLUSION, inclusionValue);

        Rule rule = sf.createRule();
        Symbolizer symb1 = sf.createLineSymbolizer(sf.getDefaultStroke(), "geometry");
        rule.symbolizers().add(symb1);
        if (inclusionValue != null)
            rule.getOptions().put(FeatureTypeStyle.VENDOR_OPTION_INCLUSION, inclusionValue);

        Rule rule2 = sf.createRule();
        Symbolizer symb2 =
                sf.createPolygonSymbolizer(sf.getDefaultStroke(), sf.getDefaultFill(), "shape");
        rule2.symbolizers().add(symb2);
        Symbolizer symb3 =
                sf.createPolygonSymbolizer(sf.getDefaultStroke(), sf.getDefaultFill(), "extension");
        if (inclusionValue != null)
            symb3.getOptions().put(FeatureTypeStyle.VENDOR_OPTION_INCLUSION, inclusionValue);
        rule2.symbolizers().add(symb3);

        FeatureTypeStyle fts = sf.createFeatureTypeStyle(rule);
        fts.rules().addAll(Arrays.asList(rule, rule2));
        style.featureTypeStyles().add(fts);

        return style;
    }

