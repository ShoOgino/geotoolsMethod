    /** Takes a List<Position> ... */
    @Override
    public LineString createLineString(List<Position> points)
            throws MismatchedReferenceSystemException, MismatchedDimensionException {
        return new LineString() {
            PointArray points;

            @Override
            public List<LineSegment> asLineSegments() {
                return null;
            }

            @Override
            public PointArray getControlPoints() {
                return null;
            }

            @Override
            public CurveBoundary getBoundary() {
                return null;
            }

            @Override
            public Curve getCurve() {
                return null;
            }

            @Override
            public CurveInterpolation getInterpolation() {
                return null;
            }

            @Override
            public int getNumDerivativesAtEnd() {
                return 0;
            }

            @Override
            public int getNumDerivativesAtStart() {
                return 0;
            }

            @Override
            public int getNumDerivativesInterior() {
                return 0;
            }

            @Override
            public PointArray getSamplePoints() {
                return null;
            }

            @Override
            public CurveSegment reverse() {
                return null;
            }

            @Override
            public LineString asLineString(double maxSpacing, double maxOffset) {
                return this;
            }

            @Override
            public DirectPosition forConstructiveParam(double cp) {
                return null;
            }

            @Override
            public DirectPosition forParam(double s) {
                return null;
            }

            @Override
            public double getEndConstructiveParam() {
                return 0;
            }

            @Override
            public double getEndParam() {
                return 0;
            }

            @Override
            public DirectPosition getEndPoint() {
                return points.getDirectPosition(points.size() - 1, null);
            }

            @Override
            public ParamForPoint getParamForPoint(DirectPosition p) {
                return null;
            }

            @Override
            public double getStartConstructiveParam() {
                return 0;
            }

            @Override
            public double getStartParam() {
                return 0;
            }

            @Override
            public DirectPosition getStartPoint() {
                return points.getDirectPosition(0, null);
            }

            @Override
            public double[] getTangent(double s) {
                return null;
            }

            @Override
            public double length(Position point1, Position point2) {
                return 0;
            }

            @Override
            public double length(double cparam1, double cparam2) {
                return 0;
            }
        };
    }

