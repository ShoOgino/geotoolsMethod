    /**
     * Finds the node associated with the provided name.
     *
     * @param schema
     * @param name
     * @return AttributeDescriptor assoicated with provided name, or null if not found.
     */
    public static AttributeDescriptor node(Collection schema, Name name) {
        for (Iterator itr = schema.iterator(); itr.hasNext(); ) {

            AttributeDescriptor node = (AttributeDescriptor) itr.next();

            Name nodeName = node.getName();
            if (nodeName == null) {
                // this may be due to old api usage style, where
                // only types had names
                LOGGER.warning("node has no name set, try to fix! " + node);
                Name name2 = node.getType().getName();
                if (null == name.getNamespaceURI()) {
                    if (name.getLocalPart().equals(name2.getLocalPart())) {
                        return node;
                    }
                } else if (name2.getNamespaceURI().equals(name.getNamespaceURI())
                        && name2.getLocalPart().equals(name.getLocalPart())) {
                    return node;
                }
            } else {
                // this is the correct usage
                if (name.getNamespaceURI() != null) {
                    if (name.getLocalPart().equals(nodeName.getLocalPart())) {
                        return node;
                    }
                } else if (name.equals(nodeName)) {
                    return node;
                }
            }
        }
        return null;
    }

