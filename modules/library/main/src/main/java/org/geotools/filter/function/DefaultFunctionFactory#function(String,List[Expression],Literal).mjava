    public Function function(String name, List<Expression> parameters, Literal fallback) {
        
        // cache lookup
        String key = functionName(name);
        FunctionDescriptor fd = functionCache().get(key);
        if (fd == null) {
            fd = functionCache().get(name);
            if( fd == null ){
                //no such function
                return null;
            }
            // LOGGER.warning("Name conflict between '"+name+"' and '"+key+"'");
        }
        
        try {
            Function newFunction = fd.newFunction(parameters, fallback);
            return newFunction;
        }
        catch(Exception e){
            LOGGER.log( Level.FINER, "Unable to create function " + name + "Function", e);
            //just continue on to return null
        }        
        return null;
    }

