    /**
     * Calculate average (using FeatureCalc) - only one parameter is used.
     *
     * @param collection collection to calculate the average
     * @param expression Single Expression argument
     * @return An object containing the average value of the attributes
     * @throws IllegalFilterException
     * @throws IOException
     */
    static CalcResult calculateAverage(
            FeatureCollection<? extends FeatureType, ? extends Feature> collection,
            Expression expression)
            throws IllegalFilterException, IOException {
        AverageVisitor averageVisitor = new AverageVisitor(expression);
        collection.accepts(averageVisitor, null);

        return averageVisitor.getResult();
    }

