        /**
         * We apply a copy of the aggregation visitor to each feature collection.
         *
         * @return the result of applying the aggregation visitor to eac feature collection
         */
        Map<List<Object>, CalcResult> visit() {
            Map<List<Object>, CalcResult> results = new HashMap<>();
            for (Map.Entry<List<Object>, DefaultFeatureCollection> entry : groupByIndexes.entrySet()) {
                // creating a new aggregation visitor for the current feature collection
                FeatureCalc visitor = aggregate.create(expression);
                try {
                    // visiting the feature collection with the aggregation visitor
                    entry.getValue().accepts(visitor, progressListener);
                } catch (Exception exception) {
                    throw new RuntimeException("Error visiting features collections.", exception);
                }
                // we add the aggregation visitor to the results
                results.put(entry.getKey(), visitor.getResult());
            }
            return results;
        }

