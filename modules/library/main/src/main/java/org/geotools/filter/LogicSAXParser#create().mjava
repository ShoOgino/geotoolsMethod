    /**
     * Creates the the logic filter if in a complete state.
     *
     * @return The created logic filter.
     *
     * @throws IllegalFilterException if the filter is not complete.
     */
    public Filter create() throws IllegalFilterException {
        LogicFilter filter = null;

        LOGGER.finer("creating a logic filter");

        if (isComplete()) {
            LOGGER.finer("filter is complete, with type: " + this.logicType);

            if (logicType == AbstractFilter.LOGIC_NOT) {
                filter = ff.createLogicFilter((Filter) subFilters.get(
                            0), this.logicType);
            } else {
                filter = ff.createLogicFilter(this.logicType);

                Iterator iterator = subFilters.iterator();

                while (iterator.hasNext()) {
                    filter.addFilter((org.opengis.filter.Filter) iterator.next());
                }
            }

            //reset the variables so it works right if called again.
            subFilters = new ArrayList();
            this.logicType = -1;
            isComplete = false;

            return filter;
        } else {
            throw new IllegalFilterException(
                "Attempted to generate incomplete logic filter.");
        }
    }

