    /**
     * Set the names of the properties that this Query should retrieve as part of the returned
     * {@linkplain org.geotools.feature.FeatureCollection}. As well as an array of names, the
     * following constants can be used:
     *
     * <ul>
     *   <li>{@linkplain #ALL_NAMES} to retrieve all properties.
     *   <li>{@linkplain #NO_NAMES} to indicate no properties are required, just feature IDs.
     * </ul>
     *
     * The available properties can be determined with {@linkplain FeatureSource#getSchema()}. If
     * properties that are not part of the source's schema are requested an exception will be
     * thrown.
     *
     * @param propNames the names of the properties to retrieve or one of {@linkplain #ALL_NAMES} or
     *     {@linkplain #NO_NAMES}.
     */
    public void setPropertyNames(String[] propNames) {
        if (propNames == null) {
            properties = ALL_PROPERTIES;
            return;
        }

        final FilterFactory ff = CommonFactoryFinder.getFilterFactory(null);
        properties = new ArrayList<PropertyName>(propNames.length);
        for (int i = 0; i < propNames.length; i++) {
            String xpath = propNames[i];
            if (xpath != null) {
                properties.add(ff.property(xpath));
            }
        }
    }

