	/**
	 * Tests if the interior of the <code>Shape</code> intersects the interior
	 * of a specified rectangular area. The rectangular area is considered to
	 * intersect the <code>Shape</code> if any point is contained in both the
	 * interior of the <code>Shape</code> and the specified rectangular area.
	 * 
	 * <p>
	 * This method might conservatively return <code>true</code> when:
	 * 
	 * <ul>
	 * <li>there is a high probability that the rectangular area and the
	 * <code>Shape</code> intersect, but</li>
	 * <li>the calculations to accurately determine this intersection are
	 * prohibitively expensive.</li>
	 * </ul>
	 * 
	 * This means that this method might return <code>true</code> even though
	 * the rectangular area does not intersect the <code>Shape</code>. The
	 * {@link java.awt.geom.Area Area}class can be used to perform more
	 * accurate computations of geometric intersection for any
	 * <code>Shape</code> object if a more precise answer is required.
	 * </p>
	 * 
	 * @param x
	 *            the coordinates of the specified rectangular area, x value
	 * @param y
	 *            the coordinates of the specified rectangular area, y value
	 * @param w
	 *            the width of the specified rectangular area
	 * @param h
	 *            the height of the specified rectangular area
	 * 
	 * @return <code>true</code> if the interior of the <code>Shape</code>
	 *         and the interior of the rectangular area intersect, or are both
	 *         highly likely to intersect and intersection calculations would be
	 *         too expensive to perform; <code>false</code> otherwise.
	 * 
	 * @see java.awt.geom.Area
	 */
	public boolean intersects(double x, double y, double w, double h) {
		Geometry rect = createRectangle(x, y, w, h);

		return geometry.intersects(rect);
	}

