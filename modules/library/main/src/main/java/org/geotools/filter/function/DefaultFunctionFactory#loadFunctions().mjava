    private Map<Name, FunctionDescriptor> loadFunctions() {
        Map<Name, FunctionDescriptor> functionMap = new HashMap<Name, FunctionDescriptor>();

        Set<Function> functions = CommonFactoryFinder.getFunctions(null);
        for (Iterator<Function> i = functions.iterator(); i.hasNext(); ) {
            Function function = (Function) i.next();
            FunctionName functionName = getFunctionName(function);
            Name name = functionName.getFunctionName();

            FunctionDescriptor fd =
                    new FunctionDescriptor(functionName, (Class<Function>) function.getClass());

            // needed to insert justin's name hack here to ensure consistent lookup
            Name key = functionName(name);
            if (functionMap.containsKey(key)) {
                // conflicted name - probably a cut and paste error when creating functionName
                FunctionDescriptor conflict = functionMap.get(key);
                LOGGER.warning(
                        "Function "
                                + key
                                + " clash between "
                                + conflict.clazz.getSimpleName()
                                + " and "
                                + function.getClass().getSimpleName());
            }
            functionMap.put(key, fd);
        }
        return functionMap;
    }

