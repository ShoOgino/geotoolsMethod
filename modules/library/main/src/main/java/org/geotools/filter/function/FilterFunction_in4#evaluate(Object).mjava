    public Object evaluate(Object feature) {
        Object arg0;
        Object arg1;
        Object arg2;
        Object arg3;
        Object arg4;

        try { // attempt to get value and perform conversion
            arg0 = getExpression(0).evaluate(feature);
        } catch (Exception e) // probably a type error
        {
            throw new IllegalArgumentException(
                    "Filter Function problem for function in4 argument #0 - expected type Object");
        }

        try { // attempt to get value and perform conversion
            arg1 = getExpression(1).evaluate(feature);
        } catch (Exception e) // probably a type error
        {
            throw new IllegalArgumentException(
                    "Filter Function problem for function in4 argument #1 - expected type Object");
        }

        try { // attempt to get value and perform conversion
            arg2 = getExpression(2).evaluate(feature);
        } catch (Exception e) // probably a type error
        {
            throw new IllegalArgumentException(
                    "Filter Function problem for function in4 argument #2 - expected type Object");
        }

        try { // attempt to get value and perform conversion
            arg3 = getExpression(3).evaluate(feature);
        } catch (Exception e) // probably a type error
        {
            throw new IllegalArgumentException(
                    "Filter Function problem for function in4 argument #3 - expected type Object");
        }

        try { // attempt to get value and perform conversion
            arg4 = getExpression(4).evaluate(feature);
        } catch (Exception e) // probably a type error
        {
            throw new IllegalArgumentException(
                    "Filter Function problem for function in4 argument #4 - expected type Object");
        }

        return Boolean.valueOf(StaticGeometry.in4(arg0, arg1, arg2, arg3, arg4));
    }

