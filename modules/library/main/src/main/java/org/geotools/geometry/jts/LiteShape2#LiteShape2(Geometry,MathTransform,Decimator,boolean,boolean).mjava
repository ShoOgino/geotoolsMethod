	/**
	 * Creates a new LiteShape object.
	 * 
	 * @param geom -
	 *            the wrapped geometry
	 * @param mathTransform -
	 *            the transformation applied to the geometry in order to get to
	 *            the shape points
	 * @param decimator -
	 *            
	 * @param generalize -
	 *            set to true if the geometry need to be generalized during
	 *            rendering
	 *            
	 * @param clone - if clone is false the original geometry may be modified directly, if true it will be
	 *                cloned to make sure the original remains untouched
	 * 
	 * @throws TransformException
	 * @throws FactoryException
	 */
	public LiteShape2(Geometry geom, MathTransform mathTransform,
			Decimator decimator, boolean generalize, boolean clone) throws TransformException,
			FactoryException {
		if (geom != null) {
		    if(!clone && geom.getFactory().getCoordinateSequenceFactory() instanceof LiteCoordinateSequenceFactory)
		        this.geometry = geom;
		    else
		        this.geometry = LiteCoordinateSequence.cloneGeometry(geom);
		}

		this.mathTransform = mathTransform;
		if (decimator != null) {
            this.geometry = decimator
                    .decimateTransformGeneralize(this.geometry, this.mathTransform);
			this.geometry.geometryChanged();
		} else {
		        // if we have a transform a decimation span can be detected, so try to decimate anyways
			if (mathTransform != null && !mathTransform.isIdentity() && generalize && geometry != null) {
				new Decimator(mathTransform.inverse()).decimate(this.geometry);
			    this.geometry.geometryChanged();
			}
			if (geometry != null) {
				transformGeometry(geometry);
				this.geometry.geometryChanged();
			}
		}
		this.generalize = false;
	}

