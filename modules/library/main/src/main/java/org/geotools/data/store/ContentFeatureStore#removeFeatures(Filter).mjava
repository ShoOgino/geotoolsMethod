    /**
     * Removes the features from the store which match the specified filter.
     *
     * <p>This method operates by obtaining an updating feature writer based on the specified
     * <tt>filter</tt> and removing every feature from it.
     *
     * <p>The <tt>filter</tt> must not be <code>null</code>, in this case this method will throw an
     * {@link IllegalArgumentException}.
     */
    public void removeFeatures(Filter filter) throws IOException {
        if (filter == null) {
            String msg = "Must specify a filter, must not be null.";
            throw new IllegalArgumentException(msg);
        }
        filter = resolvePropertyNames(filter);

        // grab a feature writer
        try (FeatureWriter<SimpleFeatureType, SimpleFeature> writer =
                getWriter(filter, WRITER_UPDATE)) {
            // remove everything
            while (writer.hasNext()) {
                writer.next();
                writer.remove();
            }
        }
    }

