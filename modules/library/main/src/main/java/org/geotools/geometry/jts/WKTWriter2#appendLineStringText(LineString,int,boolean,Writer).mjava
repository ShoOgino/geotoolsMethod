    /**
     * Converts a <code>LineString</code> to &lt;LineString Text&gt; format, then appends it to the
     * writer.
     *
     * @param lineString the <code>LineString</code> to process
     * @param writer the output writer to append to
     */
    private void appendLineStringText(LineString lineString, int level, boolean doIndent,
            Writer writer) throws IOException {
        if (lineString.isEmpty()) {
            writer.write("EMPTY");
        } else {
            if (doIndent)
                indent(level, writer);
            writer.write("(");
            for (int i = 0; i < lineString.getNumPoints(); i++) {
                if (i > 0) {
                    writer.write(", ");
                    if (coordsPerLine > 0 && i % coordsPerLine == 0) {
                        indent(level + 1, writer);
                    }
                }
                appendCoordinate(lineString.getCoordinateN(i), writer);
            }
            writer.write(")");
        }
    }

