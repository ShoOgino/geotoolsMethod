    /**
     * Parse integer value from text. Integer values are parsed with optional
     * leading sign flag, followed by any number of digits.
     *
     * @param text text to be parsed
     *
     * @return converted integer value
     *
     * @throws IllegalArgumentException on parse error
     */
    public static int parseInt(String text) throws IllegalArgumentException {
        // make sure there's text to be processed
        text = text.trim();

        int offset = 0;
        int limit = text.length();

        if (limit == 0) {
            throw new IllegalArgumentException("Empty number value");
        }

        // check leading sign present in text
        boolean negate = false;
        char chr = text.charAt(0);

        if (chr == '-') {
            if (limit > 9) {
                // special case to make sure maximum negative value handled
                try {
                    return Integer.parseInt(text);
                } catch (NumberFormatException ex) {
                    throw new IllegalArgumentException(ex.getMessage());
                }
            } else {
                negate = true;
                offset++;
            }
        } else if (chr == '+') {
            offset++;
        }

        if (offset >= limit) {
            throw new IllegalArgumentException("Invalid number format");
        }

        // handle actual value conversion
        int value = parseDigits(text, offset, limit - offset);

        if (negate) {
            return -value;
        } else {
            return value;
        }
    }

