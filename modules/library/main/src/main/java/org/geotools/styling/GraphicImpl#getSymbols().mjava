    /**
     * Provides a list of all the symbols which can be used to represent this
     * graphic
     * <p>
     * A symbol is an ExternalGraphic, Mark or any other object which
     * implements the Symbol interface. These are returned in the order they
     * were set.
     * <p>
     * This class operates as a "view" on getMarks() and getExternalGraphics()
     * with the added magic that if nothing has been set ever a single default
     * MarkImpl will be provided. This default will not effect the internal
     * state it is only there as a sensible default for rendering.
     *
     * @return An array of symbols to use when displaying this Graphic. By
     *         default, a "square" with 50% gray fill and black outline with a
     *         size of 6 pixels (unless a size is specified) is provided.
     */
    @Deprecated
    public Symbol[] getSymbols() {
        ArrayList<Symbol> symbols = new ArrayList<Symbol>();
        for( GraphicalSymbol graphic : graphics ){
            if( graphic instanceof Symbol ){
                symbols.add( (Symbol) graphic );
            }
        }
        return symbols.toArray(new Symbol[0]);
    }

