    /**
     * List of allowed attributes.
     *
     * <p>Creates a list of FeatureTypeInfo's attribute names based on the attributes requested by
     * <code>query</code> and making sure they not contain any non exposed attribute.
     *
     * <p>Exposed attributes are those configured in the "attributes" element of the
     * FeatureTypeInfo's configuration
     *
     * @param query User's origional query
     * @return List of allowed attribute types
     */
    private String[] extractAllowedAttributes(Query query) {
        String[] propNames = null;

        if (query.retrieveAllProperties()) {
            propNames = new String[schema.getAttributeCount()];

            for (int i = 0; i < schema.getAttributeCount(); i++) {
                propNames[i] = schema.getDescriptor(i).getLocalName();
            }
        } else {
            String[] queriedAtts = query.getPropertyNames();
            int queriedAttCount = queriedAtts.length;
            List<String> allowedAtts = new LinkedList<>();

            for (int i = 0; i < queriedAttCount; i++) {
                if (schema.getDescriptor(queriedAtts[i]) != null) {
                    allowedAtts.add(queriedAtts[i]);
                } else {
                    LOGGER.info(
                            "queried a not allowed property: "
                                    + queriedAtts[i]
                                    + ". Ommitting it from query");
                }
            }

            propNames = allowedAtts.toArray(new String[allowedAtts.size()]);
        }

        return propNames;
    }

