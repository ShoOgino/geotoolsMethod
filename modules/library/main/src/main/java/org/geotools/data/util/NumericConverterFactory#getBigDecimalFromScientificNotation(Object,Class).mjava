    /**
     * @return a BigDecimal in case the source is a String in scientific notation and the target is
     *     an integral number, null otherwise
     */
    static BigDecimal getBigDecimalFromScientificNotation(Object source, Class target) {
        if (source instanceof String
                && (Long.class.equals(target)
                        || Integer.class.equals(target)
                        || Short.class.equals(target)
                        || Byte.class.equals(target)
                        || BigInteger.class.equals(target))) {
            try {
                return ((String) source).toUpperCase().contains("E")
                        ? new BigDecimal((String) source)
                        : null;
            } catch (NumberFormatException ex) {
                if (LOGGER.isLoggable(Level.FINEST)) {
                    LOGGER.finest("NumberFormatException for source=" + source);
                }
            }
        }
        return null;
    }

