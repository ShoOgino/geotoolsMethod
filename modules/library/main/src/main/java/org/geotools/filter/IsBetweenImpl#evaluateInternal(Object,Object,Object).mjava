    public boolean evaluateInternal(Object value, Object lower, Object upper) {
        // first try to evaluate the bounds in terms of the middle
        Object o = value;
        if (o == null) {
            return false;
        }

        Object l = Converters.convert(lower, o.getClass());
        Object u = Converters.convert(upper, o.getClass());
        if (l == null || u == null) {
            // that didn't work try converting all to same type as lower
            l = lower;
            o = Converters.convert(value, l.getClass());
            u = Converters.convert(upper, l.getClass());

            if (o == null || u == null) {
                // ok last try, try evaluating all in terms of upper
                u = upper;
                o = Converters.convert(value, u.getClass());
                l = Converters.convert(lower, u.getClass());

                if (o == null || l == null) {
                    // no dice
                    return false;
                }
            }
        }

        Comparable lc = comparable(l);
        Comparable uc = comparable(u);

        return lc.compareTo(o) <= 0 && uc.compareTo(o) >= 0;
    }

