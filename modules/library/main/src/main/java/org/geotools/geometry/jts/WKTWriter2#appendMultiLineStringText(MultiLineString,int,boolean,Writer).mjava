    /**
     * Converts a <code>MultiLineString</code> to &lt;MultiLineString Text&gt; format, then appends
     * it to the writer.
     *
     * @param multiLineString the <code>MultiLineString</code> to process
     * @param writer the output writer to append to
     */
    private void appendMultiLineStringText(
            MultiLineString multiLineString, int level, boolean indentFirst, Writer writer)
            throws IOException {
        if (multiLineString.isEmpty()) {
            writer.write("EMPTY");
        } else {
            int level2 = level;
            boolean doIndent = indentFirst;
            writer.write("(");
            for (int i = 0; i < multiLineString.getNumGeometries(); i++) {
                if (i > 0) {
                    writer.write(", ");
                    level2 = level + 1;
                    doIndent = true;
                }
                appendLineStringText(
                        (LineString) multiLineString.getGeometryN(i), level2, doIndent, writer);
            }
            writer.write(")");
        }
    }

