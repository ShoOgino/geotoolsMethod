    /**
     * Sets whether a gml:boundedBy element should automatically be generated and included. The
     * element will not be updateable, and is simply derived from the geometries present in the
     * feature.
     *
     * <p>Note that the <tt>setGmlPrefixing()</tt> interacts with this occasionally, since it will
     * hack in a gml prefix to a boundedBy attribute included in the featureType. If gml prefixing
     * is on, and featureBounding is on, then the bounds from the attribute will be used. If gml
     * prefixing is off, then that boundedBy attribute will presumably be in its own namespace, and
     * so the automatic gml boundedBy will not conflict, so both will be printed, with the automatic
     * one deriving its bounds from the boundedBy attribute and any other geometries in the feature
     *
     * @param featureBounding <tt>true</tt> if the bounds of the feature should be automatically
     *     calculated and included as a gml:boundedBy in the gml output. Note this puts a good bit
     *     of bandwidth overhead on the output. Default is <tt>false</tt>
     */
    public void setFeatureBounding(boolean featureBounding) {
        this.featureBounding = featureBounding;
    }

