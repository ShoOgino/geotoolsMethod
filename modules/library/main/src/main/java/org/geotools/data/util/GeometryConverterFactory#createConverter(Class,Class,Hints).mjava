    @Override
    public Converter createConverter(Class source, Class target, Hints hints) {

        if (Geometry.class.isAssignableFrom(target)) {

            // String to Geometry
            if (String.class.equals(source)) {
                return new Converter() {
                    @Override
                    public <T> T convert(Object source, Class<T> target) throws Exception {
                        return target.cast(new WKTReader2().read((String) source));
                    }
                };
            }

            // Envelope to Geometry
            if (Envelope.class.isAssignableFrom(source)) {
                return new Converter() {
                    @Override
                    public <T> T convert(Object source, Class<T> target) throws Exception {
                        Envelope e = (Envelope) source;
                        GeometryFactory factory = new GeometryFactory();
                        return target.cast(
                                factory.createPolygon(
                                        factory.createLinearRing(
                                                new Coordinate[] {
                                                    new Coordinate(e.getMinX(), e.getMinY()),
                                                    new Coordinate(e.getMaxX(), e.getMinY()),
                                                    new Coordinate(e.getMaxX(), e.getMaxY()),
                                                    new Coordinate(e.getMinX(), e.getMaxY()),
                                                    new Coordinate(e.getMinX(), e.getMinY())
                                                }),
                                        null));
                    }
                };
            }
        }

        if (Geometry.class.isAssignableFrom(source)) {
            // Geometry to envelope
            if (Envelope.class.equals(target)) {
                return new Converter() {
                    @Override
                    public <T> T convert(Object source, Class<T> target) throws Exception {
                        Geometry geometry = (Geometry) source;
                        Envelope envelope = geometry.getEnvelopeInternal();
                        if (geometry.getUserData() instanceof CoordinateReferenceSystem) {
                            envelope =
                                    new ReferencedEnvelope(
                                            envelope,
                                            (CoordinateReferenceSystem) geometry.getUserData());
                        }
                        return target.cast(envelope);
                    }
                };
            }

            // Geometry to String
            if (String.class.equals(target)) {
                return new Converter() {
                    @Override
                    public <T> T convert(Object source, Class<T> target) throws Exception {
                        Geometry geometry = (Geometry) source;
                        return target.cast(geometry.toText());
                    }
                };
            }
        }

        return null;
    }

