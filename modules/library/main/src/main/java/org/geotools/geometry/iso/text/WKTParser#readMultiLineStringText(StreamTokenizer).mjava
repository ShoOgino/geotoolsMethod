    /**
     * Creates a {@code MultiPrimitive} out of a MULTILINESTRING specifier
     *
     * @param tokenizer tokenizer on top of a stream of text in Well-known Text format.
     * @return a <code>MultiPrimitive</code> specified by the next tokens in the stream
     * @throws IOException if an I/O error occurs
     */
    @SuppressWarnings("unchecked") // can't seem to please the API
    private MultiPrimitive readMultiLineStringText(StreamTokenizer tokenizer)
            throws IOException, ParseException {
        String nextToken = getNextEmptyOrOpener(tokenizer);
        if (nextToken.equals(EMPTY)) {
            return null;
        }
        MultiPrimitive multi = geometryFactory.createMultiPrimitive();
        Curve curve = readLineStringText(tokenizer);
        // multi.getElements().add(curve);
        Set elements = multi.getElements();
        elements.add(curve);
        nextToken = getNextCloserOrComma(tokenizer);
        while (nextToken.equals(COMMA)) {
            curve = readLineStringText(tokenizer);
            // multi.getElements().add(curve);
            elements.add(curve);
            nextToken = getNextCloserOrComma(tokenizer);
        }
        return multi;
    }

