    /**
     * Two filters are dual if the are the negation of each other
     * (we could also have simplifications for negated comparsions, 
     * e.g., a > b and a <= b, but I plan to have dedicated range handling
     * support later (e.g., recognize a < 10 or (a >= 10 and a < 20) or a >= 20 is
     * really Filter.INCLUDE, or turn "a between 10 and 20 or a between 15 and 30" 
     * to "a between 10 and 30")
     * 
     * @param f1
     * @param f2
     * @return
     */
    private boolean dualFilters(Filter f1, Filter f2) {
        if(f1 instanceof Not) {
            Not not = (Not) f1;
            return f2.equals(not.getFilter());
        } else if(f2 instanceof Not) {
            Not not = (Not) f2;
            return f1.equals(not.getFilter());
        }
        
        return false;
    }

