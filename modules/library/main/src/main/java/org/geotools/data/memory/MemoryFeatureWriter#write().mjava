    @Override
    public void write() throws IOException {
        if (iterator == null) {
            throw new IOException("FeatureWriter has been closed");
        }

        if (current == null) {
            throw new IOException("No feature available to write");
        }
        // preserve FeatureIDs during insert feature
        if (Boolean.TRUE.equals(current.getUserData().get(Hints.USE_PROVIDED_FID))) {
            if (current.getUserData().containsKey(Hints.PROVIDED_FID)) {
                String fid = (String) current.getUserData().get(Hints.PROVIDED_FID);
                FeatureId id = new FeatureIdImpl(fid);
                current =
                        new SimpleFeatureImpl(
                                current.getAttributes(), current.getFeatureType(), id);
            }
        }

        if (live != null) {
            if (live.equals(current)) {
                // no modifications made to current
                //
                live = null;
                current = null;
            } else {
                // accept modifications
                //
                try {
                    live.setAttributes(current.getAttributes());
                } catch (Exception e) {
                    throw new DataSourceException(
                            "Unable to accept modifications to "
                                    + live.getID()
                                    + " on "
                                    + typeName);
                }

                ReferencedEnvelope bounds = new ReferencedEnvelope();
                bounds.expandToInclude(new ReferencedEnvelope(live.getBounds()));
                bounds.expandToInclude(new ReferencedEnvelope(current.getBounds()));
                live = null;
                current = null;
            }
        } else {
            // add new content
            MemoryEntry entry = state.getEntry();
            entry.addFeature(current);
            current = null;
        }
    }

