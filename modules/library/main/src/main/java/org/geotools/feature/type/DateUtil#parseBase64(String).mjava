    /**
     * Parse base64 data from text. This converts the base64 data into a byte
     * array of the appopriate length. In keeping with the recommendations,
     *
     * @param text text to be parsed (may include extra characters)
     *
     * @return byte array of data
     *
     * @throws IllegalArgumentException if invalid character in base64
     *         representation
     */
    public static byte[] parseBase64(String text)
        throws IllegalArgumentException {
        // convert raw text to base64 character array
        char[] chrs = new char[text.length()];
        int length = 0;

        for (int i = 0; i < text.length(); i++) {
            char chr = text.charAt(i);

            if ((chr < 128) && (s_base64Values[chr] >= 0)) {
                chrs[length++] = chr;
            }
        }

        // check the text length
        if ((length % 4) != 0) {
            throw new IllegalArgumentException(
                "Text length for base64 must be a multiple of 4");
        } else if (length == 0) {
            return new byte[0];
        }

        // find corresponding byte count for data
        int blength = length / 4 * 3;

        if (chrs[length - 1] == PAD_CHAR) {
            blength--;

            if (chrs[length - 2] == PAD_CHAR) {
                blength--;
            }
        }

        // convert text to actual bytes of data
        byte[] byts = new byte[blength];
        int fill = 0;

        for (int i = 0; i < length; i += 4) {
            fill += decodeChunk(i, chrs, fill, byts);
        }

        if (fill != blength) {
            throw new IllegalArgumentException(
                "Embedded padding characters in byte64 text");
        }

        return byts;
    }

