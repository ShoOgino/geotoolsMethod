    /**
     * Serialize timestamp to general dateTime text. Timestamp values are represented in the same
     * way as regular dates, but allow more precision in the fractional second value (down to
     * nanoseconds).
     *
     * @param stamp timestamp to be converted
     * @return converted dateTime text
     * @throws IllegalArgumentException on conversion error
     */
    public static String serializeTimestamp(Timestamp stamp) throws IllegalArgumentException {
        // check for nanosecond value to be included
        int nano = stamp.getNanos();

        if (nano > 0) {
            // convert the number of nanoseconds to text
            String value = serializeInt(nano);

            // pad with leading zeros if less than 9 digits
            StringBuffer digits = new StringBuffer(9);

            if (value.length() < 9) {
                int lead = 9 - value.length();

                for (int i = 0; i < lead; i++) {
                    digits.append('0');
                }
            }

            digits.append(value);

            // strip trailing zeros from value
            int last = 9;

            while (--last > 0) {
                if (digits.charAt(last) != '0') {
                    break;
                }
            }

            digits.setLength(last);

            // finish by appending to time with decimal separator
            return serializeDateTime(stamp.getTime(), false) + '.' + digits + 'Z';
        } else {
            return serializeDateTime(stamp.getTime(), true);
        }
    }

