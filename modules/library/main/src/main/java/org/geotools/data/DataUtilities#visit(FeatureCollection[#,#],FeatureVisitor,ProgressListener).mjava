    /**
     * Manually visit each feature using {@link FeatureCollection#features()}.
     *
     * <p>This method is intended to assist FeatureCollection implementors, and used to verify
     * test-case results. Client code should always call {@link
     * FeatureCollection#accepts(FeatureVisitor, ProgressListener)}
     */
    public static void visit(
            FeatureCollection<?, ?> collection, FeatureVisitor visitor, ProgressListener progress)
            throws IOException {

        float size = progress != null ? collection.size() : 0;
        if (progress == null) {
            progress = new NullProgressListener();
        }
        float position = 0;
        progress.started();
        try (FeatureIterator<?> iterator = collection.features()) {
            while (!progress.isCanceled() && iterator.hasNext()) {
                Feature feature = null;
                try {
                    feature = iterator.next();
                    visitor.visit(feature);
                    if (size > 0) {
                        progress.progress(position++ / size);
                    }
                } catch (Exception erp) {
                    progress.exceptionOccurred(erp);
                    String fid = feature == null ? "feature" : feature.getIdentifier().toString();
                    throw new IOException(
                            "Problem with " + collection.getID() + " visiting " + fid + ":" + erp,
                            erp);
                }
            }
        } finally {
            progress.complete();
        }
    }

