    /**
     * Converts an envelope to a JTS polygon using the given JTS geometry factory.
     *
     * <p>The resulting polygon contains an outer ring with vertices:
     * (x1,y1),(x2,y1),(x2,y2),(x1,y2),(x1,y1)
     *
     * @param envelope The original envelope.
     * @return The envelope as a polygon.
     * @since 2.8
     * @throws IllegalArgumentException if either {@code env} or {@code factory} is {@code null}
     */
    public static Polygon toGeometry(final Envelope envelope, GeometryFactory factory) {
        ensureNonNull("env", envelope);
        if (factory == null) {
            factory = new GeometryFactory();
        }
        Polygon polygon =
                factory.createPolygon(
                        factory.createLinearRing(
                                new Coordinate[] {
                                    new Coordinate(envelope.getMinX(), envelope.getMinY()),
                                    new Coordinate(envelope.getMaxX(), envelope.getMinY()),
                                    new Coordinate(envelope.getMaxX(), envelope.getMaxY()),
                                    new Coordinate(envelope.getMinX(), envelope.getMaxY()),
                                    new Coordinate(envelope.getMinX(), envelope.getMinY())
                                }),
                        null);
        if (envelope instanceof ReferencedEnvelope) {
            ReferencedEnvelope refEnv = (ReferencedEnvelope) envelope;
            polygon.setUserData(refEnv.getCoordinateReferenceSystem());
        }
        return polygon;
    }

