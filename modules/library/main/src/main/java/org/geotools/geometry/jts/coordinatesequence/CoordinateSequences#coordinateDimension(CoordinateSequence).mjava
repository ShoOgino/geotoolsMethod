   /**
    * Gets the effective dimension of a CoordinateSequence.
    * This is a workaround for the issue that CoordinateArraySequence
    * does not keep an accurate dimension - it always 
    * reports dim=3, even if there is no Z ordinate (ie they are NaN).
    * This method checks for that case and reports dim=2.
    * Only the first coordinate is checked.
    * <p>
    * There is one small hole: if a CoordinateArraySequence is empty,
    * the dimension will be reported as 3.
    * 
    * @param seq a CoordinateSequence
    * @return the effective dimension of the coordinate sequence
    */
    public static int coordinateDimension(CoordinateSequence seq)
    {
        int dim = seq.getDimension();
        if (dim != 3)
            return dim;
    
        // hack to handle issue that CoordinateArraySequence always reports
        // dimension = 3
        // check if a Z value is NaN - if so, assume dim is 2
        if (seq instanceof CoordinateArraySequence) {
            if (seq.size() > 0) {
                if (Double.isNaN(seq.getOrdinate(0, CoordinateSequence.Z)))
                    return 2;
            }
        }
        return 3;
    }

