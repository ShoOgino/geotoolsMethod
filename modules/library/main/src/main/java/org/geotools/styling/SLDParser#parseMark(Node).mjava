    /** Internal parse method - made protected for unit testing */
    protected Mark parseMark(Node root) {
        if (LOGGER.isLoggable(Level.FINEST)) {
            LOGGER.finest("parsing mark");
        }

        Mark mark = factory.createMark();
        mark.setFill(null);
        mark.setStroke(null);

        NodeList children = root.getChildNodes();
        final int length = children.getLength();
        for (int i = 0; i < length; i++) {
            Node child = children.item(i);

            if ((child == null) || (child.getNodeType() != Node.ELEMENT_NODE)) {
                continue;
            }
            String childName = child.getLocalName();
            if (childName == null) {
                childName = child.getNodeName();
            }

            if (childName.equalsIgnoreCase(strokeString)) {
                mark.setStroke(parseStroke(child));
            } else if (childName.equalsIgnoreCase(fillSt)) {
                mark.setFill(parseFill(child));
            } else if (childName.equalsIgnoreCase("WellKnownName")) {
                if (LOGGER.isLoggable(Level.FINEST))
                    LOGGER.finest("setting mark to " + getFirstChildValue(child));
                Expression wellKnownName = parseCssParameter(child);
                if (wellKnownName instanceof Literal) {
                    String expanded = wellKnownName.evaluate(null, String.class);
                    if (expanded != null && expanded.startsWith("file://")) {
                        URL url = onlineResourceLocator.locateResource(expanded);
                        if (url != null) {
                            wellKnownName = ff.literal(url.toExternalForm());
                        } else {
                            LOGGER.log(
                                    Level.WARNING,
                                    "WellKnownName file reference could not be found: " + expanded);
                        }
                    }
                }
                mark.setWellKnownName(wellKnownName);
            }
        }

        return mark;
    }

