    /**
     * Moves the iterator to the next segment of the path forwards along the primary direction of
     * traversal as long as there are more points in that direction.
     */
    public void next() {
        if (currentCoord == coords.size()) {
            if (currentRing < (rings.length - 1)) {
                currentCoord = 0;
                currentRing++;
                coords = rings[currentRing].getCoordinateSequence();
            } else {
                done = true;
            }
        } else {
            if (generalize) {
                if (oldCoord == null) {
                    currentCoord++;
                    oldCoord = coords.getCoordinate(currentCoord);
                } else {
                    double distx = 0;
                    double disty = 0;

                    do {
                        currentCoord++;

                        if (currentCoord < coords.size()) {
                            distx = Math.abs(coords.getX(currentCoord) - oldCoord.x);
                            disty = Math.abs(coords.getY(currentCoord) - oldCoord.y);
                        }
                    } while (((distx * xScale) < maxDistance)
                            && ((disty * yScale) < maxDistance)
                            && (currentCoord < coords.size()));

                    if (currentCoord < coords.size()) {
                        oldCoord = coords.getCoordinate(currentCoord);
                    } else {
                        oldCoord = null;
                    }
                }
            } else {
                currentCoord++;
            }
        }
    }

