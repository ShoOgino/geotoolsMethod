    /**
     * Sets the feature of the source.
     *
     * <p>This method operates by first clearing the contents of the feature store ({@link
     * #removeFeatures(Filter)}), and then obtaining an appending feature writer and writing all
     * features from <tt>reader</tt> to it.
     */
    @Override
    public final void setFeatures(FeatureReader<SimpleFeatureType, SimpleFeature> reader)
            throws IOException {
        // remove features
        removeFeatures(Filter.INCLUDE);

        // grab a feature writer for insert
        try (FeatureWriter<SimpleFeatureType, SimpleFeature> writer =
                getWriter(Filter.INCLUDE, WRITER_ADD)) {
            while (reader.hasNext()) {
                SimpleFeature feature = reader.next();

                // grab next feature and populate it
                // JD: worth a note on how we do this... we take a "pull" approach
                // because the raw schema we are inserting into may not match the
                // schema of the features we are inserting
                SimpleFeature toWrite = writer.next();
                for (int i = 0; i < toWrite.getType().getAttributeCount(); i++) {
                    String name = toWrite.getType().getDescriptor(i).getLocalName();
                    toWrite.setAttribute(name, feature.getAttribute(name));
                }

                // perform the write
                writer.write();
            }
        }
    }

