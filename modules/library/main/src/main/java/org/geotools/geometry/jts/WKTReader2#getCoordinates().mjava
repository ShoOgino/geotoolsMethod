    /**
     * Returns the next array of <code>Coordinate</code>s in the stream.
     * 
     *@return the next array of <code>Coordinate</code>s in the stream, or an empty array if EMPTY
     *         is the next element returned by the stream.
     *@throws IOException
     *             if an I/O error occurs
     *@throws ParseException
     *             if an unexpected token was encountered
     */
    private Coordinate[] getCoordinates() throws IOException, ParseException {
        String nextToken = getNextEmptyOrOpener();
        if (nextToken.equals(EMPTY)) {
            return new Coordinate[] {};
        }
        ArrayList coordinates = new ArrayList();
        coordinates.add(getPreciseCoordinate());
        nextToken = getNextCloserOrComma();
        while (nextToken.equals(COMMA)) {
            coordinates.add(getPreciseCoordinate());
            nextToken = getNextCloserOrComma();
        }
        Coordinate[] array = new Coordinate[coordinates.size()];
        return (Coordinate[]) coordinates.toArray(array);
    }

