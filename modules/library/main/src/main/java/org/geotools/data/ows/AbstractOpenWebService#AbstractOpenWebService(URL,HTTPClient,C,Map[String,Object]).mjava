    public AbstractOpenWebService(
            final URL serverURL,
            final HTTPClient httpClient,
            final C capabilities,
            Map<String, Object> hints)
            throws ServiceException, IOException {
        if (serverURL == null) {
            throw new NullPointerException("serverURL");
        }
        if (httpClient == null) {
            throw new NullPointerException("httpClient");
        }

        this.serverURL = serverURL;
        this.httpClient = httpClient;
        this.hints = hints;

        setupSpecifications();

        if (capabilities == null) {
            this.capabilities = negotiateVersion();
            if (this.capabilities == null) {
                throw new ServiceException(
                        "Version negotiation unable to retrieve or parse Capabilities document.");
            }
        } else {
            this.capabilities = capabilities;
        }

        for (Specification spec : specs) {
            if (spec.getVersion().equals(this.capabilities.getVersion())) {
                specification = spec;
                break;
            }
        }

        if (specification == null) {
            specification = specs[specs.length - 1];
            LOGGER.warning(
                    "Unable to choose a specification based on cached capabilities. "
                            + "Arbitrarily choosing spec '"
                            + specification.getVersion()
                            + "'.");
        }
    }

