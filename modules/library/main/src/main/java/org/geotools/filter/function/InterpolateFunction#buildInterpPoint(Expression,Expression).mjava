    private InterpPoint buildInterpPoint(Expression data, Expression value) {
        if (data instanceof Literal && value instanceof Literal) {
            if (method == Method.COLOR) {
                Color color = value.evaluate(null, Color.class);
                if (color == null) {
                    throw new IllegalArgumentException(
                            "Could not convert value " + value + " to a color");
                }
                return new ConstantColorPoint(data.evaluate(null, Double.class), color);
            } else {
                Double numeric = value.evaluate(null, Double.class);
                if (numeric == null) {
                    throw new IllegalArgumentException(
                            "Could not convert value " + value + " to a number");
                }
                return new ConstantNumericPoint(data.evaluate(null, Double.class), numeric);
            }
        }
        return new DynamicPoint(data, value);
    }

