    public Object evaluate(Object feature) {
        String arg0;
        int arg1;
        int arg2;

        try { // attempt to get value and perform conversion
            arg0 = (String) getExpression(0).evaluate(feature, String.class); // extra
            // protection
            // for
            // strings
        } catch (Exception e) // probably a type error
        {
            throw new IllegalArgumentException(
                    "Filter Function problem for function strSubstring argument #0 - expected type String");
        }

        try { // attempt to get value and perform conversion
            arg1 = getExpression(1).evaluate(feature, Integer.class).intValue();
        } catch (Exception e) // probably a type error
        {
            throw new IllegalArgumentException(
                    "Filter Function problem for function strSubstring argument #1 - expected type int");
        }

        try { // attempt to get value and perform conversion
            arg2 = getExpression(2).evaluate(feature, Integer.class).intValue();
        } catch (Exception e) // probably a type error
        {
            throw new IllegalArgumentException(
                    "Filter Function problem for function strSubstring argument #2 - expected type int");
        }

        return (StaticGeometry.strSubstring(arg0, arg1, arg2));
    }

