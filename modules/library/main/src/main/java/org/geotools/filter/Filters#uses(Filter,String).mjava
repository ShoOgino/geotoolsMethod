    /**
     * True if the filter makes use of propertyName
     *
     * <p>Note this is a simple test and is faster than calling <code>
     * attributeNames( filter ).contains( name )</code>
     *
     * @param propertyName - name of the property to look for
     */
    static boolean uses(Filter filter, final String propertyName) {
        if (filter == null) {
            return false;
        }
        class SearchFilterVisitor extends AbstractSearchFilterVisitor {
            @Override
            protected boolean found(Object data) {
                return Boolean.TRUE == data;
            }

            @Override
            public Object visit(PropertyName name, Object data) {
                if (Utilities.equals(name.getPropertyName(), propertyName)) {
                    return true;
                }
                return data;
            }
        };
        SearchFilterVisitor search = new SearchFilterVisitor();
        boolean found = (Boolean) filter.accept(search, false);
        return found;
    }

