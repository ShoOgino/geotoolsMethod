    /**
     * If a definition query has been configured for the FeatureTypeInfo, makes and return a new
     * Filter that contains both the query's filter and the layer's definition one, by logic AND'ing
     * them.
     *
     * @param filter Origional user supplied Filter
     * @return Filter adjusted to the limitations of definitionQuery
     * @throws DataSourceException If the filter could not meet the limitations of definitionQuery
     */
    protected Filter makeDefinitionFilter(Filter filter) throws DataSourceException {
        Filter newFilter = filter;
        Filter constraintFilter = constraintQuery.getFilter();
        try {
            if (constraintFilter != Filter.INCLUDE) {
                FilterFactory ff = CommonFactoryFinder.getFilterFactory(null);
                newFilter = ff.and(constraintFilter, filter);
            }
        } catch (Exception ex) {
            throw new DataSourceException("Can't create the constraint filter", ex);
        }
        return newFilter;
    }

