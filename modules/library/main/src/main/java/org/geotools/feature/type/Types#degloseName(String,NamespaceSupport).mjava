    /**
     * Takes a prefixed attribute name and returns an {@link Name} by looking which namespace
     * belongs the prefix to in {@link AppSchemaDataAccessDTO#getNamespaces()}.
     *
     * @param prefixedName , namespaces
     * @throws IllegalArgumentException if <code>prefixedName</code> has no declared namespace in
     *     app-schema config file.
     */
    public static Name degloseName(String prefixedName, NamespaceSupport namespaces)
            throws IllegalArgumentException {
        Name name = null;

        if (prefixedName == null) {
            return null;
        }

        int prefixIdx = prefixedName.lastIndexOf(':');
        if (prefixIdx == -1) {
            return Types.typeName(prefixedName);
            // throw new IllegalArgumentException(prefixedName + " is not
            // prefixed");
        }

        String nsPrefix = prefixedName.substring(0, prefixIdx);
        String localName = prefixedName.substring(prefixIdx + 1);
        String nsUri = namespaces.getURI(nsPrefix);

        // handles undeclared namespaces in the app-schema mapping file
        if (nsUri == null) {
            throw new IllegalArgumentException(
                    "No namespace set: The namespace has not"
                            + " been declared in the app-schema mapping file for name: "
                            + nsPrefix
                            + ":"
                            + localName
                            + " [Check the Namespaces section in the config file] ");
        }

        name = Types.typeName(nsUri, localName);

        return name;
    }

