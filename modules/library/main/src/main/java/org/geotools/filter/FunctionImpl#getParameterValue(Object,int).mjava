    /**
     * Evaluates a specific argument against the context, checking for required values and proper
     * conversion.
     */
    protected Object getParameterValue(Object object, int argumentIndex) {
        Parameter<?> parameter = getFunctionName().getArguments().get(argumentIndex);
        if (params.size() <= argumentIndex) {
            if (parameter.getMinOccurs() == 0) {
                return null;
            } else {
                throw new IllegalArgumentException(
                        String.format(
                                "No arguments specified for arg " + "%s, minOccurs = %d",
                                parameter.getName().toString(), parameter.getMinOccurs()));
            }
        }

        final Expression expression = params.get(argumentIndex);
        Object value = expression.evaluate(object, parameter.getType());
        if (value == null && expression.evaluate(object) != null) {
            throw new IllegalArgumentException(
                    String.format(
                            "Failure converting value for "
                                    + "argument %s. %s could not be converted to %s",
                            parameter.getName(),
                            expression.toString(),
                            parameter.getType().getName()));
        }
        return value;
    }

