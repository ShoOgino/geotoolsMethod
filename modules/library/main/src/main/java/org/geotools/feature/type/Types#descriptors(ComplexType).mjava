    /**
     * Returns the set of all descriptors of a complex type, including from supertypes.
     *
     * @param type The type, non null.
     * @return The list of all descriptors.
     */
    public static List<PropertyDescriptor> descriptors(ComplexType type) {
        // get list of descriptors from types and all supertypes
        List<PropertyDescriptor> children = new ArrayList<>();
        ComplexType loopType = type;
        while (loopType != null) {
            children.addAll(loopType.getDescriptors());
            loopType =
                    loopType.getSuper() instanceof ComplexType
                            ? (ComplexType) loopType.getSuper()
                            : null;
        }
        return children;
    }

