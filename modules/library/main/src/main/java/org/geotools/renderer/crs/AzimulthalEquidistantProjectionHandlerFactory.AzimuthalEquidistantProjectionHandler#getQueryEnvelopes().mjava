        @Override
        public List<ReferencedEnvelope> getQueryEnvelopes()
                throws TransformException, FactoryException {
            if (renderingGeometry == null) {
                return Collections.emptyList();
            }
            List<ReferencedEnvelope> results = new ArrayList<>();
            if (simplifiedDateline.intersects(renderingGeometry)) {
                Geometry difference = renderingGeometry.difference(bufferedDateline);
                @SuppressWarnings("unchecked")
                List<Polygon> polygons = PolygonExtracter.getPolygons(difference);
                for (Polygon p : polygons) {
                    Geometry transformed =
                            transformGeometry(
                                    p, renderingEnvelope.getCoordinateReferenceSystem(), sourceCRS);
                    // the back-transform can literally make the inner rings bigger than the
                    // outer ones, be careful computing the envelope
                    Envelope envelope = getFullEnvelope(transformed);
                    results.add(new ReferencedEnvelope(envelope, sourceCRS));
                }
            } else if (renderingGeometryReduced) {
                MathTransform mt =
                        CRS.findMathTransform(
                                renderingEnvelope.getCoordinateReferenceSystem(), sourceCRS);
                Geometry transformed = JTS.transform(renderingGeometry, mt);
                // the back-transform can literally make the inner rings bigger than the
                // outer ones, be careful computing the envelope
                Envelope envelope = getFullEnvelope(transformed);
                ReferencedEnvelope re = new ReferencedEnvelope(envelope, sourceCRS);
                results.add(re);
            } else {
                results = super.getQueryEnvelopes();
            }

            results.forEach(
                    e -> {
                        expandIfIncluded(e, north, 0, 90);
                        expandIfIncluded(e, south, 0, -90);
                    });

            mergeEnvelopes(results);
            return results;
        }

