    /**
     * Returns an integer {@link Rectangle}that completely encloses the <code>Shape</code>. Note
     * that there is no guarantee that the returned <code>Rectangle</code> is the smallest bounding
     * box that encloses the <code>Shape</code>, only that the <code>Shape</code> lies entirely
     * within the indicated <code>Rectangle</code>. The returned <code>Rectangle</code> might also
     * fail to completely enclose the <code>Shape</code> if the <code>Shape</code> overflows the
     * limited range of the integer data type. The <code>getBounds2D</code> method generally returns
     * a tighter bounding box due to its greater flexibility in representation.
     *
     * @return an integer <code>Rectangle</code> that completely encloses the <code>Shape</code>.
     * @see #getBounds2D
     */
    public Rectangle getBounds() {
        Rectangle2D env = getBounds2D();
        return new Rectangle(
                (int) Math.round(env.getMinX()),
                (int) Math.round(env.getMinY()),
                (int) Math.ceil(env.getWidth()),
                (int) Math.ceil(env.getHeight()));
    }

