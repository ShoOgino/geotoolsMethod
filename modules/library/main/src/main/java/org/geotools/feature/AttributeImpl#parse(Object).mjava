    /**
     * Allows this Attribute to convert an argument to its prefered storage type. If no parsing is
     * possible, returns the original value. If a parse is attempted, yet fails (i.e. a poor decimal
     * format) throw the Exception. This is mostly for use internally in Features, but implementors
     * should simply follow the rules to be safe.
     *
     * @param value the object to attempt parsing of.
     * @return <code>value</code> converted to the preferred storage of this <code>AttributeType
     *     </code>. If no parsing was possible then the same object is returned.
     * @throws IllegalArgumentException if parsing is attempted and is unsuccessful.
     */
    protected Object parse(Object value) throws IllegalArgumentException {
        if (value != null) {
            Class target = getType().getBinding();
            if (!target.isAssignableFrom(value.getClass())) {
                // attempt to convert
                Object converted = Converters.convert(value, target);
                if (converted != null) {
                    value = converted;
                }
            }
        }

        return value;
    }

