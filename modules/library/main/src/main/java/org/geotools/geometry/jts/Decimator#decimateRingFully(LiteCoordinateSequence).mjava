	/**
	 * Makes sure the ring is turned into a minimal 3 non equal points one
	 * @param ring
	 */
	private void decimateRingFully(LiteCoordinateSequence seq) {
	    double[] coords = seq.getArray();
        int dim = seq.getDimension();
        
        // degenerate one, it's not even a triangle, or just a triangle
        if(seq.size() <= 4)
            return;
        
        double[] newcoords = new double[dim * 4];
        // assuming the ring makes sense in the first place (i.e., it's at least a triangle),
        // we copy the first two and the last two points
        for (int i = 0; i < dim; i++) {
            newcoords[i] = coords[i];
            newcoords[dim + i] = coords[dim + i];
            newcoords[dim * 2 + i] = coords[coords.length - dim * 2 + i];
            newcoords[dim * 3 + i] = coords[coords.length - dim + i];
        }
        seq.setArray(newcoords);
	}

