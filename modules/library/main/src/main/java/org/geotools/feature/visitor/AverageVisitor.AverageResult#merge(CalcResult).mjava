        /**
         * Merges the contents of a CalcResult Object with another CalcResult Object. If the two
         * CalcResult objects are compatible, the merged result (a new object) is returned.
         *
         * @param resultsToAdd the CalcResult to merge the results with
         * @return a new merged CalcResult object
         * @throws IllegalArgumentException when the resultsToAdd are inappropriate
         */
        public CalcResult merge(CalcResult resultsToAdd) {
            if (!isCompatible(resultsToAdd)) {
                throw new IllegalArgumentException("Parameter is not a compatible type");
            }

            if (resultsToAdd == CalcResult.NULL_RESULT) {
                return this;
            }

            if (resultsToAdd instanceof AverageResult) {
                AverageResult moreResults = (AverageResult) resultsToAdd;

                // ensure both results are NOT optimized
                if (isOptimized || moreResults.isOptimized) {
                    throw new IllegalArgumentException(
                            "Optimized average results cannot be merged.");
                }

                Number[] sums =
                        new Number[] {
                            (Number) averageStrategy.getSum(),
                            (Number) moreResults.averageStrategy.getSum()
                        };
                Number newSum = CalcUtil.sum(sums);
                Number newCount =
                        Integer.valueOf(
                                averageStrategy.getCount()
                                        + moreResults.averageStrategy.getCount());
                Number[] params = new Number[] {newSum, newCount};
                Object newAverage = CalcUtil.getObject(params);
                AverageStrategy newAverageObj;
                newAverageObj = createStrategy(newAverage.getClass());
                newAverageObj.set(newCount.intValue(), newSum);

                return new AverageResult(newAverageObj);
            } else {
                throw new IllegalArgumentException(
                        "The CalcResults claim to be compatible, but the appropriate merge method has not been implemented.");
            }
        }

