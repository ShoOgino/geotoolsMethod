    /**
     * Query for additional content.
     *
     * <p>This class will peek ahead to see if there is additional content.
     *
     * <p>Chris has pointed out that we could make use of AttributeReader based filtering:<br>
     * <i>"Also doing things in the Attribute Reader would allow us to do the smart filtering, only
     * looking at the attributes needed for comparison, whereas doing filtering here means we have
     * to create an entire feature each time."</i>
     *
     * @return <code>true</code> if we have additional content
     * @throws IOException If the reader we are filtering encounters a problem
     * @throws DataSourceException See IOException
     */
    @Override
    public boolean hasNext() throws IOException {
        if (next != null) {
            return true;
        }
        try {
            F peek;

            while (featureReader.hasNext()) {
                peek = featureReader.next();

                if (filter.evaluate(peek)) {
                    next = peek;
                    return true;
                }
            }
        } catch (IllegalAttributeException e) {
            throw new DataSourceException("Could not peek ahead", e);
        }
        return next != null;
    }

