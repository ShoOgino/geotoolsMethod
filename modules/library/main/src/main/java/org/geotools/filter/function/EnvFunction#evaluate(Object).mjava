    /**
     * {@inheritDoc}
     * The variable name to search for is provided as the single argument to
     * this function. The active thread's local lookup table is searched first.
     * If the name is not found there the global table is searched.
     *
     * @return the variable value or {@code null} if the variable was not found
     */
    @Override
    public Object evaluate(Object feature) {
        String varName = getExpression(0).evaluate(feature, String.class);
        Object value = localLookup.getTable().get(varName.toUpperCase());

        // No result - check the global lookup table
        if (value == null) {
            value = globalLookup.get(varName.toUpperCase());
        }

        // Still no result - check if there is a default
        if (value == null) {
            final int paramSize = getParameters().size();
            if (paramSize > NAME.getArgumentCount()) {
                value = getExpression(paramSize - 1).evaluate(feature);
            }
        }

        return value;
    }

