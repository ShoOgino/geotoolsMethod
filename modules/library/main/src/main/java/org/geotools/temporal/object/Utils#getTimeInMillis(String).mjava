    /** Return a Date (long time) from a String description */
    public static long getTimeInMillis(String periodDuration) {

        long time = 0;
        // we remove the 'P'
        periodDuration = periodDuration.substring(1);

        // we look if the period contains years (31536000000 ms)
        if (periodDuration.indexOf('Y') != -1) {
            int nbYear = Integer.parseInt(periodDuration.substring(0, periodDuration.indexOf('Y')));
            time += nbYear * yearMS;
            periodDuration = periodDuration.substring(periodDuration.indexOf('Y') + 1);
        }

        // we look if the period contains months (2628000000 ms)
        if (periodDuration.indexOf('M') != -1
                && (periodDuration.indexOf("T") == -1
                        || periodDuration.indexOf("T") > periodDuration.indexOf('M'))) {
            int nbMonth =
                    Integer.parseInt(periodDuration.substring(0, periodDuration.indexOf('M')));
            time += nbMonth * monthMS;
            periodDuration = periodDuration.substring(periodDuration.indexOf('M') + 1);
        }

        // we look if the period contains weeks (604800000 ms)
        if (periodDuration.indexOf('W') != -1) {
            int nbWeek = Integer.parseInt(periodDuration.substring(0, periodDuration.indexOf('W')));
            time += nbWeek * weekMS;
            periodDuration = periodDuration.substring(periodDuration.indexOf('W') + 1);
        }

        // we look if the period contains days (86400000 ms)
        if (periodDuration.indexOf('D') != -1) {
            int nbDay = Integer.parseInt(periodDuration.substring(0, periodDuration.indexOf('D')));
            time += nbDay * dayMS;
            periodDuration = periodDuration.substring(periodDuration.indexOf('D') + 1);
        }

        // if the periodDuration is not over we pass to the hours by removing 'T'
        if (periodDuration.indexOf('T') != -1) {
            periodDuration = periodDuration.substring(1);
        }

        // we look if the period contains hours (3600000 ms)
        if (periodDuration.indexOf('H') != -1) {
            int nbHour = Integer.parseInt(periodDuration.substring(0, periodDuration.indexOf('H')));
            time += nbHour * hourMS;
            periodDuration = periodDuration.substring(periodDuration.indexOf('H') + 1);
        }

        // we look if the period contains minutes (60000 ms)
        if (periodDuration.indexOf('M') != -1) {
            int nbMin = Integer.parseInt(periodDuration.substring(0, periodDuration.indexOf('M')));
            time += nbMin * minMS;
            periodDuration = periodDuration.substring(periodDuration.indexOf('M') + 1);
        }

        // we look if the period contains seconds (1000 ms)
        if (periodDuration.indexOf('S') != -1) {
            int nbSec = Integer.parseInt(periodDuration.substring(0, periodDuration.indexOf('S')));
            time += nbSec * secondMS;
            periodDuration = periodDuration.substring(periodDuration.indexOf('S') + 1);
        }

        if (periodDuration.length() != 0) {
            throw new IllegalArgumentException("The period descritpion is malformed");
        }
        return time;
    }

