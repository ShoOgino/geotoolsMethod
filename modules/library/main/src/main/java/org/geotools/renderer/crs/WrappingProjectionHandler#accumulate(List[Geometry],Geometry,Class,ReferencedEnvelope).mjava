    /**
     * Adds the geometries into the collection by recursively splitting apart geometry collections,
     * so that geoms will contains only simple geometries.
     *
     * @return the geometry type that all geometries added to the collection conform to. Worst case
     *     it's going to be Geometry.class
     */
    static Class accumulate(
            List<Geometry> geoms, Geometry geometry, Class geomType, ReferencedEnvelope envelope) {
        Class gtype = null;
        for (int i = 0; i < geometry.getNumGeometries(); i++) {
            Geometry g = geometry.getGeometryN(i);
            Class lastType = gtype;

            if (g instanceof GeometryCollection) {
                gtype = accumulate(geoms, g, geomType, envelope);
            } else {
                if (envelope.intersects(g.getEnvelopeInternal())) {
                    geoms.add(g);
                    gtype = g.getClass();
                }
            }

            if (gtype == null) {
                gtype = g.getClass();
            } else if (geomType != null && !g.getClass().equals(geomType)
                    || lastType != null && !g.getClass().equals(lastType)) {
                // if we have different types, switch to Geometry type
                gtype = Geometry.class;
            }
        }
        return gtype;
    }

