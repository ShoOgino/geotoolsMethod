    /**
     * Tries to read a ServiceExceptionReport from the input stream, and construct a chain of
     * ServiceExceptions.
     *
     * <p>ServiceExceptions beyond the first can be accessed using ServiceException.next();
     *
     * @param inputStream
     * @throws JDOMException
     * @throws IOException
     */
    public static ServiceException parse(InputStream inputStream)
            throws JDOMException, IOException {
        SAXBuilder builder = new SAXBuilder();
        builder.setExpandEntities(false);
        Document document = builder.build(inputStream);

        Element root = document.getRootElement();
        List<Element> serviceExceptions = root.getChildren("ServiceException");

        /*
         * ServiceExceptions with codes get bumped to the top of the list.
         */
        List<ServiceException> parsedExceptions =
                serviceExceptions
                        .stream()
                        .map(ServiceExceptionParser::parseSE)
                        .sorted(ServiceExceptionParser::compare)
                        .collect(Collectors.toList());
        /*
         * Now chain them.
         */
        ServiceException firstException = null;
        ServiceException recentException = null;
        for (ServiceException exception : parsedExceptions) {
            if (firstException == null) {
                firstException = exception;
                recentException = exception;
            } else {
                recentException.setNext(exception);
                recentException = exception;
            }
        }

        return firstException;
    }

