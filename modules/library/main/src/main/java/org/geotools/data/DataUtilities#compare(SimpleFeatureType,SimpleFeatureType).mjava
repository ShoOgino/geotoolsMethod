    /**
     * Compare attribute coverage between two feature types (allowing the identification of
     * subTypes).
     *
     * <p>Strict compatibility is assumed meaning that both the local name and java binding are
     * compatible (see {@link #compareInternal(SimpleFeatureType, SimpleFeatureType, boolean)} for
     * more details.
     *
     * <p>Namespace is not considered in this operations. You may still need to reType to get the
     * correct namespace, or reorder.
     *
     * <p>Please note this method will not result in a stable sort if used in a {@link Comparator}
     * as -1 is used to indicate incompatiblity (rather than simply "before").
     *
     * @param typeA FeatureType being compared
     * @param typeB FeatureType being compared against
     */
    public static int compare(SimpleFeatureType typeA, SimpleFeatureType typeB) {
        return compareInternal(typeA, typeB, true);
    }

