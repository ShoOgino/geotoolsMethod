    /**
     * Notify all listeners that have registered interest for notification on this event type.
     *
     * <p>This method is called by:
     *
     * <ul>
     *   <li>Transaction.commit()<br>
     *       - when changes have occured on a Transaction all listeners registered with
     *       SimpleFeatureSource of typeName will be notified except those with the Same Transaction
     *   <li>Transaction.rollback()<br>
     *       - when changes have been reverted only those listeners registered with
     *       SimpleFeatureSource of typeName and with the same Transaction will be notified.
     * </ul>
     *
     * @param typeName typeName being modified
     * @param transaction Transaction used for change
     * @param commit <code>true</code> for <code>commit</code>, <code>false</code> for <code>
     *     rollback</code>
     */
    public void fireChanged(String typeName, Transaction transaction, boolean commit) {
        if (commit) {
            fireCommit(typeName, transaction, FeatureEvent.Type.CHANGED, null);
        } else {
            fireEvent(typeName, transaction, FeatureEvent.Type.CHANGED, null);
        }
    }

