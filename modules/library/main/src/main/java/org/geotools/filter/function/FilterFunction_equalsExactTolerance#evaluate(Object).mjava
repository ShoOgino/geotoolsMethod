    public Object evaluate(Object feature) {
        Geometry arg0;
        Geometry arg1;
        double arg2;

        try { // attempt to get value and perform conversion
            arg0 = getExpression(0).evaluate(feature, Geometry.class);
        } catch (Exception e) // probably a type error
        {
            throw new IllegalArgumentException(
                    "Filter Function problem for function equalsExactTolerance argument #0 - expected type Geometry");
        }

        try { // attempt to get value and perform conversion
            arg1 = getExpression(1).evaluate(feature, Geometry.class);
        } catch (Exception e) // probably a type error
        {
            throw new IllegalArgumentException(
                    "Filter Function problem for function equalsExactTolerance argument #1 - expected type Geometry");
        }

        try { // attempt to get value and perform conversion
            arg2 = (getExpression(2).evaluate(feature, Double.class)).doubleValue();
        } catch (Exception e) // probably a type error
        {
            throw new IllegalArgumentException(
                    "Filter Function problem for function equalsExactTolerance argument #2 - expected type double");
        }

        return new Boolean(StaticGeometry.equalsExactTolerance(arg0, arg1, arg2));
    }

