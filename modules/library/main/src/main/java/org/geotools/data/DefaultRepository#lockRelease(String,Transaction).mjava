    /**
     * Implement lockRelease.
     *
     * <p>Currently it is <b>not</b> and error if the lockID is not found, it may have expired.
     * Since locks are time sensitive it is impossible to check if a lockExists and then be sure it
     * will still exist when you try to release it.
     *
     * @see org.geotools.data.Catalog#lockRefresh(java.lang.String, org.geotools.data.Transaction)
     * @param lockID Authorizataion of lock to refresh
     * @param transaction Transaction used to authorize refresh
     * @throws IOException If opperation encounters problems
     * @throws IllegalArgumentException if lockID is <code>null</code>
     */
    public boolean lockRelease(String lockID, Transaction transaction) throws IOException {
        if (lockID == null) {
            throw new IllegalArgumentException("lockID required");
        }
        if (transaction == null || transaction == Transaction.AUTO_COMMIT) {
            throw new IllegalArgumentException(
                    "Tansaction required (with authorization for " + lockID + ")");
        }

        LockingManager lockManager;

        boolean release = false;
        for (DataAccess<?, ?> access : repository.values()) {
            DataStore store = (DataStore) access;
            lockManager = store.getLockingManager();
            if (lockManager == null) continue; // did not support locking

            if (lockManager.release(lockID, transaction)) {
                release = true;
            }
        }
        return release;
    }

