    /**
     * Retrieve total number of Query results.
     *
     * <p>
     * Currently returns -1, consider getFeatures( query ).getCount() instead.
     * </p>
     *
     * <p>
     * Subclasses may override this method to perform the appropriate optimization for this result.
     * </p>
     *
     * @param query Query we are requesting the count of
     *
     * @return -1 representing the lack of an optimization
     */
    public int getCount(Query query) throws IOException {
        if (query.getFilter() == Filter.EXCLUDE) {
            return 0;
        }
        
        DataStore dataStore = (DataStore) getDataStore();
        if ((dataStore == null) || !(dataStore instanceof AbstractDataStore)) {
            // too expensive
            return -1;
        } 
        // ask the abstract data store
        Transaction t = getTransaction();
        
        int nativeCount = ((AbstractDataStore) dataStore).getCount( namedQuery(query));
        if(nativeCount == -1)
        	return -1;
        
        //State state = t.getState(dataStore);
        int delta = 0;
        if(t != Transaction.AUTO_COMMIT) { 
        	if(t.getState(dataStore) == null)
        		return nativeCount;
        	
            if (!(t.getState(dataStore) instanceof TransactionStateDiff)) {
            	//we cannot proceed; abort!
            	return -1;
            }
        	Diff diff = ((AbstractDataStore)dataStore).state(t).diff(namedQuery(query).getTypeName());
        	synchronized (diff) {
        		Iterator it = diff.getAdded().values().iterator();
        		while(it.hasNext()){
        			Object feature = it.next();
        			if( query.getFilter().evaluate(feature) )
        				delta++;
        		}
        		
        		it = diff.getModified().values().iterator();
        		while(it.hasNext()){
        			Object feature = it.next();
        			
        			if(feature == TransactionStateDiff.NULL && query.getFilter().evaluate(feature)) {
        				delta--;
        			}
        		}
        	}
        }
        
		return nativeCount + delta;
    }

