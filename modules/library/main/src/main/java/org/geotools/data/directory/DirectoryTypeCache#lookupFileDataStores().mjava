    /**
     * Looks up in the registry data store factories that do look like file data store ones, that
     * is, they accept a File/URL and a namespace, and returns an adapter that can be used to build
     * a datastore given a File and a namespace.
     */
    List<FactoryAdapter> lookupFileDataStores() {
        List<FactoryAdapter> adapters = new ArrayList<>();

        // look for factories that do accept a file/url and a namespace
        Iterator<DataStoreFactorySpi> it = DataStoreFinder.getAllDataStores();
        while (it.hasNext()) {
            DataStoreFactorySpi factory = it.next();
            Param[] params = factory.getParametersInfo();

            if (params == null) {
                LOGGER.fine(
                        "DataStore factory " + factory + " returns null from getParametersInfo!");
                continue;
            }

            Param fileParam = null;
            Param nsParam = null;
            for (Param param : params) {
                Class<?> type = param.type;
                String key = param.key;
                if (File.class.isAssignableFrom(type) || URL.class.isAssignableFrom(type))
                    fileParam = param;
                else if (key.equalsIgnoreCase("namespace")
                        && (String.class.isAssignableFrom(type)
                                || URI.class.isAssignableFrom(type))) nsParam = param;
            }

            if (fileParam != null) {
                adapters.add(new FactoryAdapter(factory, fileParam, nsParam));
            }
        }
        return adapters;
    }

