    /**
     * Removes the targetFilter from the baseFilter if the baseFilter is a group filter (And or Or), recursing into any
     * sub-logic filters to find the targetFilter if necessary.  If removing the targetFilter would leave only a single
     * term within the baseFilter, then the single remaining term is returned instead of the (now invalid) baseFilter.
     * If the baseFilter is not a group filter:
     * <ul>
     * <li> If the targetFilter equals the baseFilter, then null is returned to indicate that no filters
     * are left.
     * <li> If the targetFilter does not equal the base filter, no change is made and the baseFilter is returned.
     * </ul>
     * @param baseFilter
     * @param targetFilter
     * @return
     */
    public Filter remove(Filter baseFilter, Filter targetFilter) {
        return remove(baseFilter, targetFilter, true);
    }

