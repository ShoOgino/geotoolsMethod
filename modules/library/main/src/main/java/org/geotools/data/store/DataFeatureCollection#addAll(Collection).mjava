    /**
     * Optimized implementation of addAll that recognizes the use of collections obtained with
     * subCollection( filter ).
     *
     * <p>This method is constructed by either:
     *
     * <ul>
     *   <li>Filter OR
     *   <li>Removing an extact match of Filter AND
     * </ul>
     */
    public boolean addAll(Collection collection) {
        if (collection instanceof FeatureCollection) {
            return addAll((FeatureCollection<?, ?>) collection);
        }
        try (FeatureWriter writer = writer()) {
            if (writer == null) {
                return false;
            }
            // skip to end
            while (writer.hasNext()) {
                writer.next();
            }
            for (Object obj : collection) {
                if (obj instanceof SimpleFeature) {
                    SimpleFeature copy = (SimpleFeature) obj;
                    SimpleFeature feature = (SimpleFeature) writer.next();

                    feature.setAttributes(copy.getAttributes());
                    writer.write();
                }
            }
            return true;
        } catch (IOException ignore) {
            return false;
        }
    }

