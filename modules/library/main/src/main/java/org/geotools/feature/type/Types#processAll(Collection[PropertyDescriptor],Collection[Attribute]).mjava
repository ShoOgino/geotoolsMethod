    private static void processAll(
            Collection<PropertyDescriptor> all, Collection<Attribute> content)
            throws IllegalAttributeException {

        // TODO: JD: this can be definitley be optimzed, as written its O(n^2)

        // for each descriptor, count occurences of each matching attribute
        ArrayList<Attribute> remaining = new ArrayList<>(content);
        for (PropertyDescriptor ad : all) {
            int min = ad.getMinOccurs();
            int max = ad.getMaxOccurs();
            int occurences = 0;

            for (Iterator citr = remaining.iterator(); citr.hasNext(); ) {
                Attribute a = (Attribute) citr.next();
                if (a.getName().equals(ad.getName())) {
                    occurences++;
                    citr.remove();
                }
            }

            if (occurences < ad.getMinOccurs() || occurences > ad.getMaxOccurs()) {
                throw new IllegalAttributeException(
                        (AttributeDescriptor) ad,
                        "Found "
                                + occurences
                                + " of "
                                + ad.getName()
                                + " when type"
                                + "specifies between "
                                + min
                                + " and "
                                + max);
            }
        }

        if (!remaining.isEmpty()) {
            throw new IllegalAttributeException(
                    (AttributeDescriptor) remaining.iterator().next(),
                    "Extra content found beyond the specified in the schema: " + remaining);
        }
    }

