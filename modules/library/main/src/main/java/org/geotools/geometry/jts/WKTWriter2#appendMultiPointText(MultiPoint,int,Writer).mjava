    /**
     * Converts a <code>MultiPoint</code> to &lt;MultiPoint Text&gt; format, then appends it to the
     * writer.
     *
     * @param multiPoint the <code>MultiPoint</code> to process
     * @param writer the output writer to append to
     */
    private void appendMultiPointText(MultiPoint multiPoint, int level, Writer writer)
            throws IOException {
        if (multiPoint.isEmpty()) {
            writer.write("EMPTY");
        } else {
            writer.write("(");
            for (int i = 0; i < multiPoint.getNumGeometries(); i++) {
                if (i > 0) {
                    writer.write(", ");
                    indentCoords(i, level + 1, writer);
                }
                writer.write("(");
                appendCoordinate(((Point) multiPoint.getGeometryN(i)).getCoordinate(), writer);
                writer.write(")");
            }
            writer.write(")");
        }
    }

