    /**
     * Creates a logic filter from two filters and a type.
     *
     * @param filter1 the first filter to join.
     * @param filter2 the second filter to join.
     * @param filterType must be a logic type.
     *
     * @return the newly constructed logic filter.
     *
     * @throws IllegalFilterException If there were any problems creating the
     *         filter, including wrong type.
     *         
     * @deprecated use one of {@link org.opengis.filter.FilterFactory#and(Filter, Filter)}
     *  {@link org.opengis.filter.FilterFactory#or(Filter, Filter)}
     *  {@link org.opengis.filter.FilterFactory#not(Filter)}
     */
    public LogicFilter createLogicFilter(org.geotools.filter.Filter  filter1, org.geotools.filter.Filter filter2,
        short filterType) throws IllegalFilterException {
        
        List children = new ArrayList();
        children.add(filter1);
        children.add(filter2);
        
        switch (filterType) {
                case FilterType.LOGIC_AND:
                        return new AndImpl(this,children);
                case FilterType.LOGIC_OR:
                        return new OrImpl(this,children);
                case FilterType.LOGIC_NOT:
                        //TODO: perhaps throw an exception here?
                        return new NotImpl(this,filter1);
        }
        
        throw new IllegalFilterException("Must be one of AND,OR,NOT.");
    }

