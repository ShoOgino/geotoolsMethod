    /**
     * Notify all listeners that have registered interest for notification on this event type.
     *
     * <p>This method is called by:
     *
     * <ul>
     *   <li>FeatureWrtier.remove() - when an existing Feature is removed with
     *       Tranasaction.AUTO_COMMIT all listeners registered with SimpleFeatureSource of typeName
     *       will be notified.
     *   <li>FeatureWrtier.remove() - when an existing Feature is removed with a Transaction all
     *       listeners registered with SimpleFeatureSource of typeName and with the same Transaction
     *       will be notified.
     * </ul>
     *
     * @param typeName typeName being modified
     * @param transaction Transaction used for change
     * @param bounds BoundingBox of changes (may be <code>null</code> if unknown)
     */
    public void fireFeaturesRemoved(
            String typeName, Transaction transaction, ReferencedEnvelope bounds, boolean commit) {
        if (commit) {
            fireCommit(typeName, transaction, FeatureEvent.Type.REMOVED.type, bounds);
        } else {
            fireEvent(typeName, transaction, FeatureEvent.Type.REMOVED.type, bounds);
        }
    }

