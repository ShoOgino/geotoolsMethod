    /**
     * Casts an object to the specified type
     *
     * @param var
     * @param type
     */
    static Object convert(Object var, Class type) {
        if (var instanceof Number) { // use number conversion

            Number newNum = (Number) var;

            if (type == Integer.class) {
                return Integer.valueOf(newNum.intValue());
            } else if (type == Long.class) {
                return Long.valueOf(newNum.longValue());
            } else if (type == Float.class) {
                return new Float(newNum.floatValue());
            } else if (type == Double.class) {
                return new Double(newNum.doubleValue());
            } else if (type == String.class) {
                return new String(newNum.toString());
            }
        } else { // direct cast

            if (type == Integer.class) {
                return Integer.valueOf(((Integer) var).intValue());
            } else if (type == Long.class) {
                return Long.valueOf(((Long) var).longValue());
            } else if (type == Float.class) {
                return new Float(((Float) var).floatValue());
            } else if (type == Double.class) {
                return new Double(((Double) var).doubleValue());
            } else if (type == String.class) {
                return new String(var.toString());
            }
        }

        return null;
    }

