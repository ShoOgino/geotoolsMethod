    /**
     * May be used for describing temporal positions in ISO8601 format referenced to the Gregorian
     * calendar and UTC.
     *
     * @return {@linkplain InternationalString} @TODO all subtypes of TemporalPosition must be
     *     implemented.
     */
    public Date getDate() {
        if (this.position instanceof Date) {
            return (Date) position;
        }
        if (this.position instanceof TemporalPosition) {
            if (this.position instanceof JulianDate) {
                return Utils.JulianToDate((DefaultJulianDate) position);
            }
            if (this.position instanceof DateAndTime) {
                return Utils.dateAndTimeToDate((DateAndTime) position);
            }
            if (this.position instanceof CalendarDate) {
                return Utils.calendarDateToDate((CalendarDate) position);
            }
            if (this.position instanceof TemporalCoordinate) {
                return Utils.temporalCoordToDate((TemporalCoordinate) position);
            }
            if (this.position instanceof OrdinalPosition) {
                return Utils.ordinalToDate((OrdinalPosition) position);
            }
        }
        return null;
    }

