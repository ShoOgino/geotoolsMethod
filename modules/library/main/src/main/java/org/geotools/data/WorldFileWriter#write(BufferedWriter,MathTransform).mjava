	/**
	 * Write the provided transformation to the provided output.
	 * 
	 * @param writer to use for writing the transformation.
	 * @param transform is the transformation that we want to write out.
	 * @throws IOException in case something bad happens.
	 */
	private void write(BufferedWriter writer, MathTransform transform){
		try {
			if ((transform instanceof IdentityTransform)) {
				writer.write("1");
				writer.newLine();
				writer.write("0");
				writer.newLine();
				writer.write("0");
				writer.newLine();
				writer.write("1");
				writer.newLine();
				writer.write("0");
				writer.newLine();
				writer.write("0");
				close(writer);
				return;
			}
			if ((transform instanceof AffineTransform2D)) {
				final AffineTransform2D affine = (AffineTransform2D) transform;
				writer.write(Double.toString(affine.getScaleX()));
				writer.newLine();
				writer.write(Double.toString(affine.getShearX()));
				writer.newLine();
				writer.write(Double.toString(affine.getShearY()));
				writer.newLine();
				writer.write(Double.toString(affine.getScaleY()));
				writer.newLine();
				writer.write(Double.toString(affine.getTranslateX()));
				writer.newLine();
				writer.write(Double.toString(affine.getTranslateY()));
				close(writer);
				return;
			}
			assert false:transform;
		} catch (IOException e) {
			if(LOGGER.isLoggable(Level.SEVERE))
				LOGGER.log(Level.SEVERE,e.getLocalizedMessage(),e);
		} finally {
			close(writer);
		}
		

	}

