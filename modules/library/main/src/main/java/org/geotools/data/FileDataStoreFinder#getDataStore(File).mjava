    /**
     * Checks each available datasource implementation in turn and returns the
     * first one which claims to support the given file..
     *
     * @param file the file
     *
     * @return The first datasource which claims to process the required
     *         resource, returns null if none can be found.
     *
     * @throws IOException If a suitable loader can be found, but it can not be
     *         attached to the specified resource without errors.
     */
    public static FileDataStore getDataStore(File file) throws IOException {
        return getDataStore(file.toURI().toURL());
    }

