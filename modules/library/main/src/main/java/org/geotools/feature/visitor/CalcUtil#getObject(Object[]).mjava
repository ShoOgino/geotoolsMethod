    /**
     * Given an array of objects, traverses the array and determines the most suitable data type to
     * perform the calculation in. An empty object of the correct class is returned;
     *
     * @param objects
     */
    static Object getObject(Object[] objects) {
        Class bestClass = bestClass(objects);

        if (bestClass == String.class) {
            return new String(""); // $NON-NLS-1$
        } else if (bestClass == Double.class) {
            return new Double(0);
        } else if (bestClass == Float.class) {
            return new Float(0);
        } else if (bestClass == Long.class) {
            return new Long(0);
        } else if (bestClass == Integer.class) {
            return new Integer(0);
        } else { // it's a type we don't have here yet
            return null;
        }
    }

