    /**
     * Wrap up an array of features as a FeatureSource.
     * 
     * @param featureArray
     *            Array of features
     * @return FeatureSource
     * 
     * @throws IOException
     * @throws RuntimeException
     */
    public static SimpleFeatureSource source(final SimpleFeature[] featureArray) {
        final SimpleFeatureType featureType;

        if ((featureArray == null) || (featureArray.length == 0)) {
            featureType = FeatureTypes.EMPTY;
        } else {
            featureType = featureArray[0].getFeatureType();
        }
        ListFeatureCollection collection =  new ListFeatureCollection( featureType, featureArray );
        for( SimpleFeature feature : collection ){
            if( feature.getFeatureType() != featureType ){
                String typeName = featureType.getTypeName();
                throw new IllegalStateException("Array inconsistent, expected each feature of type  "+typeName);
            }
        }
        return source( collection );
    }

