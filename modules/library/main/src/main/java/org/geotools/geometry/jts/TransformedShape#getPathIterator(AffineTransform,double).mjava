	/**
	 * Returns an iterator object that iterates along the <code>Shape</code>
	 * boundary and provides access to a flattened view of the
	 * <code>Shape</code> outline geometry.
	 */
	public PathIterator getPathIterator(AffineTransform at,
			final double flatness) {
		if (!isIdentity()) {
			if (at == null || at.isIdentity()) {
				return shape.getPathIterator(this, flatness);
			}
			at = new AffineTransform(at);
			at.concatenate(this);
		}
		return shape.getPathIterator(at, flatness);
	}

