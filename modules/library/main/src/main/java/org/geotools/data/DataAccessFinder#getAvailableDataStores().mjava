    /**
     * Finds all implemtaions of DataAccessFactory which have registered using
     * the services mechanism, and that have the appropriate libraries on the
     * classpath.
     * 
     * @return An iterator over all discovered datastores which have registered
     *         factories, and whose available method returns true.
     */
    public static synchronized Iterator<DataAccessFactory> getAvailableDataStores() {

        FactoryRegistry serviceRegistry = getServiceRegistry();
        Set<DataAccessFactory> availableDS = getAvailableDataStores(serviceRegistry,
                DataAccessFactory.class);

        Iterator<DataStoreFactorySpi> availableDataStores = DataStoreFinder
                .getAvailableDataStores();
        while (availableDataStores.hasNext()) {
            availableDS.add(availableDataStores.next());
        }

        return availableDS.iterator();
    }

