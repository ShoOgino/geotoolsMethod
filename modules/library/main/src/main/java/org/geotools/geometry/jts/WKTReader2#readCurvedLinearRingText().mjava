    /**
     * This method will read a LineString, CircularString or CompoundCurve and return the result as a LinearRing.
     * @return LinearRing
     * <p>
     * This method expects either "EMPTY", "(", "CIRCULARSTRING", or "COMPOIUNDCURVE" to start out with.
     * 
     * @throws IOException
     * @throws ParseException
     */
    private LinearRing readCurvedLinearRingText() throws IOException, ParseException {
        Coordinate ring[] = null;
        
        String nextWord = getNextWord();        
        if( nextWord.equals(L_PAREN) ){
            List<Coordinate> coords = getCoordinateList(false);
            ring = coords.toArray( new Coordinate[coords.size()]);            
        }
        else if( nextWord.equalsIgnoreCase("CIRCULARSTRING")){
            LineString circularString = readCircularStringText();
            ring = circularString.getCoordinates();
        }
        else if( nextWord.equalsIgnoreCase("COMPOUNDCURVE")){
            LineString circularString = readCompoundCurveText();
            ring = circularString.getCoordinates();
        }
        else {
            parseError(L_PAREN + ", CIRCULARSTRING or COMPOUNDCURVE");
        }        
        return geometryFactory.createLinearRing( ring );
    }

