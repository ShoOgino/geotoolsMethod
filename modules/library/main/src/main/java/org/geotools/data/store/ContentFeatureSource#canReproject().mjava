    /**
     * Determines if the datastore can natively perform reprojection.
     *
     * <p>If the subclass can handle reprojection natively then it should override this method to
     * return <code>true</code>. In this case it <b>must</b> do the reprojection or throw an
     * exception.
     *
     * <p>Not overriding this method or returning <code>false</code> will case the feature reader
     * created by the subclass to be wrapped in a reprojecting decorator when the query specifies a
     * coordinate system reproject (using crs and crsReproject)
     *
     * <p>To handle reprojection an implementation should:
     *
     * <ul>
     *   <li>{@link Query#getCoordinateSystem()} - optional override - if provided this is used
     *       instead of the native CRS provided by the data format (as a workaround for clients).
     *   <li><@link {@link Query#getCoordinateSystemReproject()} - if this value is provided it is
     *       used to set up a transform from the origional CRS (native or from query).
     * </ul>
     *
     * @see ReprojectFeatureReader
     */
    protected boolean canReproject() {
        return false;
    }

