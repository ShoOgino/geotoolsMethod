    /**
     * Creates the right sort of In-Process Lock.
     *
     * @param transaction
     * @param featureLock
     *
     * @return In-Process Lock
     *
     * @throws FeatureLockException When a Transaction  lock is requested
     *         against Transaction.AUTO_COMMIT
     */
    protected synchronized Lock createLock(Transaction transaction,
        FeatureLock featureLock) throws FeatureLockException {
        if (featureLock == FeatureLock.TRANSACTION) {
            // we need a Transacstion Lock
            if (transaction == Transaction.AUTO_COMMIT) {
                throw new FeatureLockException(
                    "We cannot issue a Transaction lock against AUTO_COMMIT");
            }

            TransactionLock lock = (TransactionLock) transaction.getState(this);

            if (lock == null) {
                lock = new TransactionLock();
                transaction.putState(this, lock);

                return lock;
            } else {
                return lock;
            }
        } else {
            return new MemoryLock(featureLock);
        }
    }

