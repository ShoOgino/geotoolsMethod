    /**
     * BoundingBox equality with target tolerance. This method compares also coordinate reference
     * systems.
     *
     * @param a The first envelope
     * @param b The second envelope
     * @param tolerance The tolerance
     * @return True if the envelopes have the same boundaries, minus the given tolerance, and the
     *     CRSs are equal according to CRS#equalsIgnoreMetadata
     */
    public static boolean equals(BoundingBox a, BoundingBox b, double tolerance) {
        boolean flatEqual =
                Math.abs(a.getMinX() - b.getMinX()) <= tolerance
                        && Math.abs(a.getMinY() - b.getMinY()) <= tolerance
                        && Math.abs(a.getMaxX() - b.getMaxX()) <= tolerance
                        && Math.abs(a.getMaxY() - b.getMaxY()) <= tolerance
                        && CRS.equalsIgnoreMetadata(
                                a.getCoordinateReferenceSystem(), b.getCoordinateReferenceSystem());
        if (!flatEqual) return false;

        if (a instanceof BoundingBox3D && b instanceof BoundingBox3D) {
            BoundingBox3D a3 = (BoundingBox3D) a;
            BoundingBox3D b3 = (BoundingBox3D) b;
            return Math.abs(a3.getMinZ() - b3.getMinZ()) <= tolerance
                    && Math.abs(a3.getMaxZ() - b3.getMaxZ()) <= tolerance;
        } else if (a instanceof BoundingBox3D && !(b instanceof BoundingBox3D)
                || !(a instanceof BoundingBox3D) && b instanceof BoundingBox3D) {
            return false;
        }

        return true;
    }

