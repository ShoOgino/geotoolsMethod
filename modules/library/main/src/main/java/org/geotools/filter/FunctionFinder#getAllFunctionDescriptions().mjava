    /**
     * Return a List of FunctionName's describing the functions currently available.
     *
     * @return List describing available functions
     */
    public List<FunctionName> getAllFunctionDescriptions() {
        Set<FunctionFactory> functionFactories = CommonFactoryFinder.getFunctionFactories(null);
        List<FunctionName> allFunctionDescriptions = new ArrayList<>();

        for (FunctionFactory factory : functionFactories) {
            List<FunctionName> functionNames = factory.getFunctionNames();
            allFunctionDescriptions.addAll(functionNames);
        }
        Collections.sort(
                allFunctionDescriptions,
                new Comparator<FunctionName>() {
                    @SuppressFBWarnings("NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE")
                    public int compare(FunctionName o1, FunctionName o2) {
                        if (o1 == null && o2 == null) return 0;
                        if (o1 == null && o2 != null) return 1;
                        if (o1 != null && o2 == null) return -1;

                        return o1.getName().compareTo(o2.getName());
                    }
                });
        return Collections.unmodifiableList(allFunctionDescriptions);
    }

