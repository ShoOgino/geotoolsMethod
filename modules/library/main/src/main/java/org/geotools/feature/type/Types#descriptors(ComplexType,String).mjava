    /**
     * Returns the set of descriptors matching the given local name within the given type.
     *
     * @param type The type, non null.
     * @param name The name, non null.
     * @return The list of descriptors named 'name', or an empty list if none such match.
     */
    public static List /* <PropertyDescriptor> */ descriptors(ComplexType type, String name) {
        if (name == null) return Collections.EMPTY_LIST;

        List match = new ArrayList();

        for (Iterator itr = type.getDescriptors().iterator(); itr.hasNext(); ) {
            PropertyDescriptor descriptor = (PropertyDescriptor) itr.next();
            String localPart = descriptor.getName().getLocalPart();
            if (name.equals(localPart)) {
                match.add(descriptor);
            }
        }

        // only look up in the super type if the descriptor is not found
        // as a direct child definition
        if (match.size() == 0) {
            AttributeType superType = type.getSuper();
            if (superType instanceof ComplexType) {
                List superDescriptors = descriptors((ComplexType) superType, name);
                match.addAll(superDescriptors);
            }
        }
        return match;
    }

