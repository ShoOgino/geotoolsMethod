    /**
     * Checks for GML element start and - if not a coordinates element - sends
     * it directly on down the chain to the appropriate parent handler.  If it
     * is a coordinates (or coord) element, it uses internal methods to set
     * the current state of the coordinates reader appropriately.
     * 
     * <p>
     * Modified by Sean Geoghegan to create new StringBuffers when  entering a
     * coord or coordinate element.
     * </p>
     *
     * @param namespaceURI The namespace of the element.
     * @param localName The local name of the element.
     * @param qName The full name of the element, including namespace prefix.
     * @param atts The element attributes.
     *
     * @throws SAXException Some parsing error occurred while reading
     *         coordinates.
     */
    public void startElement(String namespaceURI, String localName,
        String qName, org.xml.sax.Attributes atts) throws SAXException {
        LOGGER.entering("GMLFilterDocument", "startElement",
            new Object[] { namespaceURI, localName, qName, atts });

        /* if at a GML element, do some checks to determine
         * how to handle the element
         */
        if (namespaceURI != null && namespaceURI.equals(GML_NAMESPACE)) {
            // if geometry, pass it on down the filter chain
            if (BASE_GEOMETRY_TYPES.contains(localName)) {
                parent.geometryStart(localName, atts);
            } else if (SUB_GEOMETRY_TYPES.contains(localName)) {
                parent.geometrySub(localName);
            } else if (COORDINATES_NAME.equals(localName)) {
                // if coordinate, set one of the internal coordinate methods
                coordinateReader.insideCoordinates(true, atts);
                buffer = new StringBuffer();
            } else if (COORD_NAME.equals(localName)) {
                coordinateReader.insideCoord(true);
                buffer = new StringBuffer();
            } else if (X_NAME.equals(localName)) {
                buffer = new StringBuffer();
                coordinateReader.insideX(true);
            } else if (Y_NAME.equals(localName)) {
                buffer = new StringBuffer();
                coordinateReader.insideY(true);
            } else if (Z_NAME.equals(localName)) {
                buffer = new StringBuffer();
                coordinateReader.insideZ(true);
            } else {
                parent.startElement(namespaceURI, localName, qName, atts);
            }
        } else {
            /* all non-GML elements passed on down the filter chain without
             * modification
             */
            parent.startElement(namespaceURI, localName, qName, atts);
        }

        LOGGER.exiting("GMLFilterDocument", "startElement");
    }

