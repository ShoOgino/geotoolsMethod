    /**
     * Handles mixed line string notation - either LineString (the default) or CircularCurve.
     * Isolated as a seperate method as I think we will need to call this from the polygon code.
     *
     * @return List of LineString (defined in a mixed format)
     */
    List<LineString> getLineStrings() throws IOException, ParseException {
        ArrayList<LineString> lineStrings = new ArrayList<>();
        String nextWord = getNextEmptyOrOpener();
        if (nextWord.equals(EMPTY)) {
            return lineStrings;
        }
        // must be an opener!
        nextWord = COMMA;
        while (nextWord.equals(COMMA)) {
            nextWord = getNextWord();
            if (nextWord.equals(L_PAREN)) {
                List<Coordinate> coords = getCoordinateList(false);
                LineString lineString =
                        geometryFactory.createLineString(
                                coords.toArray(new Coordinate[coords.size()]));
                lineStrings.add(lineString);
            } else if (nextWord.equalsIgnoreCase("CIRCULARSTRING")) {
                LineString circularString = readCircularStringText();
                lineStrings.add(circularString);
            } else if (nextWord.equalsIgnoreCase("COMPOUNDCURVE")) {
                LineString compound = readCompoundCurveText();
                lineStrings.add(compound);
            }

            nextWord = getNextCloserOrComma();
        }
        return lineStrings;
    }

