    /**
     * This method computes and returns the group by visitor result. If the computation was optimized
     * the optimization result is returned otherwise the result is computed in memory. If for some
     * reason an optimization result exists and there are visited features, an in memory computation
     * is performed and is merged with the existing optimization results.
     *
     * @return group by visitor result
     */
    @Override
    public CalcResult getResult() {
        // do a in memory computation for any visited feature
        Map<List<Object>, CalcResult> results = inMemoryGroupBy.visit();
        // create the result, if no feature was visited this will be an empty result that can be safely merged
        GroupByResult result = new GroupByResult(results, aggregateVisitor, groupByAttributes);
        if (optimizationResult == CalcResult.NULL_RESULT) {
            // there is no optimization result so we just return the created one
            return result;
        }
        // an optimization result exists, we merge both
        return optimizationResult.merge(result);
    }

