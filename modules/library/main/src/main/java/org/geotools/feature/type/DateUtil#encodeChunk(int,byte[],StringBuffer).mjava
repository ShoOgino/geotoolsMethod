    /**
     * Encode a chunk of data to base64 encoding. Converts the next three bytes
     * of data into four characters of text representation, using padding at
     * the end of less than three bytes of data remain.
     *
     * @param base starting offset within byte array
     * @param byts byte data array
     * @param buff buffer for encoded text
     */
    public static void encodeChunk(int base, byte[] byts, StringBuffer buff) {
        // get actual byte data length to be encoded
        int length = 3;

        if ((base + length) > byts.length) {
            length = byts.length - base;
        }

        // convert up to three bytes of data to four characters of text
        int b0 = byts[base];
        int value = (b0 >> 2) & 0x3F;
        buff.append(s_base64Chars[value]);

        if (length > 1) {
            int b1 = byts[base + 1];
            value = ((b0 & 3) << 4) + ((b1 >> 4) & 0x0F);
            buff.append(s_base64Chars[value]);

            if (length > 2) {
                int b2 = byts[base + 2];
                value = ((b1 & 0x0F) << 2) + ((b2 >> 6) & 3);
                buff.append(s_base64Chars[value]);
                value = b2 & 0x3F;
                buff.append(s_base64Chars[value]);
            } else {
                value = (b1 & 0x0F) << 2;
                buff.append(s_base64Chars[value]);
                buff.append(PAD_CHAR);
            }
        } else {
            value = (b0 & 3) << 4;
            buff.append(s_base64Chars[value]);
            buff.append(PAD_CHAR);
            buff.append(PAD_CHAR);
        }
    }

