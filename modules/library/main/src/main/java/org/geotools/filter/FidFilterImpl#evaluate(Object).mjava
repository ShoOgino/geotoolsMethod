    /**
     * Determines whether or not the given feature's ID matches this filter.
     * <p>
     * In order to get the object's ID, the {@link PropertyAccessor} capable of
     * dealing with <code>feature</code> has to support the request of the
     * expression <code>"@id"</code>
     * </p>
     * 
     * @param feature
     *            Specified feature to examine.
     * 
     * @return <tt>true</tt> if the feature's ID matches an fid held by this
     *         filter, <tt>false</tt> otherwise.
     * @see SimpleFeaturePropertyAccessorFactory
     */
    public boolean evaluate(Object feature) {
            if (feature == null) {
                return false;
            }
    
            final Set fids = fids();
		
		
            //NC - updated, using attributeexpressionimpl will be easiest, don't have to copy and paste lots of code				
            Object evaluate = CommonFactoryFinder.getFilterFactory(null).property("@id").evaluate(feature);
            return evaluate == null? false : fids.contains(evaluate);		
	}

