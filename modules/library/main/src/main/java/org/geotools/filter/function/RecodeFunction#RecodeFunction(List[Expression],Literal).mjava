    public RecodeFunction(List<Expression> parameters, Literal fallback) {
        this.parameters = parameters;
        this.fallback = fallback;

        // check inputs
        if (parameters.size() % 2 != 1 && parameters.size() != 0) {
            throw new IllegalArgumentException(
                    "There must be an equal number of lookup data and return values");
        }

        // see if the table is full of attribute independent expressions
        FilterAttributeExtractor extractor = new FilterAttributeExtractor();
        for (int i = 1; i < parameters.size(); i++) {
            Expression expression = parameters.get(i);
            if (expression != null) {
                extractor.clear();
                expression.accept(extractor, null);
                if (!extractor.isConstantExpression()) {
                    staticTable = false;
                    break;
                }
            }
        }
    }

