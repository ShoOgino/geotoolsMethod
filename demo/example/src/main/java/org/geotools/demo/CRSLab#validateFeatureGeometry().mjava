    // docs start validate
    /**
     * Check the Geometry (point, line or polygon) of each feature to make
     * sure that it is topologically valid and report on any errors found.
     * <p>
     * See also the nested ValidateGeometryAction class below which runs
     * this method in a background thread and reports on the results
     */
    private void validateFeatureGeometry() throws Exception {
        final SimpleFeatureCollection featureCollection =
                featureSource.getFeatures();

        /* 
         * Rather than use an iterator, we create a FeatureVisitor to 
         * check the Geometry of each feature
         */
        FeatureVisitor visitor = new FeatureVisitor() {

            public void visit(Feature feature) {
                Geometry geom = (Geometry) feature.getDefaultGeometryProperty().getValue();
                if (geom != null && !geom.isValid()) {
                    numInvalidGeometries++;
                    System.out.println("Invalid Geoemtry: " + feature.getIdentifier());
                }
            }
        };

        /*
         * For shapefiles with many features its nice to display
         * a progress bar
         */
        final ProgressWindow progress = new ProgressWindow(null);
        progress.setTitle("Validating feature geometry");

        /*
         * Now we pass the visitor and the progress bar to the feature
         * collection
         */
        numInvalidGeometries = 0;
        featureCollection.accepts(visitor, progress);
    }

