    /**
     * Explore the functionality of the provided GridCoverage (think
     * BufferedImage + CRS).
     * <p>
     * A GridCoverage literally a set of features that "covers" an area without
     * gaps; in the case of grid coverage the area is covered by an regular
     * grid.
     * <p>
     * Coverage work by letting you call a "sample" operation in order to
     * retrieve a Record of the data at the location. A grid coverage lets you
     * express the location using row and column.
     * <p>
     * 
     * @param coverage
     */
    public WMSLab2(WebMapServer server) {
        this.wms = server;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        String title = getWMSTitle(wms);
        setTitle(title);

        Set good = new HashSet( Arrays.asList( WMSUtils.getNamedLayers(wms.getCapabilities())));
        this.layers = new JList(good.toArray());
        layers.setCellRenderer(new LayerCellRenderer());
        layers.getSelectionModel().addListSelectionListener(
                new ListSelectionListener() {
                    public void valueChanged(ListSelectionEvent e) {
                        setSelectedLayer((Layer) layers.getSelectedValue());
                    }
                });
        JScrollPane scrollPane = new JScrollPane(layers);
        scrollPane.setPreferredSize(new Dimension(200, 400));
        add(scrollPane, BorderLayout.WEST);

        this.panel = new CoveragePanel();
        add(panel, BorderLayout.CENTER);

        JPanel buttons = new JPanel();
        getMapButton = new JButton("GetMap");
        getMapButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                getMap();
            }
        });
        buttons.add(getMapButton);
        availableStyles = new DefaultComboBoxModel();
        styleCombo = new JComboBox(availableStyles);
        styleCombo.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent e) {
                if (selectedLayer != null) {
                    styles.put(selectedLayer, styleCombo.getSelectedItem());
                }
            }
        });
        styleCombo.setRenderer(new StyleCellRenderer());
        buttons.add(styleCombo);

        add(buttons, BorderLayout.NORTH);
        pack();
    }

